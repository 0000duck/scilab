<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE MAN SYSTEM "../../manrev.dtd">
<MAN>
  <LANGUAGE>eng</LANGUAGE>

  <TITLE>TCL_SetVar</TITLE>

  <TYPE>Scilab Function</TYPE>

  <DATE>06 September 2005</DATE>

  <SHORT_DESCRIPTION name="TCL_SetVar">Set a tcl/tk variable
  value</SHORT_DESCRIPTION>

  <CALLING_SEQUENCE>
    <CALLING_SEQUENCE_ITEM>TCL_SetVar(varname, value)</CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>

  <PARAM>
    <PARAM_INDENT>
      <PARAM_ITEM>
        <PARAM_NAME>varname</PARAM_NAME>

        <PARAM_DESCRIPTION>
          <SP>: string character Contains the name of the tcl/tk variable to
          set.</SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>

      <PARAM_ITEM>
        <PARAM_NAME>value</PARAM_NAME>

        <PARAM_DESCRIPTION>
          <SP>: may be a string character, a scalar, a real or string matrix
          (m x n) contains the value to set up in the tcl/tk variable</SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>
    </PARAM_INDENT>
  </PARAM>

  <DESCRIPTION>
    <P>This routine allows to set a variable within the tcl/tk interpreter.
    When tcl/tk support is enabled in scilab, this routine can be used to set
    up the value of a tcl/tk variable. This can be useful to change some value
    in the tcl/tk without having to build a tcl/tk instruction (and use
    TCL_EvalStr).</P>
  </DESCRIPTION>

  <EXAMPLE><![CDATA[//----------------------------------------------------
TCL_EvalStr('toplevel .tst1');
// creates a toplevel TK window. 
TCL_EvalStr('entry .tst1.e -textvariable tvar');
// create an editable entry
TCL_EvalStr('set tvar foobar');
// set the entry value
TCL_EvalStr('pack .tst1.e');
// pack the entry widget. It appears on the screen.
text=TCL_GetVar('tvar')
// retrieve the variable value
// change the entry text and repeat the last command ...
//delete the toplevel TK window.
TCL_EvalStr('destroy .tst1')
//----------------------------------------------------
a=['A','B','C';'D','E','F'];
TCL_SetVar("A",a)
AfromTCL=TCL_GetVar('A')
//----------------------------------------------------
b=[6,4,1;2,3,5];
TCL_SetVar("B",b)
BfromTCL=TCL_GetVar('B')
//----------------------------------------------------
TCL_SetVar("StringTCL","string")
StringFromTCL=TCL_GetVar("StringTCL")
//----------------------------------------------------
TCL_SetVar("ScalarTCL",1.22)
ScalarFromTCL=TCL_GetVar("ScalarTCL")

]]></EXAMPLE>

  <SEE_ALSO>
    <SEE_ALSO_ITEM>
      <LINK>ScilabEval</LINK>
    </SEE_ALSO_ITEM>

    <SEE_ALSO_ITEM>
      <LINK>TCL_EvalFile</LINK>
    </SEE_ALSO_ITEM>

    <SEE_ALSO_ITEM>
      <LINK>TCL_EvalStr</LINK>
    </SEE_ALSO_ITEM>

    <SEE_ALSO_ITEM>
      <LINK>TCL_GetVar</LINK>
    </SEE_ALSO_ITEM>
  </SEE_ALSO>

  <AUTHOR>Allan CORNET</AUTHOR>
</MAN>