<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!DOCTYPE MAN SYSTEM "../../manrev.dtd">
<MAN>
  <LANGUAGE>eng</LANGUAGE>
  <TITLE>ScilabEval</TITLE>
  <TYPE>TCL Function</TYPE>
  <DATE> 04 June 1998</DATE>
  <SHORT_DESCRIPTION name="ScilabEval"> tcl instruction : Evaluate a string
    with scilab interpreter</SHORT_DESCRIPTION>
  <CALLING_SEQUENCE>
    <CALLING_SEQUENCE_ITEM>ScilabEval instruction</CALLING_SEQUENCE_ITEM>
    <CALLING_SEQUENCE_ITEM>ScilabEval instruction "seq"</CALLING_SEQUENCE_ITEM>
    <CALLING_SEQUENCE_ITEM>ScilabEval instruction "sync"</CALLING_SEQUENCE_ITEM>
    <CALLING_SEQUENCE_ITEM>ScilabEval instruction "sync" "seq"</CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>

  <PARAM>
    <PARAM_INDENT>
      <PARAM_ITEM>
        <PARAM_NAME>instruction </PARAM_NAME>
        <PARAM_DESCRIPTION>
          <SP>: tcl string character contains a Scilab instruction to evaluate
	    with the current scilab interpreter.</SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>
    </PARAM_INDENT>
  </PARAM>
  <DESCRIPTION>
    <P>
    This function must be called in a tcl/tk script executed from scilab.
    It allows to associate scilab actions to tcl/tk widgets (graphic
    objects) or to use Scilab to perform some computation within a Tcl script. 
    </P>
    <P>
    If the <VERB>ScilabEval instruction </VERB> syntax is used, the
      <VERB>instruction</VERB> is  first stored in a FIFO queue,
      <VERB>ScilabEval</VERB> returns immediately.
      Scilab executes the queued <VERB>instructions</VERB>  when
      possible (it sould be at the prompt but also at the  end of each
      instructions of the currently running function)  in the ordrer they
      were submitted. This syntax can be used to associate Scilab actions to
      tcl/tk widgets but not into a  Tcl script executed by
      <VERB>TK_EvalFile</VERB> or <VERB>TK_EvalStr</VERB> because in this
      situation the Scilab interpreter is blocked up to the end of the script.
    </P>
    <P>
      If <VERB>"seq"</VERB> option is added, the associated instruction
      evaluation should be finished (or paused) before the next queued instruction
      evaluation started.
    </P>
    <P>
      If the <VERB>ScilabEval instruction "sync"</VERB> syntax is used, the instruction
      is  executed immediately and the ScilabEval instruction returns when the
      <VERB>instruction </VERB>evaluation is finished.
    </P>
   <P>
      If <VERB>"seq"</VERB> option is added, the associated instruction
      evaluation should be finished (or paused) before any  queued instruction
      evaluation can be started started.
    </P>
  </DESCRIPTION>

  <EXAMPLE>
<![CDATA[
//Callbacks and "seq" option usage

//create tcl instructions
tcl_script=['toplevel .w1'
'button .w1.b -text ""Click here to execute without seq option""  -command WithoutSeq'
'button .w1.b1 -text ""Click here to execute with seq option""  -command  WithSeq'
'pack .w1.b .w1.b1'
'proc  WithoutSeq {} { ';
'  ScilabEval ""cont=%f;;cont=%t;"" '
'  ScilabEval ""if cont then disp(''ok''),else disp(''wrong'');end;cont=%f;"" '
'}'
'proc WithSeq {} { ';
'  ScilabEval ""cont=%f;;cont=%t;""  ""seq""'
'  ScilabEval ""if cont then disp(''ok''),else disp(''wrong'');end;cont=%f;"" '
'}'];
mputl(tcl_script,TMPDIR+'/test.tcl') //write them to a file
// Execute the tcl script
cont=%f;
TK_EvalFile(TMPDIR+'/test.tcl');;

//scripts and "sync" option usage

//----------------without "sync"----------------
tcl_script=['  set t ""0""'
    '  while {$t != ""10""} {'
    '     ScilabEval ""a=$t;mprintf(''%d '',a);""'
    '     incr t'
    '  }'];

mputl(tcl_script,TMPDIR+'/test.tcl') //write them to a file
// Execute the tcl script
TK_EvalFile(TMPDIR+'/test.tcl');mprintf('TK_EvalFile finished\n');
// The ScilabEval are executed  after the and of TK_EvalFile

//----------------with "sync"----------------
tcl_script=['  set t ""0""'
    '  while {$t != ""10""} {'
    '     ScilabEval ""a=$t;mprintf(''%d '',a);"" ""sync""'
    '     incr t'
    '  }'];

mputl(tcl_script,TMPDIR+'/test.tcl') //write them to a file
// Execute the tcl script
TK_EvalFile(TMPDIR+'/test.tcl');mprintf('TK_EvalFile finished\n');
// The ScilabEval are executed  synchronously with TK_EvalFile

 ]]>
  </EXAMPLE>
  <SEE_ALSO>
    <SEE_ALSO_ITEM>
      <LINK>TK_EvalFile</LINK>
    </SEE_ALSO_ITEM>
    <SEE_ALSO_ITEM>
      <LINK>TK_EvalStr</LINK>
    </SEE_ALSO_ITEM>
    <SEE_ALSO_ITEM>
      <LINK>TK_GetVar</LINK>
    </SEE_ALSO_ITEM>
    <SEE_ALSO_ITEM>
      <LINK>TK_SetVar</LINK>
    </SEE_ALSO_ITEM>
  </SEE_ALSO>
  <AUTHOR>Bertrand Guiheneuf</AUTHOR>
</MAN>
