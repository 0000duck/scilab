<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?> 
<!DOCTYPE MAN SYSTEM "../../man.dtd">
<MAN>
  <LANGUAGE>eng</LANGUAGE>
  <TITLE>fusee  </TITLE>
  <TYPE>Scilab Function  </TYPE>
  <DATE>April 1993  </DATE>
  <SHORT_DESCRIPTION name="fusee"> a set of Scilab macro for a landing rocket problem   </SHORT_DESCRIPTION>

  <DESCRIPTION>

  <DESCRIPTION_ITEM label='FUSEE'>
    <VERB>[xdot]=fusee(t,x)</VERB> gives the dynamical motion equation
    for the rocket 
  </DESCRIPTION_ITEM >

  <DESCRIPTION_ITEM label='FINIT'>
    <VERB>finit()</VERB>  Initialises the following parameters for rocket landing.
    <ITEMIZE>
     <ITEM label='k'>
     : The acceleration of the rocket engines
     </ITEM>
     <ITEM label='gamma'>
     : The moon gravity acceleration.
     </ITEM>
     <ITEM label='umax'>
     : the gaz ejection flow out.
     </ITEM>
     <ITEM label='mcap'>
      : the mass of the space capsule.
      </ITEM>
     <ITEM label='cpen'>
      : penalisation in the cost function of the final state.
     </ITEM>
   </ITEMIZE>
  </DESCRIPTION_ITEM >

  <DESCRIPTION_ITEM label='FUSEEGRAD'>
  <VERB>[ukp1]=fuseegrad(niter,ukp1,pasg)</VERB> Iterate a gradient method and returns the computed control.
  <ITEMIZE>
  <ITEM label='niter'>
   : number of gradient iteration steps.
  </ITEM>
  <ITEM label='ukp1'>
   : initial control value ( vector of sie 135 )
  </ITEM>
  <ITEM label='pasg'>
   : the gradient step value.
  </ITEM>
  </ITEMIZE>
  </DESCRIPTION_ITEM >


  <DESCRIPTION_ITEM label='FUSEEP'>
  <VERB>[pdot]=fuseep(t,p)</VERB>     adjoint equation for the
  landing rocket problem.
  </DESCRIPTION_ITEM >

  <DESCRIPTION_ITEM label='POUSSE'>
  <VERB>[ut]=pousse(t)</VERB> return the value of a piece wise
  constant control build on the discrete control <VERB>uk</VERB>
 </DESCRIPTION_ITEM >

  <DESCRIPTION_ITEM label='UBANG'>
   <VERB>[uk]=ubang(tf,tcom)</VERB> returns a bang-bang control, 0
   form time 0 to tcom  and 1 form tcom to tf.  
  </DESCRIPTION_ITEM >

  <DESCRIPTION_ITEM label='FCOUT'>
  <VERB>[c,xk,pk,ukp1]=fcout(tf,uk,pasg)</VERB> optimise the following
    cost function by gradient iterations. <VERB>c = -m(tf) + C*( h(tf)**2 + v(tf)**2)</VERB> 
   </DESCRIPTION_ITEM >

  <DESCRIPTION_ITEM label='SFUSEE'>
   <VERB>[]=sfusee(tau,h0,v0,m0,Tf)</VERB> computes the rocket
    trajectory when a bang-bang control is used <VERB>tau</VERB> is
    the commutation time.
   <ITEMIZE>
    <ITEM  label='h0'> 
    : The initial position (high)
    </ITEM>
    <ITEM  label='v0'> 
    : The initial speed ( negative if the rocket is landing )
    </ITEM>
    <ITEM  label='m0'> 
    : The total initial mass ( capsule and fuel).
    </ITEM>
     <ITEM  label='Tf'> 
    : Time horizon.
    </ITEM>
   </ITEMIZE>
   </DESCRIPTION_ITEM >

   <DESCRIPTION_ITEM label='EQUAD'>
    <VERB> [xk,pk]=equad(tf,uk)</VERB> Computes the state and adjoint state of the rocket system for a given 
    control <VERB>ur</VERB>.
   </DESCRIPTION_ITEM >

   <DESCRIPTION_ITEM label='TRAJ'>
    <VERB> [xt]=traj(t)</VERB> returns a piece wise value of the mass evolution.
    </DESCRIPTION_ITEM >
  </DESCRIPTION>
</MAN>
