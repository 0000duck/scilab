<?xml version="1.0" standalone="no"?>
<!--*- mode: xml -*-->
<!DOCTYPE MAN SYSTEM "../../manrev.dtd">
<MAN>
  <LANGUAGE>eng</LANGUAGE>
  <TITLE>scicos_sim  </TITLE>
  <TYPE>Scicos data structure  </TYPE>
  <DATE>Decembre 200</DATE>
  <SHORT_DESCRIPTION name="scicos_sim"> Scicos simulation data structure  </SHORT_DESCRIPTION>
  <DESCRIPTION>
    <P>
    Scicos simulation data structure is usually generated by Scicos
    <VERB>Compile</VERB> menu and needed to simulate
    the system (see <VERB>scicos_cpr</VERB>). 
  </P>
  </DESCRIPTION>
  <SECTION label="Definition">
    <VERBATIM>
<![CDATA[
sim=tlist(['scs','funs','xptr','zptr','izptr','inpptr','outptr',..
 'inplnk','outlnk','lnkptr','rpar','rpptr','ipar','ipptr',..
 'clkptr','ordptr','execlk','ordclk','cord','oord','zord',..      
 'critev','nb','ztyp','nblk','ndcblk','subscr','funtyp',..
 'iord','labels'],funs,xptr,zptr,izptr,inpptr,outptr,inplnk,..
 outlnk,lnkptr,rpar,rpptr,ipar,ipptr,clkptr,ordptr,execlk,..
 ordclk,cord,oord,zord,critev,nb,ztyp,nblk,ndcblk,subscr,..
 funtyp,iord,labels)

   ]]>
    </VERBATIM>
    <ITEMIZE>
      <ITEM label="sim: Scilab tlist, Scicos simulation data structure defined by the">
        <SP>formal name 'scs' and containing the following fields:</SP>
      </ITEM>
    </ITEMIZE>
  </SECTION>
  <SECTION label="Fields">
    <ITEMIZE>
      <ITEM label="funs">
        <SP>: list of character strings containing the names of each block
simulation function (a linked C or Fortran procedure or a Scilab
function).</SP>
      </ITEM>
      <ITEM label="xptr">
        <SP>: (nblk+1) x 1 vector of integers,
<VERB>cpr.state.x(cpr.sim.xptr(i):cpr.sim.xptr(i+1)-1)</VERB> is the
continuous state vector of the <VERB>i</VERB>th block (see
<VERB>scicos_cpr</VERB> and <VERB>scicos_state</VERB>).</SP>
      </ITEM>
      <ITEM label="zptr">
        <SP>: (nblk+1) x 1 vector of integers,
<VERB>cpr.state.z(cpr.sim.zptr(i):cpr.sim.zptr(i+1)-1)</VERB> is the
discrete state vector of the <VERB>i</VERB>th block.</SP>
      </ITEM>
      <ITEM label="izptr">
        <SP>: unused</SP>
      </ITEM>
      <ITEM label="inpptr">
        <SP>: (nblk+1) x 1 vector of integers,   <VERB>(cpr.sim.inpptr(i+1)-cpr.sim.inpptr(i))</VERB> gives the number of input ports. <VERB>inpptr(i)</VERB>th points to the beginning of <VERB>i</VERB>th block inputs within the indirection table <VERB>inplnk</VERB>.</SP>
      </ITEM>
      <ITEM label="outptr">
        <SP>: (nblk+1) x 1 vector of integers,   <VERB>(cpr.sim.outptr(i+1)-cpr.sim.outptr(i))</VERB> gives the number of output ports. <VERB>outptr(i)</VERB>th points to the beginning of <VERB>i</VERB>th block outputs within the indirection table <VERB>outlnk</VERB>.</SP>
      </ITEM>
      <ITEM label="inplnk">
        <SP>: nblink x 1 vector of integers,
<VERB>(cpr.sim.inplnk(cpr.sim.inpptr(i)-1+j))</VERB> is the index of
the link connected to the <VERB>j</VERB>th input port of the
<VERB>i</VERB>th block.  where <VERB>j</VERB> goes from <VERB/>
to <VERB>(cpr.sim.inpptr(i+1)-cpr.sim.inpptr(i))</VERB>.</SP>
      </ITEM>
      <ITEM label="outlnk">
        <SP>: nblink x 1 vector of integers,   <VERB>(cpr.sim.outlnk(cpr.sim.outptr(i)-1+j))</VERB> is the index of the link connected to the <VERB>j</VERB>th output port of the <VERB>i</VERB>th block. where <VERB>j</VERB> goes from <VERB/> to <VERB>(cpr.sim.outptr(i+1)-cpr.sim.outptr(i))</VERB>.</SP>
      </ITEM>
      <ITEM label="lnkptr">
        <SP>: (nblink+1) x 1 vector of integers,   <VERB>k</VERB>th entry points to the beginning of region within <VERB>outtb</VERB> dedicated to link indexed <VERB>k</VERB>.</SP>
      </ITEM>
      <ITEM label="rpar">
        <SP>: vector of blocks' floating point parameters</SP>
      </ITEM>
      <ITEM label="rpptr">
        <SP>: (nblk+1) x 1 vector of integers,    <VERB>cpr.sim.rpar(cpr.sim.rpptr(i):cpr.sim.rpptr(i+1)-1)</VERB> is the vector of floating point parameters of the <VERB>i</VERB>th block.</SP>
      </ITEM>
      <ITEM label="ipar">
        <SP>: vector of blocks' integer parameters</SP>
      </ITEM>
      <ITEM label="ipptr">
        <SP>: (nblk+1) x 1 vector of integers,    <VERB>cpr.sim.ipar(cpr.sim.ipptr(i):cpr.sim.ipptr(i+1)-1)</VERB> is the vector of integer parameters of the <VERB>i</VERB>th block.</SP>
      </ITEM>
      <ITEM label="clkptr">
        <SP>: (nblk+1) x 1 vector of integers,    <VERB>(cpr.sim.clkptr(i):cpr.sim.clkptr(i+1)-1)</VERB> gives the number of output event ports.</SP>
      </ITEM>
      <ITEM label="ordptr">
        <SP>: 1 vector of integers,  <VERB>(cpr.sim.ordptr(i):cpr.sim.ordptr(i+1)-1)</VERB> points to the region within <VERB>ordclk</VERB> indicates the number of blocks activated by the output event ports numbered <VERB>i</VERB>.</SP>
      </ITEM>
      <ITEM label="execlk">
        <SP>: unused</SP>
      </ITEM>
      <ITEM label="ordclk">
        <SP>: two-column matrix of integers, the first indicates the number of activated blocks and the second indicates the number of the corresponding input event port.</SP>
      </ITEM>
      <ITEM label="cord">
        <SP>: two-column matrix of integers, the first indicates the number of permanently (continuous time) activated blocks and the second indicates the number of the corresponding input event port.</SP>
      </ITEM>
      <ITEM label="oord">
        <SP>: two-column matrix of integers,   subset of cord whose outputs affect computation of continuous state derivatives.</SP>
      </ITEM>
      <ITEM label="zord">
        <SP>: two-column matrix of integers,   subset of cord
  whose outputs affect computation of zero-crossing surfaces.</SP>
      </ITEM>
      <ITEM label="critev">
        <SP>: 1 vector of integers,  ?????????????????</SP>
      </ITEM>
      <ITEM label="nb">
        <SP>: unused</SP>
      </ITEM>
      <ITEM label="ztyp">
        <SP>: (nblk+1) x 1 vector of integers,
  <VERB>(cpr.sim.ztyp(i)</VERB> is coded 1 if the block numbered
  <VERB>i</VERB> is from Zcross type (0 if else).</SP>
      </ITEM>
      <ITEM label="nblk">
        <SP>: number of blocks (unused)</SP>
      </ITEM>
      <ITEM label="ndcblk">
        <SP>: unused</SP>
      </ITEM>
      <ITEM label="subscr">
        <SP>: ?????????????????</SP>
      </ITEM>
      <ITEM label="funtyp">
        <SP>: (nblk+1) x 1 vector of integers, indicates
  the routine type of blocks</SP>
      </ITEM>
      <ITEM label="iord">
        <SP>: two-column matrix of integers, the first
  contains all the numbers of blocks to be updated in the
  initialization of the simulation among which the continuous
  blocks. The second column indicates the number of the corresponding
  input event port.</SP>
      </ITEM>
      <ITEM label="labels">
        <SP>: (nblk+1) x 1 vector of character strings,
  contains the label (if any) associated to each block.</SP>
      </ITEM>
    </ITEMIZE>
  </SECTION>
  <SEE_ALSO>
    <SEE_ALSO_ITEM>
      <LINK>scicos_model</LINK>
    </SEE_ALSO_ITEM>
    <SEE_ALSO_ITEM>
      <LINK>scicos_diagram</LINK>
    </SEE_ALSO_ITEM>
  </SEE_ALSO>
</MAN>
