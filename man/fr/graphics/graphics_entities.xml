<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!DOCTYPE MAN SYSTEM "../../man.dtd">
<MAN>
  <LANGUAGE>eng</LANGUAGE>
  <TITLE>graphics_handle</TITLE>
  <TYPE>Scilab Data type </TYPE>
  <DATE> 2002 </DATE>
  <SHORT_DESCRIPTION name="graphics_entities"> description of the
  graphics entities data structures </SHORT_DESCRIPTION>
 
  <DESCRIPTION>
  Scilab graphics is based on two different modes. In the "old" mode 
  the graphics instructions are stored to enable redisplay, zoom and
  rotations. In the "new" mode graphics each graphic window and the
  drawing it contains are represented by hierchical entities. The
  hierachy to level is the Figure. Each Figure defines at least one
  children of type Axes. Each Axes entity contains a set of leaf
  entities which are the basic graphics objects like Polylines,
  Rectangles, Segs,... It can also contain Agregation type entities
  which are recursive sets of entities. The main interest of the new
  graphic mode is to make property change easier. Graphics entities
  are associated to Scilab variables of type
  <VERB>handle</VERB>. These handles can be used to set or get entities
  properties, to move them, to make copies or delete them.
  <P></P>
  To set the current graphics window mode  one can use the
  instruction <VERB>set("figure_style","new") </VERB> or
  <VERB>set("figure_style","old ")</VERB>. The instructions
  <VERB>set("old_style","off")</VERB>  or
  <VERB>set("old_style","on")</VERB> set the
  default mode to be used when a new graphics window is created. 
  <P></P>
  The new graphics mode is a beta version. So the "old" mode is set as
  default.


  <DESCRIPTION_ITEM label='Figure: '>
   The figure entity is the top level of the graphics entities
  hierarchy. This entity defines the parameters for the figure itself
  as well as the  parameter's defaut values for the children
  creation. The figure children should be Axes.
  See <LINK>figure_properties</LINK> for details.
  <P></P>
  The handle on the current figure may be got using <VERB>get("current_figure")</VERB>

  </DESCRIPTION_ITEM>
  <DESCRIPTION_ITEM label='Axes'>
  The Axes entity is the second level of the graphics entities
  hierarchy. This entity defines the parameters for the change of
  coordinates and the axes drawing
  as well as the  parameter's defaut values for the children creation.
 See <LINK>axes_properties</LINK> for details.
 <P></P>
  The handle on the current Axes may be got using <VERB>get("current_axes")</VERB>
  </DESCRIPTION_ITEM>

  <DESCRIPTION_ITEM label='Agregation'>
 The agregation entity is just a vector of children without any other
 property. It is used to glue a set of entities together.  See
  <LINK>glue</LINK> and <LINK>unglue</LINK> functions.
  </DESCRIPTION_ITEM>

  <DESCRIPTION_ITEM label='Polyline'>
  The polyline entitie is a leaf of the graphics entities
  hierarchy. It defines polylines and polylines extensions drawing
  properties. See <LINK>polyline_properties</LINK> for details.
 </DESCRIPTION_ITEM>

  <DESCRIPTION_ITEM label='Patch'>
  The Patch entitie is a leaf of the graphics entities
  hierarchy. It defines filled polylines  drawing
  properties. See <LINK>patch_properties</LINK> for details.
  </DESCRIPTION_ITEM>

 <DESCRIPTION_ITEM label='Arc'>
  The Arc entity is a leaf of the graphics entities
  hierarchy. This entity defines the parameters for ellipses and part
  of ellipses filled or not.See <LINK>arc_properties</LINK> for details.
  </DESCRIPTION_ITEM>

  <DESCRIPTION_ITEM label='Rectangle'>
  The Rectangle entity is a leaf of the graphics entities
  hierarchy. This entity defines the parameters for rectangles and
  filled rectangles. See <LINK>rectangle_properties</LINK> for details.
 </DESCRIPTION_ITEM>

  <DESCRIPTION_ITEM label='Surface'>
  The Surface entity is a leaf of the graphics entities
  hierarchy. It has  sub_types Fac3d  Plot3d . This entity is still under developpement
  and will problably evolve a lot. See <LINK>surface_properties</LINK> for details.
  </DESCRIPTION_ITEM>

  <DESCRIPTION_ITEM label='Param3d'>
  The Surface entity is a leaf of the graphics entities
  hierarchy. It is a  Surface sub_type . This entity is still under developpement
  and will problably evolve a lot. See <LINK>param3d_properties</LINK> for details.
  </DESCRIPTION_ITEM>

  <DESCRIPTION_ITEM label='Fec'>
  The Fec entity is a leaf of the graphics entities hierarchy. It
  represents 2D finite elements plots . See <LINK>fec_properties</LINK> for details.
  </DESCRIPTION_ITEM>

  <DESCRIPTION_ITEM label='Grayplot'>
  The Grayplot entity is a leaf of the graphics entities hierarchy. It
  represents 2D plots of surface using colors and images. See
  <LINK>grayplot_properties</LINK> for details.
  </DESCRIPTION_ITEM>

  <DESCRIPTION_ITEM label='Legend'>
  The Legend entity is a leaf of the graphics entities
  hierarchy. This entity defines the parameters for legends drawn
  below <VERB>plot2dx</VERB> graphs. This entity requires further
  developments. See <LINK>legend_properties</LINK> for details.

 </DESCRIPTION_ITEM>

  <DESCRIPTION_ITEM label='Segs'>
  The Segs entity is a leaf of the graphics entities
  hierarchy. This entity defines the parameters for a set of colored
  segments or colored arrows. See <LINK>segs_properties</LINK> for details.
 </DESCRIPTION_ITEM>

  <DESCRIPTION_ITEM label='Champ'>
   The Champ entity is a leaf of the graphics entities
  hierarchy. This entity defines the parameters for a 2D vector field.
 See <LINK>champ_properties</LINK> for details.
</DESCRIPTION_ITEM>


  <DESCRIPTION_ITEM label='Text'>
  The Text entity is a leaf of the graphics entities
  hierarchy. This entity defines the parameters for string drawing.
 See <LINK>text_properties</LINK> for details.
  </DESCRIPTION_ITEM>

  </DESCRIPTION>
  <EXAMPLE><![CDATA[
  //Play this example line per line

  set("figure_style","new") //create a figure in entity mode

  //get the handle on the Figure entity and display its properties
  f=get("current_figure") 
  a=f.children // the handle on the Axes child
  x=(1:10)';  plot2d(x,[x.^2 x.^1.5])
  e=a.children //Agregation of 2 polylines

  p1=e.children(1) //the last drawn polyline properties
  p1.foreground=5  // change the polyline color
  e.children.thickness=5 // change the thickness of the two polylines

  delete(e.children(2))

  move(e.children,[0,30]) //translate the polyline

  a.axes_bounds=[0 0 0.5 0.5]; 

  subplot(222) //create a new Axes entity
  a1=f.children(1); //get its handle
  copy(e.children,a1); //copy the polyline of the first plot in the new Axes
  a1.data_bounds=[1 0 10 10]; //change the Axes bounds
  a1.axes_visible='on'; //make them visible


 ]]></EXAMPLE>
  <SEE_ALSO>
    <SEE_ALSO_ITEM> <LINK>set</LINK> </SEE_ALSO_ITEM>
    <SEE_ALSO_ITEM> <LINK>get</LINK> </SEE_ALSO_ITEM>
    <SEE_ALSO_ITEM> <LINK>draw</LINK> </SEE_ALSO_ITEM>
   <SEE_ALSO_ITEM> <LINK>delete</LINK> </SEE_ALSO_ITEM>
  </SEE_ALSO>
</MAN>

