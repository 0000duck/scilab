function libn=ilib_for_link(names,files,libs,flag,makename,loadername)
// Generate a shared library which can be used by link 
// command. 
// names = names of entry points or the name of the library to 
// be built (when flag == 'g') 
// files = object files to be built 
// flag = 'c' or 'f' or '
// 
  [lhs,rhs]=argn(0);
  info=1
  if rhs <= 4 then makename = 'Makelib';end
  if rhs <= 5 then loadername = 'loader.sce';end
  // generate a loader file
  if info==1 then write(%io(2),'   generate a loader file');end
  ilib_link_gen_loader(names,flag,loadername,libs);
  // generate a Makefile
  if info==1 then write(%io(2),'   generate a Makefile: Makelib');end
  ilib_link_gen_Make(names,files,libs,makename);
  // we call make
  if info==1 then write(%io(2),'   running the makefile');end
  libn=ilib_compile('lib'+names(1),makename);
endfunction

function ilib_link_gen_loader(names,flag,loadername,libs)
//------------------------------------
  comp_target = getenv('COMPILER','NO');
  if getenv('WIN32','NO')=='OK' then
    select comp_target
     case 'VC++'   then lib_suf='dll';
     case 'ABSOFT' then lib_suf='dll';
    else lib_suf='dll';
    end
  else
     lib_suf=ilib_unix_soname();
  end
  fd=mopen(loadername,"w");
  mfprintf(fd,"// generated by builder.sce: Please do not edit this file\n");
  mfprintf(fd,"// ------------------------------------------------------\n");
  mfprintf(fd,"%s_path=get_file_path(''%s'');\n",names(1),loadername);
  nl=size(libs,'*') 
  for i=1:nl 
    mfprintf(fd,"link(%s_path+''/%s.%s'');\n",names(1),libs(i),lib_suf);
  end 
  mfprintf(fd,"link(%s_path+''/lib%s.%s'',[",names(1),names(1),lib_suf);
  names=names(:)';
  n = size(names,'*');
  for i=1:n
    mfprintf(fd,"''%s''",names(i))
    if i <>n ; mfprintf(fd,","); else mfprintf(fd,"],");end
  end
  mfprintf(fd,"''%s'');\n",flag);
  mclose(fd);
endfunction

function ilib_link_gen_Make(names,files,libs,makename)
//------------------------------------
// generate a Makefile for gateway
  comp_target = getenv('COMPILER','NO');
  if getenv('WIN32','NO')=='OK' then
    select comp_target
     case 'VC++'   then Makename = makename+'.mak'
     case 'ABSOFT' then Makename = makename+'.amk'
    else Makename = makename;
    end
    ilib_link_gen_Make_win32(names,files,libs,Makename)
  else
     Makename = makename;
     ilib_link_gen_Make_unix(names,files,libs,Makename)
  end
endfunction

function ilib_link_gen_Make_unix(names,files,libs,Makename)
  fd=mopen(Makename,"w");
  mfprintf(fd,"# generated by builder.sce: Please do not edit this file\n");
  mfprintf(fd,"# ------------------------------------------------------\n");
  mfprintf(fd,"SCIDIR = %s\n",SCI);
  mfprintf(fd,"OBJS = ")
  for x=files(:)' ; mfprintf(fd," %s",x);end
  mfprintf(fd,"\n") ;
  mfprintf(fd,"OTHERLIBS = ")
  for x=libs(:)' ; mfprintf(fd," %s",x);end
  mfprintf(fd,"\n") ;
  mfprintf(fd,"LIBRARY = lib%s\n",names(1));
  mfprintf(fd,"include $(SCIDIR)/Makefile.incl\n");
  mfprintf(fd,"CFLAGS = $(CC_OPTIONS)\n");
  mfprintf(fd,"FFLAGS = $(FC_OPTIONS)\n");
  mfprintf(fd,"include $(SCIDIR)/config/Makeso.incl\n");
  mclose(fd);
endfunction

function ilib_link_gen_Make_win32(names,files,libs,Makename)
  fd=mopen(Makename,"w");
  mfprintf(fd,"# generated by builder.sce: Please do not edit this file\n");
  mfprintf(fd,"# ------------------------------------------------------\n");
  mfprintf(fd,"SHELL = /bin/sh\n");
  mfprintf(fd,"SCIDIR =%s\n",SCI);
  mfprintf(fd,"SCIDIR1 =%s\n",WSCI);
  mfprintf(fd,"# name of the dll to be built\n"); 
  mfprintf(fd,"LIBRARY = lib%s\n",names(1));
  mfprintf(fd,"# list of objects file\n");
  mfprintf(fd,"OBJS =");
  for x=files(:)' ; mfprintf(fd," %s",strsubst(x,".o",".obj"));end
  mfprintf(fd,"\n# added libraries \n");
  mfprintf(fd,"OTHERLIBS = ");
  for x=libs(:)' ; mfprintf(fd," %s.ilib",x);end
  mfprintf(fd,"\n");
  mfprintf(fd,"!include $(SCIDIR1)\\Makefile.incl.mak\n");
  mfprintf(fd,"CFLAGS = $(CC_OPTIONS) -DFORDLL -I\""$(SCIDIR)/routines/\"" -Dmexfunction_=mex$*_  -DmexFunction=mex_$*\n");
  mfprintf(fd,"FFLAGS = $(FC_OPTIONS) -DFORDLL -I\""$(SCIDIR)/routines/\"" -Dmexfunction=mex$*\n");
  mfprintf(fd,"!include $(SCIDIR1)\\config\\Makedll.incl \n");
  mclose(fd);
endfunction
