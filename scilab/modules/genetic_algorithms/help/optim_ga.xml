<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!DOCTYPE MAN SYSTEM "file://C:\PROGRA~1\SCILAB~1.2\man/manrev.dtd">
<MAN>
  <LANGUAGE>eng</LANGUAGE>
  <TITLE>optim_ga</TITLE>
  <TYPE>Scilab Function  </TYPE>
  <DATE>4-Feb-2008</DATE>
  <SHORT_DESCRIPTION name="optim_ga"> A flexible genetic algorithm </SHORT_DESCRIPTION>

  <CALLING_SEQUENCE>
  <CALLING_SEQUENCE_ITEM>[pop_opt,fobj_pop_opt,pop_init,fobj_pop_init] = optim_ga(ga_f,pop_size,nb_generation,p_mut,p_cross,Log,param)</CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>

  <PARAM>
  <PARAM_INDENT>

    <PARAM_ITEM>
    <PARAM_NAME>ga_f</PARAM_NAME>
    <PARAM_DESCRIPTION>
       <SP>
       : the function to be optimized. The prototype if y = f(x) or y = list(f,p1,p2,...).
       </SP>
    </PARAM_DESCRIPTION>
    </PARAM_ITEM>

    <PARAM_ITEM>
    <PARAM_NAME>pop_size</PARAM_NAME>
    <PARAM_DESCRIPTION>
       <SP>
       : the size of the population of individuals (default value: 100).
       </SP>
    </PARAM_DESCRIPTION>
    </PARAM_ITEM>

    <PARAM_ITEM>
    <PARAM_NAME>nb_generation</PARAM_NAME>
    <PARAM_DESCRIPTION>
       <SP>
       : the number of generations (equivalent to the number of iterations in classical optimization) to be computed (default value: 10).
       </SP>
    </PARAM_DESCRIPTION>
    </PARAM_ITEM>

    <PARAM_ITEM>
    <PARAM_NAME>p_mut</PARAM_NAME>
    <PARAM_DESCRIPTION>
       <SP>
       : the mutation probability (default value: 0.1).
       </SP>
    </PARAM_DESCRIPTION>
    </PARAM_ITEM>

    <PARAM_ITEM>
    <PARAM_NAME>p_cross</PARAM_NAME>
    <PARAM_DESCRIPTION>
       <SP>
       : the crossover probability (default value: 0.7).
       </SP>
    </PARAM_DESCRIPTION>
    </PARAM_ITEM>

    <PARAM_ITEM>
    <PARAM_NAME>Log</PARAM_NAME>
    <PARAM_DESCRIPTION>
       <SP>
       : if %T, we will display to information message during the run of the genetic algorithm.
       </SP>
    </PARAM_DESCRIPTION>
    </PARAM_ITEM>

    <PARAM_ITEM>
    <PARAM_NAME>param</PARAM_NAME>
    <PARAM_DESCRIPTION>
       <SP>
       : a list of parameters.
         - 'codage_func': the function which will perform the coding and decoding of individuals (default function: codage_identity).
         - 'init_func': the function which will perform the initialization of the population (default function: init_func_default).
         - 'crossover_func': the function which will perform the crossover between two individuals (default function: crossover_func_default).
         - 'mutation_func': the function which will perform the mutation of one individual (default function: mutation_func_default).
         - 'selection_func': the function whcih will perform the selection of individuals at the end of a generation (default function: selection_func_elitist).
         - 'nb_couples': the number of couples which will be selected so as to perform the crossover and mutation (default value: 100).
         - 'pressure': the value the efficiency of the worst individual (default value: 0.05).
       </SP>
    </PARAM_DESCRIPTION>
    </PARAM_ITEM>

    <PARAM_ITEM>
    <PARAM_NAME>pop_opt</PARAM_NAME>
    <PARAM_DESCRIPTION>
       <SP>
       : the population of optimal individuals.
       </SP>
    </PARAM_DESCRIPTION>
    </PARAM_ITEM>

    <PARAM_ITEM>
    <PARAM_NAME>fobj_pop_opt</PARAM_NAME>
    <PARAM_DESCRIPTION>
       <SP>
       : the set of objective function values associated to pop_opt (optional).
       </SP>
    </PARAM_DESCRIPTION>
    </PARAM_ITEM>

    <PARAM_ITEM>
    <PARAM_NAME>pop_init</PARAM_NAME>
    <PARAM_DESCRIPTION>
       <SP>
       : the initial population of individuals (optional).
       </SP>
    </PARAM_DESCRIPTION>
    </PARAM_ITEM>

    <PARAM_ITEM>
    <PARAM_NAME>fobj_pop_init</PARAM_NAME>
    <PARAM_DESCRIPTION>
       <SP>
       : the set of objective function values associated to pop_init (optional).
       </SP>
    </PARAM_DESCRIPTION>
    </PARAM_ITEM>
  </PARAM_INDENT>
  </PARAM>
 
  <DESCRIPTION>
     <DESCRIPTION_INDENT>
     <DESCRIPTION_ITEM>
     <P>
      This function implements the classical genetic algorithm.
     </P>
     </DESCRIPTION_ITEM>
     </DESCRIPTION_INDENT>
  </DESCRIPTION>

  <EXAMPLE><![CDATA[
    deff('y=f(x)','y = 'sum(x.^2)');

    PopSize     = 100;
    Proba_cross = 0.7;
    Proba_mut   = 0.1;
    NbGen       = 10;
    NbCouples   = 110;
    Log         = %T;
    nb_disp     = 10; // Nb point to display from the optimal population
    pressure    = 0.05;

    ga_params = init_param();
    // Parameters to adapt to the shape of the optimization problem
    ga_params = add_param(ga_params,'minbound',[-2; -2]);
    ga_params = add_param(ga_params,'maxbound',[2; 2]);
    ga_params = add_param(ga_params,'dimension',2);
    ga_params = add_param(ga_params,'beta',0);
    ga_params = add_param(ga_params,'delta',0.1);
    // Parameters to fine tune the Genetic algorithm. All these parameters are optional for continuous optimization
    // If you need to adapt the GA to a special problem, you 
    ga_params = add_param(ga_params,'init_func',init_func_default);
    ga_params = add_param(ga_params,'crossover_func',crossover_func_default);
    ga_params = add_param(ga_params,'mutation_func',mutation_func_default);
    ga_params = add_param(ga_params,'codage_func',codage_identity);
    ga_params = add_param(ga_params,'selection_func',selection_func_elitist);
    //ga_params = add_param(ga_params,'selection_func',selection_func_random);
    ga_params = add_param(ga_params,'nb_couples',NbCouples);
    ga_params = add_param(ga_params,'pressure',pressure);

    Min = get_param(ga_params,'minbound');
    Max = get_param(ga_params,'maxbound');
    x0  = (Max - Min) .* rand(size(Min,1),size(Min,2)) + Min;

    [pop_opt, fobj_pop_opt, pop_init, fobj_pop_init] = optim_ga(f, PopSize, NbGen, Proba_mut, Proba_cross, Log, ga_params);
  ]]></EXAMPLE>

  <SEE_ALSO>
    <SEE_ALSO_ITEM> <LINK> optim_moga </LINK> </SEE_ALSO_ITEM>
    <SEE_ALSO_ITEM> <LINK> optim_nsga </LINK> </SEE_ALSO_ITEM>
    <SEE_ALSO_ITEM> <LINK> optim_nsga2 </LINK> </SEE_ALSO_ITEM>
  </SEE_ALSO>

  <AUTHORS>
    <AUTHORS_ITEM label='Yann COLLETTE'>
    ycollet@freesurf.fr
    </AUTHORS_ITEM>
  </AUTHORS>
</MAN>
