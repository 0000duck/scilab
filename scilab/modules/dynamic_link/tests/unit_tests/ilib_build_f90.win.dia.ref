// =============================================================================
// Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
// Copyright (C) 2009 - DIGITEO - Sylvestre LEDRU
// Copyright (C) 2009 - DIGITEO - Michael BAUDIN
//
//  This file is distributed under the same license as the Scilab package.
// =============================================================================
// <-- ENGLISH IMPOSED -->
// <-- JVM NOT MANDATORY -->
// Here with give a complete example on adding new primitive to Scilab
// Note that is a unitary test but it could have been a non reg test of bug
// 3488 but it is not because there was no fix to make it work.
//creating the interface file
sourcecode=['subroutine incrdoublef90(x,y)'
    '  implicit none'
    '  double precision, intent(in) :: x'
    '  double precision, intent(out) :: y'
    '  y=x+1'
    'end subroutine incrdoublef90'];
mputl(sourcecode,'incrdoublef90.f90');
libpath=ilib_for_link('incrdoublef90','incrdoublef90.f90',[],'f');
   Generate a loader file
   Generate a Makefile
   Running the Makefile
   Compilation of incrdoublef90.f90
   Building shared library (be patient)
exec loader.sce
 
// ------------------------------------------------------
 
// generated by builder.sce: Please do not edit this file
 
// ------------------------------------------------------
 
 
incrdoublef90_path = get_absolute_file_path('loader.sce');
 
 
link(incrdoublef90_path+'libincrdoublef90.dll',['incrdoublef90'],'f');
Shared archive loaded.
Link done.
 
// remove temp. variables on stack
 
clear incrdoublef90_path;
 
clear get_file_path;
 
// ------------------------------------------------------
 
n=1.;
m=call("incrdoublef90",n,1,"d","out",[1,1],2,"d");
if abs(m-2.)>%eps then bugmes();quit;end
n=2.;
m=call("incrdoublef90",n,1,"d","out",[1,1],2,"d");
if abs(m-3.)>%eps then bugmes();quit;end
