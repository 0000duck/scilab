<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) 2008 - INRIA
 * 
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at    
 * http://www.cecill.info/licences/Licence_CeCILL_V2-en.txt
 *
 -->
<refentry version="5.0-subset Scilab" xml:id="oldbessel" xml:lang="en"
          xmlns="http://docbook.org/ns/docbook"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:svg="http://www.w3.org/2000/svg"
          xmlns:ns4="http://www.w3.org/1999/xhtml"
          xmlns:mml="http://www.w3.org/1998/Math/MathML"
          xmlns:db="http://docbook.org/ns/docbook">
  <info>
    <pubdate>$LastChangedDate$</pubdate>
  </info>

  <refnamediv xml:id="oldbesseli">
    <refname>oldbesseli</refname>

    <refpurpose>funções de Bessel modificadas do primeiro tipo (I sub
    alfa).</refpurpose>
  </refnamediv>

  <refnamediv xml:id="oldbesselj">
    <refname>oldbesselj</refname>

    <refpurpose>funções de Bessel do primeiro tipo (J sub alfa).</refpurpose>
  </refnamediv>

  <refnamediv xml:id="oldbesselk">
    <refname>oldbesselk</refname>

    <refpurpose>funções de Bessel modificadas do segundo tipo (K sub
    alfa).</refpurpose>
  </refnamediv>

  <refnamediv xml:id="oldbessely">
    <refname>oldbessely</refname>

    <refpurpose>funções de Bessel do segundo tipo (Y sub alfa).</refpurpose>
  </refnamediv>

  <refsynopsisdiv>
    <title>Seqüência de Chamamento</title>

    <synopsis>y = oldbesseli(alpha,x)
y = oldbesseli(alpha,x,ice)
y = oldbesselj(alpha,x)
y = oldbesselk(alpha,x)
y = oldbesselk(alpha,x,ice)
y = oldbessely(alpha,x)</synopsis>
  </refsynopsisdiv>

  <refsection>
    <title>Parâmetros</title>

    <variablelist>
      <varlistentry>
        <term>x</term>

        <listitem>
          <para>vetor de reais com entradas não-negativas </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>alpha</term>

        <listitem>
          <para>vetor de reais com entradas não-negativas igualmente espaçadas
          com incremento igual a
          1<literal>alpha=alpha0+(n1:n2)</literal></para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>ice</term>

        <listitem>
          <para>flag inteiro com valor padrão 1</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </refsection>

  <refsection>
    <title>Descrição</title>

    <para>Funções obsoletas, use <link linkend="besseli">besseli</link>, <link
    linkend="besselj">besselj</link>, <link linkend="besselk">besselk</link>,
    <link linkend="bessely">bessely</link> no lugar. Note, contudo, que a
    semântica destes dois grupos de funções é diferente.</para>

    <para><literal>oldbesseli(alpha,x)</literal> computa funções modificadas
    de Bessel do primeiro tipo (I sub alfa), para ordem real não-negativa
    <literal>alpha</literal> e argumento real não-negativo
    <literal>x</literal>. <literal>besseli(alpha,x,2)</literal> computa
    <literal>besseli(alpha,x).*exp(-x)</literal>.</para>

    <para><literal>oldbesselj(alpha,x)</literal> computa funções de Bessel do
    primeiro tipo (J sub alfa), para ordem real não-negativa
    <literal>alpha</literal> e argumento real não-negativo
    <literal>x</literal>.</para>

    <para><literal>oldbesselk(alpha,x)</literal> computa as funções
    modificadas de Bessel do segundo tipo (K sub alfa), para ordem real
    não-negativa <literal>alpha</literal> e argumento real não-negativo
    <literal>x</literal>. <literal>besselk(alpha,x,2)</literal> computa
    <literal>besselk(alpha,x).*exp(x)</literal>.</para>

    <para><literal>oldbessely(alpha,x)</literal> computa funções de Bessel do
    segundo tipo (Y sub alfa), para ordem real não-negativa
    <literal>alpha</literal> e argumento real não-negativo
    <literal>x</literal>.</para>

    <para><literal>alpha</literal> e <literal>x</literal> podem ser vetores. A
    saída é <literal>m</literal>-por-<literal>n</literal> com <literal>m =
    size(x,'*')</literal>, <literal>n = size(alpha,'*')</literal> whose
    <literal>(i,j)</literal> cuja entrada
    <literal>oldbessel?(alpha(j),x(i))</literal>.</para>
  </refsection>

  <refsection>
    <title>Observações </title>

    <para>As funções Y_alfa e J_alfa de Bessel são duas soluções independentes
    da equação diferencial de Bessel :</para>

    <programlisting>2 2 2 x y" + x y' + (x - alfa ) y = 0 , alfa &gt;=
    0</programlisting>

    <para>As funções modificadas K_alfa e I_alfa de Bessel são duas soluções
    independentes da equação diferencial modificada de Bessel:</para>

    <programlisting>2 2 2 x y" + x y' - (x + alfa ) y = 0 , alfa &gt;=
    0</programlisting>
  </refsection>

  <refsection>
    <title>Exemplos </title>

    <programlisting role="example">
// exemplo #1: exibindo algumas funções I de Bessel
x = linspace(0.01,10,5000)';
y = oldbesseli(0:4,x);
ys = oldbesseli(0:4,x,2);
xbasc()
subplot(2,1,1)
   plot2d(x,y, style=2:6, leg="I0@I1@I2@I3@I4", rect=[0,0,6,10])
   xtitle("Algumas funções modificadas de Bessel do primeiro tipo")
subplot(2,1,2)
   plot2d(x,ys, style=2:6, leg="I0s@I1s@I2s@I3s@I4s", rect=[0,0,6,1])
   xtitle("Algumas funções modificadas de Bessel do primeiro tipo escaladas")

// exemplo #2 : exibindo algumas funções J de Bessel
x = linspace(0,40,5000)';
y = besselj(0:4,x);
xbasc()
plot2d(x,y, style=2:6, leg="J0@J1@J2@J3@J4")
xtitle("Algumas funções de Bessel do primeiro tipo")

// example #3 : usando o fato de que J_(1/2)(x) = sqrt(2/(x pi)) sin(x)
//              para comparar o algoritmo de besselj(0.5,x) com
//              uma fórmula mais direta
x = linspace(0.1,40,5000)';
y1 = besselj(0.5, x);
y2 = sqrt(2 ./(%pi*x)).*sin(x);
er = abs((y1-y2)./y2);
ind = find(er &gt; 0 &amp; y2 ~= 0);
xbasc()
subplot(2,1,1)
   plot2d(x,y1,style=2)
   xtitle("besselj(0.5,x)")
subplot(2,1,2)
   plot2d(x(ind), er(ind), style=2, logflag="nl")
   xtitle("erro relativo entre as duas fórmulas para besselj(0.5,x)") 


// exemplo #4: exibindo algumas funções K de Bessel
x = linspace(0.01,10,5000)';
y = besselk(0:4,x);
ys = besselk(0:4,x,1);
xbasc()
subplot(2,1,1)
   plot2d(x,y, style=0:4, leg="K0@K1@K2@K3@K4", rect=[0,0,6,10])
   xtitle("Algumas funções modificadas de Bessel do segundo tipo")
subplot(2,1,2)
   plot2d(x,ys, style=0:4, leg="K0s@K1s@K2s@K3s@K4s", rect=[0,0,6,10])
   xtitle("Algumas funções modificadas de Bessel do segundo tipo escaladas")

// exemplo #5: plot de várias funções Y de Bessel
x = linspace(0.1,40,5000)'; // funções  Y de Bessel não possuem limite para x -&gt; 0+
y = bessely(0:4,x);
xbasc()
plot2d(x,y, style=0:4, leg="Y0@Y1@Y2@Y3@Y4", rect=[0,-1.5,40,0.6])
xtitle("Algumas funções de Bessel do segundo tipo")
 
  </programlisting>
  </refsection>

  <refsection>
    <title>Autores</title>

    <para>W. J. Cody, L. Stoltz (código de Netlib (specfun))</para>
  </refsection>
</refentry>
