<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!DOCTYPE MAN SYSTEM "../../manrev.dtd">
<MAN>
  <LANGUAGE>eng</LANGUAGE>

  <TITLE>numdiff</TITLE>

  <TYPE>Scilab Function</TYPE>

  <DATE>August 1993</DATE>

  <SHORT_DESCRIPTION name="numdiff">numerical gradient
  estimation</SHORT_DESCRIPTION>

  <CALLING_SEQUENCE>
    <CALLING_SEQUENCE_ITEM>g=numdiff(fun,x [,dx])</CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>

  <PARAM>
    <PARAM_INDENT>
      <PARAM_ITEM>
        <PARAM_NAME>fun</PARAM_NAME>

        <PARAM_DESCRIPTION>
          <SP>: an external, Scilab function or list. See below for calling
          sequence, see also <LINK>external</LINK> for details about external
          functions.</SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>

      <PARAM_ITEM>
        <PARAM_NAME>x</PARAM_NAME>

        <PARAM_DESCRIPTION>
          <SP>: vector, the argument of the function <VERB>fun</VERB></SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>

      <PARAM_ITEM>
        <PARAM_NAME>dx</PARAM_NAME>

        <PARAM_DESCRIPTION>
          <SP>: vector, the finite difference step. Default value is
          <VERB>dx=sqrt(%eps)*(1+1d-3*abs(x))</VERB></SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>

      <PARAM_ITEM>
        <PARAM_NAME>g</PARAM_NAME>

        <PARAM_DESCRIPTION>
          <SP>: vector, the estimated gradient</SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>
    </PARAM_INDENT>
  </PARAM>

  <DESCRIPTION>
    <P>given a function <VERB>fun(x)</VERB> from <VERB>R^n</VERB> to
    <VERB>R^p</VERB> computes the matrix <VERB>g</VERB> such as</P>

    <VERBATIM>[ d f ] [ i ] g = [ ---- ] ij [ d x ] [ j ]</VERBATIM>

    <P>using finite difference methods.</P>

    <P>Without parameters, the function fun calling sequence is
    <VERB>y=fun(x)</VERB>, and numdiff can be called as
    <VERB>g=numdiff(fun,x)</VERB>. Else the function fun calling sequence must
    be <VERB>y=fun(x,param_1,pararm_2,..,param_q)</VERB>. If parameters
    <VERB>param_1,param_2,..param_q</VERB> exist then <VERB>numdiff</VERB> can
    be called as follow
    <VERB>g=numdiff(list(fun,param_1,param_2,..param_q),x)</VERB>.</P>
  </DESCRIPTION>

  <EXAMPLE><![CDATA[
// example 1 (without parameters)
// myfun is a function from R^2 to R :   (x(1),x(2)) |--> myfun(x) 
function f=myfun(x)
f=x(1)*x(1)+x(1)*x(2)
endfunction

x=[5 8]
g=numdiff(myfun,x)
// The exact gradient (i.e derivate belong x(1) :first component and derivate belong x(2): second component) is  
exact=[2*x(1)+x(2)  x(1)]


//example 2 (with parameters)
// myfun is a function from R to R:  x(1) |--> myfun(x) 
// myfun contains 3 parameters, a, b, c
function  f=myfun(x,a,b,c)
f=(x+a)^c+b
endfunction

a=3; b=4; c=2;
x=1
g2=numdiff(list(myfun,a,b,c),x)
// The exact gradient, i.e derivate belong x(1), is :
exact2=c*(x+a)^(c-1)
  ]]></EXAMPLE>

  <SEE_ALSO>
    <SEE_ALSO_ITEM>
      <LINK>optim</LINK>
    </SEE_ALSO_ITEM>

    <SEE_ALSO_ITEM>
      <LINK>external</LINK>
    </SEE_ALSO_ITEM>
  </SEE_ALSO>
</MAN>