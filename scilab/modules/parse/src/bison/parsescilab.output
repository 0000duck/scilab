Terminals unused in grammar

   "line break"
   "spaces"
   "block comment"


État 95conflits: 13 réduction/réduction
État 96conflits: 13 réduction/réduction
État 97conflits: 14 réduction/réduction
État 98conflits: 14 réduction/réduction
État 99conflits: 14 réduction/réduction
État 100conflits: 14 réduction/réduction
État 101conflits: 14 réduction/réduction
État 102conflits: 14 réduction/réduction
État 104conflits: 2 décalage/réduction
État 105conflits: 1 décalage/réduction, 13 réduction/réduction
État 114conflits: 2 décalage/réduction
État 212conflits: 1 décalage/réduction
État 213conflits: 1 décalage/réduction
État 279conflits: 27 réduction/réduction
État 359conflits: 14 réduction/réduction


Grammaire

    0 $accept: program "end of file"

    1 program: expressions
    2        | "end of line" expressions

    3 expressions: recursiveExpression
    4            | recursiveExpression expression
    5            | recursiveExpression expression "line comment"
    6            | expression
    7            | expression "line comment"

    8 recursiveExpression: recursiveExpression expression expressionLineBreak
    9                    | recursiveExpression expression "line comment" expressionLineBreak
   10                    | expression "line comment" expressionLineBreak
   11                    | expression expressionLineBreak

   12 expressionLineBreak: ";"
   13                    | ","
   14                    | "end of line"
   15                    | expressionLineBreak ";"
   16                    | expressionLineBreak ","
   17                    | expressionLineBreak "end of line"

   18 expression: functionDeclaration
   19           | classDeclaration
   20           | functionCall
   21           | variableDeclaration
   22           | ifControl
   23           | selectControl
   24           | forControl
   25           | whileControl
   26           | tryControl
   27           | variable
   28           | implicitFunctionCall
   29           | "break"
   30           | returnControl
   31           | "line comment"
   32           | error

   33 implicitFunctionCall: implicitFunctionCall implicitCallable
   34                     | "identifier" implicitCallable

   35 implicitCallable: "identifier"
   36                 | "integer"
   37                 | "number"
   38                 | "float"
   39                 | "string"
   40                 | "$"
   41                 | "%t or %T"
   42                 | "%f or %F"
   43                 | implicitCallable "." "identifier"
   44                 | implicitCallable "." functionCall
   45                 | simpleFunctionCall
   46                 | implicitCallable rightOperand
   47                 | "path"

   48 functionCall: simpleFunctionCall
   49             | specificFunctionCall
   50             | recursiveFunctionCall
   51             | "(" functionCall ")"
   52             | "~ or @" functionCall

   53 specificFunctionCall: "%t or %T" "(" functionArgs ")"
   54                     | "%f or %F" "(" functionArgs ")"

   55 simpleFunctionCall: variable "(" functionArgs ")"

   56 recursiveFunctionCall: simpleFunctionCall "(" functionArgs ")"
   57                      | recursiveFunctionCall "(" functionArgs ")"

   58 functionArgs: variable
   59             | functionCall
   60             | ":"
   61             | variableDeclaration
   62             | /* vide */
   63             | functionArgs "," variable
   64             | functionArgs "," functionCall
   65             | functionArgs "," ":"
   66             | functionArgs "," variableDeclaration
   67             | functionArgs ","

   68 functionDeclaration: "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"

   72 functionDeclarationReturns: idList

   73 functionDeclarationArguments: "(" idList ")"
   74                             | "(" ")"
   75                             | /* vide */

   76 idList: idList "," "identifier"
   77       | "identifier"

   78 functionDeclarationBreak: lineEnd
   79                         | ";"
   80                         | ";" "end of line"
   81                         | ","
   82                         | "," "end of line"

   83 functionBody: expressions
   84             | /* vide */

   85 classDeclaration: "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"

   87 slotsDeclaration: slotsDeclaration slotDeclaration functionDeclarationBreak
   88                 | slotsDeclaration functionDeclarationBreak
   89                 | /* vide */

   90 slotDeclaration: methodDeclaration
   91                | propertyDeclaration

   92 methodDeclaration: "function" slotAttributes "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   93                  | "function" slotAttributes "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   94                  | "function" slotAttributes "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   95                  | "function" slotAttributes "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"

   96 propertyDeclaration: "property" slotAttributes "identifier" "=" variable
   97                    | "property" slotAttributes "identifier"

   98 slotAttributes: "(" idList ")"
   99               | "(" ")"
  100               | /* vide */

  101 condition: functionCall
  102          | variable

  103 comparison: variable comparators comparable
  104           | functionCall comparators comparable

  105 comparable: variable
  106           | functionCall
  107           | ":"

  108 operation: variable rightOperand
  109          | functionCall rightOperand
  110          | "-" variable
  111          | "-" functionCall
  112          | "+" variable
  113          | "+" functionCall
  114          | variable "** or ^" variable
  115          | variable "** or ^" functionCall
  116          | functionCall "** or ^" variable
  117          | functionCall "** or ^" functionCall
  118          | variable ".^" variable
  119          | variable ".^" functionCall
  120          | functionCall ".^" variable
  121          | functionCall ".^" functionCall
  122          | variable "'"
  123          | variable ".'"
  124          | functionCall "'"
  125          | functionCall ".'"

  126 rightOperand: "+" variable
  127             | "+" functionCall
  128             | "-" variable
  129             | "-" functionCall
  130             | "*" variable
  131             | "*" functionCall
  132             | ".*" variable
  133             | ".*" functionCall
  134             | ".*." variable
  135             | ".*." functionCall
  136             | "/" variable
  137             | "/" functionCall
  138             | "./" variable
  139             | "./" functionCall
  140             | "./." variable
  141             | "./." functionCall
  142             | "/." variable
  143             | "/." functionCall
  144             | "\\" variable
  145             | "\\" functionCall
  146             | ".\\" variable
  147             | ".\\" functionCall
  148             | ".\\." variable
  149             | ".\\." functionCall

  150 listableBegin: ":" variable
  151              | ":" functionCall

  152 listableEnd: listableBegin ":" variable
  153            | listableBegin ":" functionCall
  154            | listableBegin

  155 variable: "~ or @" variable
  156         | variable "." "identifier"
  157         | functionCall "." variable
  158         | variable listableEnd
  159         | functionCall listableEnd
  160         | matrix
  161         | cell
  162         | operation
  163         | "identifier"
  164         | "integer"
  165         | "number"
  166         | "float"
  167         | "string"
  168         | "$"
  169         | "%t or %T"
  170         | "%f or %F"
  171         | "(" variable ")"
  172         | "(" variableFields ")"
  173         | comparison

  174 variableFields: variableFields "," variable
  175               | variableFields "," functionCall
  176               | variable "," variable
  177               | functionCall "," functionCall
  178               | functionCall "," variable
  179               | variable "," functionCall

  180 cell: "{" matrixOrCellLines "}"
  181     | "{" lineEnd matrixOrCellLines "}"
  182     | "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | "{" matrixOrCellColumns "}"
  185     | "{" lineEnd matrixOrCellColumns "}"
  186     | "{" "}"

  187 matrix: "[" matrixOrCellLines "]"
  188       | "[" lineEnd matrixOrCellLines "]"
  189       | "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | "[" matrixOrCellColumns "]"
  192       | "[" lineEnd matrixOrCellColumns "]"
  193       | "[" "]"

  194 matrixOrCellLines: matrixOrCellLines matrixOrCellLine
  195                  | matrixOrCellLine

  196 matrixOrCellLineBreak: ";"
  197                      | "end of line"
  198                      | ";" "end of line"

  199 matrixOrCellLine: matrixOrCellColumns matrixOrCellLineBreak
  200                 | matrixOrCellColumns "line comment" "end of line"
  201                 | matrixOrCellColumns ";" "line comment" "end of line"
  202                 | matrixOrCellColumns matrixOrCellColumnsBreak matrixOrCellLineBreak
  203                 | matrixOrCellColumns matrixOrCellColumnsBreak "line comment" "end of line"
  204                 | matrixOrCellColumns matrixOrCellColumnsBreak ";" "line comment" "end of line"

  205 matrixOrCellColumns: matrixOrCellColumns matrixOrCellColumnsBreak variable
  206                    | matrixOrCellColumns matrixOrCellColumnsBreak functionCall
  207                    | matrixOrCellColumns variable
  208                    | matrixOrCellColumns functionCall
  209                    | variable
  210                    | functionCall

  211 matrixOrCellColumnsBreak: matrixOrCellColumnsBreak ","
  212                         | ","

  213 variableDeclaration: assignable "=" variable
  214                    | assignable "=" functionCall
  215                    | functionCall "=" variable
  216                    | functionCall "=" functionCall
  217                    | assignable "=" ":"
  218                    | functionCall "=" ":"
  219                    | assignable "=" returnControl
  220                    | functionCall "=" returnControl

  221 assignable: variable "." "identifier"
  222           | variable "." functionCall
  223           | functionCall "." variable
  224           | functionCall "." functionCall
  225           | "identifier"
  226           | multipleResults

  227 multipleResults: "[" matrixOrCellColumns "]"

  228 ifControl: "if" condition then thenBody "end"
  229          | "if" condition then thenBody else elseBody "end"
  230          | "if" condition then thenBody elseIfControl "end"

  231 thenBody: expressions
  232         | /* vide */

  233 elseBody: expressions
  234         | /* vide */

  235 ifConditionBreak: ";"
  236                 | ";" "end of line"
  237                 | ","
  238                 | "," "end of line"
  239                 | "end of line"

  240 then: "then"
  241     | ifConditionBreak "then"
  242     | ifConditionBreak "then" "end of line"
  243     | "then" ifConditionBreak
  244     | ifConditionBreak
  245     | /* vide */

  246 else: "else"
  247     | "else" ","
  248     | "else" ";"
  249     | "else" "end of line"
  250     | "else" "," "end of line"
  251     | "else" ";" "end of line"

  252 elseIfControl: "elseif" condition then thenBody
  253              | "elseif" condition then thenBody else elseBody
  254              | "elseif" condition then thenBody elseIfControl

  255 selectControl: "select" selectable selectConditionBreak casesControl "end"
  256              | "select" selectable selectConditionBreak casesControl else elseBody "end"
  257              | "select" selectable "line comment" selectConditionBreak casesControl "end"
  258              | "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"

  259 selectable: variable
  260           | functionCall

  261 selectConditionBreak: "end of line"
  262                     | "," "end of line"
  263                     | ";" "end of line"

  264 casesControl: "case" variable caseControlBreak caseBody
  265             | comments "case" variable caseControlBreak caseBody
  266             | "case" variable "line comment" "end of line" caseBody
  267             | comments "case" variable "line comment" "end of line" caseBody
  268             | casesControl "case" variable caseControlBreak caseBody
  269             | casesControl "case" variable "line comment" "end of line" caseBody

  270 caseBody: expressions
  271         | /* vide */

  272 caseControlBreak: "then"
  273                 | ","
  274                 | ";"
  275                 | "end of line"
  276                 | "then" "end of line"
  277                 | "," "end of line"
  278                 | ";" "end of line"
  279                 | "then" ","
  280                 | "then" "," "end of line"

  281 forControl: "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  282           | "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"

  283 forIterator: functionCall
  284            | variable

  285 forConditionBreak: "end of line"
  286                  | ";"
  287                  | ";" "end of line"
  288                  | ","
  289                  | "," "end of line"
  290                  | "do"
  291                  | "do" "end of line"
  292                  | /* vide */

  293 forBody: expressions
  294        | /* vide */

  295 whileControl: "while" condition whileConditionBreak whileBody "end"

  296 whileBody: expressions
  297          | /* vide */

  298 whileConditionBreak: ","
  299                    | ";"
  300                    | "do"
  301                    | "do" ","
  302                    | "do" ";"
  303                    | "then"
  304                    | "then" ","
  305                    | "then" ";"
  306                    | lineEnd
  307                    | "," "end of line"
  308                    | ";" "end of line"
  309                    | "do" "end of line"
  310                    | "do" "," "end of line"
  311                    | "do" ";" "end of line"
  312                    | "then" "end of line"
  313                    | "then" "," "end of line"
  314                    | "then" ";" "end of line"

  315 tryControl: "try" "end of line" expressions "catch" "end of line" expressions "end"
  316           | "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  317           | "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  318           | "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"

  319 returnControl: "return"
  320              | "return" variable

  321 comparators: "=="
  322            | "<> or ~="
  323            | "<"
  324            | "<="
  325            | ">"
  326            | ">="
  327            | "&"
  328            | "|"

  329 comments: "line comment" "end of line"
  330         | comments "line comment" "end of line"

  331 lineEnd: "end of line"
  332        | "line comment" "end of line"


Terminaux, suivis des règles où ils apparaissent

"end of file" (0) 0
error (256) 32
"line break" (258)
"end of line" (259) 2 14 17 80 82 197 198 200 201 203 204 236 238 239
    242 249 250 251 261 262 263 266 267 269 275 276 277 278 280 285
    287 289 291 307 308 309 310 311 312 313 314 315 316 317 318 329
    330 331 332
"spaces" (260)
"%t or %T" (261) 41 53 169
"%f or %F" (262) 42 54 170
"'" (263) 122 124
"~ or @" (264) 52 155
"$" (265) 40 168
"," (266) 13 16 63 64 65 66 67 76 81 82 174 175 176 177 178 179 211
    212 237 238 247 250 262 273 277 279 280 288 289 298 301 304 307
    310 313
":" (267) 60 65 107 150 151 152 153 217 218
";" (268) 12 15 79 80 196 198 201 204 235 236 248 251 263 274 278 286
    287 299 302 305 308 311 314
"(" (269) 51 53 54 55 56 57 73 74 98 99 171 172 282
")" (270) 51 53 54 55 56 57 73 74 98 99 171 172 282
"[" (271) 69 70 93 94 187 188 189 190 191 192 193 227
"]" (272) 69 70 93 94 187 188 189 190 191 192 193 227
"{" (273) 180 181 182 183 184 185 186
"}" (274) 180 181 182 183 184 185 186
"." (275) 43 44 156 157 221 222 223 224
".'" (276) 123 125
"+" (277) 112 113 126 127
"-" (278) 110 111 128 129
"*" (279) 130 131
".*" (280) 132 133
".*." (281) 134 135
"/" (282) 136 137
"./" (283) 138 139
"/." (284) 142 143
"./." (285) 140 141
"\\" (286) 144 145
".\\" (287) 146 147
".\\." (288) 148 149
"** or ^" (289) 114 115 116 117
".^" (290) 118 119 120 121
"==" (291) 321
"<> or ~=" (292) 322
"<" (293) 85 323
"<=" (294) 324
">" (295) 325
">=" (296) 326
"&" (297) 327
"|" (298) 328
"=" (299) 68 69 70 92 93 94 96 213 214 215 216 217 218 219 220 281
    282
"if" (300) 228 229 230
"then" (301) 240 241 242 243 272 276 279 280 303 304 305 312 313 314
"else" (302) 246 247 248 249 250 251
"elseif" (303) 252 253 254
"end" (304) 228 229 230 255 256 257 258 281 282 295 315 316 317 318
"select" (305) 255 256 257 258
"case" (306) 264 265 266 267 268 269
"function" (307) 68 69 70 71 92 93 94 95
"endfunction" (308) 68 69 70 71 92 93 94 95
"class" (309) 85 86
"endclass" (310) 85 86
"property" (311) 96 97
"for" (312) 281 282
"while" (313) 295
"do" (314) 290 291 300 301 302 309 310 311
"break" (315) 29
"try" (316) 315 316 317 318
"catch" (317) 315 316 317 318
"return" (318) 319 320
"string" (319) 39 167
"identifier" (320) 34 35 43 68 69 70 71 76 77 85 86 92 93 94 95 96
    97 156 163 221 225 281 282
"integer" (321) 36 164
"float" (322) 38 166
"number" (323) 37 165
"path" (324) 47
"line comment" (325) 5 7 9 10 31 200 201 203 204 257 258 266 267 269
    316 317 318 329 330 332
"block comment" (326)
TOPLEVEL (327)
HIGHLEVEL (328)
UPLEVEL (329)
LISTABLE (330)
FUNCTIONCALL (331)


Non-terminaux, suivis des règles où ils apparaissent

$accept (77)
    à gauche: 0
program (78)
    à gauche: 1 2, à droite: 0
expressions (79)
    à gauche: 3 4 5 6 7, à droite: 1 2 83 231 233 270 293 296 315
    316 317 318
recursiveExpression (80)
    à gauche: 8 9 10 11, à droite: 3 4 5 8 9
expressionLineBreak (81)
    à gauche: 12 13 14 15 16 17, à droite: 8 9 10 11 15 16 17
expression (82)
    à gauche: 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32, à droite:
    4 5 6 7 8 9 10 11
implicitFunctionCall (83)
    à gauche: 33 34, à droite: 28 33
implicitCallable (84)
    à gauche: 35 36 37 38 39 40 41 42 43 44 45 46 47, à droite: 33
    34 43 44 46
functionCall (85)
    à gauche: 48 49 50 51 52, à droite: 20 44 51 52 59 64 101 104
    106 109 111 113 115 116 117 119 120 121 124 125 127 129 131 133
    135 137 139 141 143 145 147 149 151 153 157 159 175 177 178 179
    206 208 210 214 215 216 218 220 222 223 224 260 283
specificFunctionCall (86)
    à gauche: 53 54, à droite: 49
simpleFunctionCall (87)
    à gauche: 55, à droite: 45 48 56
recursiveFunctionCall (88)
    à gauche: 56 57, à droite: 50 57
functionArgs (89)
    à gauche: 58 59 60 61 62 63 64 65 66 67, à droite: 53 54 55 56
    57 63 64 65 66 67
functionDeclaration (90)
    à gauche: 68 69 70 71, à droite: 18
functionDeclarationReturns (91)
    à gauche: 72, à droite: 69 93
functionDeclarationArguments (92)
    à gauche: 73 74 75, à droite: 68 69 70 71 92 93 94 95
idList (93)
    à gauche: 76 77, à droite: 72 73 76 98
functionDeclarationBreak (94)
    à gauche: 78 79 80 81 82, à droite: 68 69 70 71 85 86 87 88 92
    93 94 95
functionBody (95)
    à gauche: 83 84, à droite: 68 69 70 71 92 93 94 95
classDeclaration (96)
    à gauche: 85 86, à droite: 19
slotsDeclaration (97)
    à gauche: 87 88 89, à droite: 85 86 87 88
slotDeclaration (98)
    à gauche: 90 91, à droite: 87
methodDeclaration (99)
    à gauche: 92 93 94 95, à droite: 90
propertyDeclaration (100)
    à gauche: 96 97, à droite: 91
slotAttributes (101)
    à gauche: 98 99 100, à droite: 92 93 94 95 96 97
condition (102)
    à gauche: 101 102, à droite: 228 229 230 252 253 254 295
comparison (103)
    à gauche: 103 104, à droite: 173
comparable (104)
    à gauche: 105 106 107, à droite: 103 104
operation (105)
    à gauche: 108 109 110 111 112 113 114 115 116 117 118 119 120
    121 122 123 124 125, à droite: 162
rightOperand (106)
    à gauche: 126 127 128 129 130 131 132 133 134 135 136 137 138
    139 140 141 142 143 144 145 146 147 148 149, à droite: 46 108
    109
listableBegin (107)
    à gauche: 150 151, à droite: 152 153 154
listableEnd (108)
    à gauche: 152 153 154, à droite: 158 159
variable (109)
    à gauche: 155 156 157 158 159 160 161 162 163 164 165 166 167
    168 169 170 171 172 173, à droite: 27 55 58 63 96 102 103 105
    108 110 112 114 115 116 118 119 120 122 123 126 128 130 132 134
    136 138 140 142 144 146 148 150 152 155 156 157 158 171 174 176
    178 179 205 207 209 213 215 221 222 223 259 264 265 266 267 268
    269 284 320
variableFields (110)
    à gauche: 174 175 176 177 178 179, à droite: 172 174 175
cell (111)
    à gauche: 180 181 182 183 184 185 186, à droite: 161
matrix (112)
    à gauche: 187 188 189 190 191 192 193, à droite: 160
matrixOrCellLines (113)
    à gauche: 194 195, à droite: 180 181 182 183 187 188 189 190
    194
matrixOrCellLineBreak (114)
    à gauche: 196 197 198, à droite: 199 202
matrixOrCellLine (115)
    à gauche: 199 200 201 202 203 204, à droite: 194 195
matrixOrCellColumns (116)
    à gauche: 205 206 207 208 209 210, à droite: 182 183 184 185
    189 190 191 192 199 200 201 202 203 204 205 206 207 208 227
matrixOrCellColumnsBreak (117)
    à gauche: 211 212, à droite: 202 203 204 205 206 211
variableDeclaration (118)
    à gauche: 213 214 215 216 217 218 219 220, à droite: 21 61 66
assignable (119)
    à gauche: 221 222 223 224 225 226, à droite: 213 214 217 219
multipleResults (120)
    à gauche: 227, à droite: 226
ifControl (121)
    à gauche: 228 229 230, à droite: 22
thenBody (122)
    à gauche: 231 232, à droite: 228 229 230 252 253 254
elseBody (123)
    à gauche: 233 234, à droite: 229 253 256 258
ifConditionBreak (124)
    à gauche: 235 236 237 238 239, à droite: 241 242 243 244
then (125)
    à gauche: 240 241 242 243 244 245, à droite: 228 229 230 252
    253 254
else (126)
    à gauche: 246 247 248 249 250 251, à droite: 229 253 256 258
elseIfControl (127)
    à gauche: 252 253 254, à droite: 230 254
selectControl (128)
    à gauche: 255 256 257 258, à droite: 23
selectable (129)
    à gauche: 259 260, à droite: 255 256 257 258
selectConditionBreak (130)
    à gauche: 261 262 263, à droite: 255 256 257 258
casesControl (131)
    à gauche: 264 265 266 267 268 269, à droite: 255 256 257 258
    268 269
caseBody (132)
    à gauche: 270 271, à droite: 264 265 266 267 268 269
caseControlBreak (133)
    à gauche: 272 273 274 275 276 277 278 279 280, à droite: 264
    265 268
forControl (134)
    à gauche: 281 282, à droite: 24
forIterator (135)
    à gauche: 283 284, à droite: 281 282
forConditionBreak (136)
    à gauche: 285 286 287 288 289 290 291 292, à droite: 281 282
forBody (137)
    à gauche: 293 294, à droite: 281 282
whileControl (138)
    à gauche: 295, à droite: 25
whileBody (139)
    à gauche: 296 297, à droite: 295
whileConditionBreak (140)
    à gauche: 298 299 300 301 302 303 304 305 306 307 308 309 310
    311 312 313 314, à droite: 295
tryControl (141)
    à gauche: 315 316 317 318, à droite: 26
returnControl (142)
    à gauche: 319 320, à droite: 30 219 220
comparators (143)
    à gauche: 321 322 323 324 325 326 327 328, à droite: 103 104
comments (144)
    à gauche: 329 330, à droite: 265 267 330
lineEnd (145)
    à gauche: 331 332, à droite: 78 181 183 185 188 190 192 306


état 0

    0 $accept: . program "end of file"
    1 program: . expressions
    2        | . "end of line" expressions
    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"
  213 variableDeclaration: . assignable "=" variable
  214                    | . assignable "=" functionCall
  215                    | . functionCall "=" variable
  216                    | . functionCall "=" functionCall
  217                    | . assignable "=" ":"
  218                    | . functionCall "=" ":"
  219                    | . assignable "=" returnControl
  220                    | . functionCall "=" returnControl
  221 assignable: . variable "." "identifier"
  222           | . variable "." functionCall
  223           | . functionCall "." variable
  224           | . functionCall "." functionCall
  225           | . "identifier"
  226           | . multipleResults
  227 multipleResults: . "[" matrixOrCellColumns "]"
  228 ifControl: . "if" condition then thenBody "end"
  229          | . "if" condition then thenBody else elseBody "end"
  230          | . "if" condition then thenBody elseIfControl "end"
  255 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  256              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  257              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  258              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  281 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  282           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  295 whileControl: . "while" condition whileConditionBreak whileBody "end"
  315 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  316           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  317           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  318           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  319 returnControl: . "return"
  320              | . "return" variable

    error           décalage et aller à l'état 1
    "end of line"   décalage et aller à l'état 2
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    program                aller à l'état 27
    expressions            aller à l'état 28
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 1

   32 expression: error .

    $défaut  réduction par utilisation de la règle 32 (expression)


état 2

    2 program: "end of line" . expressions
    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"
  213 variableDeclaration: . assignable "=" variable
  214                    | . assignable "=" functionCall
  215                    | . functionCall "=" variable
  216                    | . functionCall "=" functionCall
  217                    | . assignable "=" ":"
  218                    | . functionCall "=" ":"
  219                    | . assignable "=" returnControl
  220                    | . functionCall "=" returnControl
  221 assignable: . variable "." "identifier"
  222           | . variable "." functionCall
  223           | . functionCall "." variable
  224           | . functionCall "." functionCall
  225           | . "identifier"
  226           | . multipleResults
  227 multipleResults: . "[" matrixOrCellColumns "]"
  228 ifControl: . "if" condition then thenBody "end"
  229          | . "if" condition then thenBody else elseBody "end"
  230          | . "if" condition then thenBody elseIfControl "end"
  255 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  256              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  257              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  258              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  281 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  282           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  295 whileControl: . "while" condition whileConditionBreak whileBody "end"
  315 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  316           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  317           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  318           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  319 returnControl: . "return"
  320              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    expressions            aller à l'état 52
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 3

   53 specificFunctionCall: "%t or %T" . "(" functionArgs ")"
  169 variable: "%t or %T" .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "'", "~ or @", "$", ",", ":", ";", ")", "[", "]", "{", "}", ".", ".'", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]

    "("  décalage et aller à l'état 53

    $défaut  réduction par utilisation de la règle 169 (variable)

Conflit entre la règle 169 et le jeton "(" résolu par décalage (BOOLTRUE < "(").


état 4

   54 specificFunctionCall: "%f or %F" . "(" functionArgs ")"
  170 variable: "%f or %F" .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "'", "~ or @", "$", ",", ":", ";", ")", "[", "]", "{", "}", ".", ".'", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]

    "("  décalage et aller à l'état 54

    $défaut  réduction par utilisation de la règle 170 (variable)

Conflit entre la règle 170 et le jeton "(" résolu par décalage (BOOLFALSE < "(").


état 5

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   52             | "~ or @" . functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  155         | "~ or @" . variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 57
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 58
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 6

  168 variable: "$" .

    $défaut  réduction par utilisation de la règle 168 (variable)


état 7

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   51             | "(" . functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  171         | "(" . variable ")"
  172         | . "(" variableFields ")"
  172         | "(" . variableFields ")"
  173         | . comparison
  174 variableFields: . variableFields "," variable
  175               | . variableFields "," functionCall
  176               | . variable "," variable
  177               | . functionCall "," functionCall
  178               | . functionCall "," variable
  179               | . variable "," functionCall
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 59
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 60
    variableFields         aller à l'état 61
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 8

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  187       | "[" . matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  188       | "[" . lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  189       | "[" . matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  190       | "[" . lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  191       | "[" . matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  192       | "[" . lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"
  193       | "[" . "]"
  194 matrixOrCellLines: . matrixOrCellLines matrixOrCellLine
  195                  | . matrixOrCellLine
  199 matrixOrCellLine: . matrixOrCellColumns matrixOrCellLineBreak
  200                 | . matrixOrCellColumns "line comment" "end of line"
  201                 | . matrixOrCellColumns ";" "line comment" "end of line"
  202                 | . matrixOrCellColumns matrixOrCellColumnsBreak matrixOrCellLineBreak
  203                 | . matrixOrCellColumns matrixOrCellColumnsBreak "line comment" "end of line"
  204                 | . matrixOrCellColumns matrixOrCellColumnsBreak ";" "line comment" "end of line"
  205 matrixOrCellColumns: . matrixOrCellColumns matrixOrCellColumnsBreak variable
  206                    | . matrixOrCellColumns matrixOrCellColumnsBreak functionCall
  207                    | . matrixOrCellColumns variable
  208                    | . matrixOrCellColumns functionCall
  209                    | . variable
  210                    | . functionCall
  227 multipleResults: "[" . matrixOrCellColumns "]"
  331 lineEnd: . "end of line"
  332        | . "line comment" "end of line"

    "end of line"   décalage et aller à l'état 62
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 55
    "]"             décalage et aller à l'état 63
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 56
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 64

    functionCall           aller à l'état 65
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 66
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    matrixOrCellLines      aller à l'état 67
    matrixOrCellLine       aller à l'état 68
    matrixOrCellColumns    aller à l'état 69
    lineEnd                aller à l'état 70


état 9

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  180     | "{" . matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  181     | "{" . lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  182     | "{" . matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  183     | "{" . lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  184     | "{" . matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  185     | "{" . lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  186     | "{" . "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"
  194 matrixOrCellLines: . matrixOrCellLines matrixOrCellLine
  195                  | . matrixOrCellLine
  199 matrixOrCellLine: . matrixOrCellColumns matrixOrCellLineBreak
  200                 | . matrixOrCellColumns "line comment" "end of line"
  201                 | . matrixOrCellColumns ";" "line comment" "end of line"
  202                 | . matrixOrCellColumns matrixOrCellColumnsBreak matrixOrCellLineBreak
  203                 | . matrixOrCellColumns matrixOrCellColumnsBreak "line comment" "end of line"
  204                 | . matrixOrCellColumns matrixOrCellColumnsBreak ";" "line comment" "end of line"
  205 matrixOrCellColumns: . matrixOrCellColumns matrixOrCellColumnsBreak variable
  206                    | . matrixOrCellColumns matrixOrCellColumnsBreak functionCall
  207                    | . matrixOrCellColumns variable
  208                    | . matrixOrCellColumns functionCall
  209                    | . variable
  210                    | . functionCall
  331 lineEnd: . "end of line"
  332        | . "line comment" "end of line"

    "end of line"   décalage et aller à l'état 62
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 55
    "{"             décalage et aller à l'état 9
    "}"             décalage et aller à l'état 71
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 56
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 64

    functionCall           aller à l'état 65
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 66
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    matrixOrCellLines      aller à l'état 72
    matrixOrCellLine       aller à l'état 68
    matrixOrCellColumns    aller à l'état 73
    lineEnd                aller à l'état 74


état 10

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  112          | "+" . variable
  113          | . "+" functionCall
  113          | "+" . functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 75
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 76
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 11

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  110          | "-" . variable
  111          | . "-" functionCall
  111          | "-" . functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 77
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 78
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 12

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  101 condition: . functionCall
  102          | . variable
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"
  228 ifControl: "if" . condition then thenBody "end"
  229          | "if" . condition then thenBody else elseBody "end"
  230          | "if" . condition then thenBody elseIfControl "end"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 79
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    condition              aller à l'état 80
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 81
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 13

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"
  255 selectControl: "select" . selectable selectConditionBreak casesControl "end"
  256              | "select" . selectable selectConditionBreak casesControl else elseBody "end"
  257              | "select" . selectable "line comment" selectConditionBreak casesControl "end"
  258              | "select" . selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  259 selectable: . variable
  260           | . functionCall

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 82
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 83
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    selectable             aller à l'état 84


état 14

   68 functionDeclaration: "function" . "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | "function" . "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | "function" . "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | "function" . "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"

    "["           décalage et aller à l'état 85
    "identifier"  décalage et aller à l'état 86


état 15

   85 classDeclaration: "class" . "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | "class" . "identifier" functionDeclarationBreak slotsDeclaration "endclass"

    "identifier"  décalage et aller à l'état 87


état 16

  281 forControl: "for" . "identifier" "=" forIterator forConditionBreak forBody "end"
  282           | "for" . "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"

    "("           décalage et aller à l'état 88
    "identifier"  décalage et aller à l'état 89


état 17

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  101 condition: . functionCall
  102          | . variable
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"
  295 whileControl: "while" . condition whileConditionBreak whileBody "end"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 79
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    condition              aller à l'état 90
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 81
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 18

   29 expression: "break" .

    $défaut  réduction par utilisation de la règle 29 (expression)


état 19

  315 tryControl: "try" . "end of line" expressions "catch" "end of line" expressions "end"
  316           | "try" . "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  317           | "try" . "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  318           | "try" . "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"

    "end of line"   décalage et aller à l'état 91
    "line comment"  décalage et aller à l'état 92


état 20

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"
  319 returnControl: "return" .  ["end of file", "end of line", ",", ";", ")", "else", "elseif", "end", "case", "endfunction", "catch", "line comment"]
  320              | "return" . variable

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    $défaut  réduction par utilisation de la règle 319 (returnControl)

    functionCall           aller à l'état 93
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 94
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 21

  167 variable: "string" .

    $défaut  réduction par utilisation de la règle 167 (variable)


état 22

   34 implicitFunctionCall: "identifier" . implicitCallable
   35 implicitCallable: . "identifier"
   36                 | . "integer"
   37                 | . "number"
   38                 | . "float"
   39                 | . "string"
   40                 | . "$"
   41                 | . "%t or %T"
   42                 | . "%f or %F"
   43                 | . implicitCallable "." "identifier"
   44                 | . implicitCallable "." functionCall
   45                 | . simpleFunctionCall
   46                 | . implicitCallable rightOperand
   47                 | . "path"
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  163         | "identifier" .  ["end of file", "end of line", "'", ",", ":", ";", "(", ".", ".'", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "else", "elseif", "end", "case", "endfunction", "catch", "line comment"]
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"
  225 assignable: "identifier" .  ["="]

    "%t or %T"    décalage et aller à l'état 95
    "%f or %F"    décalage et aller à l'état 96
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 97
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "string"      décalage et aller à l'état 98
    "identifier"  décalage et aller à l'état 99
    "integer"     décalage et aller à l'état 100
    "float"       décalage et aller à l'état 101
    "number"      décalage et aller à l'état 102
    "path"        décalage et aller à l'état 103

    "="       réduction par utilisation de la règle 225 (assignable)
    $défaut  réduction par utilisation de la règle 163 (variable)

    implicitCallable       aller à l'état 104
    functionCall           aller à l'état 93
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 105
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 106
    cell                   aller à l'état 41
    matrix                 aller à l'état 42

Conflit entre la règle 163 et le jeton "(" résolu par réduction ("(" < DOT).
Conflit entre la règle 163 et le jeton "+" résolu par réduction ("+" < DOT).
Conflit entre la règle 163 et le jeton "-" résolu par réduction ("-" < DOT).


état 23

  164 variable: "integer" .

    $défaut  réduction par utilisation de la règle 164 (variable)


état 24

  166 variable: "float" .

    $défaut  réduction par utilisation de la règle 166 (variable)


état 25

  165 variable: "number" .

    $défaut  réduction par utilisation de la règle 165 (variable)


état 26

   31 expression: "line comment" .

    $défaut  réduction par utilisation de la règle 31 (expression)


état 27

    0 $accept: program . "end of file"

    "end of file"  décalage et aller à l'état 107


état 28

    1 program: expressions .

    $défaut  réduction par utilisation de la règle 1 (program)


état 29

    3 expressions: recursiveExpression .  ["end of file", "else", "elseif", "end", "case", "endfunction", "catch"]
    4            | recursiveExpression . expression
    5            | recursiveExpression . expression "line comment"
    8 recursiveExpression: recursiveExpression . expression expressionLineBreak
    9                    | recursiveExpression . expression "line comment" expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"
  213 variableDeclaration: . assignable "=" variable
  214                    | . assignable "=" functionCall
  215                    | . functionCall "=" variable
  216                    | . functionCall "=" functionCall
  217                    | . assignable "=" ":"
  218                    | . functionCall "=" ":"
  219                    | . assignable "=" returnControl
  220                    | . functionCall "=" returnControl
  221 assignable: . variable "." "identifier"
  222           | . variable "." functionCall
  223           | . functionCall "." variable
  224           | . functionCall "." functionCall
  225           | . "identifier"
  226           | . multipleResults
  227 multipleResults: . "[" matrixOrCellColumns "]"
  228 ifControl: . "if" condition then thenBody "end"
  229          | . "if" condition then thenBody else elseBody "end"
  230          | . "if" condition then thenBody elseIfControl "end"
  255 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  256              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  257              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  258              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  281 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  282           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  295 whileControl: . "while" condition whileConditionBreak whileBody "end"
  315 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  316           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  317           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  318           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  319 returnControl: . "return"
  320              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "end of file"  réduction par utilisation de la règle 3 (expressions)
    "else"         réduction par utilisation de la règle 3 (expressions)
    "elseif"       réduction par utilisation de la règle 3 (expressions)
    "end"          réduction par utilisation de la règle 3 (expressions)
    "case"         réduction par utilisation de la règle 3 (expressions)
    "endfunction"  réduction par utilisation de la règle 3 (expressions)
    "catch"        réduction par utilisation de la règle 3 (expressions)

    expression             aller à l'état 108
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 30

    6 expressions: expression .  ["end of file", "else", "elseif", "end", "case", "endfunction", "catch"]
    7            | expression . "line comment"
   10 recursiveExpression: expression . "line comment" expressionLineBreak
   11                    | expression . expressionLineBreak
   12 expressionLineBreak: . ";"
   13                    | . ","
   14                    | . "end of line"
   15                    | . expressionLineBreak ";"
   16                    | . expressionLineBreak ","
   17                    | . expressionLineBreak "end of line"

    "end of line"   décalage et aller à l'état 109
    ","             décalage et aller à l'état 110
    ";"             décalage et aller à l'état 111
    "line comment"  décalage et aller à l'état 112

    $défaut  réduction par utilisation de la règle 6 (expressions)

    expressionLineBreak  aller à l'état 113


état 31

   28 expression: implicitFunctionCall .  ["end of file", "end of line", ",", ";", "else", "elseif", "end", "case", "endfunction", "catch", "line comment"]
   33 implicitFunctionCall: implicitFunctionCall . implicitCallable
   35 implicitCallable: . "identifier"
   36                 | . "integer"
   37                 | . "number"
   38                 | . "float"
   39                 | . "string"
   40                 | . "$"
   41                 | . "%t or %T"
   42                 | . "%f or %F"
   43                 | . implicitCallable "." "identifier"
   44                 | . implicitCallable "." functionCall
   45                 | . simpleFunctionCall
   46                 | . implicitCallable rightOperand
   47                 | . "path"
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 95
    "%f or %F"    décalage et aller à l'état 96
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 97
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 98
    "identifier"  décalage et aller à l'état 99
    "integer"     décalage et aller à l'état 100
    "float"       décalage et aller à l'état 101
    "number"      décalage et aller à l'état 102
    "path"        décalage et aller à l'état 103

    $défaut  réduction par utilisation de la règle 28 (expression)

    implicitCallable       aller à l'état 114
    functionCall           aller à l'état 93
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 105
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 106
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 32

   20 expression: functionCall .  ["end of file", "end of line", ",", ";", "else", "elseif", "end", "case", "endfunction", "catch", "line comment"]
  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  157 variable: functionCall . "." variable
  159         | functionCall . listableEnd
  215 variableDeclaration: functionCall . "=" variable
  216                    | functionCall . "=" functionCall
  218                    | functionCall . "=" ":"
  220                    | functionCall . "=" returnControl
  223 assignable: functionCall . "." variable
  224           | functionCall . "." functionCall
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"         décalage et aller à l'état 115
    ":"         décalage et aller à l'état 116
    "."         décalage et aller à l'état 117
    ".'"        décalage et aller à l'état 118
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 131
    ".^"        décalage et aller à l'état 132
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140
    "="         décalage et aller à l'état 141

    $défaut  réduction par utilisation de la règle 20 (expression)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145


état 33

   49 functionCall: specificFunctionCall .

    $défaut  réduction par utilisation de la règle 49 (functionCall)


état 34

   48 functionCall: simpleFunctionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "'", "~ or @", "$", ",", ":", ";", ")", "[", "]", "{", "}", ".", ".'", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
   56 recursiveFunctionCall: simpleFunctionCall . "(" functionArgs ")"

    "("  décalage et aller à l'état 146

    $défaut  réduction par utilisation de la règle 48 (functionCall)

Conflit entre la règle 48 et le jeton "(" résolu par décalage (FUNCTIONCALL < "(").


état 35

   50 functionCall: recursiveFunctionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "'", "~ or @", "$", ",", ":", ";", ")", "[", "]", "{", "}", ".", ".'", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
   57 recursiveFunctionCall: recursiveFunctionCall . "(" functionArgs ")"

    "("  décalage et aller à l'état 147

    $défaut  réduction par utilisation de la règle 50 (functionCall)

Conflit entre la règle 50 et le jeton "(" résolu par décalage (FUNCTIONCALL < "(").


état 36

   18 expression: functionDeclaration .

    $défaut  réduction par utilisation de la règle 18 (expression)


état 37

   19 expression: classDeclaration .

    $défaut  réduction par utilisation de la règle 19 (expression)


état 38

  173 variable: comparison .

    $défaut  réduction par utilisation de la règle 173 (variable)


état 39

  162 variable: operation .

    $défaut  réduction par utilisation de la règle 162 (variable)


état 40

   27 expression: variable .  ["end of file", "end of line", ",", ";", "else", "elseif", "end", "case", "endfunction", "catch", "line comment"]
   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  158         | variable . listableEnd
  221 assignable: variable . "." "identifier"
  222           | variable . "." functionCall
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"         décalage et aller à l'état 148
    ":"         décalage et aller à l'état 116
    "("         décalage et aller à l'état 149
    "."         décalage et aller à l'état 150
    ".'"        décalage et aller à l'état 151
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 152
    ".^"        décalage et aller à l'état 153
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140

    $défaut  réduction par utilisation de la règle 27 (expression)

    rightOperand   aller à l'état 154
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 155
    comparators    aller à l'état 156


état 41

  161 variable: cell .

    $défaut  réduction par utilisation de la règle 161 (variable)


état 42

  160 variable: matrix .

    $défaut  réduction par utilisation de la règle 160 (variable)


état 43

   21 expression: variableDeclaration .

    $défaut  réduction par utilisation de la règle 21 (expression)


état 44

  213 variableDeclaration: assignable . "=" variable
  214                    | assignable . "=" functionCall
  217                    | assignable . "=" ":"
  219                    | assignable . "=" returnControl

    "="  décalage et aller à l'état 157


état 45

  226 assignable: multipleResults .

    $défaut  réduction par utilisation de la règle 226 (assignable)


état 46

   22 expression: ifControl .

    $défaut  réduction par utilisation de la règle 22 (expression)


état 47

   23 expression: selectControl .

    $défaut  réduction par utilisation de la règle 23 (expression)


état 48

   24 expression: forControl .

    $défaut  réduction par utilisation de la règle 24 (expression)


état 49

   25 expression: whileControl .

    $défaut  réduction par utilisation de la règle 25 (expression)


état 50

   26 expression: tryControl .

    $défaut  réduction par utilisation de la règle 26 (expression)


état 51

   30 expression: returnControl .

    $défaut  réduction par utilisation de la règle 30 (expression)


état 52

    2 program: "end of line" expressions .

    $défaut  réduction par utilisation de la règle 2 (program)


état 53

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   53                     | "%t or %T" "(" . functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   58 functionArgs: . variable
   59             | . functionCall
   60             | . ":"
   61             | . variableDeclaration
   62             | .  [",", ")"]
   63             | . functionArgs "," variable
   64             | . functionArgs "," functionCall
   65             | . functionArgs "," ":"
   66             | . functionArgs "," variableDeclaration
   67             | . functionArgs ","
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"
  213 variableDeclaration: . assignable "=" variable
  214                    | . assignable "=" functionCall
  215                    | . functionCall "=" variable
  216                    | . functionCall "=" functionCall
  217                    | . assignable "=" ":"
  218                    | . functionCall "=" ":"
  219                    | . assignable "=" returnControl
  220                    | . functionCall "=" returnControl
  221 assignable: . variable "." "identifier"
  222           | . variable "." functionCall
  223           | . functionCall "." variable
  224           | . functionCall "." functionCall
  225           | . "identifier"
  226           | . multipleResults
  227 multipleResults: . "[" matrixOrCellColumns "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    ":"           décalage et aller à l'état 158
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 8
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 159
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    $défaut  réduction par utilisation de la règle 62 (functionArgs)

    functionCall           aller à l'état 160
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionArgs           aller à l'état 161
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 162
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 163
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45


état 54

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   54                     | "%f or %F" "(" . functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   58 functionArgs: . variable
   59             | . functionCall
   60             | . ":"
   61             | . variableDeclaration
   62             | .  [",", ")"]
   63             | . functionArgs "," variable
   64             | . functionArgs "," functionCall
   65             | . functionArgs "," ":"
   66             | . functionArgs "," variableDeclaration
   67             | . functionArgs ","
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"
  213 variableDeclaration: . assignable "=" variable
  214                    | . assignable "=" functionCall
  215                    | . functionCall "=" variable
  216                    | . functionCall "=" functionCall
  217                    | . assignable "=" ":"
  218                    | . functionCall "=" ":"
  219                    | . assignable "=" returnControl
  220                    | . functionCall "=" returnControl
  221 assignable: . variable "." "identifier"
  222           | . variable "." functionCall
  223           | . functionCall "." variable
  224           | . functionCall "." functionCall
  225           | . "identifier"
  226           | . multipleResults
  227 multipleResults: . "[" matrixOrCellColumns "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    ":"           décalage et aller à l'état 158
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 8
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 159
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    $défaut  réduction par utilisation de la règle 62 (functionArgs)

    functionCall           aller à l'état 160
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionArgs           aller à l'état 164
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 162
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 163
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45


état 55

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  187       | "[" . matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  188       | "[" . lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  189       | "[" . matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  190       | "[" . lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  191       | "[" . matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  192       | "[" . lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"
  193       | "[" . "]"
  194 matrixOrCellLines: . matrixOrCellLines matrixOrCellLine
  195                  | . matrixOrCellLine
  199 matrixOrCellLine: . matrixOrCellColumns matrixOrCellLineBreak
  200                 | . matrixOrCellColumns "line comment" "end of line"
  201                 | . matrixOrCellColumns ";" "line comment" "end of line"
  202                 | . matrixOrCellColumns matrixOrCellColumnsBreak matrixOrCellLineBreak
  203                 | . matrixOrCellColumns matrixOrCellColumnsBreak "line comment" "end of line"
  204                 | . matrixOrCellColumns matrixOrCellColumnsBreak ";" "line comment" "end of line"
  205 matrixOrCellColumns: . matrixOrCellColumns matrixOrCellColumnsBreak variable
  206                    | . matrixOrCellColumns matrixOrCellColumnsBreak functionCall
  207                    | . matrixOrCellColumns variable
  208                    | . matrixOrCellColumns functionCall
  209                    | . variable
  210                    | . functionCall
  331 lineEnd: . "end of line"
  332        | . "line comment" "end of line"

    "end of line"   décalage et aller à l'état 62
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 55
    "]"             décalage et aller à l'état 63
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 56
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 64

    functionCall           aller à l'état 65
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 66
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    matrixOrCellLines      aller à l'état 67
    matrixOrCellLine       aller à l'état 68
    matrixOrCellColumns    aller à l'état 165
    lineEnd                aller à l'état 70


état 56

  163 variable: "identifier" .

    $défaut  réduction par utilisation de la règle 163 (variable)


état 57

   52 functionCall: "~ or @" functionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "'", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", ".", ".'", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  157 variable: functionCall . "." variable
  159         | functionCall . listableEnd
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    $défaut  réduction par utilisation de la règle 52 (functionCall)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145

Conflit entre la règle 52 et le jeton "'" résolu par réduction ("'" < NOT).
Conflit entre la règle 52 et le jeton ":" résolu par réduction (":" < NOT).
Conflit entre la règle 52 et le jeton "." résolu par réduction ("." < NOT).
Conflit entre la règle 52 et le jeton ".'" résolu par réduction (".'" < NOT).
Conflit entre la règle 52 et le jeton "+" résolu par réduction ("+" < NOT).
Conflit entre la règle 52 et le jeton "-" résolu par réduction ("-" < NOT).
Conflit entre la règle 52 et le jeton "*" résolu par réduction ("*" < NOT).
Conflit entre la règle 52 et le jeton ".*" résolu par réduction (".*" < NOT).
Conflit entre la règle 52 et le jeton ".*." résolu par réduction (".*." < NOT).
Conflit entre la règle 52 et le jeton "/" résolu par réduction ("/" < NOT).
Conflit entre la règle 52 et le jeton "./" résolu par réduction ("./" < NOT).
Conflit entre la règle 52 et le jeton "/." résolu par réduction ("/." < NOT).
Conflit entre la règle 52 et le jeton "./." résolu par réduction ("./." < NOT).
Conflit entre la règle 52 et le jeton "\\" résolu par réduction ("\\" < NOT).
Conflit entre la règle 52 et le jeton ".\\" résolu par réduction (".\\" < NOT).
Conflit entre la règle 52 et le jeton ".\\." résolu par réduction (".\\." < NOT).
Conflit entre la règle 52 et le jeton "** or ^" résolu par réduction ("** or ^" < NOT).
Conflit entre la règle 52 et le jeton ".^" résolu par réduction (".^" < NOT).
Conflit entre la règle 52 et le jeton "==" résolu par réduction ("==" < NOT).
Conflit entre la règle 52 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < NOT).
Conflit entre la règle 52 et le jeton "<" résolu par réduction ("<" < NOT).
Conflit entre la règle 52 et le jeton "<=" résolu par réduction ("<=" < NOT).
Conflit entre la règle 52 et le jeton ">" résolu par réduction (">" < NOT).
Conflit entre la règle 52 et le jeton ">=" résolu par réduction (">=" < NOT).
Conflit entre la règle 52 et le jeton "&" résolu par réduction ("&" < NOT).
Conflit entre la règle 52 et le jeton "|" résolu par réduction ("|" < NOT).


état 58

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  155 variable: "~ or @" variable .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "'", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", ".", ".'", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  156         | variable . "." "identifier"
  158         | variable . listableEnd
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    $défaut  réduction par utilisation de la règle 155 (variable)

    rightOperand   aller à l'état 154
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 155
    comparators    aller à l'état 156

Conflit entre la règle 155 et le jeton "'" résolu par réduction ("'" < NOT).
Conflit entre la règle 155 et le jeton ":" résolu par réduction (":" < NOT).
Conflit entre la règle 155 et le jeton "(" résolu par réduction ("(" < NOT).
Conflit entre la règle 155 et le jeton "." résolu par réduction ("." < NOT).
Conflit entre la règle 155 et le jeton ".'" résolu par réduction (".'" < NOT).
Conflit entre la règle 155 et le jeton "+" résolu par réduction ("+" < NOT).
Conflit entre la règle 155 et le jeton "-" résolu par réduction ("-" < NOT).
Conflit entre la règle 155 et le jeton "*" résolu par réduction ("*" < NOT).
Conflit entre la règle 155 et le jeton ".*" résolu par réduction (".*" < NOT).
Conflit entre la règle 155 et le jeton ".*." résolu par réduction (".*." < NOT).
Conflit entre la règle 155 et le jeton "/" résolu par réduction ("/" < NOT).
Conflit entre la règle 155 et le jeton "./" résolu par réduction ("./" < NOT).
Conflit entre la règle 155 et le jeton "/." résolu par réduction ("/." < NOT).
Conflit entre la règle 155 et le jeton "./." résolu par réduction ("./." < NOT).
Conflit entre la règle 155 et le jeton "\\" résolu par réduction ("\\" < NOT).
Conflit entre la règle 155 et le jeton ".\\" résolu par réduction (".\\" < NOT).
Conflit entre la règle 155 et le jeton ".\\." résolu par réduction (".\\." < NOT).
Conflit entre la règle 155 et le jeton "** or ^" résolu par réduction ("** or ^" < NOT).
Conflit entre la règle 155 et le jeton ".^" résolu par réduction (".^" < NOT).
Conflit entre la règle 155 et le jeton "==" résolu par réduction ("==" < NOT).
Conflit entre la règle 155 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < NOT).
Conflit entre la règle 155 et le jeton "<" résolu par réduction ("<" < NOT).
Conflit entre la règle 155 et le jeton "<=" résolu par réduction ("<=" < NOT).
Conflit entre la règle 155 et le jeton ">" résolu par réduction (">" < NOT).
Conflit entre la règle 155 et le jeton ">=" résolu par réduction (">=" < NOT).
Conflit entre la règle 155 et le jeton "&" résolu par réduction ("&" < NOT).
Conflit entre la règle 155 et le jeton "|" résolu par réduction ("|" < NOT).


état 59

   51 functionCall: "(" functionCall . ")"
  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  157 variable: functionCall . "." variable
  159         | functionCall . listableEnd
  177 variableFields: functionCall . "," functionCall
  178               | functionCall . "," variable
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"         décalage et aller à l'état 115
    ","         décalage et aller à l'état 168
    ":"         décalage et aller à l'état 116
    ")"         décalage et aller à l'état 169
    "."         décalage et aller à l'état 166
    ".'"        décalage et aller à l'état 118
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 131
    ".^"        décalage et aller à l'état 132
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145


état 60

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  158         | variable . listableEnd
  171         | "(" variable . ")"
  176 variableFields: variable . "," variable
  179               | variable . "," functionCall
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"         décalage et aller à l'état 148
    ","         décalage et aller à l'état 170
    ":"         décalage et aller à l'état 116
    "("         décalage et aller à l'état 149
    ")"         décalage et aller à l'état 171
    "."         décalage et aller à l'état 167
    ".'"        décalage et aller à l'état 151
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 152
    ".^"        décalage et aller à l'état 153
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140

    rightOperand   aller à l'état 154
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 155
    comparators    aller à l'état 156


état 61

  172 variable: "(" variableFields . ")"
  174 variableFields: variableFields . "," variable
  175               | variableFields . "," functionCall

    ","  décalage et aller à l'état 172
    ")"  décalage et aller à l'état 173


état 62

  331 lineEnd: "end of line" .

    $défaut  réduction par utilisation de la règle 331 (lineEnd)


état 63

  193 matrix: "[" "]" .

    $défaut  réduction par utilisation de la règle 193 (matrix)


état 64

  332 lineEnd: "line comment" . "end of line"

    "end of line"  décalage et aller à l'état 174


état 65

  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  157 variable: functionCall . "." variable
  159         | functionCall . listableEnd
  210 matrixOrCellColumns: functionCall .  ["end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "(", "[", "]", "{", "}", "string", "identifier", "integer", "float", "number", "line comment"]
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"         décalage et aller à l'état 115
    ":"         décalage et aller à l'état 116
    "."         décalage et aller à l'état 166
    ".'"        décalage et aller à l'état 118
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 131
    ".^"        décalage et aller à l'état 132
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140

    $défaut  réduction par utilisation de la règle 210 (matrixOrCellColumns)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145

Conflit entre la règle 210 et le jeton "+" résolu par décalage (HIGHLEVEL < "+").
Conflit entre la règle 210 et le jeton "-" résolu par décalage (HIGHLEVEL < "-").


état 66

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  158         | variable . listableEnd
  209 matrixOrCellColumns: variable .  ["end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "[", "]", "{", "}", "string", "identifier", "integer", "float", "number", "line comment"]
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"         décalage et aller à l'état 148
    ":"         décalage et aller à l'état 116
    "("         décalage et aller à l'état 149
    "."         décalage et aller à l'état 167
    ".'"        décalage et aller à l'état 151
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 152
    ".^"        décalage et aller à l'état 153
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140

    $défaut  réduction par utilisation de la règle 209 (matrixOrCellColumns)

    rightOperand   aller à l'état 154
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 155
    comparators    aller à l'état 156

Conflit entre la règle 209 et le jeton "(" résolu par décalage (HIGHLEVEL < "(").
Conflit entre la règle 209 et le jeton "+" résolu par décalage (HIGHLEVEL < "+").
Conflit entre la règle 209 et le jeton "-" résolu par décalage (HIGHLEVEL < "-").


état 67

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  187       | "[" matrixOrCellLines . "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  189       | "[" matrixOrCellLines . matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"
  194 matrixOrCellLines: matrixOrCellLines . matrixOrCellLine
  199 matrixOrCellLine: . matrixOrCellColumns matrixOrCellLineBreak
  200                 | . matrixOrCellColumns "line comment" "end of line"
  201                 | . matrixOrCellColumns ";" "line comment" "end of line"
  202                 | . matrixOrCellColumns matrixOrCellColumnsBreak matrixOrCellLineBreak
  203                 | . matrixOrCellColumns matrixOrCellColumnsBreak "line comment" "end of line"
  204                 | . matrixOrCellColumns matrixOrCellColumnsBreak ";" "line comment" "end of line"
  205 matrixOrCellColumns: . matrixOrCellColumns matrixOrCellColumnsBreak variable
  206                    | . matrixOrCellColumns matrixOrCellColumnsBreak functionCall
  207                    | . matrixOrCellColumns variable
  208                    | . matrixOrCellColumns functionCall
  209                    | . variable
  210                    | . functionCall

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "]"           décalage et aller à l'état 175
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 65
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 66
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    matrixOrCellLine       aller à l'état 176
    matrixOrCellColumns    aller à l'état 177


état 68

  195 matrixOrCellLines: matrixOrCellLine .

    $défaut  réduction par utilisation de la règle 195 (matrixOrCellLines)


état 69

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  191       | "[" matrixOrCellColumns . "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"
  196 matrixOrCellLineBreak: . ";"
  197                      | . "end of line"
  198                      | . ";" "end of line"
  199 matrixOrCellLine: matrixOrCellColumns . matrixOrCellLineBreak
  200                 | matrixOrCellColumns . "line comment" "end of line"
  201                 | matrixOrCellColumns . ";" "line comment" "end of line"
  202                 | matrixOrCellColumns . matrixOrCellColumnsBreak matrixOrCellLineBreak
  203                 | matrixOrCellColumns . matrixOrCellColumnsBreak "line comment" "end of line"
  204                 | matrixOrCellColumns . matrixOrCellColumnsBreak ";" "line comment" "end of line"
  205 matrixOrCellColumns: matrixOrCellColumns . matrixOrCellColumnsBreak variable
  206                    | matrixOrCellColumns . matrixOrCellColumnsBreak functionCall
  207                    | matrixOrCellColumns . variable
  208                    | matrixOrCellColumns . functionCall
  211 matrixOrCellColumnsBreak: . matrixOrCellColumnsBreak ","
  212                         | . ","
  227 multipleResults: "[" matrixOrCellColumns . "]"

    "end of line"   décalage et aller à l'état 178
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    ","             décalage et aller à l'état 179
    ";"             décalage et aller à l'état 180
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 55
    "]"             décalage et aller à l'état 181
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 56
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 182

    functionCall              aller à l'état 183
    specificFunctionCall      aller à l'état 33
    simpleFunctionCall        aller à l'état 34
    recursiveFunctionCall     aller à l'état 35
    comparison                aller à l'état 38
    operation                 aller à l'état 39
    variable                  aller à l'état 184
    cell                      aller à l'état 41
    matrix                    aller à l'état 42
    matrixOrCellLineBreak     aller à l'état 185
    matrixOrCellColumnsBreak  aller à l'état 186


état 70

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  188       | "[" lineEnd . matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  190       | "[" lineEnd . matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  192       | "[" lineEnd . matrixOrCellColumns "]"
  193       | . "[" "]"
  194 matrixOrCellLines: . matrixOrCellLines matrixOrCellLine
  195                  | . matrixOrCellLine
  199 matrixOrCellLine: . matrixOrCellColumns matrixOrCellLineBreak
  200                 | . matrixOrCellColumns "line comment" "end of line"
  201                 | . matrixOrCellColumns ";" "line comment" "end of line"
  202                 | . matrixOrCellColumns matrixOrCellColumnsBreak matrixOrCellLineBreak
  203                 | . matrixOrCellColumns matrixOrCellColumnsBreak "line comment" "end of line"
  204                 | . matrixOrCellColumns matrixOrCellColumnsBreak ";" "line comment" "end of line"
  205 matrixOrCellColumns: . matrixOrCellColumns matrixOrCellColumnsBreak variable
  206                    | . matrixOrCellColumns matrixOrCellColumnsBreak functionCall
  207                    | . matrixOrCellColumns variable
  208                    | . matrixOrCellColumns functionCall
  209                    | . variable
  210                    | . functionCall

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 65
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 66
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    matrixOrCellLines      aller à l'état 187
    matrixOrCellLine       aller à l'état 68
    matrixOrCellColumns    aller à l'état 188


état 71

  186 cell: "{" "}" .

    $défaut  réduction par utilisation de la règle 186 (cell)


état 72

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  180     | "{" matrixOrCellLines . "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  182     | "{" matrixOrCellLines . matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"
  194 matrixOrCellLines: matrixOrCellLines . matrixOrCellLine
  199 matrixOrCellLine: . matrixOrCellColumns matrixOrCellLineBreak
  200                 | . matrixOrCellColumns "line comment" "end of line"
  201                 | . matrixOrCellColumns ";" "line comment" "end of line"
  202                 | . matrixOrCellColumns matrixOrCellColumnsBreak matrixOrCellLineBreak
  203                 | . matrixOrCellColumns matrixOrCellColumnsBreak "line comment" "end of line"
  204                 | . matrixOrCellColumns matrixOrCellColumnsBreak ";" "line comment" "end of line"
  205 matrixOrCellColumns: . matrixOrCellColumns matrixOrCellColumnsBreak variable
  206                    | . matrixOrCellColumns matrixOrCellColumnsBreak functionCall
  207                    | . matrixOrCellColumns variable
  208                    | . matrixOrCellColumns functionCall
  209                    | . variable
  210                    | . functionCall

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "}"           décalage et aller à l'état 189
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 65
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 66
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    matrixOrCellLine       aller à l'état 176
    matrixOrCellColumns    aller à l'état 190


état 73

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  184     | "{" matrixOrCellColumns . "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"
  196 matrixOrCellLineBreak: . ";"
  197                      | . "end of line"
  198                      | . ";" "end of line"
  199 matrixOrCellLine: matrixOrCellColumns . matrixOrCellLineBreak
  200                 | matrixOrCellColumns . "line comment" "end of line"
  201                 | matrixOrCellColumns . ";" "line comment" "end of line"
  202                 | matrixOrCellColumns . matrixOrCellColumnsBreak matrixOrCellLineBreak
  203                 | matrixOrCellColumns . matrixOrCellColumnsBreak "line comment" "end of line"
  204                 | matrixOrCellColumns . matrixOrCellColumnsBreak ";" "line comment" "end of line"
  205 matrixOrCellColumns: matrixOrCellColumns . matrixOrCellColumnsBreak variable
  206                    | matrixOrCellColumns . matrixOrCellColumnsBreak functionCall
  207                    | matrixOrCellColumns . variable
  208                    | matrixOrCellColumns . functionCall
  211 matrixOrCellColumnsBreak: . matrixOrCellColumnsBreak ","
  212                         | . ","

    "end of line"   décalage et aller à l'état 178
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    ","             décalage et aller à l'état 179
    ";"             décalage et aller à l'état 180
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 55
    "{"             décalage et aller à l'état 9
    "}"             décalage et aller à l'état 191
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 56
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 182

    functionCall              aller à l'état 183
    specificFunctionCall      aller à l'état 33
    simpleFunctionCall        aller à l'état 34
    recursiveFunctionCall     aller à l'état 35
    comparison                aller à l'état 38
    operation                 aller à l'état 39
    variable                  aller à l'état 184
    cell                      aller à l'état 41
    matrix                    aller à l'état 42
    matrixOrCellLineBreak     aller à l'état 185
    matrixOrCellColumnsBreak  aller à l'état 186


état 74

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  181     | "{" lineEnd . matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  183     | "{" lineEnd . matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  185     | "{" lineEnd . matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"
  194 matrixOrCellLines: . matrixOrCellLines matrixOrCellLine
  195                  | . matrixOrCellLine
  199 matrixOrCellLine: . matrixOrCellColumns matrixOrCellLineBreak
  200                 | . matrixOrCellColumns "line comment" "end of line"
  201                 | . matrixOrCellColumns ";" "line comment" "end of line"
  202                 | . matrixOrCellColumns matrixOrCellColumnsBreak matrixOrCellLineBreak
  203                 | . matrixOrCellColumns matrixOrCellColumnsBreak "line comment" "end of line"
  204                 | . matrixOrCellColumns matrixOrCellColumnsBreak ";" "line comment" "end of line"
  205 matrixOrCellColumns: . matrixOrCellColumns matrixOrCellColumnsBreak variable
  206                    | . matrixOrCellColumns matrixOrCellColumnsBreak functionCall
  207                    | . matrixOrCellColumns variable
  208                    | . matrixOrCellColumns functionCall
  209                    | . variable
  210                    | . functionCall

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 65
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 66
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    matrixOrCellLines      aller à l'état 192
    matrixOrCellLine       aller à l'état 68
    matrixOrCellColumns    aller à l'état 193


état 75

  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  113          | "+" functionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  157 variable: functionCall . "." variable
  159         | functionCall . listableEnd
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"        décalage et aller à l'état 115
    "."        décalage et aller à l'état 166
    ".'"       décalage et aller à l'état 118
    "*"        décalage et aller à l'état 121
    ".*"       décalage et aller à l'état 122
    ".*."      décalage et aller à l'état 123
    "/"        décalage et aller à l'état 124
    "./"       décalage et aller à l'état 125
    "/."       décalage et aller à l'état 126
    "./."      décalage et aller à l'état 127
    "\\"       décalage et aller à l'état 128
    ".\\"      décalage et aller à l'état 129
    ".\\."     décalage et aller à l'état 130
    "** or ^"  décalage et aller à l'état 131
    ".^"       décalage et aller à l'état 132

    $défaut  réduction par utilisation de la règle 113 (operation)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145

Conflit entre la règle 113 et le jeton "'" résolu par décalage (PLUS < "'").
Conflit entre la règle 113 et le jeton ":" résolu par réduction (":" < PLUS).
Conflit entre la règle 113 et le jeton "." résolu par décalage (PLUS < ".").
Conflit entre la règle 113 et le jeton ".'" résolu par décalage (PLUS < ".'").
Conflit entre la règle 113 et le jeton "+" résolu par réduction (%left "+").
Conflit entre la règle 113 et le jeton "-" résolu par réduction (%left "-").
Conflit entre la règle 113 et le jeton "*" résolu par décalage (PLUS < "*").
Conflit entre la règle 113 et le jeton ".*" résolu par décalage (PLUS < ".*").
Conflit entre la règle 113 et le jeton ".*." résolu par décalage (PLUS < ".*.").
Conflit entre la règle 113 et le jeton "/" résolu par décalage (PLUS < "/").
Conflit entre la règle 113 et le jeton "./" résolu par décalage (PLUS < "./").
Conflit entre la règle 113 et le jeton "/." résolu par décalage (PLUS < "/.").
Conflit entre la règle 113 et le jeton "./." résolu par décalage (PLUS < "./.").
Conflit entre la règle 113 et le jeton "\\" résolu par décalage (PLUS < "\\").
Conflit entre la règle 113 et le jeton ".\\" résolu par décalage (PLUS < ".\\").
Conflit entre la règle 113 et le jeton ".\\." résolu par décalage (PLUS < ".\\.").
Conflit entre la règle 113 et le jeton "** or ^" résolu par décalage (PLUS < "** or ^").
Conflit entre la règle 113 et le jeton ".^" résolu par décalage (PLUS < ".^").
Conflit entre la règle 113 et le jeton "==" résolu par réduction ("==" < PLUS).
Conflit entre la règle 113 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < PLUS).
Conflit entre la règle 113 et le jeton "<" résolu par réduction ("<" < PLUS).
Conflit entre la règle 113 et le jeton "<=" résolu par réduction ("<=" < PLUS).
Conflit entre la règle 113 et le jeton ">" résolu par réduction (">" < PLUS).
Conflit entre la règle 113 et le jeton ">=" résolu par réduction (">=" < PLUS).
Conflit entre la règle 113 et le jeton "&" résolu par réduction ("&" < PLUS).
Conflit entre la règle 113 et le jeton "|" résolu par réduction ("|" < PLUS).


état 76

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  112          | "+" variable .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  158         | variable . listableEnd
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"        décalage et aller à l'état 148
    "."        décalage et aller à l'état 167
    ".'"       décalage et aller à l'état 151
    "*"        décalage et aller à l'état 121
    ".*"       décalage et aller à l'état 122
    ".*."      décalage et aller à l'état 123
    "/"        décalage et aller à l'état 124
    "./"       décalage et aller à l'état 125
    "/."       décalage et aller à l'état 126
    "./."      décalage et aller à l'état 127
    "\\"       décalage et aller à l'état 128
    ".\\"      décalage et aller à l'état 129
    ".\\."     décalage et aller à l'état 130
    "** or ^"  décalage et aller à l'état 152
    ".^"       décalage et aller à l'état 153

    $défaut  réduction par utilisation de la règle 112 (operation)

    rightOperand   aller à l'état 154
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 155
    comparators    aller à l'état 156

Conflit entre la règle 112 et le jeton "'" résolu par décalage (PLUS < "'").
Conflit entre la règle 112 et le jeton ":" résolu par réduction (":" < PLUS).
Conflit entre la règle 112 et le jeton "(" résolu par réduction ("(" < PLUS).
Conflit entre la règle 112 et le jeton "." résolu par décalage (PLUS < ".").
Conflit entre la règle 112 et le jeton ".'" résolu par décalage (PLUS < ".'").
Conflit entre la règle 112 et le jeton "+" résolu par réduction (%left "+").
Conflit entre la règle 112 et le jeton "-" résolu par réduction (%left "-").
Conflit entre la règle 112 et le jeton "*" résolu par décalage (PLUS < "*").
Conflit entre la règle 112 et le jeton ".*" résolu par décalage (PLUS < ".*").
Conflit entre la règle 112 et le jeton ".*." résolu par décalage (PLUS < ".*.").
Conflit entre la règle 112 et le jeton "/" résolu par décalage (PLUS < "/").
Conflit entre la règle 112 et le jeton "./" résolu par décalage (PLUS < "./").
Conflit entre la règle 112 et le jeton "/." résolu par décalage (PLUS < "/.").
Conflit entre la règle 112 et le jeton "./." résolu par décalage (PLUS < "./.").
Conflit entre la règle 112 et le jeton "\\" résolu par décalage (PLUS < "\\").
Conflit entre la règle 112 et le jeton ".\\" résolu par décalage (PLUS < ".\\").
Conflit entre la règle 112 et le jeton ".\\." résolu par décalage (PLUS < ".\\.").
Conflit entre la règle 112 et le jeton "** or ^" résolu par décalage (PLUS < "** or ^").
Conflit entre la règle 112 et le jeton ".^" résolu par décalage (PLUS < ".^").
Conflit entre la règle 112 et le jeton "==" résolu par réduction ("==" < PLUS).
Conflit entre la règle 112 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < PLUS).
Conflit entre la règle 112 et le jeton "<" résolu par réduction ("<" < PLUS).
Conflit entre la règle 112 et le jeton "<=" résolu par réduction ("<=" < PLUS).
Conflit entre la règle 112 et le jeton ">" résolu par réduction (">" < PLUS).
Conflit entre la règle 112 et le jeton ">=" résolu par réduction (">=" < PLUS).
Conflit entre la règle 112 et le jeton "&" résolu par réduction ("&" < PLUS).
Conflit entre la règle 112 et le jeton "|" résolu par réduction ("|" < PLUS).


état 77

  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  111          | "-" functionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  157 variable: functionCall . "." variable
  159         | functionCall . listableEnd
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"        décalage et aller à l'état 115
    "."        décalage et aller à l'état 166
    ".'"       décalage et aller à l'état 118
    "*"        décalage et aller à l'état 121
    ".*"       décalage et aller à l'état 122
    ".*."      décalage et aller à l'état 123
    "/"        décalage et aller à l'état 124
    "./"       décalage et aller à l'état 125
    "/."       décalage et aller à l'état 126
    "./."      décalage et aller à l'état 127
    "\\"       décalage et aller à l'état 128
    ".\\"      décalage et aller à l'état 129
    ".\\."     décalage et aller à l'état 130
    "** or ^"  décalage et aller à l'état 131
    ".^"       décalage et aller à l'état 132

    $défaut  réduction par utilisation de la règle 111 (operation)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145

Conflit entre la règle 111 et le jeton "'" résolu par décalage (MINUS < "'").
Conflit entre la règle 111 et le jeton ":" résolu par réduction (":" < MINUS).
Conflit entre la règle 111 et le jeton "." résolu par décalage (MINUS < ".").
Conflit entre la règle 111 et le jeton ".'" résolu par décalage (MINUS < ".'").
Conflit entre la règle 111 et le jeton "+" résolu par réduction (%left "+").
Conflit entre la règle 111 et le jeton "-" résolu par réduction (%left "-").
Conflit entre la règle 111 et le jeton "*" résolu par décalage (MINUS < "*").
Conflit entre la règle 111 et le jeton ".*" résolu par décalage (MINUS < ".*").
Conflit entre la règle 111 et le jeton ".*." résolu par décalage (MINUS < ".*.").
Conflit entre la règle 111 et le jeton "/" résolu par décalage (MINUS < "/").
Conflit entre la règle 111 et le jeton "./" résolu par décalage (MINUS < "./").
Conflit entre la règle 111 et le jeton "/." résolu par décalage (MINUS < "/.").
Conflit entre la règle 111 et le jeton "./." résolu par décalage (MINUS < "./.").
Conflit entre la règle 111 et le jeton "\\" résolu par décalage (MINUS < "\\").
Conflit entre la règle 111 et le jeton ".\\" résolu par décalage (MINUS < ".\\").
Conflit entre la règle 111 et le jeton ".\\." résolu par décalage (MINUS < ".\\.").
Conflit entre la règle 111 et le jeton "** or ^" résolu par décalage (MINUS < "** or ^").
Conflit entre la règle 111 et le jeton ".^" résolu par décalage (MINUS < ".^").
Conflit entre la règle 111 et le jeton "==" résolu par réduction ("==" < MINUS).
Conflit entre la règle 111 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < MINUS).
Conflit entre la règle 111 et le jeton "<" résolu par réduction ("<" < MINUS).
Conflit entre la règle 111 et le jeton "<=" résolu par réduction ("<=" < MINUS).
Conflit entre la règle 111 et le jeton ">" résolu par réduction (">" < MINUS).
Conflit entre la règle 111 et le jeton ">=" résolu par réduction (">=" < MINUS).
Conflit entre la règle 111 et le jeton "&" résolu par réduction ("&" < MINUS).
Conflit entre la règle 111 et le jeton "|" résolu par réduction ("|" < MINUS).


état 78

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  110          | "-" variable .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  158         | variable . listableEnd
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"        décalage et aller à l'état 148
    "."        décalage et aller à l'état 167
    ".'"       décalage et aller à l'état 151
    "*"        décalage et aller à l'état 121
    ".*"       décalage et aller à l'état 122
    ".*."      décalage et aller à l'état 123
    "/"        décalage et aller à l'état 124
    "./"       décalage et aller à l'état 125
    "/."       décalage et aller à l'état 126
    "./."      décalage et aller à l'état 127
    "\\"       décalage et aller à l'état 128
    ".\\"      décalage et aller à l'état 129
    ".\\."     décalage et aller à l'état 130
    "** or ^"  décalage et aller à l'état 152
    ".^"       décalage et aller à l'état 153

    $défaut  réduction par utilisation de la règle 110 (operation)

    rightOperand   aller à l'état 154
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 155
    comparators    aller à l'état 156

Conflit entre la règle 110 et le jeton "'" résolu par décalage (MINUS < "'").
Conflit entre la règle 110 et le jeton ":" résolu par réduction (":" < MINUS).
Conflit entre la règle 110 et le jeton "(" résolu par réduction ("(" < MINUS).
Conflit entre la règle 110 et le jeton "." résolu par décalage (MINUS < ".").
Conflit entre la règle 110 et le jeton ".'" résolu par décalage (MINUS < ".'").
Conflit entre la règle 110 et le jeton "+" résolu par réduction (%left "+").
Conflit entre la règle 110 et le jeton "-" résolu par réduction (%left "-").
Conflit entre la règle 110 et le jeton "*" résolu par décalage (MINUS < "*").
Conflit entre la règle 110 et le jeton ".*" résolu par décalage (MINUS < ".*").
Conflit entre la règle 110 et le jeton ".*." résolu par décalage (MINUS < ".*.").
Conflit entre la règle 110 et le jeton "/" résolu par décalage (MINUS < "/").
Conflit entre la règle 110 et le jeton "./" résolu par décalage (MINUS < "./").
Conflit entre la règle 110 et le jeton "/." résolu par décalage (MINUS < "/.").
Conflit entre la règle 110 et le jeton "./." résolu par décalage (MINUS < "./.").
Conflit entre la règle 110 et le jeton "\\" résolu par décalage (MINUS < "\\").
Conflit entre la règle 110 et le jeton ".\\" résolu par décalage (MINUS < ".\\").
Conflit entre la règle 110 et le jeton ".\\." résolu par décalage (MINUS < ".\\.").
Conflit entre la règle 110 et le jeton "** or ^" résolu par décalage (MINUS < "** or ^").
Conflit entre la règle 110 et le jeton ".^" résolu par décalage (MINUS < ".^").
Conflit entre la règle 110 et le jeton "==" résolu par réduction ("==" < MINUS).
Conflit entre la règle 110 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < MINUS).
Conflit entre la règle 110 et le jeton "<" résolu par réduction ("<" < MINUS).
Conflit entre la règle 110 et le jeton "<=" résolu par réduction ("<=" < MINUS).
Conflit entre la règle 110 et le jeton ">" résolu par réduction (">" < MINUS).
Conflit entre la règle 110 et le jeton ">=" résolu par réduction (">=" < MINUS).
Conflit entre la règle 110 et le jeton "&" résolu par réduction ("&" < MINUS).
Conflit entre la règle 110 et le jeton "|" résolu par réduction ("|" < MINUS).


état 79

  101 condition: functionCall .  [error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "(", "[", "{", "if", "then", "else", "elseif", "end", "select", "function", "class", "for", "while", "do", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  157 variable: functionCall . "." variable
  159         | functionCall . listableEnd
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"         décalage et aller à l'état 115
    ":"         décalage et aller à l'état 116
    "."         décalage et aller à l'état 166
    ".'"        décalage et aller à l'état 118
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 131
    ".^"        décalage et aller à l'état 132
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140

    $défaut  réduction par utilisation de la règle 101 (condition)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145

Conflit entre la règle 101 et le jeton "+" résolu par décalage (HIGHLEVEL < "+").
Conflit entre la règle 101 et le jeton "-" résolu par décalage (HIGHLEVEL < "-").


état 80

  228 ifControl: "if" condition . then thenBody "end"
  229          | "if" condition . then thenBody else elseBody "end"
  230          | "if" condition . then thenBody elseIfControl "end"
  235 ifConditionBreak: . ";"
  236                 | . ";" "end of line"
  237                 | . ","
  238                 | . "," "end of line"
  239                 | . "end of line"
  240 then: . "then"
  241     | . ifConditionBreak "then"
  242     | . ifConditionBreak "then" "end of line"
  243     | . "then" ifConditionBreak
  244     | . ifConditionBreak
  245     | .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "else", "elseif", "end", "select", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]

    "end of line"  décalage et aller à l'état 194
    ","            décalage et aller à l'état 195
    ";"            décalage et aller à l'état 196
    "then"         décalage et aller à l'état 197

    $défaut  réduction par utilisation de la règle 245 (then)

    ifConditionBreak  aller à l'état 198
    then              aller à l'état 199


état 81

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  102 condition: variable .  [error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "[", "{", "if", "then", "else", "elseif", "end", "select", "function", "class", "for", "while", "do", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  158         | variable . listableEnd
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"         décalage et aller à l'état 148
    ":"         décalage et aller à l'état 116
    "("         décalage et aller à l'état 149
    "."         décalage et aller à l'état 167
    ".'"        décalage et aller à l'état 151
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 152
    ".^"        décalage et aller à l'état 153
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140

    $défaut  réduction par utilisation de la règle 102 (condition)

    rightOperand   aller à l'état 154
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 155
    comparators    aller à l'état 156

Conflit entre la règle 102 et le jeton "(" résolu par décalage (HIGHLEVEL < "(").
Conflit entre la règle 102 et le jeton "+" résolu par décalage (HIGHLEVEL < "+").
Conflit entre la règle 102 et le jeton "-" résolu par décalage (HIGHLEVEL < "-").


état 82

  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  157 variable: functionCall . "." variable
  159         | functionCall . listableEnd
  260 selectable: functionCall .  ["end of line", ",", ";", "line comment"]
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"         décalage et aller à l'état 115
    ":"         décalage et aller à l'état 116
    "."         décalage et aller à l'état 166
    ".'"        décalage et aller à l'état 118
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 131
    ".^"        décalage et aller à l'état 132
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140

    $défaut  réduction par utilisation de la règle 260 (selectable)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145


état 83

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  158         | variable . listableEnd
  259 selectable: variable .  ["end of line", ",", ";", "line comment"]
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"         décalage et aller à l'état 148
    ":"         décalage et aller à l'état 116
    "("         décalage et aller à l'état 149
    "."         décalage et aller à l'état 167
    ".'"        décalage et aller à l'état 151
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 152
    ".^"        décalage et aller à l'état 153
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140

    $défaut  réduction par utilisation de la règle 259 (selectable)

    rightOperand   aller à l'état 154
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 155
    comparators    aller à l'état 156


état 84

  255 selectControl: "select" selectable . selectConditionBreak casesControl "end"
  256              | "select" selectable . selectConditionBreak casesControl else elseBody "end"
  257              | "select" selectable . "line comment" selectConditionBreak casesControl "end"
  258              | "select" selectable . "line comment" selectConditionBreak casesControl else elseBody "end"
  261 selectConditionBreak: . "end of line"
  262                     | . "," "end of line"
  263                     | . ";" "end of line"

    "end of line"   décalage et aller à l'état 200
    ","             décalage et aller à l'état 201
    ";"             décalage et aller à l'état 202
    "line comment"  décalage et aller à l'état 203

    selectConditionBreak  aller à l'état 204


état 85

   69 functionDeclaration: "function" "[" . functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | "function" "[" . "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   72 functionDeclarationReturns: . idList
   76 idList: . idList "," "identifier"
   77       | . "identifier"

    "]"           décalage et aller à l'état 205
    "identifier"  décalage et aller à l'état 206

    functionDeclarationReturns  aller à l'état 207
    idList                      aller à l'état 208


état 86

   68 functionDeclaration: "function" "identifier" . "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | "function" "identifier" . functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   73 functionDeclarationArguments: . "(" idList ")"
   74                             | . "(" ")"
   75                             | .  ["end of line", ",", ";", "line comment"]

    "("  décalage et aller à l'état 209
    "="  décalage et aller à l'état 210

    $défaut  réduction par utilisation de la règle 75 (functionDeclarationArguments)

    functionDeclarationArguments  aller à l'état 211


état 87

   78 functionDeclarationBreak: . lineEnd
   79                         | . ";"
   80                         | . ";" "end of line"
   81                         | . ","
   82                         | . "," "end of line"
   85 classDeclaration: "class" "identifier" . "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | "class" "identifier" . functionDeclarationBreak slotsDeclaration "endclass"
  331 lineEnd: . "end of line"
  332        | . "line comment" "end of line"

    "end of line"   décalage et aller à l'état 62
    ","             décalage et aller à l'état 212
    ";"             décalage et aller à l'état 213
    "<"             décalage et aller à l'état 214
    "line comment"  décalage et aller à l'état 64

    functionDeclarationBreak  aller à l'état 215
    lineEnd                   aller à l'état 216


état 88

  282 forControl: "for" "(" . "identifier" "=" forIterator ")" forConditionBreak forBody "end"

    "identifier"  décalage et aller à l'état 217


état 89

  281 forControl: "for" "identifier" . "=" forIterator forConditionBreak forBody "end"

    "="  décalage et aller à l'état 218


état 90

  295 whileControl: "while" condition . whileConditionBreak whileBody "end"
  298 whileConditionBreak: . ","
  299                    | . ";"
  300                    | . "do"
  301                    | . "do" ","
  302                    | . "do" ";"
  303                    | . "then"
  304                    | . "then" ","
  305                    | . "then" ";"
  306                    | . lineEnd
  307                    | . "," "end of line"
  308                    | . ";" "end of line"
  309                    | . "do" "end of line"
  310                    | . "do" "," "end of line"
  311                    | . "do" ";" "end of line"
  312                    | . "then" "end of line"
  313                    | . "then" "," "end of line"
  314                    | . "then" ";" "end of line"
  331 lineEnd: . "end of line"
  332        | . "line comment" "end of line"

    "end of line"   décalage et aller à l'état 62
    ","             décalage et aller à l'état 219
    ";"             décalage et aller à l'état 220
    "then"          décalage et aller à l'état 221
    "do"            décalage et aller à l'état 222
    "line comment"  décalage et aller à l'état 64

    whileConditionBreak  aller à l'état 223
    lineEnd              aller à l'état 224


état 91

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"
  213 variableDeclaration: . assignable "=" variable
  214                    | . assignable "=" functionCall
  215                    | . functionCall "=" variable
  216                    | . functionCall "=" functionCall
  217                    | . assignable "=" ":"
  218                    | . functionCall "=" ":"
  219                    | . assignable "=" returnControl
  220                    | . functionCall "=" returnControl
  221 assignable: . variable "." "identifier"
  222           | . variable "." functionCall
  223           | . functionCall "." variable
  224           | . functionCall "." functionCall
  225           | . "identifier"
  226           | . multipleResults
  227 multipleResults: . "[" matrixOrCellColumns "]"
  228 ifControl: . "if" condition then thenBody "end"
  229          | . "if" condition then thenBody else elseBody "end"
  230          | . "if" condition then thenBody elseIfControl "end"
  255 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  256              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  257              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  258              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  281 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  282           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  295 whileControl: . "while" condition whileConditionBreak whileBody "end"
  315 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  315           | "try" "end of line" . expressions "catch" "end of line" expressions "end"
  316           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  317           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  317           | "try" "end of line" . expressions "catch" "line comment" "end of line" expressions "end"
  318           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  319 returnControl: . "return"
  320              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    expressions            aller à l'état 225
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 92

  316 tryControl: "try" "line comment" . "end of line" expressions "catch" "end of line" expressions "end"
  318           | "try" "line comment" . "end of line" expressions "catch" "line comment" "end of line" expressions "end"

    "end of line"  décalage et aller à l'état 226


état 93

  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  157 variable: functionCall . "." variable
  159         | functionCall . listableEnd
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"         décalage et aller à l'état 115
    ":"         décalage et aller à l'état 116
    "."         décalage et aller à l'état 166
    ".'"        décalage et aller à l'état 118
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 131
    ".^"        décalage et aller à l'état 132
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145


état 94

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  158         | variable . listableEnd
  320 returnControl: "return" variable .  ["end of file", "end of line", ",", ";", ")", "else", "elseif", "end", "case", "endfunction", "catch", "line comment"]
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"         décalage et aller à l'état 148
    ":"         décalage et aller à l'état 116
    "("         décalage et aller à l'état 149
    "."         décalage et aller à l'état 167
    ".'"        décalage et aller à l'état 151
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 152
    ".^"        décalage et aller à l'état 153
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140

    $défaut  réduction par utilisation de la règle 320 (returnControl)

    rightOperand   aller à l'état 154
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 155
    comparators    aller à l'état 156


état 95

   41 implicitCallable: "%t or %T" .  ["end of file", "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "[", "{", ".", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "else", "elseif", "end", "case", "endfunction", "catch", "string", "identifier", "integer", "float", "number", "path", "line comment"]
   53 specificFunctionCall: "%t or %T" . "(" functionArgs ")"
  169 variable: "%t or %T" .  ["'", ":", ".", ".'", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|"]

    "("  décalage et aller à l'état 53

    "'"         réduction par utilisation de la règle 169 (variable)
    ":"         réduction par utilisation de la règle 169 (variable)
    "."         réduction par utilisation de la règle 41 (implicitCallable)
    "."         [réduction par utilisation de la règle 169 (variable)]
    ".'"        réduction par utilisation de la règle 169 (variable)
    "+"         réduction par utilisation de la règle 41 (implicitCallable)
    "+"         [réduction par utilisation de la règle 169 (variable)]
    "-"         réduction par utilisation de la règle 41 (implicitCallable)
    "-"         [réduction par utilisation de la règle 169 (variable)]
    "*"         réduction par utilisation de la règle 41 (implicitCallable)
    "*"         [réduction par utilisation de la règle 169 (variable)]
    ".*"        réduction par utilisation de la règle 41 (implicitCallable)
    ".*"        [réduction par utilisation de la règle 169 (variable)]
    ".*."       réduction par utilisation de la règle 41 (implicitCallable)
    ".*."       [réduction par utilisation de la règle 169 (variable)]
    "/"         réduction par utilisation de la règle 41 (implicitCallable)
    "/"         [réduction par utilisation de la règle 169 (variable)]
    "./"        réduction par utilisation de la règle 41 (implicitCallable)
    "./"        [réduction par utilisation de la règle 169 (variable)]
    "/."        réduction par utilisation de la règle 41 (implicitCallable)
    "/."        [réduction par utilisation de la règle 169 (variable)]
    "./."       réduction par utilisation de la règle 41 (implicitCallable)
    "./."       [réduction par utilisation de la règle 169 (variable)]
    "\\"        réduction par utilisation de la règle 41 (implicitCallable)
    "\\"        [réduction par utilisation de la règle 169 (variable)]
    ".\\"       réduction par utilisation de la règle 41 (implicitCallable)
    ".\\"       [réduction par utilisation de la règle 169 (variable)]
    ".\\."      réduction par utilisation de la règle 41 (implicitCallable)
    ".\\."      [réduction par utilisation de la règle 169 (variable)]
    "** or ^"   réduction par utilisation de la règle 169 (variable)
    ".^"        réduction par utilisation de la règle 169 (variable)
    "=="        réduction par utilisation de la règle 169 (variable)
    "<> or ~="  réduction par utilisation de la règle 169 (variable)
    "<"         réduction par utilisation de la règle 169 (variable)
    "<="        réduction par utilisation de la règle 169 (variable)
    ">"         réduction par utilisation de la règle 169 (variable)
    ">="        réduction par utilisation de la règle 169 (variable)
    "&"         réduction par utilisation de la règle 169 (variable)
    "|"         réduction par utilisation de la règle 169 (variable)
    $défaut    réduction par utilisation de la règle 41 (implicitCallable)

Conflit entre la règle 41 et le jeton "(" résolu par décalage (BOOLTRUE < "(").
Conflit entre la règle 169 et le jeton "(" résolu par décalage (BOOLTRUE < "(").


état 96

   42 implicitCallable: "%f or %F" .  ["end of file", "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "[", "{", ".", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "else", "elseif", "end", "case", "endfunction", "catch", "string", "identifier", "integer", "float", "number", "path", "line comment"]
   54 specificFunctionCall: "%f or %F" . "(" functionArgs ")"
  170 variable: "%f or %F" .  ["'", ":", ".", ".'", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|"]

    "("  décalage et aller à l'état 54

    "'"         réduction par utilisation de la règle 170 (variable)
    ":"         réduction par utilisation de la règle 170 (variable)
    "."         réduction par utilisation de la règle 42 (implicitCallable)
    "."         [réduction par utilisation de la règle 170 (variable)]
    ".'"        réduction par utilisation de la règle 170 (variable)
    "+"         réduction par utilisation de la règle 42 (implicitCallable)
    "+"         [réduction par utilisation de la règle 170 (variable)]
    "-"         réduction par utilisation de la règle 42 (implicitCallable)
    "-"         [réduction par utilisation de la règle 170 (variable)]
    "*"         réduction par utilisation de la règle 42 (implicitCallable)
    "*"         [réduction par utilisation de la règle 170 (variable)]
    ".*"        réduction par utilisation de la règle 42 (implicitCallable)
    ".*"        [réduction par utilisation de la règle 170 (variable)]
    ".*."       réduction par utilisation de la règle 42 (implicitCallable)
    ".*."       [réduction par utilisation de la règle 170 (variable)]
    "/"         réduction par utilisation de la règle 42 (implicitCallable)
    "/"         [réduction par utilisation de la règle 170 (variable)]
    "./"        réduction par utilisation de la règle 42 (implicitCallable)
    "./"        [réduction par utilisation de la règle 170 (variable)]
    "/."        réduction par utilisation de la règle 42 (implicitCallable)
    "/."        [réduction par utilisation de la règle 170 (variable)]
    "./."       réduction par utilisation de la règle 42 (implicitCallable)
    "./."       [réduction par utilisation de la règle 170 (variable)]
    "\\"        réduction par utilisation de la règle 42 (implicitCallable)
    "\\"        [réduction par utilisation de la règle 170 (variable)]
    ".\\"       réduction par utilisation de la règle 42 (implicitCallable)
    ".\\"       [réduction par utilisation de la règle 170 (variable)]
    ".\\."      réduction par utilisation de la règle 42 (implicitCallable)
    ".\\."      [réduction par utilisation de la règle 170 (variable)]
    "** or ^"   réduction par utilisation de la règle 170 (variable)
    ".^"        réduction par utilisation de la règle 170 (variable)
    "=="        réduction par utilisation de la règle 170 (variable)
    "<> or ~="  réduction par utilisation de la règle 170 (variable)
    "<"         réduction par utilisation de la règle 170 (variable)
    "<="        réduction par utilisation de la règle 170 (variable)
    ">"         réduction par utilisation de la règle 170 (variable)
    ">="        réduction par utilisation de la règle 170 (variable)
    "&"         réduction par utilisation de la règle 170 (variable)
    "|"         réduction par utilisation de la règle 170 (variable)
    $défaut    réduction par utilisation de la règle 42 (implicitCallable)

Conflit entre la règle 42 et le jeton "(" résolu par décalage (BOOLFALSE < "(").
Conflit entre la règle 170 et le jeton "(" résolu par décalage (BOOLFALSE < "(").


état 97

   40 implicitCallable: "$" .  ["end of file", "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "(", "[", "{", ".", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "else", "elseif", "end", "case", "endfunction", "catch", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  168 variable: "$" .  ["'", ":", "(", ".", ".'", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|"]

    "'"         réduction par utilisation de la règle 168 (variable)
    ":"         réduction par utilisation de la règle 168 (variable)
    "("         réduction par utilisation de la règle 40 (implicitCallable)
    "("         [réduction par utilisation de la règle 168 (variable)]
    "."         réduction par utilisation de la règle 40 (implicitCallable)
    "."         [réduction par utilisation de la règle 168 (variable)]
    ".'"        réduction par utilisation de la règle 168 (variable)
    "+"         réduction par utilisation de la règle 40 (implicitCallable)
    "+"         [réduction par utilisation de la règle 168 (variable)]
    "-"         réduction par utilisation de la règle 40 (implicitCallable)
    "-"         [réduction par utilisation de la règle 168 (variable)]
    "*"         réduction par utilisation de la règle 40 (implicitCallable)
    "*"         [réduction par utilisation de la règle 168 (variable)]
    ".*"        réduction par utilisation de la règle 40 (implicitCallable)
    ".*"        [réduction par utilisation de la règle 168 (variable)]
    ".*."       réduction par utilisation de la règle 40 (implicitCallable)
    ".*."       [réduction par utilisation de la règle 168 (variable)]
    "/"         réduction par utilisation de la règle 40 (implicitCallable)
    "/"         [réduction par utilisation de la règle 168 (variable)]
    "./"        réduction par utilisation de la règle 40 (implicitCallable)
    "./"        [réduction par utilisation de la règle 168 (variable)]
    "/."        réduction par utilisation de la règle 40 (implicitCallable)
    "/."        [réduction par utilisation de la règle 168 (variable)]
    "./."       réduction par utilisation de la règle 40 (implicitCallable)
    "./."       [réduction par utilisation de la règle 168 (variable)]
    "\\"        réduction par utilisation de la règle 40 (implicitCallable)
    "\\"        [réduction par utilisation de la règle 168 (variable)]
    ".\\"       réduction par utilisation de la règle 40 (implicitCallable)
    ".\\"       [réduction par utilisation de la règle 168 (variable)]
    ".\\."      réduction par utilisation de la règle 40 (implicitCallable)
    ".\\."      [réduction par utilisation de la règle 168 (variable)]
    "** or ^"   réduction par utilisation de la règle 168 (variable)
    ".^"        réduction par utilisation de la règle 168 (variable)
    "=="        réduction par utilisation de la règle 168 (variable)
    "<> or ~="  réduction par utilisation de la règle 168 (variable)
    "<"         réduction par utilisation de la règle 168 (variable)
    "<="        réduction par utilisation de la règle 168 (variable)
    ">"         réduction par utilisation de la règle 168 (variable)
    ">="        réduction par utilisation de la règle 168 (variable)
    "&"         réduction par utilisation de la règle 168 (variable)
    "|"         réduction par utilisation de la règle 168 (variable)
    $défaut    réduction par utilisation de la règle 40 (implicitCallable)


état 98

   39 implicitCallable: "string" .  ["end of file", "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "(", "[", "{", ".", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "else", "elseif", "end", "case", "endfunction", "catch", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  167 variable: "string" .  ["'", ":", "(", ".", ".'", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|"]

    "'"         réduction par utilisation de la règle 167 (variable)
    ":"         réduction par utilisation de la règle 167 (variable)
    "("         réduction par utilisation de la règle 39 (implicitCallable)
    "("         [réduction par utilisation de la règle 167 (variable)]
    "."         réduction par utilisation de la règle 39 (implicitCallable)
    "."         [réduction par utilisation de la règle 167 (variable)]
    ".'"        réduction par utilisation de la règle 167 (variable)
    "+"         réduction par utilisation de la règle 39 (implicitCallable)
    "+"         [réduction par utilisation de la règle 167 (variable)]
    "-"         réduction par utilisation de la règle 39 (implicitCallable)
    "-"         [réduction par utilisation de la règle 167 (variable)]
    "*"         réduction par utilisation de la règle 39 (implicitCallable)
    "*"         [réduction par utilisation de la règle 167 (variable)]
    ".*"        réduction par utilisation de la règle 39 (implicitCallable)
    ".*"        [réduction par utilisation de la règle 167 (variable)]
    ".*."       réduction par utilisation de la règle 39 (implicitCallable)
    ".*."       [réduction par utilisation de la règle 167 (variable)]
    "/"         réduction par utilisation de la règle 39 (implicitCallable)
    "/"         [réduction par utilisation de la règle 167 (variable)]
    "./"        réduction par utilisation de la règle 39 (implicitCallable)
    "./"        [réduction par utilisation de la règle 167 (variable)]
    "/."        réduction par utilisation de la règle 39 (implicitCallable)
    "/."        [réduction par utilisation de la règle 167 (variable)]
    "./."       réduction par utilisation de la règle 39 (implicitCallable)
    "./."       [réduction par utilisation de la règle 167 (variable)]
    "\\"        réduction par utilisation de la règle 39 (implicitCallable)
    "\\"        [réduction par utilisation de la règle 167 (variable)]
    ".\\"       réduction par utilisation de la règle 39 (implicitCallable)
    ".\\"       [réduction par utilisation de la règle 167 (variable)]
    ".\\."      réduction par utilisation de la règle 39 (implicitCallable)
    ".\\."      [réduction par utilisation de la règle 167 (variable)]
    "** or ^"   réduction par utilisation de la règle 167 (variable)
    ".^"        réduction par utilisation de la règle 167 (variable)
    "=="        réduction par utilisation de la règle 167 (variable)
    "<> or ~="  réduction par utilisation de la règle 167 (variable)
    "<"         réduction par utilisation de la règle 167 (variable)
    "<="        réduction par utilisation de la règle 167 (variable)
    ">"         réduction par utilisation de la règle 167 (variable)
    ">="        réduction par utilisation de la règle 167 (variable)
    "&"         réduction par utilisation de la règle 167 (variable)
    "|"         réduction par utilisation de la règle 167 (variable)
    $défaut    réduction par utilisation de la règle 39 (implicitCallable)


état 99

   35 implicitCallable: "identifier" .  ["end of file", "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "(", "[", "{", ".", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "else", "elseif", "end", "case", "endfunction", "catch", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  163 variable: "identifier" .  ["'", ":", "(", ".", ".'", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|"]

    "'"         réduction par utilisation de la règle 163 (variable)
    ":"         réduction par utilisation de la règle 163 (variable)
    "("         réduction par utilisation de la règle 35 (implicitCallable)
    "("         [réduction par utilisation de la règle 163 (variable)]
    "."         réduction par utilisation de la règle 35 (implicitCallable)
    "."         [réduction par utilisation de la règle 163 (variable)]
    ".'"        réduction par utilisation de la règle 163 (variable)
    "+"         réduction par utilisation de la règle 35 (implicitCallable)
    "+"         [réduction par utilisation de la règle 163 (variable)]
    "-"         réduction par utilisation de la règle 35 (implicitCallable)
    "-"         [réduction par utilisation de la règle 163 (variable)]
    "*"         réduction par utilisation de la règle 35 (implicitCallable)
    "*"         [réduction par utilisation de la règle 163 (variable)]
    ".*"        réduction par utilisation de la règle 35 (implicitCallable)
    ".*"        [réduction par utilisation de la règle 163 (variable)]
    ".*."       réduction par utilisation de la règle 35 (implicitCallable)
    ".*."       [réduction par utilisation de la règle 163 (variable)]
    "/"         réduction par utilisation de la règle 35 (implicitCallable)
    "/"         [réduction par utilisation de la règle 163 (variable)]
    "./"        réduction par utilisation de la règle 35 (implicitCallable)
    "./"        [réduction par utilisation de la règle 163 (variable)]
    "/."        réduction par utilisation de la règle 35 (implicitCallable)
    "/."        [réduction par utilisation de la règle 163 (variable)]
    "./."       réduction par utilisation de la règle 35 (implicitCallable)
    "./."       [réduction par utilisation de la règle 163 (variable)]
    "\\"        réduction par utilisation de la règle 35 (implicitCallable)
    "\\"        [réduction par utilisation de la règle 163 (variable)]
    ".\\"       réduction par utilisation de la règle 35 (implicitCallable)
    ".\\"       [réduction par utilisation de la règle 163 (variable)]
    ".\\."      réduction par utilisation de la règle 35 (implicitCallable)
    ".\\."      [réduction par utilisation de la règle 163 (variable)]
    "** or ^"   réduction par utilisation de la règle 163 (variable)
    ".^"        réduction par utilisation de la règle 163 (variable)
    "=="        réduction par utilisation de la règle 163 (variable)
    "<> or ~="  réduction par utilisation de la règle 163 (variable)
    "<"         réduction par utilisation de la règle 163 (variable)
    "<="        réduction par utilisation de la règle 163 (variable)
    ">"         réduction par utilisation de la règle 163 (variable)
    ">="        réduction par utilisation de la règle 163 (variable)
    "&"         réduction par utilisation de la règle 163 (variable)
    "|"         réduction par utilisation de la règle 163 (variable)
    $défaut    réduction par utilisation de la règle 35 (implicitCallable)


état 100

   36 implicitCallable: "integer" .  ["end of file", "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "(", "[", "{", ".", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "else", "elseif", "end", "case", "endfunction", "catch", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  164 variable: "integer" .  ["'", ":", "(", ".", ".'", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|"]

    "'"         réduction par utilisation de la règle 164 (variable)
    ":"         réduction par utilisation de la règle 164 (variable)
    "("         réduction par utilisation de la règle 36 (implicitCallable)
    "("         [réduction par utilisation de la règle 164 (variable)]
    "."         réduction par utilisation de la règle 36 (implicitCallable)
    "."         [réduction par utilisation de la règle 164 (variable)]
    ".'"        réduction par utilisation de la règle 164 (variable)
    "+"         réduction par utilisation de la règle 36 (implicitCallable)
    "+"         [réduction par utilisation de la règle 164 (variable)]
    "-"         réduction par utilisation de la règle 36 (implicitCallable)
    "-"         [réduction par utilisation de la règle 164 (variable)]
    "*"         réduction par utilisation de la règle 36 (implicitCallable)
    "*"         [réduction par utilisation de la règle 164 (variable)]
    ".*"        réduction par utilisation de la règle 36 (implicitCallable)
    ".*"        [réduction par utilisation de la règle 164 (variable)]
    ".*."       réduction par utilisation de la règle 36 (implicitCallable)
    ".*."       [réduction par utilisation de la règle 164 (variable)]
    "/"         réduction par utilisation de la règle 36 (implicitCallable)
    "/"         [réduction par utilisation de la règle 164 (variable)]
    "./"        réduction par utilisation de la règle 36 (implicitCallable)
    "./"        [réduction par utilisation de la règle 164 (variable)]
    "/."        réduction par utilisation de la règle 36 (implicitCallable)
    "/."        [réduction par utilisation de la règle 164 (variable)]
    "./."       réduction par utilisation de la règle 36 (implicitCallable)
    "./."       [réduction par utilisation de la règle 164 (variable)]
    "\\"        réduction par utilisation de la règle 36 (implicitCallable)
    "\\"        [réduction par utilisation de la règle 164 (variable)]
    ".\\"       réduction par utilisation de la règle 36 (implicitCallable)
    ".\\"       [réduction par utilisation de la règle 164 (variable)]
    ".\\."      réduction par utilisation de la règle 36 (implicitCallable)
    ".\\."      [réduction par utilisation de la règle 164 (variable)]
    "** or ^"   réduction par utilisation de la règle 164 (variable)
    ".^"        réduction par utilisation de la règle 164 (variable)
    "=="        réduction par utilisation de la règle 164 (variable)
    "<> or ~="  réduction par utilisation de la règle 164 (variable)
    "<"         réduction par utilisation de la règle 164 (variable)
    "<="        réduction par utilisation de la règle 164 (variable)
    ">"         réduction par utilisation de la règle 164 (variable)
    ">="        réduction par utilisation de la règle 164 (variable)
    "&"         réduction par utilisation de la règle 164 (variable)
    "|"         réduction par utilisation de la règle 164 (variable)
    $défaut    réduction par utilisation de la règle 36 (implicitCallable)


état 101

   38 implicitCallable: "float" .  ["end of file", "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "(", "[", "{", ".", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "else", "elseif", "end", "case", "endfunction", "catch", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  166 variable: "float" .  ["'", ":", "(", ".", ".'", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|"]

    "'"         réduction par utilisation de la règle 166 (variable)
    ":"         réduction par utilisation de la règle 166 (variable)
    "("         réduction par utilisation de la règle 38 (implicitCallable)
    "("         [réduction par utilisation de la règle 166 (variable)]
    "."         réduction par utilisation de la règle 38 (implicitCallable)
    "."         [réduction par utilisation de la règle 166 (variable)]
    ".'"        réduction par utilisation de la règle 166 (variable)
    "+"         réduction par utilisation de la règle 38 (implicitCallable)
    "+"         [réduction par utilisation de la règle 166 (variable)]
    "-"         réduction par utilisation de la règle 38 (implicitCallable)
    "-"         [réduction par utilisation de la règle 166 (variable)]
    "*"         réduction par utilisation de la règle 38 (implicitCallable)
    "*"         [réduction par utilisation de la règle 166 (variable)]
    ".*"        réduction par utilisation de la règle 38 (implicitCallable)
    ".*"        [réduction par utilisation de la règle 166 (variable)]
    ".*."       réduction par utilisation de la règle 38 (implicitCallable)
    ".*."       [réduction par utilisation de la règle 166 (variable)]
    "/"         réduction par utilisation de la règle 38 (implicitCallable)
    "/"         [réduction par utilisation de la règle 166 (variable)]
    "./"        réduction par utilisation de la règle 38 (implicitCallable)
    "./"        [réduction par utilisation de la règle 166 (variable)]
    "/."        réduction par utilisation de la règle 38 (implicitCallable)
    "/."        [réduction par utilisation de la règle 166 (variable)]
    "./."       réduction par utilisation de la règle 38 (implicitCallable)
    "./."       [réduction par utilisation de la règle 166 (variable)]
    "\\"        réduction par utilisation de la règle 38 (implicitCallable)
    "\\"        [réduction par utilisation de la règle 166 (variable)]
    ".\\"       réduction par utilisation de la règle 38 (implicitCallable)
    ".\\"       [réduction par utilisation de la règle 166 (variable)]
    ".\\."      réduction par utilisation de la règle 38 (implicitCallable)
    ".\\."      [réduction par utilisation de la règle 166 (variable)]
    "** or ^"   réduction par utilisation de la règle 166 (variable)
    ".^"        réduction par utilisation de la règle 166 (variable)
    "=="        réduction par utilisation de la règle 166 (variable)
    "<> or ~="  réduction par utilisation de la règle 166 (variable)
    "<"         réduction par utilisation de la règle 166 (variable)
    "<="        réduction par utilisation de la règle 166 (variable)
    ">"         réduction par utilisation de la règle 166 (variable)
    ">="        réduction par utilisation de la règle 166 (variable)
    "&"         réduction par utilisation de la règle 166 (variable)
    "|"         réduction par utilisation de la règle 166 (variable)
    $défaut    réduction par utilisation de la règle 38 (implicitCallable)


état 102

   37 implicitCallable: "number" .  ["end of file", "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "(", "[", "{", ".", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "else", "elseif", "end", "case", "endfunction", "catch", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  165 variable: "number" .  ["'", ":", "(", ".", ".'", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|"]

    "'"         réduction par utilisation de la règle 165 (variable)
    ":"         réduction par utilisation de la règle 165 (variable)
    "("         réduction par utilisation de la règle 37 (implicitCallable)
    "("         [réduction par utilisation de la règle 165 (variable)]
    "."         réduction par utilisation de la règle 37 (implicitCallable)
    "."         [réduction par utilisation de la règle 165 (variable)]
    ".'"        réduction par utilisation de la règle 165 (variable)
    "+"         réduction par utilisation de la règle 37 (implicitCallable)
    "+"         [réduction par utilisation de la règle 165 (variable)]
    "-"         réduction par utilisation de la règle 37 (implicitCallable)
    "-"         [réduction par utilisation de la règle 165 (variable)]
    "*"         réduction par utilisation de la règle 37 (implicitCallable)
    "*"         [réduction par utilisation de la règle 165 (variable)]
    ".*"        réduction par utilisation de la règle 37 (implicitCallable)
    ".*"        [réduction par utilisation de la règle 165 (variable)]
    ".*."       réduction par utilisation de la règle 37 (implicitCallable)
    ".*."       [réduction par utilisation de la règle 165 (variable)]
    "/"         réduction par utilisation de la règle 37 (implicitCallable)
    "/"         [réduction par utilisation de la règle 165 (variable)]
    "./"        réduction par utilisation de la règle 37 (implicitCallable)
    "./"        [réduction par utilisation de la règle 165 (variable)]
    "/."        réduction par utilisation de la règle 37 (implicitCallable)
    "/."        [réduction par utilisation de la règle 165 (variable)]
    "./."       réduction par utilisation de la règle 37 (implicitCallable)
    "./."       [réduction par utilisation de la règle 165 (variable)]
    "\\"        réduction par utilisation de la règle 37 (implicitCallable)
    "\\"        [réduction par utilisation de la règle 165 (variable)]
    ".\\"       réduction par utilisation de la règle 37 (implicitCallable)
    ".\\"       [réduction par utilisation de la règle 165 (variable)]
    ".\\."      réduction par utilisation de la règle 37 (implicitCallable)
    ".\\."      [réduction par utilisation de la règle 165 (variable)]
    "** or ^"   réduction par utilisation de la règle 165 (variable)
    ".^"        réduction par utilisation de la règle 165 (variable)
    "=="        réduction par utilisation de la règle 165 (variable)
    "<> or ~="  réduction par utilisation de la règle 165 (variable)
    "<"         réduction par utilisation de la règle 165 (variable)
    "<="        réduction par utilisation de la règle 165 (variable)
    ">"         réduction par utilisation de la règle 165 (variable)
    ">="        réduction par utilisation de la règle 165 (variable)
    "&"         réduction par utilisation de la règle 165 (variable)
    "|"         réduction par utilisation de la règle 165 (variable)
    $défaut    réduction par utilisation de la règle 37 (implicitCallable)


état 103

   47 implicitCallable: "path" .

    $défaut  réduction par utilisation de la règle 47 (implicitCallable)


état 104

   34 implicitFunctionCall: "identifier" implicitCallable .  ["end of file", "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "(", "[", "{", "+", "-", "else", "elseif", "end", "case", "endfunction", "catch", "string", "identifier", "integer", "float", "number", "path", "line comment"]
   43 implicitCallable: implicitCallable . "." "identifier"
   44                 | implicitCallable . "." functionCall
   46                 | implicitCallable . rightOperand
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall

    "."     décalage et aller à l'état 227
    "+"     décalage et aller à l'état 119
    "-"     décalage et aller à l'état 120
    "*"     décalage et aller à l'état 121
    ".*"    décalage et aller à l'état 122
    ".*."   décalage et aller à l'état 123
    "/"     décalage et aller à l'état 124
    "./"    décalage et aller à l'état 125
    "/."    décalage et aller à l'état 126
    "./."   décalage et aller à l'état 127
    "\\"    décalage et aller à l'état 128
    ".\\"   décalage et aller à l'état 129
    ".\\."  décalage et aller à l'état 130

    "+"       [réduction par utilisation de la règle 34 (implicitFunctionCall)]
    "-"       [réduction par utilisation de la règle 34 (implicitFunctionCall)]
    $défaut  réduction par utilisation de la règle 34 (implicitFunctionCall)

    rightOperand  aller à l'état 228


état 105

   45 implicitCallable: simpleFunctionCall .  ["end of file", "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "(", "[", "{", ".", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "else", "elseif", "end", "case", "endfunction", "catch", "string", "identifier", "integer", "float", "number", "path", "line comment"]
   48 functionCall: simpleFunctionCall .  ["'", ":", ".", ".'", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|"]
   56 recursiveFunctionCall: simpleFunctionCall . "(" functionArgs ")"

    "("  décalage et aller à l'état 146

    "'"         réduction par utilisation de la règle 48 (functionCall)
    ":"         réduction par utilisation de la règle 48 (functionCall)
    "("         [réduction par utilisation de la règle 45 (implicitCallable)]
    "."         réduction par utilisation de la règle 45 (implicitCallable)
    "."         [réduction par utilisation de la règle 48 (functionCall)]
    ".'"        réduction par utilisation de la règle 48 (functionCall)
    "+"         réduction par utilisation de la règle 45 (implicitCallable)
    "+"         [réduction par utilisation de la règle 48 (functionCall)]
    "-"         réduction par utilisation de la règle 45 (implicitCallable)
    "-"         [réduction par utilisation de la règle 48 (functionCall)]
    "*"         réduction par utilisation de la règle 45 (implicitCallable)
    "*"         [réduction par utilisation de la règle 48 (functionCall)]
    ".*"        réduction par utilisation de la règle 45 (implicitCallable)
    ".*"        [réduction par utilisation de la règle 48 (functionCall)]
    ".*."       réduction par utilisation de la règle 45 (implicitCallable)
    ".*."       [réduction par utilisation de la règle 48 (functionCall)]
    "/"         réduction par utilisation de la règle 45 (implicitCallable)
    "/"         [réduction par utilisation de la règle 48 (functionCall)]
    "./"        réduction par utilisation de la règle 45 (implicitCallable)
    "./"        [réduction par utilisation de la règle 48 (functionCall)]
    "/."        réduction par utilisation de la règle 45 (implicitCallable)
    "/."        [réduction par utilisation de la règle 48 (functionCall)]
    "./."       réduction par utilisation de la règle 45 (implicitCallable)
    "./."       [réduction par utilisation de la règle 48 (functionCall)]
    "\\"        réduction par utilisation de la règle 45 (implicitCallable)
    "\\"        [réduction par utilisation de la règle 48 (functionCall)]
    ".\\"       réduction par utilisation de la règle 45 (implicitCallable)
    ".\\"       [réduction par utilisation de la règle 48 (functionCall)]
    ".\\."      réduction par utilisation de la règle 45 (implicitCallable)
    ".\\."      [réduction par utilisation de la règle 48 (functionCall)]
    "** or ^"   réduction par utilisation de la règle 48 (functionCall)
    ".^"        réduction par utilisation de la règle 48 (functionCall)
    "=="        réduction par utilisation de la règle 48 (functionCall)
    "<> or ~="  réduction par utilisation de la règle 48 (functionCall)
    "<"         réduction par utilisation de la règle 48 (functionCall)
    "<="        réduction par utilisation de la règle 48 (functionCall)
    ">"         réduction par utilisation de la règle 48 (functionCall)
    ">="        réduction par utilisation de la règle 48 (functionCall)
    "&"         réduction par utilisation de la règle 48 (functionCall)
    "|"         réduction par utilisation de la règle 48 (functionCall)
    $défaut    réduction par utilisation de la règle 45 (implicitCallable)


état 106

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  158         | variable . listableEnd
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"         décalage et aller à l'état 148
    ":"         décalage et aller à l'état 116
    "("         décalage et aller à l'état 149
    "."         décalage et aller à l'état 167
    ".'"        décalage et aller à l'état 151
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 152
    ".^"        décalage et aller à l'état 153
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140

    rightOperand   aller à l'état 154
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 155
    comparators    aller à l'état 156


état 107

    0 $accept: program "end of file" .

    $défaut  accepter


état 108

    4 expressions: recursiveExpression expression .  ["end of file", "else", "elseif", "end", "case", "endfunction", "catch"]
    5            | recursiveExpression expression . "line comment"
    8 recursiveExpression: recursiveExpression expression . expressionLineBreak
    9                    | recursiveExpression expression . "line comment" expressionLineBreak
   12 expressionLineBreak: . ";"
   13                    | . ","
   14                    | . "end of line"
   15                    | . expressionLineBreak ";"
   16                    | . expressionLineBreak ","
   17                    | . expressionLineBreak "end of line"

    "end of line"   décalage et aller à l'état 109
    ","             décalage et aller à l'état 110
    ";"             décalage et aller à l'état 111
    "line comment"  décalage et aller à l'état 229

    $défaut  réduction par utilisation de la règle 4 (expressions)

    expressionLineBreak  aller à l'état 230


état 109

   14 expressionLineBreak: "end of line" .

    $défaut  réduction par utilisation de la règle 14 (expressionLineBreak)


état 110

   13 expressionLineBreak: "," .

    $défaut  réduction par utilisation de la règle 13 (expressionLineBreak)


état 111

   12 expressionLineBreak: ";" .

    $défaut  réduction par utilisation de la règle 12 (expressionLineBreak)


état 112

    7 expressions: expression "line comment" .  ["end of file", "else", "elseif", "end", "case", "endfunction", "catch"]
   10 recursiveExpression: expression "line comment" . expressionLineBreak
   12 expressionLineBreak: . ";"
   13                    | . ","
   14                    | . "end of line"
   15                    | . expressionLineBreak ";"
   16                    | . expressionLineBreak ","
   17                    | . expressionLineBreak "end of line"

    "end of line"  décalage et aller à l'état 109
    ","            décalage et aller à l'état 110
    ";"            décalage et aller à l'état 111

    $défaut  réduction par utilisation de la règle 7 (expressions)

    expressionLineBreak  aller à l'état 231


état 113

   11 recursiveExpression: expression expressionLineBreak .  ["end of file", error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "line comment"]
   15 expressionLineBreak: expressionLineBreak . ";"
   16                    | expressionLineBreak . ","
   17                    | expressionLineBreak . "end of line"

    "end of line"  décalage et aller à l'état 232
    ","            décalage et aller à l'état 233
    ";"            décalage et aller à l'état 234

    $défaut  réduction par utilisation de la règle 11 (recursiveExpression)


état 114

   33 implicitFunctionCall: implicitFunctionCall implicitCallable .  ["end of file", "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "(", "[", "{", "+", "-", "else", "elseif", "end", "case", "endfunction", "catch", "string", "identifier", "integer", "float", "number", "path", "line comment"]
   43 implicitCallable: implicitCallable . "." "identifier"
   44                 | implicitCallable . "." functionCall
   46                 | implicitCallable . rightOperand
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall

    "."     décalage et aller à l'état 227
    "+"     décalage et aller à l'état 119
    "-"     décalage et aller à l'état 120
    "*"     décalage et aller à l'état 121
    ".*"    décalage et aller à l'état 122
    ".*."   décalage et aller à l'état 123
    "/"     décalage et aller à l'état 124
    "./"    décalage et aller à l'état 125
    "/."    décalage et aller à l'état 126
    "./."   décalage et aller à l'état 127
    "\\"    décalage et aller à l'état 128
    ".\\"   décalage et aller à l'état 129
    ".\\."  décalage et aller à l'état 130

    "+"       [réduction par utilisation de la règle 33 (implicitFunctionCall)]
    "-"       [réduction par utilisation de la règle 33 (implicitFunctionCall)]
    $défaut  réduction par utilisation de la règle 33 (implicitFunctionCall)

    rightOperand  aller à l'état 228


état 115

  124 operation: functionCall "'" .

    $défaut  réduction par utilisation de la règle 124 (operation)


état 116

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  150 listableBegin: ":" . variable
  151              | ":" . functionCall
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 235
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 236
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 117

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  157         | functionCall "." . variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"
  223 assignable: functionCall "." . variable
  224           | functionCall "." . functionCall

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 237
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 238
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 118

  125 operation: functionCall ".'" .

    $défaut  réduction par utilisation de la règle 125 (operation)


état 119

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  126 rightOperand: "+" . variable
  127             | "+" . functionCall
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 239
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 240
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 120

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  128 rightOperand: "-" . variable
  129             | "-" . functionCall
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 241
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 242
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 121

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  130 rightOperand: "*" . variable
  131             | "*" . functionCall
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 243
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 244
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 122

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  132 rightOperand: ".*" . variable
  133             | ".*" . functionCall
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 245
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 246
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 123

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  134 rightOperand: ".*." . variable
  135             | ".*." . functionCall
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 247
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 248
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 124

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  136 rightOperand: "/" . variable
  137             | "/" . functionCall
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 249
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 250
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 125

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  138 rightOperand: "./" . variable
  139             | "./" . functionCall
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 251
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 252
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 126

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  142 rightOperand: "/." . variable
  143             | "/." . functionCall
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 253
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 254
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 127

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  140 rightOperand: "./." . variable
  141             | "./." . functionCall
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 255
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 256
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 128

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  144 rightOperand: "\\" . variable
  145             | "\\" . functionCall
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 257
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 258
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 129

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  146 rightOperand: ".\\" . variable
  147             | ".\\" . functionCall
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 259
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 260
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 130

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  148 rightOperand: ".\\." . variable
  149             | ".\\." . functionCall
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 261
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 262
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 131

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  116          | functionCall "** or ^" . variable
  117          | . functionCall "** or ^" functionCall
  117          | functionCall "** or ^" . functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 263
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 264
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 132

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  120          | functionCall ".^" . variable
  121          | . functionCall ".^" functionCall
  121          | functionCall ".^" . functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 265
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 266
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 133

  321 comparators: "==" .

    $défaut  réduction par utilisation de la règle 321 (comparators)


état 134

  322 comparators: "<> or ~=" .

    $défaut  réduction par utilisation de la règle 322 (comparators)


état 135

  323 comparators: "<" .

    $défaut  réduction par utilisation de la règle 323 (comparators)


état 136

  324 comparators: "<=" .

    $défaut  réduction par utilisation de la règle 324 (comparators)


état 137

  325 comparators: ">" .

    $défaut  réduction par utilisation de la règle 325 (comparators)


état 138

  326 comparators: ">=" .

    $défaut  réduction par utilisation de la règle 326 (comparators)


état 139

  327 comparators: "&" .

    $défaut  réduction par utilisation de la règle 327 (comparators)


état 140

  328 comparators: "|" .

    $défaut  réduction par utilisation de la règle 328 (comparators)


état 141

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"
  215 variableDeclaration: functionCall "=" . variable
  216                    | functionCall "=" . functionCall
  218                    | functionCall "=" . ":"
  220                    | functionCall "=" . returnControl
  319 returnControl: . "return"
  320              | . "return" variable

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    ":"           décalage et aller à l'état 267
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "return"      décalage et aller à l'état 20
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 268
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 269
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    returnControl          aller à l'état 270


état 142

  109 operation: functionCall rightOperand .

    $défaut  réduction par utilisation de la règle 109 (operation)


état 143

  152 listableEnd: listableBegin . ":" variable
  153            | listableBegin . ":" functionCall
  154            | listableBegin .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "'", "~ or @", "$", ",", ";", "(", ")", "[", "]", "{", "}", ".", ".'", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]

    ":"  décalage et aller à l'état 271

    $défaut  réduction par utilisation de la règle 154 (listableEnd)

Conflit entre la règle 154 et le jeton ":" résolu par décalage (LISTABLE < ":").


état 144

  159 variable: functionCall listableEnd .

    $défaut  réduction par utilisation de la règle 159 (variable)


état 145

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  104           | functionCall comparators . comparable
  105 comparable: . variable
  106           | . functionCall
  107           | . ":"
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    ":"           décalage et aller à l'état 272
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 273
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    comparable             aller à l'état 274
    operation              aller à l'état 39
    variable               aller à l'état 275
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 146

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   56                      | simpleFunctionCall "(" . functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   58 functionArgs: . variable
   59             | . functionCall
   60             | . ":"
   61             | . variableDeclaration
   62             | .  [",", ")"]
   63             | . functionArgs "," variable
   64             | . functionArgs "," functionCall
   65             | . functionArgs "," ":"
   66             | . functionArgs "," variableDeclaration
   67             | . functionArgs ","
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"
  213 variableDeclaration: . assignable "=" variable
  214                    | . assignable "=" functionCall
  215                    | . functionCall "=" variable
  216                    | . functionCall "=" functionCall
  217                    | . assignable "=" ":"
  218                    | . functionCall "=" ":"
  219                    | . assignable "=" returnControl
  220                    | . functionCall "=" returnControl
  221 assignable: . variable "." "identifier"
  222           | . variable "." functionCall
  223           | . functionCall "." variable
  224           | . functionCall "." functionCall
  225           | . "identifier"
  226           | . multipleResults
  227 multipleResults: . "[" matrixOrCellColumns "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    ":"           décalage et aller à l'état 158
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 8
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 159
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    $défaut  réduction par utilisation de la règle 62 (functionArgs)

    functionCall           aller à l'état 160
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionArgs           aller à l'état 276
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 162
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 163
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45


état 147

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   57                      | recursiveFunctionCall "(" . functionArgs ")"
   58 functionArgs: . variable
   59             | . functionCall
   60             | . ":"
   61             | . variableDeclaration
   62             | .  [",", ")"]
   63             | . functionArgs "," variable
   64             | . functionArgs "," functionCall
   65             | . functionArgs "," ":"
   66             | . functionArgs "," variableDeclaration
   67             | . functionArgs ","
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"
  213 variableDeclaration: . assignable "=" variable
  214                    | . assignable "=" functionCall
  215                    | . functionCall "=" variable
  216                    | . functionCall "=" functionCall
  217                    | . assignable "=" ":"
  218                    | . functionCall "=" ":"
  219                    | . assignable "=" returnControl
  220                    | . functionCall "=" returnControl
  221 assignable: . variable "." "identifier"
  222           | . variable "." functionCall
  223           | . functionCall "." variable
  224           | . functionCall "." functionCall
  225           | . "identifier"
  226           | . multipleResults
  227 multipleResults: . "[" matrixOrCellColumns "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    ":"           décalage et aller à l'état 158
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 8
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 159
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    $défaut  réduction par utilisation de la règle 62 (functionArgs)

    functionCall           aller à l'état 160
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionArgs           aller à l'état 277
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 162
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 163
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45


état 148

  122 operation: variable "'" .

    $défaut  réduction par utilisation de la règle 122 (operation)


état 149

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   55                   | variable "(" . functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   58 functionArgs: . variable
   59             | . functionCall
   60             | . ":"
   61             | . variableDeclaration
   62             | .  [",", ")"]
   63             | . functionArgs "," variable
   64             | . functionArgs "," functionCall
   65             | . functionArgs "," ":"
   66             | . functionArgs "," variableDeclaration
   67             | . functionArgs ","
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"
  213 variableDeclaration: . assignable "=" variable
  214                    | . assignable "=" functionCall
  215                    | . functionCall "=" variable
  216                    | . functionCall "=" functionCall
  217                    | . assignable "=" ":"
  218                    | . functionCall "=" ":"
  219                    | . assignable "=" returnControl
  220                    | . functionCall "=" returnControl
  221 assignable: . variable "." "identifier"
  222           | . variable "." functionCall
  223           | . functionCall "." variable
  224           | . functionCall "." functionCall
  225           | . "identifier"
  226           | . multipleResults
  227 multipleResults: . "[" matrixOrCellColumns "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    ":"           décalage et aller à l'état 158
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 8
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 159
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    $défaut  réduction par utilisation de la règle 62 (functionArgs)

    functionCall           aller à l'état 160
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionArgs           aller à l'état 278
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 162
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 163
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45


état 150

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  156         | variable "." . "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"
  221 assignable: variable "." . "identifier"
  222           | variable "." . functionCall

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 279
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 280
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 106
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 151

  123 operation: variable ".'" .

    $défaut  réduction par utilisation de la règle 123 (operation)


état 152

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  114          | variable "** or ^" . variable
  115          | . variable "** or ^" functionCall
  115          | variable "** or ^" . functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 281
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 282
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 153

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  118          | variable ".^" . variable
  119          | . variable ".^" functionCall
  119          | variable ".^" . functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 283
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 284
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 154

  108 operation: variable rightOperand .

    $défaut  réduction par utilisation de la règle 108 (operation)


état 155

  158 variable: variable listableEnd .

    $défaut  réduction par utilisation de la règle 158 (variable)


état 156

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  103           | variable comparators . comparable
  104           | . functionCall comparators comparable
  105 comparable: . variable
  106           | . functionCall
  107           | . ":"
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    ":"           décalage et aller à l'état 272
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 273
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    comparable             aller à l'état 285
    operation              aller à l'état 39
    variable               aller à l'état 275
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 157

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"
  213 variableDeclaration: assignable "=" . variable
  214                    | assignable "=" . functionCall
  217                    | assignable "=" . ":"
  219                    | assignable "=" . returnControl
  319 returnControl: . "return"
  320              | . "return" variable

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    ":"           décalage et aller à l'état 286
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "return"      décalage et aller à l'état 20
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 287
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 288
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    returnControl          aller à l'état 289


état 158

   60 functionArgs: ":" .

    $défaut  réduction par utilisation de la règle 60 (functionArgs)


état 159

  163 variable: "identifier" .  ["'", ",", ":", "(", ")", ".", ".'", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|"]
  225 assignable: "identifier" .  ["="]

    "="       réduction par utilisation de la règle 225 (assignable)
    $défaut  réduction par utilisation de la règle 163 (variable)


état 160

   59 functionArgs: functionCall .  [",", ")"]
  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  157 variable: functionCall . "." variable
  159         | functionCall . listableEnd
  215 variableDeclaration: functionCall . "=" variable
  216                    | functionCall . "=" functionCall
  218                    | functionCall . "=" ":"
  220                    | functionCall . "=" returnControl
  223 assignable: functionCall . "." variable
  224           | functionCall . "." functionCall
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"         décalage et aller à l'état 115
    ":"         décalage et aller à l'état 116
    "."         décalage et aller à l'état 117
    ".'"        décalage et aller à l'état 118
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 131
    ".^"        décalage et aller à l'état 132
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140
    "="         décalage et aller à l'état 141

    $défaut  réduction par utilisation de la règle 59 (functionArgs)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145


état 161

   53 specificFunctionCall: "%t or %T" "(" functionArgs . ")"
   63 functionArgs: functionArgs . "," variable
   64             | functionArgs . "," functionCall
   65             | functionArgs . "," ":"
   66             | functionArgs . "," variableDeclaration
   67             | functionArgs . ","

    ","  décalage et aller à l'état 290
    ")"  décalage et aller à l'état 291


état 162

   55 simpleFunctionCall: variable . "(" functionArgs ")"
   58 functionArgs: variable .  [",", ")"]
  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  158         | variable . listableEnd
  221 assignable: variable . "." "identifier"
  222           | variable . "." functionCall
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"         décalage et aller à l'état 148
    ":"         décalage et aller à l'état 116
    "("         décalage et aller à l'état 149
    "."         décalage et aller à l'état 150
    ".'"        décalage et aller à l'état 151
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 152
    ".^"        décalage et aller à l'état 153
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140

    $défaut  réduction par utilisation de la règle 58 (functionArgs)

    rightOperand   aller à l'état 154
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 155
    comparators    aller à l'état 156


état 163

   61 functionArgs: variableDeclaration .

    $défaut  réduction par utilisation de la règle 61 (functionArgs)


état 164

   54 specificFunctionCall: "%f or %F" "(" functionArgs . ")"
   63 functionArgs: functionArgs . "," variable
   64             | functionArgs . "," functionCall
   65             | functionArgs . "," ":"
   66             | functionArgs . "," variableDeclaration
   67             | functionArgs . ","

    ","  décalage et aller à l'état 290
    ")"  décalage et aller à l'état 292


état 165

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  191       | "[" matrixOrCellColumns . "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"
  196 matrixOrCellLineBreak: . ";"
  197                      | . "end of line"
  198                      | . ";" "end of line"
  199 matrixOrCellLine: matrixOrCellColumns . matrixOrCellLineBreak
  200                 | matrixOrCellColumns . "line comment" "end of line"
  201                 | matrixOrCellColumns . ";" "line comment" "end of line"
  202                 | matrixOrCellColumns . matrixOrCellColumnsBreak matrixOrCellLineBreak
  203                 | matrixOrCellColumns . matrixOrCellColumnsBreak "line comment" "end of line"
  204                 | matrixOrCellColumns . matrixOrCellColumnsBreak ";" "line comment" "end of line"
  205 matrixOrCellColumns: matrixOrCellColumns . matrixOrCellColumnsBreak variable
  206                    | matrixOrCellColumns . matrixOrCellColumnsBreak functionCall
  207                    | matrixOrCellColumns . variable
  208                    | matrixOrCellColumns . functionCall
  211 matrixOrCellColumnsBreak: . matrixOrCellColumnsBreak ","
  212                         | . ","

    "end of line"   décalage et aller à l'état 178
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    ","             décalage et aller à l'état 179
    ";"             décalage et aller à l'état 180
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 55
    "]"             décalage et aller à l'état 293
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 56
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 182

    functionCall              aller à l'état 183
    specificFunctionCall      aller à l'état 33
    simpleFunctionCall        aller à l'état 34
    recursiveFunctionCall     aller à l'état 35
    comparison                aller à l'état 38
    operation                 aller à l'état 39
    variable                  aller à l'état 184
    cell                      aller à l'état 41
    matrix                    aller à l'état 42
    matrixOrCellLineBreak     aller à l'état 185
    matrixOrCellColumnsBreak  aller à l'état 186


état 166

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  157         | functionCall "." . variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 93
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 294
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 167

  156 variable: variable "." . "identifier"

    "identifier"  décalage et aller à l'état 295


état 168

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  177 variableFields: functionCall "," . functionCall
  178               | functionCall "," . variable
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 296
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 297
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 169

   51 functionCall: "(" functionCall ")" .

    $défaut  réduction par utilisation de la règle 51 (functionCall)


état 170

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  176 variableFields: variable "," . variable
  179               | variable "," . functionCall
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 298
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 299
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 171

  171 variable: "(" variable ")" .

    $défaut  réduction par utilisation de la règle 171 (variable)


état 172

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  174 variableFields: variableFields "," . variable
  175               | variableFields "," . functionCall
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 300
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 301
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 173

  172 variable: "(" variableFields ")" .

    $défaut  réduction par utilisation de la règle 172 (variable)


état 174

  332 lineEnd: "line comment" "end of line" .

    $défaut  réduction par utilisation de la règle 332 (lineEnd)


état 175

  187 matrix: "[" matrixOrCellLines "]" .

    $défaut  réduction par utilisation de la règle 187 (matrix)


état 176

  194 matrixOrCellLines: matrixOrCellLines matrixOrCellLine .

    $défaut  réduction par utilisation de la règle 194 (matrixOrCellLines)


état 177

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  189       | "[" matrixOrCellLines matrixOrCellColumns . "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"
  196 matrixOrCellLineBreak: . ";"
  197                      | . "end of line"
  198                      | . ";" "end of line"
  199 matrixOrCellLine: matrixOrCellColumns . matrixOrCellLineBreak
  200                 | matrixOrCellColumns . "line comment" "end of line"
  201                 | matrixOrCellColumns . ";" "line comment" "end of line"
  202                 | matrixOrCellColumns . matrixOrCellColumnsBreak matrixOrCellLineBreak
  203                 | matrixOrCellColumns . matrixOrCellColumnsBreak "line comment" "end of line"
  204                 | matrixOrCellColumns . matrixOrCellColumnsBreak ";" "line comment" "end of line"
  205 matrixOrCellColumns: matrixOrCellColumns . matrixOrCellColumnsBreak variable
  206                    | matrixOrCellColumns . matrixOrCellColumnsBreak functionCall
  207                    | matrixOrCellColumns . variable
  208                    | matrixOrCellColumns . functionCall
  211 matrixOrCellColumnsBreak: . matrixOrCellColumnsBreak ","
  212                         | . ","

    "end of line"   décalage et aller à l'état 178
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    ","             décalage et aller à l'état 179
    ";"             décalage et aller à l'état 180
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 55
    "]"             décalage et aller à l'état 302
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 56
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 182

    functionCall              aller à l'état 183
    specificFunctionCall      aller à l'état 33
    simpleFunctionCall        aller à l'état 34
    recursiveFunctionCall     aller à l'état 35
    comparison                aller à l'état 38
    operation                 aller à l'état 39
    variable                  aller à l'état 184
    cell                      aller à l'état 41
    matrix                    aller à l'état 42
    matrixOrCellLineBreak     aller à l'état 185
    matrixOrCellColumnsBreak  aller à l'état 186


état 178

  197 matrixOrCellLineBreak: "end of line" .

    $défaut  réduction par utilisation de la règle 197 (matrixOrCellLineBreak)


état 179

  212 matrixOrCellColumnsBreak: "," .

    $défaut  réduction par utilisation de la règle 212 (matrixOrCellColumnsBreak)


état 180

  196 matrixOrCellLineBreak: ";" .  ["%t or %T", "%f or %F", "~ or @", "$", "(", "[", "]", "{", "}", "+", "-", "string", "identifier", "integer", "float", "number"]
  198                      | ";" . "end of line"
  201 matrixOrCellLine: matrixOrCellColumns ";" . "line comment" "end of line"

    "end of line"   décalage et aller à l'état 303
    "line comment"  décalage et aller à l'état 304

    $défaut  réduction par utilisation de la règle 196 (matrixOrCellLineBreak)


état 181

  191 matrix: "[" matrixOrCellColumns "]" .  ["end of file", "end of line", "'", ",", ":", ";", "(", ")", ".", ".'", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "else", "elseif", "end", "case", "endfunction", "catch", "line comment"]
  227 multipleResults: "[" matrixOrCellColumns "]" .  ["="]

    "="       réduction par utilisation de la règle 227 (multipleResults)
    $défaut  réduction par utilisation de la règle 191 (matrix)


état 182

  200 matrixOrCellLine: matrixOrCellColumns "line comment" . "end of line"

    "end of line"  décalage et aller à l'état 305


état 183

  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  157 variable: functionCall . "." variable
  159         | functionCall . listableEnd
  208 matrixOrCellColumns: matrixOrCellColumns functionCall .  ["end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "(", "[", "]", "{", "}", "string", "identifier", "integer", "float", "number", "line comment"]
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"         décalage et aller à l'état 115
    ":"         décalage et aller à l'état 116
    "."         décalage et aller à l'état 166
    ".'"        décalage et aller à l'état 118
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 131
    ".^"        décalage et aller à l'état 132
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140

    $défaut  réduction par utilisation de la règle 208 (matrixOrCellColumns)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145

Conflit entre la règle 208 et le jeton "+" résolu par décalage (HIGHLEVEL < "+").
Conflit entre la règle 208 et le jeton "-" résolu par décalage (HIGHLEVEL < "-").


état 184

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  158         | variable . listableEnd
  207 matrixOrCellColumns: matrixOrCellColumns variable .  ["end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "[", "]", "{", "}", "string", "identifier", "integer", "float", "number", "line comment"]
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"         décalage et aller à l'état 148
    ":"         décalage et aller à l'état 116
    "("         décalage et aller à l'état 149
    "."         décalage et aller à l'état 167
    ".'"        décalage et aller à l'état 151
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 152
    ".^"        décalage et aller à l'état 153
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140

    $défaut  réduction par utilisation de la règle 207 (matrixOrCellColumns)

    rightOperand   aller à l'état 154
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 155
    comparators    aller à l'état 156

Conflit entre la règle 207 et le jeton "(" résolu par décalage (HIGHLEVEL < "(").
Conflit entre la règle 207 et le jeton "+" résolu par décalage (HIGHLEVEL < "+").
Conflit entre la règle 207 et le jeton "-" résolu par décalage (HIGHLEVEL < "-").


état 185

  199 matrixOrCellLine: matrixOrCellColumns matrixOrCellLineBreak .

    $défaut  réduction par utilisation de la règle 199 (matrixOrCellLine)


état 186

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"
  196 matrixOrCellLineBreak: . ";"
  197                      | . "end of line"
  198                      | . ";" "end of line"
  202 matrixOrCellLine: matrixOrCellColumns matrixOrCellColumnsBreak . matrixOrCellLineBreak
  203                 | matrixOrCellColumns matrixOrCellColumnsBreak . "line comment" "end of line"
  204                 | matrixOrCellColumns matrixOrCellColumnsBreak . ";" "line comment" "end of line"
  205 matrixOrCellColumns: matrixOrCellColumns matrixOrCellColumnsBreak . variable
  206                    | matrixOrCellColumns matrixOrCellColumnsBreak . functionCall
  211 matrixOrCellColumnsBreak: matrixOrCellColumnsBreak . ","

    "end of line"   décalage et aller à l'état 178
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    ","             décalage et aller à l'état 306
    ";"             décalage et aller à l'état 307
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 55
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 56
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 308

    functionCall           aller à l'état 309
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 310
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    matrixOrCellLineBreak  aller à l'état 311


état 187

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  188       | "[" lineEnd matrixOrCellLines . "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  190       | "[" lineEnd matrixOrCellLines . matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"
  194 matrixOrCellLines: matrixOrCellLines . matrixOrCellLine
  199 matrixOrCellLine: . matrixOrCellColumns matrixOrCellLineBreak
  200                 | . matrixOrCellColumns "line comment" "end of line"
  201                 | . matrixOrCellColumns ";" "line comment" "end of line"
  202                 | . matrixOrCellColumns matrixOrCellColumnsBreak matrixOrCellLineBreak
  203                 | . matrixOrCellColumns matrixOrCellColumnsBreak "line comment" "end of line"
  204                 | . matrixOrCellColumns matrixOrCellColumnsBreak ";" "line comment" "end of line"
  205 matrixOrCellColumns: . matrixOrCellColumns matrixOrCellColumnsBreak variable
  206                    | . matrixOrCellColumns matrixOrCellColumnsBreak functionCall
  207                    | . matrixOrCellColumns variable
  208                    | . matrixOrCellColumns functionCall
  209                    | . variable
  210                    | . functionCall

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "]"           décalage et aller à l'état 312
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 65
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 66
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    matrixOrCellLine       aller à l'état 176
    matrixOrCellColumns    aller à l'état 313


état 188

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  192       | "[" lineEnd matrixOrCellColumns . "]"
  193       | . "[" "]"
  196 matrixOrCellLineBreak: . ";"
  197                      | . "end of line"
  198                      | . ";" "end of line"
  199 matrixOrCellLine: matrixOrCellColumns . matrixOrCellLineBreak
  200                 | matrixOrCellColumns . "line comment" "end of line"
  201                 | matrixOrCellColumns . ";" "line comment" "end of line"
  202                 | matrixOrCellColumns . matrixOrCellColumnsBreak matrixOrCellLineBreak
  203                 | matrixOrCellColumns . matrixOrCellColumnsBreak "line comment" "end of line"
  204                 | matrixOrCellColumns . matrixOrCellColumnsBreak ";" "line comment" "end of line"
  205 matrixOrCellColumns: matrixOrCellColumns . matrixOrCellColumnsBreak variable
  206                    | matrixOrCellColumns . matrixOrCellColumnsBreak functionCall
  207                    | matrixOrCellColumns . variable
  208                    | matrixOrCellColumns . functionCall
  211 matrixOrCellColumnsBreak: . matrixOrCellColumnsBreak ","
  212                         | . ","

    "end of line"   décalage et aller à l'état 178
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    ","             décalage et aller à l'état 179
    ";"             décalage et aller à l'état 180
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 55
    "]"             décalage et aller à l'état 314
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 56
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 182

    functionCall              aller à l'état 183
    specificFunctionCall      aller à l'état 33
    simpleFunctionCall        aller à l'état 34
    recursiveFunctionCall     aller à l'état 35
    comparison                aller à l'état 38
    operation                 aller à l'état 39
    variable                  aller à l'état 184
    cell                      aller à l'état 41
    matrix                    aller à l'état 42
    matrixOrCellLineBreak     aller à l'état 185
    matrixOrCellColumnsBreak  aller à l'état 186


état 189

  180 cell: "{" matrixOrCellLines "}" .

    $défaut  réduction par utilisation de la règle 180 (cell)


état 190

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  182     | "{" matrixOrCellLines matrixOrCellColumns . "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"
  196 matrixOrCellLineBreak: . ";"
  197                      | . "end of line"
  198                      | . ";" "end of line"
  199 matrixOrCellLine: matrixOrCellColumns . matrixOrCellLineBreak
  200                 | matrixOrCellColumns . "line comment" "end of line"
  201                 | matrixOrCellColumns . ";" "line comment" "end of line"
  202                 | matrixOrCellColumns . matrixOrCellColumnsBreak matrixOrCellLineBreak
  203                 | matrixOrCellColumns . matrixOrCellColumnsBreak "line comment" "end of line"
  204                 | matrixOrCellColumns . matrixOrCellColumnsBreak ";" "line comment" "end of line"
  205 matrixOrCellColumns: matrixOrCellColumns . matrixOrCellColumnsBreak variable
  206                    | matrixOrCellColumns . matrixOrCellColumnsBreak functionCall
  207                    | matrixOrCellColumns . variable
  208                    | matrixOrCellColumns . functionCall
  211 matrixOrCellColumnsBreak: . matrixOrCellColumnsBreak ","
  212                         | . ","

    "end of line"   décalage et aller à l'état 178
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    ","             décalage et aller à l'état 179
    ";"             décalage et aller à l'état 180
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 55
    "{"             décalage et aller à l'état 9
    "}"             décalage et aller à l'état 315
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 56
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 182

    functionCall              aller à l'état 183
    specificFunctionCall      aller à l'état 33
    simpleFunctionCall        aller à l'état 34
    recursiveFunctionCall     aller à l'état 35
    comparison                aller à l'état 38
    operation                 aller à l'état 39
    variable                  aller à l'état 184
    cell                      aller à l'état 41
    matrix                    aller à l'état 42
    matrixOrCellLineBreak     aller à l'état 185
    matrixOrCellColumnsBreak  aller à l'état 186


état 191

  184 cell: "{" matrixOrCellColumns "}" .

    $défaut  réduction par utilisation de la règle 184 (cell)


état 192

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  181     | "{" lineEnd matrixOrCellLines . "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  183     | "{" lineEnd matrixOrCellLines . matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"
  194 matrixOrCellLines: matrixOrCellLines . matrixOrCellLine
  199 matrixOrCellLine: . matrixOrCellColumns matrixOrCellLineBreak
  200                 | . matrixOrCellColumns "line comment" "end of line"
  201                 | . matrixOrCellColumns ";" "line comment" "end of line"
  202                 | . matrixOrCellColumns matrixOrCellColumnsBreak matrixOrCellLineBreak
  203                 | . matrixOrCellColumns matrixOrCellColumnsBreak "line comment" "end of line"
  204                 | . matrixOrCellColumns matrixOrCellColumnsBreak ";" "line comment" "end of line"
  205 matrixOrCellColumns: . matrixOrCellColumns matrixOrCellColumnsBreak variable
  206                    | . matrixOrCellColumns matrixOrCellColumnsBreak functionCall
  207                    | . matrixOrCellColumns variable
  208                    | . matrixOrCellColumns functionCall
  209                    | . variable
  210                    | . functionCall

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "}"           décalage et aller à l'état 316
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 65
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 66
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    matrixOrCellLine       aller à l'état 176
    matrixOrCellColumns    aller à l'état 317


état 193

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  185     | "{" lineEnd matrixOrCellColumns . "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"
  196 matrixOrCellLineBreak: . ";"
  197                      | . "end of line"
  198                      | . ";" "end of line"
  199 matrixOrCellLine: matrixOrCellColumns . matrixOrCellLineBreak
  200                 | matrixOrCellColumns . "line comment" "end of line"
  201                 | matrixOrCellColumns . ";" "line comment" "end of line"
  202                 | matrixOrCellColumns . matrixOrCellColumnsBreak matrixOrCellLineBreak
  203                 | matrixOrCellColumns . matrixOrCellColumnsBreak "line comment" "end of line"
  204                 | matrixOrCellColumns . matrixOrCellColumnsBreak ";" "line comment" "end of line"
  205 matrixOrCellColumns: matrixOrCellColumns . matrixOrCellColumnsBreak variable
  206                    | matrixOrCellColumns . matrixOrCellColumnsBreak functionCall
  207                    | matrixOrCellColumns . variable
  208                    | matrixOrCellColumns . functionCall
  211 matrixOrCellColumnsBreak: . matrixOrCellColumnsBreak ","
  212                         | . ","

    "end of line"   décalage et aller à l'état 178
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    ","             décalage et aller à l'état 179
    ";"             décalage et aller à l'état 180
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 55
    "{"             décalage et aller à l'état 9
    "}"             décalage et aller à l'état 318
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 56
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 182

    functionCall              aller à l'état 183
    specificFunctionCall      aller à l'état 33
    simpleFunctionCall        aller à l'état 34
    recursiveFunctionCall     aller à l'état 35
    comparison                aller à l'état 38
    operation                 aller à l'état 39
    variable                  aller à l'état 184
    cell                      aller à l'état 41
    matrix                    aller à l'état 42
    matrixOrCellLineBreak     aller à l'état 185
    matrixOrCellColumnsBreak  aller à l'état 186


état 194

  239 ifConditionBreak: "end of line" .

    $défaut  réduction par utilisation de la règle 239 (ifConditionBreak)


état 195

  237 ifConditionBreak: "," .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "then", "else", "elseif", "end", "select", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  238                 | "," . "end of line"

    "end of line"  décalage et aller à l'état 319

    $défaut  réduction par utilisation de la règle 237 (ifConditionBreak)


état 196

  235 ifConditionBreak: ";" .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "then", "else", "elseif", "end", "select", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  236                 | ";" . "end of line"

    "end of line"  décalage et aller à l'état 320

    $défaut  réduction par utilisation de la règle 235 (ifConditionBreak)


état 197

  235 ifConditionBreak: . ";"
  236                 | . ";" "end of line"
  237                 | . ","
  238                 | . "," "end of line"
  239                 | . "end of line"
  240 then: "then" .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "else", "elseif", "end", "select", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  243     | "then" . ifConditionBreak

    "end of line"  décalage et aller à l'état 194
    ","            décalage et aller à l'état 195
    ";"            décalage et aller à l'état 196

    $défaut  réduction par utilisation de la règle 240 (then)

    ifConditionBreak  aller à l'état 321


état 198

  241 then: ifConditionBreak . "then"
  242     | ifConditionBreak . "then" "end of line"
  244     | ifConditionBreak .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "else", "elseif", "end", "select", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]

    "then"  décalage et aller à l'état 322

    $défaut  réduction par utilisation de la règle 244 (then)


état 199

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"
  213 variableDeclaration: . assignable "=" variable
  214                    | . assignable "=" functionCall
  215                    | . functionCall "=" variable
  216                    | . functionCall "=" functionCall
  217                    | . assignable "=" ":"
  218                    | . functionCall "=" ":"
  219                    | . assignable "=" returnControl
  220                    | . functionCall "=" returnControl
  221 assignable: . variable "." "identifier"
  222           | . variable "." functionCall
  223           | . functionCall "." variable
  224           | . functionCall "." functionCall
  225           | . "identifier"
  226           | . multipleResults
  227 multipleResults: . "[" matrixOrCellColumns "]"
  228 ifControl: . "if" condition then thenBody "end"
  228          | "if" condition then . thenBody "end"
  229          | . "if" condition then thenBody else elseBody "end"
  229          | "if" condition then . thenBody else elseBody "end"
  230          | . "if" condition then thenBody elseIfControl "end"
  230          | "if" condition then . thenBody elseIfControl "end"
  231 thenBody: . expressions
  232         | .  ["else", "elseif", "end"]
  255 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  256              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  257              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  258              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  281 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  282           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  295 whileControl: . "while" condition whileConditionBreak whileBody "end"
  315 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  316           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  317           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  318           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  319 returnControl: . "return"
  320              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "else"    réduction par utilisation de la règle 232 (thenBody)
    "elseif"  réduction par utilisation de la règle 232 (thenBody)
    "end"     réduction par utilisation de la règle 232 (thenBody)

    expressions            aller à l'état 323
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    thenBody               aller à l'état 324
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 200

  261 selectConditionBreak: "end of line" .

    $défaut  réduction par utilisation de la règle 261 (selectConditionBreak)


état 201

  262 selectConditionBreak: "," . "end of line"

    "end of line"  décalage et aller à l'état 325


état 202

  263 selectConditionBreak: ";" . "end of line"

    "end of line"  décalage et aller à l'état 326


état 203

  257 selectControl: "select" selectable "line comment" . selectConditionBreak casesControl "end"
  258              | "select" selectable "line comment" . selectConditionBreak casesControl else elseBody "end"
  261 selectConditionBreak: . "end of line"
  262                     | . "," "end of line"
  263                     | . ";" "end of line"

    "end of line"  décalage et aller à l'état 200
    ","            décalage et aller à l'état 201
    ";"            décalage et aller à l'état 202

    selectConditionBreak  aller à l'état 327


état 204

  255 selectControl: "select" selectable selectConditionBreak . casesControl "end"
  256              | "select" selectable selectConditionBreak . casesControl else elseBody "end"
  264 casesControl: . "case" variable caseControlBreak caseBody
  265             | . comments "case" variable caseControlBreak caseBody
  266             | . "case" variable "line comment" "end of line" caseBody
  267             | . comments "case" variable "line comment" "end of line" caseBody
  268             | . casesControl "case" variable caseControlBreak caseBody
  269             | . casesControl "case" variable "line comment" "end of line" caseBody
  329 comments: . "line comment" "end of line"
  330         | . comments "line comment" "end of line"

    "case"          décalage et aller à l'état 328
    "line comment"  décalage et aller à l'état 329

    casesControl  aller à l'état 330
    comments      aller à l'état 331


état 205

   70 functionDeclaration: "function" "[" "]" . "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"

    "="  décalage et aller à l'état 332


état 206

   77 idList: "identifier" .

    $défaut  réduction par utilisation de la règle 77 (idList)


état 207

   69 functionDeclaration: "function" "[" functionDeclarationReturns . "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"

    "]"  décalage et aller à l'état 333


état 208

   72 functionDeclarationReturns: idList .  ["]"]
   76 idList: idList . "," "identifier"

    ","  décalage et aller à l'état 334

    $défaut  réduction par utilisation de la règle 72 (functionDeclarationReturns)


état 209

   73 functionDeclarationArguments: "(" . idList ")"
   74                             | "(" . ")"
   76 idList: . idList "," "identifier"
   77       | . "identifier"

    ")"           décalage et aller à l'état 335
    "identifier"  décalage et aller à l'état 206

    idList  aller à l'état 336


état 210

   68 functionDeclaration: "function" "identifier" "=" . "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"

    "identifier"  décalage et aller à l'état 337


état 211

   71 functionDeclaration: "function" "identifier" functionDeclarationArguments . functionDeclarationBreak functionBody "endfunction"
   78 functionDeclarationBreak: . lineEnd
   79                         | . ";"
   80                         | . ";" "end of line"
   81                         | . ","
   82                         | . "," "end of line"
  331 lineEnd: . "end of line"
  332        | . "line comment" "end of line"

    "end of line"   décalage et aller à l'état 62
    ","             décalage et aller à l'état 212
    ";"             décalage et aller à l'état 213
    "line comment"  décalage et aller à l'état 64

    functionDeclarationBreak  aller à l'état 338
    lineEnd                   aller à l'état 216


état 212

   81 functionDeclarationBreak: "," .  [error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "(", "[", "{", "+", "-", "if", "select", "function", "endfunction", "class", "endclass", "property", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
   82                         | "," . "end of line"

    "end of line"  décalage et aller à l'état 339

    "end of line"  [réduction par utilisation de la règle 81 (functionDeclarationBreak)]
    $défaut       réduction par utilisation de la règle 81 (functionDeclarationBreak)


état 213

   79 functionDeclarationBreak: ";" .  [error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "(", "[", "{", "+", "-", "if", "select", "function", "endfunction", "class", "endclass", "property", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
   80                         | ";" . "end of line"

    "end of line"  décalage et aller à l'état 340

    "end of line"  [réduction par utilisation de la règle 79 (functionDeclarationBreak)]
    $défaut       réduction par utilisation de la règle 79 (functionDeclarationBreak)


état 214

   85 classDeclaration: "class" "identifier" "<" . "identifier" functionDeclarationBreak slotsDeclaration "endclass"

    "identifier"  décalage et aller à l'état 341


état 215

   86 classDeclaration: "class" "identifier" functionDeclarationBreak . slotsDeclaration "endclass"
   87 slotsDeclaration: . slotsDeclaration slotDeclaration functionDeclarationBreak
   88                 | . slotsDeclaration functionDeclarationBreak
   89                 | .

    $défaut  réduction par utilisation de la règle 89 (slotsDeclaration)

    slotsDeclaration  aller à l'état 342


état 216

   78 functionDeclarationBreak: lineEnd .

    $défaut  réduction par utilisation de la règle 78 (functionDeclarationBreak)


état 217

  282 forControl: "for" "(" "identifier" . "=" forIterator ")" forConditionBreak forBody "end"

    "="  décalage et aller à l'état 343


état 218

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"
  281 forControl: "for" "identifier" "=" . forIterator forConditionBreak forBody "end"
  283 forIterator: . functionCall
  284            | . variable

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 344
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 345
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    forIterator            aller à l'état 346


état 219

  298 whileConditionBreak: "," .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "end", "select", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  307                    | "," . "end of line"

    "end of line"  décalage et aller à l'état 347

    $défaut  réduction par utilisation de la règle 298 (whileConditionBreak)


état 220

  299 whileConditionBreak: ";" .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "end", "select", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  308                    | ";" . "end of line"

    "end of line"  décalage et aller à l'état 348

    $défaut  réduction par utilisation de la règle 299 (whileConditionBreak)


état 221

  303 whileConditionBreak: "then" .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "end", "select", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  304                    | "then" . ","
  305                    | "then" . ";"
  312                    | "then" . "end of line"
  313                    | "then" . "," "end of line"
  314                    | "then" . ";" "end of line"

    "end of line"  décalage et aller à l'état 349
    ","            décalage et aller à l'état 350
    ";"            décalage et aller à l'état 351

    $défaut  réduction par utilisation de la règle 303 (whileConditionBreak)


état 222

  300 whileConditionBreak: "do" .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "end", "select", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  301                    | "do" . ","
  302                    | "do" . ";"
  309                    | "do" . "end of line"
  310                    | "do" . "," "end of line"
  311                    | "do" . ";" "end of line"

    "end of line"  décalage et aller à l'état 352
    ","            décalage et aller à l'état 353
    ";"            décalage et aller à l'état 354

    $défaut  réduction par utilisation de la règle 300 (whileConditionBreak)


état 223

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"
  213 variableDeclaration: . assignable "=" variable
  214                    | . assignable "=" functionCall
  215                    | . functionCall "=" variable
  216                    | . functionCall "=" functionCall
  217                    | . assignable "=" ":"
  218                    | . functionCall "=" ":"
  219                    | . assignable "=" returnControl
  220                    | . functionCall "=" returnControl
  221 assignable: . variable "." "identifier"
  222           | . variable "." functionCall
  223           | . functionCall "." variable
  224           | . functionCall "." functionCall
  225           | . "identifier"
  226           | . multipleResults
  227 multipleResults: . "[" matrixOrCellColumns "]"
  228 ifControl: . "if" condition then thenBody "end"
  229          | . "if" condition then thenBody else elseBody "end"
  230          | . "if" condition then thenBody elseIfControl "end"
  255 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  256              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  257              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  258              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  281 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  282           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  295 whileControl: . "while" condition whileConditionBreak whileBody "end"
  295             | "while" condition whileConditionBreak . whileBody "end"
  296 whileBody: . expressions
  297          | .  ["end"]
  315 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  316           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  317           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  318           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  319 returnControl: . "return"
  320              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "end"  réduction par utilisation de la règle 297 (whileBody)

    expressions            aller à l'état 355
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    whileBody              aller à l'état 356
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 224

  306 whileConditionBreak: lineEnd .

    $défaut  réduction par utilisation de la règle 306 (whileConditionBreak)


état 225

  315 tryControl: "try" "end of line" expressions . "catch" "end of line" expressions "end"
  317           | "try" "end of line" expressions . "catch" "line comment" "end of line" expressions "end"

    "catch"  décalage et aller à l'état 357


état 226

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"
  213 variableDeclaration: . assignable "=" variable
  214                    | . assignable "=" functionCall
  215                    | . functionCall "=" variable
  216                    | . functionCall "=" functionCall
  217                    | . assignable "=" ":"
  218                    | . functionCall "=" ":"
  219                    | . assignable "=" returnControl
  220                    | . functionCall "=" returnControl
  221 assignable: . variable "." "identifier"
  222           | . variable "." functionCall
  223           | . functionCall "." variable
  224           | . functionCall "." functionCall
  225           | . "identifier"
  226           | . multipleResults
  227 multipleResults: . "[" matrixOrCellColumns "]"
  228 ifControl: . "if" condition then thenBody "end"
  229          | . "if" condition then thenBody else elseBody "end"
  230          | . "if" condition then thenBody elseIfControl "end"
  255 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  256              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  257              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  258              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  281 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  282           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  295 whileControl: . "while" condition whileConditionBreak whileBody "end"
  315 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  316           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  316           | "try" "line comment" "end of line" . expressions "catch" "end of line" expressions "end"
  317           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  318           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  318           | "try" "line comment" "end of line" . expressions "catch" "line comment" "end of line" expressions "end"
  319 returnControl: . "return"
  320              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    expressions            aller à l'état 358
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 227

   43 implicitCallable: implicitCallable "." . "identifier"
   44                 | implicitCallable "." . functionCall
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 359
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 360
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 106
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 228

   46 implicitCallable: implicitCallable rightOperand .

    $défaut  réduction par utilisation de la règle 46 (implicitCallable)


état 229

    5 expressions: recursiveExpression expression "line comment" .  ["end of file", "else", "elseif", "end", "case", "endfunction", "catch"]
    9 recursiveExpression: recursiveExpression expression "line comment" . expressionLineBreak
   12 expressionLineBreak: . ";"
   13                    | . ","
   14                    | . "end of line"
   15                    | . expressionLineBreak ";"
   16                    | . expressionLineBreak ","
   17                    | . expressionLineBreak "end of line"

    "end of line"  décalage et aller à l'état 109
    ","            décalage et aller à l'état 110
    ";"            décalage et aller à l'état 111

    $défaut  réduction par utilisation de la règle 5 (expressions)

    expressionLineBreak  aller à l'état 361


état 230

    8 recursiveExpression: recursiveExpression expression expressionLineBreak .  ["end of file", error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "line comment"]
   15 expressionLineBreak: expressionLineBreak . ";"
   16                    | expressionLineBreak . ","
   17                    | expressionLineBreak . "end of line"

    "end of line"  décalage et aller à l'état 232
    ","            décalage et aller à l'état 233
    ";"            décalage et aller à l'état 234

    $défaut  réduction par utilisation de la règle 8 (recursiveExpression)


état 231

   10 recursiveExpression: expression "line comment" expressionLineBreak .  ["end of file", error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "line comment"]
   15 expressionLineBreak: expressionLineBreak . ";"
   16                    | expressionLineBreak . ","
   17                    | expressionLineBreak . "end of line"

    "end of line"  décalage et aller à l'état 232
    ","            décalage et aller à l'état 233
    ";"            décalage et aller à l'état 234

    $défaut  réduction par utilisation de la règle 10 (recursiveExpression)


état 232

   17 expressionLineBreak: expressionLineBreak "end of line" .

    $défaut  réduction par utilisation de la règle 17 (expressionLineBreak)


état 233

   16 expressionLineBreak: expressionLineBreak "," .

    $défaut  réduction par utilisation de la règle 16 (expressionLineBreak)


état 234

   15 expressionLineBreak: expressionLineBreak ";" .

    $défaut  réduction par utilisation de la règle 15 (expressionLineBreak)


état 235

  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  151              | ":" functionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  157 variable: functionCall . "." variable
  159         | functionCall . listableEnd
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"         décalage et aller à l'état 115
    "."         décalage et aller à l'état 166
    ".'"        décalage et aller à l'état 118
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 131
    ".^"        décalage et aller à l'état 132
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138

    $défaut  réduction par utilisation de la règle 151 (listableBegin)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145

Conflit entre la règle 151 et le jeton "'" résolu par décalage (COLON < "'").
Conflit entre la règle 151 et le jeton ":" résolu par réduction (%left ":").
Conflit entre la règle 151 et le jeton "." résolu par décalage (COLON < ".").
Conflit entre la règle 151 et le jeton ".'" résolu par décalage (COLON < ".'").
Conflit entre la règle 151 et le jeton "+" résolu par décalage (COLON < "+").
Conflit entre la règle 151 et le jeton "-" résolu par décalage (COLON < "-").
Conflit entre la règle 151 et le jeton "*" résolu par décalage (COLON < "*").
Conflit entre la règle 151 et le jeton ".*" résolu par décalage (COLON < ".*").
Conflit entre la règle 151 et le jeton ".*." résolu par décalage (COLON < ".*.").
Conflit entre la règle 151 et le jeton "/" résolu par décalage (COLON < "/").
Conflit entre la règle 151 et le jeton "./" résolu par décalage (COLON < "./").
Conflit entre la règle 151 et le jeton "/." résolu par décalage (COLON < "/.").
Conflit entre la règle 151 et le jeton "./." résolu par décalage (COLON < "./.").
Conflit entre la règle 151 et le jeton "\\" résolu par décalage (COLON < "\\").
Conflit entre la règle 151 et le jeton ".\\" résolu par décalage (COLON < ".\\").
Conflit entre la règle 151 et le jeton ".\\." résolu par décalage (COLON < ".\\.").
Conflit entre la règle 151 et le jeton "** or ^" résolu par décalage (COLON < "** or ^").
Conflit entre la règle 151 et le jeton ".^" résolu par décalage (COLON < ".^").
Conflit entre la règle 151 et le jeton "==" résolu par décalage (COLON < "==").
Conflit entre la règle 151 et le jeton "<> or ~=" résolu par décalage (COLON < "<> or ~=").
Conflit entre la règle 151 et le jeton "<" résolu par décalage (COLON < "<").
Conflit entre la règle 151 et le jeton "<=" résolu par décalage (COLON < "<=").
Conflit entre la règle 151 et le jeton ">" résolu par décalage (COLON < ">").
Conflit entre la règle 151 et le jeton ">=" résolu par décalage (COLON < ">=").
Conflit entre la règle 151 et le jeton "&" résolu par réduction ("&" < COLON).
Conflit entre la règle 151 et le jeton "|" résolu par réduction ("|" < COLON).


état 236

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  150              | ":" variable .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  158         | variable . listableEnd
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"         décalage et aller à l'état 148
    "."         décalage et aller à l'état 167
    ".'"        décalage et aller à l'état 151
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 152
    ".^"        décalage et aller à l'état 153
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138

    $défaut  réduction par utilisation de la règle 150 (listableBegin)

    rightOperand   aller à l'état 154
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 155
    comparators    aller à l'état 156

Conflit entre la règle 150 et le jeton "'" résolu par décalage (COLON < "'").
Conflit entre la règle 150 et le jeton ":" résolu par réduction (%left ":").
Conflit entre la règle 150 et le jeton "(" résolu par réduction ("(" < COLON).
Conflit entre la règle 150 et le jeton "." résolu par décalage (COLON < ".").
Conflit entre la règle 150 et le jeton ".'" résolu par décalage (COLON < ".'").
Conflit entre la règle 150 et le jeton "+" résolu par décalage (COLON < "+").
Conflit entre la règle 150 et le jeton "-" résolu par décalage (COLON < "-").
Conflit entre la règle 150 et le jeton "*" résolu par décalage (COLON < "*").
Conflit entre la règle 150 et le jeton ".*" résolu par décalage (COLON < ".*").
Conflit entre la règle 150 et le jeton ".*." résolu par décalage (COLON < ".*.").
Conflit entre la règle 150 et le jeton "/" résolu par décalage (COLON < "/").
Conflit entre la règle 150 et le jeton "./" résolu par décalage (COLON < "./").
Conflit entre la règle 150 et le jeton "/." résolu par décalage (COLON < "/.").
Conflit entre la règle 150 et le jeton "./." résolu par décalage (COLON < "./.").
Conflit entre la règle 150 et le jeton "\\" résolu par décalage (COLON < "\\").
Conflit entre la règle 150 et le jeton ".\\" résolu par décalage (COLON < ".\\").
Conflit entre la règle 150 et le jeton ".\\." résolu par décalage (COLON < ".\\.").
Conflit entre la règle 150 et le jeton "** or ^" résolu par décalage (COLON < "** or ^").
Conflit entre la règle 150 et le jeton ".^" résolu par décalage (COLON < ".^").
Conflit entre la règle 150 et le jeton "==" résolu par décalage (COLON < "==").
Conflit entre la règle 150 et le jeton "<> or ~=" résolu par décalage (COLON < "<> or ~=").
Conflit entre la règle 150 et le jeton "<" résolu par décalage (COLON < "<").
Conflit entre la règle 150 et le jeton "<=" résolu par décalage (COLON < "<=").
Conflit entre la règle 150 et le jeton ">" résolu par décalage (COLON < ">").
Conflit entre la règle 150 et le jeton ">=" résolu par décalage (COLON < ">=").
Conflit entre la règle 150 et le jeton "&" résolu par réduction ("&" < COLON).
Conflit entre la règle 150 et le jeton "|" résolu par réduction ("|" < COLON).


état 237

  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  157 variable: functionCall . "." variable
  159         | functionCall . listableEnd
  224 assignable: functionCall "." functionCall .  ["="]
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"         décalage et aller à l'état 115
    ":"         décalage et aller à l'état 116
    "."         décalage et aller à l'état 166
    ".'"        décalage et aller à l'état 118
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 131
    ".^"        décalage et aller à l'état 132
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140

    $défaut  réduction par utilisation de la règle 224 (assignable)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145


état 238

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  157         | functionCall "." variable .  ["end of file", "end of line", "'", ",", ":", ";", "(", ")", ".", ".'", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "else", "elseif", "end", "case", "endfunction", "catch", "line comment"]
  158         | variable . listableEnd
  223 assignable: functionCall "." variable .  ["="]
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "="       réduction par utilisation de la règle 223 (assignable)
    $défaut  réduction par utilisation de la règle 157 (variable)

    rightOperand   aller à l'état 154
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 155
    comparators    aller à l'état 156

Conflit entre la règle 157 et le jeton "'" résolu par réduction ("'" < DOT).
Conflit entre la règle 157 et le jeton ":" résolu par réduction (":" < DOT).
Conflit entre la règle 157 et le jeton "(" résolu par réduction ("(" < DOT).
Conflit entre la règle 157 et le jeton "." résolu par réduction (%left ".").
Conflit entre la règle 157 et le jeton ".'" résolu par réduction (".'" < DOT).
Conflit entre la règle 157 et le jeton "+" résolu par réduction ("+" < DOT).
Conflit entre la règle 157 et le jeton "-" résolu par réduction ("-" < DOT).
Conflit entre la règle 157 et le jeton "*" résolu par réduction ("*" < DOT).
Conflit entre la règle 157 et le jeton ".*" résolu par réduction (".*" < DOT).
Conflit entre la règle 157 et le jeton ".*." résolu par réduction (".*." < DOT).
Conflit entre la règle 157 et le jeton "/" résolu par réduction ("/" < DOT).
Conflit entre la règle 157 et le jeton "./" résolu par réduction ("./" < DOT).
Conflit entre la règle 157 et le jeton "/." résolu par réduction ("/." < DOT).
Conflit entre la règle 157 et le jeton "./." résolu par réduction ("./." < DOT).
Conflit entre la règle 157 et le jeton "\\" résolu par réduction ("\\" < DOT).
Conflit entre la règle 157 et le jeton ".\\" résolu par réduction (".\\" < DOT).
Conflit entre la règle 157 et le jeton ".\\." résolu par réduction (".\\." < DOT).
Conflit entre la règle 157 et le jeton "** or ^" résolu par réduction ("** or ^" < DOT).
Conflit entre la règle 157 et le jeton ".^" résolu par réduction (".^" < DOT).
Conflit entre la règle 157 et le jeton "==" résolu par réduction ("==" < DOT).
Conflit entre la règle 157 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < DOT).
Conflit entre la règle 157 et le jeton "<" résolu par réduction ("<" < DOT).
Conflit entre la règle 157 et le jeton "<=" résolu par réduction ("<=" < DOT).
Conflit entre la règle 157 et le jeton ">" résolu par réduction (">" < DOT).
Conflit entre la règle 157 et le jeton ">=" résolu par réduction (">=" < DOT).
Conflit entre la règle 157 et le jeton "&" résolu par réduction ("&" < DOT).
Conflit entre la règle 157 et le jeton "|" résolu par réduction ("|" < DOT).


état 239

  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  127             | "+" functionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  157 variable: functionCall . "." variable
  159         | functionCall . listableEnd
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"        décalage et aller à l'état 115
    "."        décalage et aller à l'état 166
    ".'"       décalage et aller à l'état 118
    "*"        décalage et aller à l'état 121
    ".*"       décalage et aller à l'état 122
    ".*."      décalage et aller à l'état 123
    "/"        décalage et aller à l'état 124
    "./"       décalage et aller à l'état 125
    "/."       décalage et aller à l'état 126
    "./."      décalage et aller à l'état 127
    "\\"       décalage et aller à l'état 128
    ".\\"      décalage et aller à l'état 129
    ".\\."     décalage et aller à l'état 130
    "** or ^"  décalage et aller à l'état 131
    ".^"       décalage et aller à l'état 132

    $défaut  réduction par utilisation de la règle 127 (rightOperand)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145

Conflit entre la règle 127 et le jeton "'" résolu par décalage (PLUS < "'").
Conflit entre la règle 127 et le jeton ":" résolu par réduction (":" < PLUS).
Conflit entre la règle 127 et le jeton "." résolu par décalage (PLUS < ".").
Conflit entre la règle 127 et le jeton ".'" résolu par décalage (PLUS < ".'").
Conflit entre la règle 127 et le jeton "+" résolu par réduction (%left "+").
Conflit entre la règle 127 et le jeton "-" résolu par réduction (%left "-").
Conflit entre la règle 127 et le jeton "*" résolu par décalage (PLUS < "*").
Conflit entre la règle 127 et le jeton ".*" résolu par décalage (PLUS < ".*").
Conflit entre la règle 127 et le jeton ".*." résolu par décalage (PLUS < ".*.").
Conflit entre la règle 127 et le jeton "/" résolu par décalage (PLUS < "/").
Conflit entre la règle 127 et le jeton "./" résolu par décalage (PLUS < "./").
Conflit entre la règle 127 et le jeton "/." résolu par décalage (PLUS < "/.").
Conflit entre la règle 127 et le jeton "./." résolu par décalage (PLUS < "./.").
Conflit entre la règle 127 et le jeton "\\" résolu par décalage (PLUS < "\\").
Conflit entre la règle 127 et le jeton ".\\" résolu par décalage (PLUS < ".\\").
Conflit entre la règle 127 et le jeton ".\\." résolu par décalage (PLUS < ".\\.").
Conflit entre la règle 127 et le jeton "** or ^" résolu par décalage (PLUS < "** or ^").
Conflit entre la règle 127 et le jeton ".^" résolu par décalage (PLUS < ".^").
Conflit entre la règle 127 et le jeton "==" résolu par réduction ("==" < PLUS).
Conflit entre la règle 127 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < PLUS).
Conflit entre la règle 127 et le jeton "<" résolu par réduction ("<" < PLUS).
Conflit entre la règle 127 et le jeton "<=" résolu par réduction ("<=" < PLUS).
Conflit entre la règle 127 et le jeton ">" résolu par réduction (">" < PLUS).
Conflit entre la règle 127 et le jeton ">=" résolu par réduction (">=" < PLUS).
Conflit entre la règle 127 et le jeton "&" résolu par réduction ("&" < PLUS).
Conflit entre la règle 127 et le jeton "|" résolu par réduction ("|" < PLUS).


état 240

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  126             | "+" variable .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  158         | variable . listableEnd
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"        décalage et aller à l'état 148
    "."        décalage et aller à l'état 167
    ".'"       décalage et aller à l'état 151
    "*"        décalage et aller à l'état 121
    ".*"       décalage et aller à l'état 122
    ".*."      décalage et aller à l'état 123
    "/"        décalage et aller à l'état 124
    "./"       décalage et aller à l'état 125
    "/."       décalage et aller à l'état 126
    "./."      décalage et aller à l'état 127
    "\\"       décalage et aller à l'état 128
    ".\\"      décalage et aller à l'état 129
    ".\\."     décalage et aller à l'état 130
    "** or ^"  décalage et aller à l'état 152
    ".^"       décalage et aller à l'état 153

    $défaut  réduction par utilisation de la règle 126 (rightOperand)

    rightOperand   aller à l'état 154
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 155
    comparators    aller à l'état 156

Conflit entre la règle 126 et le jeton "'" résolu par décalage (PLUS < "'").
Conflit entre la règle 126 et le jeton ":" résolu par réduction (":" < PLUS).
Conflit entre la règle 126 et le jeton "(" résolu par réduction ("(" < PLUS).
Conflit entre la règle 126 et le jeton "." résolu par décalage (PLUS < ".").
Conflit entre la règle 126 et le jeton ".'" résolu par décalage (PLUS < ".'").
Conflit entre la règle 126 et le jeton "+" résolu par réduction (%left "+").
Conflit entre la règle 126 et le jeton "-" résolu par réduction (%left "-").
Conflit entre la règle 126 et le jeton "*" résolu par décalage (PLUS < "*").
Conflit entre la règle 126 et le jeton ".*" résolu par décalage (PLUS < ".*").
Conflit entre la règle 126 et le jeton ".*." résolu par décalage (PLUS < ".*.").
Conflit entre la règle 126 et le jeton "/" résolu par décalage (PLUS < "/").
Conflit entre la règle 126 et le jeton "./" résolu par décalage (PLUS < "./").
Conflit entre la règle 126 et le jeton "/." résolu par décalage (PLUS < "/.").
Conflit entre la règle 126 et le jeton "./." résolu par décalage (PLUS < "./.").
Conflit entre la règle 126 et le jeton "\\" résolu par décalage (PLUS < "\\").
Conflit entre la règle 126 et le jeton ".\\" résolu par décalage (PLUS < ".\\").
Conflit entre la règle 126 et le jeton ".\\." résolu par décalage (PLUS < ".\\.").
Conflit entre la règle 126 et le jeton "** or ^" résolu par décalage (PLUS < "** or ^").
Conflit entre la règle 126 et le jeton ".^" résolu par décalage (PLUS < ".^").
Conflit entre la règle 126 et le jeton "==" résolu par réduction ("==" < PLUS).
Conflit entre la règle 126 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < PLUS).
Conflit entre la règle 126 et le jeton "<" résolu par réduction ("<" < PLUS).
Conflit entre la règle 126 et le jeton "<=" résolu par réduction ("<=" < PLUS).
Conflit entre la règle 126 et le jeton ">" résolu par réduction (">" < PLUS).
Conflit entre la règle 126 et le jeton ">=" résolu par réduction (">=" < PLUS).
Conflit entre la règle 126 et le jeton "&" résolu par réduction ("&" < PLUS).
Conflit entre la règle 126 et le jeton "|" résolu par réduction ("|" < PLUS).


état 241

  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  129             | "-" functionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  157 variable: functionCall . "." variable
  159         | functionCall . listableEnd
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"        décalage et aller à l'état 115
    "."        décalage et aller à l'état 166
    ".'"       décalage et aller à l'état 118
    "*"        décalage et aller à l'état 121
    ".*"       décalage et aller à l'état 122
    ".*."      décalage et aller à l'état 123
    "/"        décalage et aller à l'état 124
    "./"       décalage et aller à l'état 125
    "/."       décalage et aller à l'état 126
    "./."      décalage et aller à l'état 127
    "\\"       décalage et aller à l'état 128
    ".\\"      décalage et aller à l'état 129
    ".\\."     décalage et aller à l'état 130
    "** or ^"  décalage et aller à l'état 131
    ".^"       décalage et aller à l'état 132

    $défaut  réduction par utilisation de la règle 129 (rightOperand)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145

Conflit entre la règle 129 et le jeton "'" résolu par décalage (MINUS < "'").
Conflit entre la règle 129 et le jeton ":" résolu par réduction (":" < MINUS).
Conflit entre la règle 129 et le jeton "." résolu par décalage (MINUS < ".").
Conflit entre la règle 129 et le jeton ".'" résolu par décalage (MINUS < ".'").
Conflit entre la règle 129 et le jeton "+" résolu par réduction (%left "+").
Conflit entre la règle 129 et le jeton "-" résolu par réduction (%left "-").
Conflit entre la règle 129 et le jeton "*" résolu par décalage (MINUS < "*").
Conflit entre la règle 129 et le jeton ".*" résolu par décalage (MINUS < ".*").
Conflit entre la règle 129 et le jeton ".*." résolu par décalage (MINUS < ".*.").
Conflit entre la règle 129 et le jeton "/" résolu par décalage (MINUS < "/").
Conflit entre la règle 129 et le jeton "./" résolu par décalage (MINUS < "./").
Conflit entre la règle 129 et le jeton "/." résolu par décalage (MINUS < "/.").
Conflit entre la règle 129 et le jeton "./." résolu par décalage (MINUS < "./.").
Conflit entre la règle 129 et le jeton "\\" résolu par décalage (MINUS < "\\").
Conflit entre la règle 129 et le jeton ".\\" résolu par décalage (MINUS < ".\\").
Conflit entre la règle 129 et le jeton ".\\." résolu par décalage (MINUS < ".\\.").
Conflit entre la règle 129 et le jeton "** or ^" résolu par décalage (MINUS < "** or ^").
Conflit entre la règle 129 et le jeton ".^" résolu par décalage (MINUS < ".^").
Conflit entre la règle 129 et le jeton "==" résolu par réduction ("==" < MINUS).
Conflit entre la règle 129 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < MINUS).
Conflit entre la règle 129 et le jeton "<" résolu par réduction ("<" < MINUS).
Conflit entre la règle 129 et le jeton "<=" résolu par réduction ("<=" < MINUS).
Conflit entre la règle 129 et le jeton ">" résolu par réduction (">" < MINUS).
Conflit entre la règle 129 et le jeton ">=" résolu par réduction (">=" < MINUS).
Conflit entre la règle 129 et le jeton "&" résolu par réduction ("&" < MINUS).
Conflit entre la règle 129 et le jeton "|" résolu par réduction ("|" < MINUS).


état 242

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  128             | "-" variable .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  158         | variable . listableEnd
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"        décalage et aller à l'état 148
    "."        décalage et aller à l'état 167
    ".'"       décalage et aller à l'état 151
    "*"        décalage et aller à l'état 121
    ".*"       décalage et aller à l'état 122
    ".*."      décalage et aller à l'état 123
    "/"        décalage et aller à l'état 124
    "./"       décalage et aller à l'état 125
    "/."       décalage et aller à l'état 126
    "./."      décalage et aller à l'état 127
    "\\"       décalage et aller à l'état 128
    ".\\"      décalage et aller à l'état 129
    ".\\."     décalage et aller à l'état 130
    "** or ^"  décalage et aller à l'état 152
    ".^"       décalage et aller à l'état 153

    $défaut  réduction par utilisation de la règle 128 (rightOperand)

    rightOperand   aller à l'état 154
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 155
    comparators    aller à l'état 156

Conflit entre la règle 128 et le jeton "'" résolu par décalage (MINUS < "'").
Conflit entre la règle 128 et le jeton ":" résolu par réduction (":" < MINUS).
Conflit entre la règle 128 et le jeton "(" résolu par réduction ("(" < MINUS).
Conflit entre la règle 128 et le jeton "." résolu par décalage (MINUS < ".").
Conflit entre la règle 128 et le jeton ".'" résolu par décalage (MINUS < ".'").
Conflit entre la règle 128 et le jeton "+" résolu par réduction (%left "+").
Conflit entre la règle 128 et le jeton "-" résolu par réduction (%left "-").
Conflit entre la règle 128 et le jeton "*" résolu par décalage (MINUS < "*").
Conflit entre la règle 128 et le jeton ".*" résolu par décalage (MINUS < ".*").
Conflit entre la règle 128 et le jeton ".*." résolu par décalage (MINUS < ".*.").
Conflit entre la règle 128 et le jeton "/" résolu par décalage (MINUS < "/").
Conflit entre la règle 128 et le jeton "./" résolu par décalage (MINUS < "./").
Conflit entre la règle 128 et le jeton "/." résolu par décalage (MINUS < "/.").
Conflit entre la règle 128 et le jeton "./." résolu par décalage (MINUS < "./.").
Conflit entre la règle 128 et le jeton "\\" résolu par décalage (MINUS < "\\").
Conflit entre la règle 128 et le jeton ".\\" résolu par décalage (MINUS < ".\\").
Conflit entre la règle 128 et le jeton ".\\." résolu par décalage (MINUS < ".\\.").
Conflit entre la règle 128 et le jeton "** or ^" résolu par décalage (MINUS < "** or ^").
Conflit entre la règle 128 et le jeton ".^" résolu par décalage (MINUS < ".^").
Conflit entre la règle 128 et le jeton "==" résolu par réduction ("==" < MINUS).
Conflit entre la règle 128 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < MINUS).
Conflit entre la règle 128 et le jeton "<" résolu par réduction ("<" < MINUS).
Conflit entre la règle 128 et le jeton "<=" résolu par réduction ("<=" < MINUS).
Conflit entre la règle 128 et le jeton ">" résolu par réduction (">" < MINUS).
Conflit entre la règle 128 et le jeton ">=" résolu par réduction (">=" < MINUS).
Conflit entre la règle 128 et le jeton "&" résolu par réduction ("&" < MINUS).
Conflit entre la règle 128 et le jeton "|" résolu par réduction ("|" < MINUS).


état 243

  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  131             | "*" functionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  157 variable: functionCall . "." variable
  159         | functionCall . listableEnd
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"        décalage et aller à l'état 115
    "."        décalage et aller à l'état 166
    ".'"       décalage et aller à l'état 118
    "** or ^"  décalage et aller à l'état 131
    ".^"       décalage et aller à l'état 132

    $défaut  réduction par utilisation de la règle 131 (rightOperand)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145

Conflit entre la règle 131 et le jeton "'" résolu par décalage (TIMES < "'").
Conflit entre la règle 131 et le jeton ":" résolu par réduction (":" < TIMES).
Conflit entre la règle 131 et le jeton "." résolu par décalage (TIMES < ".").
Conflit entre la règle 131 et le jeton ".'" résolu par décalage (TIMES < ".'").
Conflit entre la règle 131 et le jeton "+" résolu par réduction ("+" < TIMES).
Conflit entre la règle 131 et le jeton "-" résolu par réduction ("-" < TIMES).
Conflit entre la règle 131 et le jeton "*" résolu par réduction (%left "*").
Conflit entre la règle 131 et le jeton ".*" résolu par réduction (%left ".*").
Conflit entre la règle 131 et le jeton ".*." résolu par réduction (%left ".*.").
Conflit entre la règle 131 et le jeton "/" résolu par réduction (%left "/").
Conflit entre la règle 131 et le jeton "./" résolu par réduction (%left "./").
Conflit entre la règle 131 et le jeton "/." résolu par réduction (%left "/.").
Conflit entre la règle 131 et le jeton "./." résolu par réduction (%left "./.").
Conflit entre la règle 131 et le jeton "\\" résolu par réduction (%left "\\").
Conflit entre la règle 131 et le jeton ".\\" résolu par réduction (%left ".\\").
Conflit entre la règle 131 et le jeton ".\\." résolu par réduction (%left ".\\.").
Conflit entre la règle 131 et le jeton "** or ^" résolu par décalage (TIMES < "** or ^").
Conflit entre la règle 131 et le jeton ".^" résolu par décalage (TIMES < ".^").
Conflit entre la règle 131 et le jeton "==" résolu par réduction ("==" < TIMES).
Conflit entre la règle 131 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < TIMES).
Conflit entre la règle 131 et le jeton "<" résolu par réduction ("<" < TIMES).
Conflit entre la règle 131 et le jeton "<=" résolu par réduction ("<=" < TIMES).
Conflit entre la règle 131 et le jeton ">" résolu par réduction (">" < TIMES).
Conflit entre la règle 131 et le jeton ">=" résolu par réduction (">=" < TIMES).
Conflit entre la règle 131 et le jeton "&" résolu par réduction ("&" < TIMES).
Conflit entre la règle 131 et le jeton "|" résolu par réduction ("|" < TIMES).


état 244

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  130             | "*" variable .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  158         | variable . listableEnd
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"        décalage et aller à l'état 148
    "."        décalage et aller à l'état 167
    ".'"       décalage et aller à l'état 151
    "** or ^"  décalage et aller à l'état 152
    ".^"       décalage et aller à l'état 153

    $défaut  réduction par utilisation de la règle 130 (rightOperand)

    rightOperand   aller à l'état 154
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 155
    comparators    aller à l'état 156

Conflit entre la règle 130 et le jeton "'" résolu par décalage (TIMES < "'").
Conflit entre la règle 130 et le jeton ":" résolu par réduction (":" < TIMES).
Conflit entre la règle 130 et le jeton "(" résolu par réduction ("(" < TIMES).
Conflit entre la règle 130 et le jeton "." résolu par décalage (TIMES < ".").
Conflit entre la règle 130 et le jeton ".'" résolu par décalage (TIMES < ".'").
Conflit entre la règle 130 et le jeton "+" résolu par réduction ("+" < TIMES).
Conflit entre la règle 130 et le jeton "-" résolu par réduction ("-" < TIMES).
Conflit entre la règle 130 et le jeton "*" résolu par réduction (%left "*").
Conflit entre la règle 130 et le jeton ".*" résolu par réduction (%left ".*").
Conflit entre la règle 130 et le jeton ".*." résolu par réduction (%left ".*.").
Conflit entre la règle 130 et le jeton "/" résolu par réduction (%left "/").
Conflit entre la règle 130 et le jeton "./" résolu par réduction (%left "./").
Conflit entre la règle 130 et le jeton "/." résolu par réduction (%left "/.").
Conflit entre la règle 130 et le jeton "./." résolu par réduction (%left "./.").
Conflit entre la règle 130 et le jeton "\\" résolu par réduction (%left "\\").
Conflit entre la règle 130 et le jeton ".\\" résolu par réduction (%left ".\\").
Conflit entre la règle 130 et le jeton ".\\." résolu par réduction (%left ".\\.").
Conflit entre la règle 130 et le jeton "** or ^" résolu par décalage (TIMES < "** or ^").
Conflit entre la règle 130 et le jeton ".^" résolu par décalage (TIMES < ".^").
Conflit entre la règle 130 et le jeton "==" résolu par réduction ("==" < TIMES).
Conflit entre la règle 130 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < TIMES).
Conflit entre la règle 130 et le jeton "<" résolu par réduction ("<" < TIMES).
Conflit entre la règle 130 et le jeton "<=" résolu par réduction ("<=" < TIMES).
Conflit entre la règle 130 et le jeton ">" résolu par réduction (">" < TIMES).
Conflit entre la règle 130 et le jeton ">=" résolu par réduction (">=" < TIMES).
Conflit entre la règle 130 et le jeton "&" résolu par réduction ("&" < TIMES).
Conflit entre la règle 130 et le jeton "|" résolu par réduction ("|" < TIMES).


état 245

  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  133             | ".*" functionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  157 variable: functionCall . "." variable
  159         | functionCall . listableEnd
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"        décalage et aller à l'état 115
    "."        décalage et aller à l'état 166
    ".'"       décalage et aller à l'état 118
    "** or ^"  décalage et aller à l'état 131
    ".^"       décalage et aller à l'état 132

    $défaut  réduction par utilisation de la règle 133 (rightOperand)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145

Conflit entre la règle 133 et le jeton "'" résolu par décalage (DOTTIMES < "'").
Conflit entre la règle 133 et le jeton ":" résolu par réduction (":" < DOTTIMES).
Conflit entre la règle 133 et le jeton "." résolu par décalage (DOTTIMES < ".").
Conflit entre la règle 133 et le jeton ".'" résolu par décalage (DOTTIMES < ".'").
Conflit entre la règle 133 et le jeton "+" résolu par réduction ("+" < DOTTIMES).
Conflit entre la règle 133 et le jeton "-" résolu par réduction ("-" < DOTTIMES).
Conflit entre la règle 133 et le jeton "*" résolu par réduction (%left "*").
Conflit entre la règle 133 et le jeton ".*" résolu par réduction (%left ".*").
Conflit entre la règle 133 et le jeton ".*." résolu par réduction (%left ".*.").
Conflit entre la règle 133 et le jeton "/" résolu par réduction (%left "/").
Conflit entre la règle 133 et le jeton "./" résolu par réduction (%left "./").
Conflit entre la règle 133 et le jeton "/." résolu par réduction (%left "/.").
Conflit entre la règle 133 et le jeton "./." résolu par réduction (%left "./.").
Conflit entre la règle 133 et le jeton "\\" résolu par réduction (%left "\\").
Conflit entre la règle 133 et le jeton ".\\" résolu par réduction (%left ".\\").
Conflit entre la règle 133 et le jeton ".\\." résolu par réduction (%left ".\\.").
Conflit entre la règle 133 et le jeton "** or ^" résolu par décalage (DOTTIMES < "** or ^").
Conflit entre la règle 133 et le jeton ".^" résolu par décalage (DOTTIMES < ".^").
Conflit entre la règle 133 et le jeton "==" résolu par réduction ("==" < DOTTIMES).
Conflit entre la règle 133 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < DOTTIMES).
Conflit entre la règle 133 et le jeton "<" résolu par réduction ("<" < DOTTIMES).
Conflit entre la règle 133 et le jeton "<=" résolu par réduction ("<=" < DOTTIMES).
Conflit entre la règle 133 et le jeton ">" résolu par réduction (">" < DOTTIMES).
Conflit entre la règle 133 et le jeton ">=" résolu par réduction (">=" < DOTTIMES).
Conflit entre la règle 133 et le jeton "&" résolu par réduction ("&" < DOTTIMES).
Conflit entre la règle 133 et le jeton "|" résolu par réduction ("|" < DOTTIMES).


état 246

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  132             | ".*" variable .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  158         | variable . listableEnd
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"        décalage et aller à l'état 148
    "."        décalage et aller à l'état 167
    ".'"       décalage et aller à l'état 151
    "** or ^"  décalage et aller à l'état 152
    ".^"       décalage et aller à l'état 153

    $défaut  réduction par utilisation de la règle 132 (rightOperand)

    rightOperand   aller à l'état 154
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 155
    comparators    aller à l'état 156

Conflit entre la règle 132 et le jeton "'" résolu par décalage (DOTTIMES < "'").
Conflit entre la règle 132 et le jeton ":" résolu par réduction (":" < DOTTIMES).
Conflit entre la règle 132 et le jeton "(" résolu par réduction ("(" < DOTTIMES).
Conflit entre la règle 132 et le jeton "." résolu par décalage (DOTTIMES < ".").
Conflit entre la règle 132 et le jeton ".'" résolu par décalage (DOTTIMES < ".'").
Conflit entre la règle 132 et le jeton "+" résolu par réduction ("+" < DOTTIMES).
Conflit entre la règle 132 et le jeton "-" résolu par réduction ("-" < DOTTIMES).
Conflit entre la règle 132 et le jeton "*" résolu par réduction (%left "*").
Conflit entre la règle 132 et le jeton ".*" résolu par réduction (%left ".*").
Conflit entre la règle 132 et le jeton ".*." résolu par réduction (%left ".*.").
Conflit entre la règle 132 et le jeton "/" résolu par réduction (%left "/").
Conflit entre la règle 132 et le jeton "./" résolu par réduction (%left "./").
Conflit entre la règle 132 et le jeton "/." résolu par réduction (%left "/.").
Conflit entre la règle 132 et le jeton "./." résolu par réduction (%left "./.").
Conflit entre la règle 132 et le jeton "\\" résolu par réduction (%left "\\").
Conflit entre la règle 132 et le jeton ".\\" résolu par réduction (%left ".\\").
Conflit entre la règle 132 et le jeton ".\\." résolu par réduction (%left ".\\.").
Conflit entre la règle 132 et le jeton "** or ^" résolu par décalage (DOTTIMES < "** or ^").
Conflit entre la règle 132 et le jeton ".^" résolu par décalage (DOTTIMES < ".^").
Conflit entre la règle 132 et le jeton "==" résolu par réduction ("==" < DOTTIMES).
Conflit entre la règle 132 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < DOTTIMES).
Conflit entre la règle 132 et le jeton "<" résolu par réduction ("<" < DOTTIMES).
Conflit entre la règle 132 et le jeton "<=" résolu par réduction ("<=" < DOTTIMES).
Conflit entre la règle 132 et le jeton ">" résolu par réduction (">" < DOTTIMES).
Conflit entre la règle 132 et le jeton ">=" résolu par réduction (">=" < DOTTIMES).
Conflit entre la règle 132 et le jeton "&" résolu par réduction ("&" < DOTTIMES).
Conflit entre la règle 132 et le jeton "|" résolu par réduction ("|" < DOTTIMES).


état 247

  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  135             | ".*." functionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  157 variable: functionCall . "." variable
  159         | functionCall . listableEnd
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"        décalage et aller à l'état 115
    "."        décalage et aller à l'état 166
    ".'"       décalage et aller à l'état 118
    "** or ^"  décalage et aller à l'état 131
    ".^"       décalage et aller à l'état 132

    $défaut  réduction par utilisation de la règle 135 (rightOperand)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145

Conflit entre la règle 135 et le jeton "'" résolu par décalage (KRONTIMES < "'").
Conflit entre la règle 135 et le jeton ":" résolu par réduction (":" < KRONTIMES).
Conflit entre la règle 135 et le jeton "." résolu par décalage (KRONTIMES < ".").
Conflit entre la règle 135 et le jeton ".'" résolu par décalage (KRONTIMES < ".'").
Conflit entre la règle 135 et le jeton "+" résolu par réduction ("+" < KRONTIMES).
Conflit entre la règle 135 et le jeton "-" résolu par réduction ("-" < KRONTIMES).
Conflit entre la règle 135 et le jeton "*" résolu par réduction (%left "*").
Conflit entre la règle 135 et le jeton ".*" résolu par réduction (%left ".*").
Conflit entre la règle 135 et le jeton ".*." résolu par réduction (%left ".*.").
Conflit entre la règle 135 et le jeton "/" résolu par réduction (%left "/").
Conflit entre la règle 135 et le jeton "./" résolu par réduction (%left "./").
Conflit entre la règle 135 et le jeton "/." résolu par réduction (%left "/.").
Conflit entre la règle 135 et le jeton "./." résolu par réduction (%left "./.").
Conflit entre la règle 135 et le jeton "\\" résolu par réduction (%left "\\").
Conflit entre la règle 135 et le jeton ".\\" résolu par réduction (%left ".\\").
Conflit entre la règle 135 et le jeton ".\\." résolu par réduction (%left ".\\.").
Conflit entre la règle 135 et le jeton "** or ^" résolu par décalage (KRONTIMES < "** or ^").
Conflit entre la règle 135 et le jeton ".^" résolu par décalage (KRONTIMES < ".^").
Conflit entre la règle 135 et le jeton "==" résolu par réduction ("==" < KRONTIMES).
Conflit entre la règle 135 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < KRONTIMES).
Conflit entre la règle 135 et le jeton "<" résolu par réduction ("<" < KRONTIMES).
Conflit entre la règle 135 et le jeton "<=" résolu par réduction ("<=" < KRONTIMES).
Conflit entre la règle 135 et le jeton ">" résolu par réduction (">" < KRONTIMES).
Conflit entre la règle 135 et le jeton ">=" résolu par réduction (">=" < KRONTIMES).
Conflit entre la règle 135 et le jeton "&" résolu par réduction ("&" < KRONTIMES).
Conflit entre la règle 135 et le jeton "|" résolu par réduction ("|" < KRONTIMES).


état 248

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  134             | ".*." variable .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  158         | variable . listableEnd
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"        décalage et aller à l'état 148
    "."        décalage et aller à l'état 167
    ".'"       décalage et aller à l'état 151
    "** or ^"  décalage et aller à l'état 152
    ".^"       décalage et aller à l'état 153

    $défaut  réduction par utilisation de la règle 134 (rightOperand)

    rightOperand   aller à l'état 154
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 155
    comparators    aller à l'état 156

Conflit entre la règle 134 et le jeton "'" résolu par décalage (KRONTIMES < "'").
Conflit entre la règle 134 et le jeton ":" résolu par réduction (":" < KRONTIMES).
Conflit entre la règle 134 et le jeton "(" résolu par réduction ("(" < KRONTIMES).
Conflit entre la règle 134 et le jeton "." résolu par décalage (KRONTIMES < ".").
Conflit entre la règle 134 et le jeton ".'" résolu par décalage (KRONTIMES < ".'").
Conflit entre la règle 134 et le jeton "+" résolu par réduction ("+" < KRONTIMES).
Conflit entre la règle 134 et le jeton "-" résolu par réduction ("-" < KRONTIMES).
Conflit entre la règle 134 et le jeton "*" résolu par réduction (%left "*").
Conflit entre la règle 134 et le jeton ".*" résolu par réduction (%left ".*").
Conflit entre la règle 134 et le jeton ".*." résolu par réduction (%left ".*.").
Conflit entre la règle 134 et le jeton "/" résolu par réduction (%left "/").
Conflit entre la règle 134 et le jeton "./" résolu par réduction (%left "./").
Conflit entre la règle 134 et le jeton "/." résolu par réduction (%left "/.").
Conflit entre la règle 134 et le jeton "./." résolu par réduction (%left "./.").
Conflit entre la règle 134 et le jeton "\\" résolu par réduction (%left "\\").
Conflit entre la règle 134 et le jeton ".\\" résolu par réduction (%left ".\\").
Conflit entre la règle 134 et le jeton ".\\." résolu par réduction (%left ".\\.").
Conflit entre la règle 134 et le jeton "** or ^" résolu par décalage (KRONTIMES < "** or ^").
Conflit entre la règle 134 et le jeton ".^" résolu par décalage (KRONTIMES < ".^").
Conflit entre la règle 134 et le jeton "==" résolu par réduction ("==" < KRONTIMES).
Conflit entre la règle 134 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < KRONTIMES).
Conflit entre la règle 134 et le jeton "<" résolu par réduction ("<" < KRONTIMES).
Conflit entre la règle 134 et le jeton "<=" résolu par réduction ("<=" < KRONTIMES).
Conflit entre la règle 134 et le jeton ">" résolu par réduction (">" < KRONTIMES).
Conflit entre la règle 134 et le jeton ">=" résolu par réduction (">=" < KRONTIMES).
Conflit entre la règle 134 et le jeton "&" résolu par réduction ("&" < KRONTIMES).
Conflit entre la règle 134 et le jeton "|" résolu par réduction ("|" < KRONTIMES).


état 249

  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  137             | "/" functionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  157 variable: functionCall . "." variable
  159         | functionCall . listableEnd
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"        décalage et aller à l'état 115
    "."        décalage et aller à l'état 166
    ".'"       décalage et aller à l'état 118
    "** or ^"  décalage et aller à l'état 131
    ".^"       décalage et aller à l'état 132

    $défaut  réduction par utilisation de la règle 137 (rightOperand)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145

Conflit entre la règle 137 et le jeton "'" résolu par décalage (DIVIDE < "'").
Conflit entre la règle 137 et le jeton ":" résolu par réduction (":" < DIVIDE).
Conflit entre la règle 137 et le jeton "." résolu par décalage (DIVIDE < ".").
Conflit entre la règle 137 et le jeton ".'" résolu par décalage (DIVIDE < ".'").
Conflit entre la règle 137 et le jeton "+" résolu par réduction ("+" < DIVIDE).
Conflit entre la règle 137 et le jeton "-" résolu par réduction ("-" < DIVIDE).
Conflit entre la règle 137 et le jeton "*" résolu par réduction (%left "*").
Conflit entre la règle 137 et le jeton ".*" résolu par réduction (%left ".*").
Conflit entre la règle 137 et le jeton ".*." résolu par réduction (%left ".*.").
Conflit entre la règle 137 et le jeton "/" résolu par réduction (%left "/").
Conflit entre la règle 137 et le jeton "./" résolu par réduction (%left "./").
Conflit entre la règle 137 et le jeton "/." résolu par réduction (%left "/.").
Conflit entre la règle 137 et le jeton "./." résolu par réduction (%left "./.").
Conflit entre la règle 137 et le jeton "\\" résolu par réduction (%left "\\").
Conflit entre la règle 137 et le jeton ".\\" résolu par réduction (%left ".\\").
Conflit entre la règle 137 et le jeton ".\\." résolu par réduction (%left ".\\.").
Conflit entre la règle 137 et le jeton "** or ^" résolu par décalage (DIVIDE < "** or ^").
Conflit entre la règle 137 et le jeton ".^" résolu par décalage (DIVIDE < ".^").
Conflit entre la règle 137 et le jeton "==" résolu par réduction ("==" < DIVIDE).
Conflit entre la règle 137 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < DIVIDE).
Conflit entre la règle 137 et le jeton "<" résolu par réduction ("<" < DIVIDE).
Conflit entre la règle 137 et le jeton "<=" résolu par réduction ("<=" < DIVIDE).
Conflit entre la règle 137 et le jeton ">" résolu par réduction (">" < DIVIDE).
Conflit entre la règle 137 et le jeton ">=" résolu par réduction (">=" < DIVIDE).
Conflit entre la règle 137 et le jeton "&" résolu par réduction ("&" < DIVIDE).
Conflit entre la règle 137 et le jeton "|" résolu par réduction ("|" < DIVIDE).


état 250

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  136             | "/" variable .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  158         | variable . listableEnd
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"        décalage et aller à l'état 148
    "."        décalage et aller à l'état 167
    ".'"       décalage et aller à l'état 151
    "** or ^"  décalage et aller à l'état 152
    ".^"       décalage et aller à l'état 153

    $défaut  réduction par utilisation de la règle 136 (rightOperand)

    rightOperand   aller à l'état 154
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 155
    comparators    aller à l'état 156

Conflit entre la règle 136 et le jeton "'" résolu par décalage (DIVIDE < "'").
Conflit entre la règle 136 et le jeton ":" résolu par réduction (":" < DIVIDE).
Conflit entre la règle 136 et le jeton "(" résolu par réduction ("(" < DIVIDE).
Conflit entre la règle 136 et le jeton "." résolu par décalage (DIVIDE < ".").
Conflit entre la règle 136 et le jeton ".'" résolu par décalage (DIVIDE < ".'").
Conflit entre la règle 136 et le jeton "+" résolu par réduction ("+" < DIVIDE).
Conflit entre la règle 136 et le jeton "-" résolu par réduction ("-" < DIVIDE).
Conflit entre la règle 136 et le jeton "*" résolu par réduction (%left "*").
Conflit entre la règle 136 et le jeton ".*" résolu par réduction (%left ".*").
Conflit entre la règle 136 et le jeton ".*." résolu par réduction (%left ".*.").
Conflit entre la règle 136 et le jeton "/" résolu par réduction (%left "/").
Conflit entre la règle 136 et le jeton "./" résolu par réduction (%left "./").
Conflit entre la règle 136 et le jeton "/." résolu par réduction (%left "/.").
Conflit entre la règle 136 et le jeton "./." résolu par réduction (%left "./.").
Conflit entre la règle 136 et le jeton "\\" résolu par réduction (%left "\\").
Conflit entre la règle 136 et le jeton ".\\" résolu par réduction (%left ".\\").
Conflit entre la règle 136 et le jeton ".\\." résolu par réduction (%left ".\\.").
Conflit entre la règle 136 et le jeton "** or ^" résolu par décalage (DIVIDE < "** or ^").
Conflit entre la règle 136 et le jeton ".^" résolu par décalage (DIVIDE < ".^").
Conflit entre la règle 136 et le jeton "==" résolu par réduction ("==" < DIVIDE).
Conflit entre la règle 136 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < DIVIDE).
Conflit entre la règle 136 et le jeton "<" résolu par réduction ("<" < DIVIDE).
Conflit entre la règle 136 et le jeton "<=" résolu par réduction ("<=" < DIVIDE).
Conflit entre la règle 136 et le jeton ">" résolu par réduction (">" < DIVIDE).
Conflit entre la règle 136 et le jeton ">=" résolu par réduction (">=" < DIVIDE).
Conflit entre la règle 136 et le jeton "&" résolu par réduction ("&" < DIVIDE).
Conflit entre la règle 136 et le jeton "|" résolu par réduction ("|" < DIVIDE).


état 251

  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  139             | "./" functionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  157 variable: functionCall . "." variable
  159         | functionCall . listableEnd
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"        décalage et aller à l'état 115
    "."        décalage et aller à l'état 166
    ".'"       décalage et aller à l'état 118
    "** or ^"  décalage et aller à l'état 131
    ".^"       décalage et aller à l'état 132

    $défaut  réduction par utilisation de la règle 139 (rightOperand)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145

Conflit entre la règle 139 et le jeton "'" résolu par décalage (DOTDIVIDE < "'").
Conflit entre la règle 139 et le jeton ":" résolu par réduction (":" < DOTDIVIDE).
Conflit entre la règle 139 et le jeton "." résolu par décalage (DOTDIVIDE < ".").
Conflit entre la règle 139 et le jeton ".'" résolu par décalage (DOTDIVIDE < ".'").
Conflit entre la règle 139 et le jeton "+" résolu par réduction ("+" < DOTDIVIDE).
Conflit entre la règle 139 et le jeton "-" résolu par réduction ("-" < DOTDIVIDE).
Conflit entre la règle 139 et le jeton "*" résolu par réduction (%left "*").
Conflit entre la règle 139 et le jeton ".*" résolu par réduction (%left ".*").
Conflit entre la règle 139 et le jeton ".*." résolu par réduction (%left ".*.").
Conflit entre la règle 139 et le jeton "/" résolu par réduction (%left "/").
Conflit entre la règle 139 et le jeton "./" résolu par réduction (%left "./").
Conflit entre la règle 139 et le jeton "/." résolu par réduction (%left "/.").
Conflit entre la règle 139 et le jeton "./." résolu par réduction (%left "./.").
Conflit entre la règle 139 et le jeton "\\" résolu par réduction (%left "\\").
Conflit entre la règle 139 et le jeton ".\\" résolu par réduction (%left ".\\").
Conflit entre la règle 139 et le jeton ".\\." résolu par réduction (%left ".\\.").
Conflit entre la règle 139 et le jeton "** or ^" résolu par décalage (DOTDIVIDE < "** or ^").
Conflit entre la règle 139 et le jeton ".^" résolu par décalage (DOTDIVIDE < ".^").
Conflit entre la règle 139 et le jeton "==" résolu par réduction ("==" < DOTDIVIDE).
Conflit entre la règle 139 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < DOTDIVIDE).
Conflit entre la règle 139 et le jeton "<" résolu par réduction ("<" < DOTDIVIDE).
Conflit entre la règle 139 et le jeton "<=" résolu par réduction ("<=" < DOTDIVIDE).
Conflit entre la règle 139 et le jeton ">" résolu par réduction (">" < DOTDIVIDE).
Conflit entre la règle 139 et le jeton ">=" résolu par réduction (">=" < DOTDIVIDE).
Conflit entre la règle 139 et le jeton "&" résolu par réduction ("&" < DOTDIVIDE).
Conflit entre la règle 139 et le jeton "|" résolu par réduction ("|" < DOTDIVIDE).


état 252

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  138             | "./" variable .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  158         | variable . listableEnd
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"        décalage et aller à l'état 148
    "."        décalage et aller à l'état 167
    ".'"       décalage et aller à l'état 151
    "** or ^"  décalage et aller à l'état 152
    ".^"       décalage et aller à l'état 153

    $défaut  réduction par utilisation de la règle 138 (rightOperand)

    rightOperand   aller à l'état 154
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 155
    comparators    aller à l'état 156

Conflit entre la règle 138 et le jeton "'" résolu par décalage (DOTDIVIDE < "'").
Conflit entre la règle 138 et le jeton ":" résolu par réduction (":" < DOTDIVIDE).
Conflit entre la règle 138 et le jeton "(" résolu par réduction ("(" < DOTDIVIDE).
Conflit entre la règle 138 et le jeton "." résolu par décalage (DOTDIVIDE < ".").
Conflit entre la règle 138 et le jeton ".'" résolu par décalage (DOTDIVIDE < ".'").
Conflit entre la règle 138 et le jeton "+" résolu par réduction ("+" < DOTDIVIDE).
Conflit entre la règle 138 et le jeton "-" résolu par réduction ("-" < DOTDIVIDE).
Conflit entre la règle 138 et le jeton "*" résolu par réduction (%left "*").
Conflit entre la règle 138 et le jeton ".*" résolu par réduction (%left ".*").
Conflit entre la règle 138 et le jeton ".*." résolu par réduction (%left ".*.").
Conflit entre la règle 138 et le jeton "/" résolu par réduction (%left "/").
Conflit entre la règle 138 et le jeton "./" résolu par réduction (%left "./").
Conflit entre la règle 138 et le jeton "/." résolu par réduction (%left "/.").
Conflit entre la règle 138 et le jeton "./." résolu par réduction (%left "./.").
Conflit entre la règle 138 et le jeton "\\" résolu par réduction (%left "\\").
Conflit entre la règle 138 et le jeton ".\\" résolu par réduction (%left ".\\").
Conflit entre la règle 138 et le jeton ".\\." résolu par réduction (%left ".\\.").
Conflit entre la règle 138 et le jeton "** or ^" résolu par décalage (DOTDIVIDE < "** or ^").
Conflit entre la règle 138 et le jeton ".^" résolu par décalage (DOTDIVIDE < ".^").
Conflit entre la règle 138 et le jeton "==" résolu par réduction ("==" < DOTDIVIDE).
Conflit entre la règle 138 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < DOTDIVIDE).
Conflit entre la règle 138 et le jeton "<" résolu par réduction ("<" < DOTDIVIDE).
Conflit entre la règle 138 et le jeton "<=" résolu par réduction ("<=" < DOTDIVIDE).
Conflit entre la règle 138 et le jeton ">" résolu par réduction (">" < DOTDIVIDE).
Conflit entre la règle 138 et le jeton ">=" résolu par réduction (">=" < DOTDIVIDE).
Conflit entre la règle 138 et le jeton "&" résolu par réduction ("&" < DOTDIVIDE).
Conflit entre la règle 138 et le jeton "|" résolu par réduction ("|" < DOTDIVIDE).


état 253

  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  143             | "/." functionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  157 variable: functionCall . "." variable
  159         | functionCall . listableEnd
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"        décalage et aller à l'état 115
    "."        décalage et aller à l'état 166
    ".'"       décalage et aller à l'état 118
    "** or ^"  décalage et aller à l'état 131
    ".^"       décalage et aller à l'état 132

    $défaut  réduction par utilisation de la règle 143 (rightOperand)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145

Conflit entre la règle 143 et le jeton "'" résolu par décalage (CONTROLDIVIDE < "'").
Conflit entre la règle 143 et le jeton ":" résolu par réduction (":" < CONTROLDIVIDE).
Conflit entre la règle 143 et le jeton "." résolu par décalage (CONTROLDIVIDE < ".").
Conflit entre la règle 143 et le jeton ".'" résolu par décalage (CONTROLDIVIDE < ".'").
Conflit entre la règle 143 et le jeton "+" résolu par réduction ("+" < CONTROLDIVIDE).
Conflit entre la règle 143 et le jeton "-" résolu par réduction ("-" < CONTROLDIVIDE).
Conflit entre la règle 143 et le jeton "*" résolu par réduction (%left "*").
Conflit entre la règle 143 et le jeton ".*" résolu par réduction (%left ".*").
Conflit entre la règle 143 et le jeton ".*." résolu par réduction (%left ".*.").
Conflit entre la règle 143 et le jeton "/" résolu par réduction (%left "/").
Conflit entre la règle 143 et le jeton "./" résolu par réduction (%left "./").
Conflit entre la règle 143 et le jeton "/." résolu par réduction (%left "/.").
Conflit entre la règle 143 et le jeton "./." résolu par réduction (%left "./.").
Conflit entre la règle 143 et le jeton "\\" résolu par réduction (%left "\\").
Conflit entre la règle 143 et le jeton ".\\" résolu par réduction (%left ".\\").
Conflit entre la règle 143 et le jeton ".\\." résolu par réduction (%left ".\\.").
Conflit entre la règle 143 et le jeton "** or ^" résolu par décalage (CONTROLDIVIDE < "** or ^").
Conflit entre la règle 143 et le jeton ".^" résolu par décalage (CONTROLDIVIDE < ".^").
Conflit entre la règle 143 et le jeton "==" résolu par réduction ("==" < CONTROLDIVIDE).
Conflit entre la règle 143 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < CONTROLDIVIDE).
Conflit entre la règle 143 et le jeton "<" résolu par réduction ("<" < CONTROLDIVIDE).
Conflit entre la règle 143 et le jeton "<=" résolu par réduction ("<=" < CONTROLDIVIDE).
Conflit entre la règle 143 et le jeton ">" résolu par réduction (">" < CONTROLDIVIDE).
Conflit entre la règle 143 et le jeton ">=" résolu par réduction (">=" < CONTROLDIVIDE).
Conflit entre la règle 143 et le jeton "&" résolu par réduction ("&" < CONTROLDIVIDE).
Conflit entre la règle 143 et le jeton "|" résolu par réduction ("|" < CONTROLDIVIDE).


état 254

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  142             | "/." variable .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  158         | variable . listableEnd
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"        décalage et aller à l'état 148
    "."        décalage et aller à l'état 167
    ".'"       décalage et aller à l'état 151
    "** or ^"  décalage et aller à l'état 152
    ".^"       décalage et aller à l'état 153

    $défaut  réduction par utilisation de la règle 142 (rightOperand)

    rightOperand   aller à l'état 154
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 155
    comparators    aller à l'état 156

Conflit entre la règle 142 et le jeton "'" résolu par décalage (CONTROLDIVIDE < "'").
Conflit entre la règle 142 et le jeton ":" résolu par réduction (":" < CONTROLDIVIDE).
Conflit entre la règle 142 et le jeton "(" résolu par réduction ("(" < CONTROLDIVIDE).
Conflit entre la règle 142 et le jeton "." résolu par décalage (CONTROLDIVIDE < ".").
Conflit entre la règle 142 et le jeton ".'" résolu par décalage (CONTROLDIVIDE < ".'").
Conflit entre la règle 142 et le jeton "+" résolu par réduction ("+" < CONTROLDIVIDE).
Conflit entre la règle 142 et le jeton "-" résolu par réduction ("-" < CONTROLDIVIDE).
Conflit entre la règle 142 et le jeton "*" résolu par réduction (%left "*").
Conflit entre la règle 142 et le jeton ".*" résolu par réduction (%left ".*").
Conflit entre la règle 142 et le jeton ".*." résolu par réduction (%left ".*.").
Conflit entre la règle 142 et le jeton "/" résolu par réduction (%left "/").
Conflit entre la règle 142 et le jeton "./" résolu par réduction (%left "./").
Conflit entre la règle 142 et le jeton "/." résolu par réduction (%left "/.").
Conflit entre la règle 142 et le jeton "./." résolu par réduction (%left "./.").
Conflit entre la règle 142 et le jeton "\\" résolu par réduction (%left "\\").
Conflit entre la règle 142 et le jeton ".\\" résolu par réduction (%left ".\\").
Conflit entre la règle 142 et le jeton ".\\." résolu par réduction (%left ".\\.").
Conflit entre la règle 142 et le jeton "** or ^" résolu par décalage (CONTROLDIVIDE < "** or ^").
Conflit entre la règle 142 et le jeton ".^" résolu par décalage (CONTROLDIVIDE < ".^").
Conflit entre la règle 142 et le jeton "==" résolu par réduction ("==" < CONTROLDIVIDE).
Conflit entre la règle 142 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < CONTROLDIVIDE).
Conflit entre la règle 142 et le jeton "<" résolu par réduction ("<" < CONTROLDIVIDE).
Conflit entre la règle 142 et le jeton "<=" résolu par réduction ("<=" < CONTROLDIVIDE).
Conflit entre la règle 142 et le jeton ">" résolu par réduction (">" < CONTROLDIVIDE).
Conflit entre la règle 142 et le jeton ">=" résolu par réduction (">=" < CONTROLDIVIDE).
Conflit entre la règle 142 et le jeton "&" résolu par réduction ("&" < CONTROLDIVIDE).
Conflit entre la règle 142 et le jeton "|" résolu par réduction ("|" < CONTROLDIVIDE).


état 255

  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  141             | "./." functionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  157 variable: functionCall . "." variable
  159         | functionCall . listableEnd
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"        décalage et aller à l'état 115
    "."        décalage et aller à l'état 166
    ".'"       décalage et aller à l'état 118
    "** or ^"  décalage et aller à l'état 131
    ".^"       décalage et aller à l'état 132

    $défaut  réduction par utilisation de la règle 141 (rightOperand)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145

Conflit entre la règle 141 et le jeton "'" résolu par décalage (KRONDIVIDE < "'").
Conflit entre la règle 141 et le jeton ":" résolu par réduction (":" < KRONDIVIDE).
Conflit entre la règle 141 et le jeton "." résolu par décalage (KRONDIVIDE < ".").
Conflit entre la règle 141 et le jeton ".'" résolu par décalage (KRONDIVIDE < ".'").
Conflit entre la règle 141 et le jeton "+" résolu par réduction ("+" < KRONDIVIDE).
Conflit entre la règle 141 et le jeton "-" résolu par réduction ("-" < KRONDIVIDE).
Conflit entre la règle 141 et le jeton "*" résolu par réduction (%left "*").
Conflit entre la règle 141 et le jeton ".*" résolu par réduction (%left ".*").
Conflit entre la règle 141 et le jeton ".*." résolu par réduction (%left ".*.").
Conflit entre la règle 141 et le jeton "/" résolu par réduction (%left "/").
Conflit entre la règle 141 et le jeton "./" résolu par réduction (%left "./").
Conflit entre la règle 141 et le jeton "/." résolu par réduction (%left "/.").
Conflit entre la règle 141 et le jeton "./." résolu par réduction (%left "./.").
Conflit entre la règle 141 et le jeton "\\" résolu par réduction (%left "\\").
Conflit entre la règle 141 et le jeton ".\\" résolu par réduction (%left ".\\").
Conflit entre la règle 141 et le jeton ".\\." résolu par réduction (%left ".\\.").
Conflit entre la règle 141 et le jeton "** or ^" résolu par décalage (KRONDIVIDE < "** or ^").
Conflit entre la règle 141 et le jeton ".^" résolu par décalage (KRONDIVIDE < ".^").
Conflit entre la règle 141 et le jeton "==" résolu par réduction ("==" < KRONDIVIDE).
Conflit entre la règle 141 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < KRONDIVIDE).
Conflit entre la règle 141 et le jeton "<" résolu par réduction ("<" < KRONDIVIDE).
Conflit entre la règle 141 et le jeton "<=" résolu par réduction ("<=" < KRONDIVIDE).
Conflit entre la règle 141 et le jeton ">" résolu par réduction (">" < KRONDIVIDE).
Conflit entre la règle 141 et le jeton ">=" résolu par réduction (">=" < KRONDIVIDE).
Conflit entre la règle 141 et le jeton "&" résolu par réduction ("&" < KRONDIVIDE).
Conflit entre la règle 141 et le jeton "|" résolu par réduction ("|" < KRONDIVIDE).


état 256

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  140             | "./." variable .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  158         | variable . listableEnd
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"        décalage et aller à l'état 148
    "."        décalage et aller à l'état 167
    ".'"       décalage et aller à l'état 151
    "** or ^"  décalage et aller à l'état 152
    ".^"       décalage et aller à l'état 153

    $défaut  réduction par utilisation de la règle 140 (rightOperand)

    rightOperand   aller à l'état 154
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 155
    comparators    aller à l'état 156

Conflit entre la règle 140 et le jeton "'" résolu par décalage (KRONDIVIDE < "'").
Conflit entre la règle 140 et le jeton ":" résolu par réduction (":" < KRONDIVIDE).
Conflit entre la règle 140 et le jeton "(" résolu par réduction ("(" < KRONDIVIDE).
Conflit entre la règle 140 et le jeton "." résolu par décalage (KRONDIVIDE < ".").
Conflit entre la règle 140 et le jeton ".'" résolu par décalage (KRONDIVIDE < ".'").
Conflit entre la règle 140 et le jeton "+" résolu par réduction ("+" < KRONDIVIDE).
Conflit entre la règle 140 et le jeton "-" résolu par réduction ("-" < KRONDIVIDE).
Conflit entre la règle 140 et le jeton "*" résolu par réduction (%left "*").
Conflit entre la règle 140 et le jeton ".*" résolu par réduction (%left ".*").
Conflit entre la règle 140 et le jeton ".*." résolu par réduction (%left ".*.").
Conflit entre la règle 140 et le jeton "/" résolu par réduction (%left "/").
Conflit entre la règle 140 et le jeton "./" résolu par réduction (%left "./").
Conflit entre la règle 140 et le jeton "/." résolu par réduction (%left "/.").
Conflit entre la règle 140 et le jeton "./." résolu par réduction (%left "./.").
Conflit entre la règle 140 et le jeton "\\" résolu par réduction (%left "\\").
Conflit entre la règle 140 et le jeton ".\\" résolu par réduction (%left ".\\").
Conflit entre la règle 140 et le jeton ".\\." résolu par réduction (%left ".\\.").
Conflit entre la règle 140 et le jeton "** or ^" résolu par décalage (KRONDIVIDE < "** or ^").
Conflit entre la règle 140 et le jeton ".^" résolu par décalage (KRONDIVIDE < ".^").
Conflit entre la règle 140 et le jeton "==" résolu par réduction ("==" < KRONDIVIDE).
Conflit entre la règle 140 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < KRONDIVIDE).
Conflit entre la règle 140 et le jeton "<" résolu par réduction ("<" < KRONDIVIDE).
Conflit entre la règle 140 et le jeton "<=" résolu par réduction ("<=" < KRONDIVIDE).
Conflit entre la règle 140 et le jeton ">" résolu par réduction (">" < KRONDIVIDE).
Conflit entre la règle 140 et le jeton ">=" résolu par réduction (">=" < KRONDIVIDE).
Conflit entre la règle 140 et le jeton "&" résolu par réduction ("&" < KRONDIVIDE).
Conflit entre la règle 140 et le jeton "|" résolu par réduction ("|" < KRONDIVIDE).


état 257

  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  145             | "\\" functionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  157 variable: functionCall . "." variable
  159         | functionCall . listableEnd
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"        décalage et aller à l'état 115
    "."        décalage et aller à l'état 166
    ".'"       décalage et aller à l'état 118
    "** or ^"  décalage et aller à l'état 131
    ".^"       décalage et aller à l'état 132

    $défaut  réduction par utilisation de la règle 145 (rightOperand)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145

Conflit entre la règle 145 et le jeton "'" résolu par décalage (RDIVIDE < "'").
Conflit entre la règle 145 et le jeton ":" résolu par réduction (":" < RDIVIDE).
Conflit entre la règle 145 et le jeton "." résolu par décalage (RDIVIDE < ".").
Conflit entre la règle 145 et le jeton ".'" résolu par décalage (RDIVIDE < ".'").
Conflit entre la règle 145 et le jeton "+" résolu par réduction ("+" < RDIVIDE).
Conflit entre la règle 145 et le jeton "-" résolu par réduction ("-" < RDIVIDE).
Conflit entre la règle 145 et le jeton "*" résolu par réduction (%left "*").
Conflit entre la règle 145 et le jeton ".*" résolu par réduction (%left ".*").
Conflit entre la règle 145 et le jeton ".*." résolu par réduction (%left ".*.").
Conflit entre la règle 145 et le jeton "/" résolu par réduction (%left "/").
Conflit entre la règle 145 et le jeton "./" résolu par réduction (%left "./").
Conflit entre la règle 145 et le jeton "/." résolu par réduction (%left "/.").
Conflit entre la règle 145 et le jeton "./." résolu par réduction (%left "./.").
Conflit entre la règle 145 et le jeton "\\" résolu par réduction (%left "\\").
Conflit entre la règle 145 et le jeton ".\\" résolu par réduction (%left ".\\").
Conflit entre la règle 145 et le jeton ".\\." résolu par réduction (%left ".\\.").
Conflit entre la règle 145 et le jeton "** or ^" résolu par décalage (RDIVIDE < "** or ^").
Conflit entre la règle 145 et le jeton ".^" résolu par décalage (RDIVIDE < ".^").
Conflit entre la règle 145 et le jeton "==" résolu par réduction ("==" < RDIVIDE).
Conflit entre la règle 145 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < RDIVIDE).
Conflit entre la règle 145 et le jeton "<" résolu par réduction ("<" < RDIVIDE).
Conflit entre la règle 145 et le jeton "<=" résolu par réduction ("<=" < RDIVIDE).
Conflit entre la règle 145 et le jeton ">" résolu par réduction (">" < RDIVIDE).
Conflit entre la règle 145 et le jeton ">=" résolu par réduction (">=" < RDIVIDE).
Conflit entre la règle 145 et le jeton "&" résolu par réduction ("&" < RDIVIDE).
Conflit entre la règle 145 et le jeton "|" résolu par réduction ("|" < RDIVIDE).


état 258

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  144             | "\\" variable .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  158         | variable . listableEnd
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"        décalage et aller à l'état 148
    "."        décalage et aller à l'état 167
    ".'"       décalage et aller à l'état 151
    "** or ^"  décalage et aller à l'état 152
    ".^"       décalage et aller à l'état 153

    $défaut  réduction par utilisation de la règle 144 (rightOperand)

    rightOperand   aller à l'état 154
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 155
    comparators    aller à l'état 156

Conflit entre la règle 144 et le jeton "'" résolu par décalage (RDIVIDE < "'").
Conflit entre la règle 144 et le jeton ":" résolu par réduction (":" < RDIVIDE).
Conflit entre la règle 144 et le jeton "(" résolu par réduction ("(" < RDIVIDE).
Conflit entre la règle 144 et le jeton "." résolu par décalage (RDIVIDE < ".").
Conflit entre la règle 144 et le jeton ".'" résolu par décalage (RDIVIDE < ".'").
Conflit entre la règle 144 et le jeton "+" résolu par réduction ("+" < RDIVIDE).
Conflit entre la règle 144 et le jeton "-" résolu par réduction ("-" < RDIVIDE).
Conflit entre la règle 144 et le jeton "*" résolu par réduction (%left "*").
Conflit entre la règle 144 et le jeton ".*" résolu par réduction (%left ".*").
Conflit entre la règle 144 et le jeton ".*." résolu par réduction (%left ".*.").
Conflit entre la règle 144 et le jeton "/" résolu par réduction (%left "/").
Conflit entre la règle 144 et le jeton "./" résolu par réduction (%left "./").
Conflit entre la règle 144 et le jeton "/." résolu par réduction (%left "/.").
Conflit entre la règle 144 et le jeton "./." résolu par réduction (%left "./.").
Conflit entre la règle 144 et le jeton "\\" résolu par réduction (%left "\\").
Conflit entre la règle 144 et le jeton ".\\" résolu par réduction (%left ".\\").
Conflit entre la règle 144 et le jeton ".\\." résolu par réduction (%left ".\\.").
Conflit entre la règle 144 et le jeton "** or ^" résolu par décalage (RDIVIDE < "** or ^").
Conflit entre la règle 144 et le jeton ".^" résolu par décalage (RDIVIDE < ".^").
Conflit entre la règle 144 et le jeton "==" résolu par réduction ("==" < RDIVIDE).
Conflit entre la règle 144 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < RDIVIDE).
Conflit entre la règle 144 et le jeton "<" résolu par réduction ("<" < RDIVIDE).
Conflit entre la règle 144 et le jeton "<=" résolu par réduction ("<=" < RDIVIDE).
Conflit entre la règle 144 et le jeton ">" résolu par réduction (">" < RDIVIDE).
Conflit entre la règle 144 et le jeton ">=" résolu par réduction (">=" < RDIVIDE).
Conflit entre la règle 144 et le jeton "&" résolu par réduction ("&" < RDIVIDE).
Conflit entre la règle 144 et le jeton "|" résolu par réduction ("|" < RDIVIDE).


état 259

  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  147             | ".\\" functionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  157 variable: functionCall . "." variable
  159         | functionCall . listableEnd
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"        décalage et aller à l'état 115
    "."        décalage et aller à l'état 166
    ".'"       décalage et aller à l'état 118
    "** or ^"  décalage et aller à l'état 131
    ".^"       décalage et aller à l'état 132

    $défaut  réduction par utilisation de la règle 147 (rightOperand)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145

Conflit entre la règle 147 et le jeton "'" résolu par décalage (DOTRDIVIDE < "'").
Conflit entre la règle 147 et le jeton ":" résolu par réduction (":" < DOTRDIVIDE).
Conflit entre la règle 147 et le jeton "." résolu par décalage (DOTRDIVIDE < ".").
Conflit entre la règle 147 et le jeton ".'" résolu par décalage (DOTRDIVIDE < ".'").
Conflit entre la règle 147 et le jeton "+" résolu par réduction ("+" < DOTRDIVIDE).
Conflit entre la règle 147 et le jeton "-" résolu par réduction ("-" < DOTRDIVIDE).
Conflit entre la règle 147 et le jeton "*" résolu par réduction (%left "*").
Conflit entre la règle 147 et le jeton ".*" résolu par réduction (%left ".*").
Conflit entre la règle 147 et le jeton ".*." résolu par réduction (%left ".*.").
Conflit entre la règle 147 et le jeton "/" résolu par réduction (%left "/").
Conflit entre la règle 147 et le jeton "./" résolu par réduction (%left "./").
Conflit entre la règle 147 et le jeton "/." résolu par réduction (%left "/.").
Conflit entre la règle 147 et le jeton "./." résolu par réduction (%left "./.").
Conflit entre la règle 147 et le jeton "\\" résolu par réduction (%left "\\").
Conflit entre la règle 147 et le jeton ".\\" résolu par réduction (%left ".\\").
Conflit entre la règle 147 et le jeton ".\\." résolu par réduction (%left ".\\.").
Conflit entre la règle 147 et le jeton "** or ^" résolu par décalage (DOTRDIVIDE < "** or ^").
Conflit entre la règle 147 et le jeton ".^" résolu par décalage (DOTRDIVIDE < ".^").
Conflit entre la règle 147 et le jeton "==" résolu par réduction ("==" < DOTRDIVIDE).
Conflit entre la règle 147 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < DOTRDIVIDE).
Conflit entre la règle 147 et le jeton "<" résolu par réduction ("<" < DOTRDIVIDE).
Conflit entre la règle 147 et le jeton "<=" résolu par réduction ("<=" < DOTRDIVIDE).
Conflit entre la règle 147 et le jeton ">" résolu par réduction (">" < DOTRDIVIDE).
Conflit entre la règle 147 et le jeton ">=" résolu par réduction (">=" < DOTRDIVIDE).
Conflit entre la règle 147 et le jeton "&" résolu par réduction ("&" < DOTRDIVIDE).
Conflit entre la règle 147 et le jeton "|" résolu par réduction ("|" < DOTRDIVIDE).


état 260

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  146             | ".\\" variable .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  158         | variable . listableEnd
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"        décalage et aller à l'état 148
    "."        décalage et aller à l'état 167
    ".'"       décalage et aller à l'état 151
    "** or ^"  décalage et aller à l'état 152
    ".^"       décalage et aller à l'état 153

    $défaut  réduction par utilisation de la règle 146 (rightOperand)

    rightOperand   aller à l'état 154
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 155
    comparators    aller à l'état 156

Conflit entre la règle 146 et le jeton "'" résolu par décalage (DOTRDIVIDE < "'").
Conflit entre la règle 146 et le jeton ":" résolu par réduction (":" < DOTRDIVIDE).
Conflit entre la règle 146 et le jeton "(" résolu par réduction ("(" < DOTRDIVIDE).
Conflit entre la règle 146 et le jeton "." résolu par décalage (DOTRDIVIDE < ".").
Conflit entre la règle 146 et le jeton ".'" résolu par décalage (DOTRDIVIDE < ".'").
Conflit entre la règle 146 et le jeton "+" résolu par réduction ("+" < DOTRDIVIDE).
Conflit entre la règle 146 et le jeton "-" résolu par réduction ("-" < DOTRDIVIDE).
Conflit entre la règle 146 et le jeton "*" résolu par réduction (%left "*").
Conflit entre la règle 146 et le jeton ".*" résolu par réduction (%left ".*").
Conflit entre la règle 146 et le jeton ".*." résolu par réduction (%left ".*.").
Conflit entre la règle 146 et le jeton "/" résolu par réduction (%left "/").
Conflit entre la règle 146 et le jeton "./" résolu par réduction (%left "./").
Conflit entre la règle 146 et le jeton "/." résolu par réduction (%left "/.").
Conflit entre la règle 146 et le jeton "./." résolu par réduction (%left "./.").
Conflit entre la règle 146 et le jeton "\\" résolu par réduction (%left "\\").
Conflit entre la règle 146 et le jeton ".\\" résolu par réduction (%left ".\\").
Conflit entre la règle 146 et le jeton ".\\." résolu par réduction (%left ".\\.").
Conflit entre la règle 146 et le jeton "** or ^" résolu par décalage (DOTRDIVIDE < "** or ^").
Conflit entre la règle 146 et le jeton ".^" résolu par décalage (DOTRDIVIDE < ".^").
Conflit entre la règle 146 et le jeton "==" résolu par réduction ("==" < DOTRDIVIDE).
Conflit entre la règle 146 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < DOTRDIVIDE).
Conflit entre la règle 146 et le jeton "<" résolu par réduction ("<" < DOTRDIVIDE).
Conflit entre la règle 146 et le jeton "<=" résolu par réduction ("<=" < DOTRDIVIDE).
Conflit entre la règle 146 et le jeton ">" résolu par réduction (">" < DOTRDIVIDE).
Conflit entre la règle 146 et le jeton ">=" résolu par réduction (">=" < DOTRDIVIDE).
Conflit entre la règle 146 et le jeton "&" résolu par réduction ("&" < DOTRDIVIDE).
Conflit entre la règle 146 et le jeton "|" résolu par réduction ("|" < DOTRDIVIDE).


état 261

  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  149             | ".\\." functionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  157 variable: functionCall . "." variable
  159         | functionCall . listableEnd
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"        décalage et aller à l'état 115
    "."        décalage et aller à l'état 166
    ".'"       décalage et aller à l'état 118
    "** or ^"  décalage et aller à l'état 131
    ".^"       décalage et aller à l'état 132

    $défaut  réduction par utilisation de la règle 149 (rightOperand)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145

Conflit entre la règle 149 et le jeton "'" résolu par décalage (KRONRDIVIDE < "'").
Conflit entre la règle 149 et le jeton ":" résolu par réduction (":" < KRONRDIVIDE).
Conflit entre la règle 149 et le jeton "." résolu par décalage (KRONRDIVIDE < ".").
Conflit entre la règle 149 et le jeton ".'" résolu par décalage (KRONRDIVIDE < ".'").
Conflit entre la règle 149 et le jeton "+" résolu par réduction ("+" < KRONRDIVIDE).
Conflit entre la règle 149 et le jeton "-" résolu par réduction ("-" < KRONRDIVIDE).
Conflit entre la règle 149 et le jeton "*" résolu par réduction (%left "*").
Conflit entre la règle 149 et le jeton ".*" résolu par réduction (%left ".*").
Conflit entre la règle 149 et le jeton ".*." résolu par réduction (%left ".*.").
Conflit entre la règle 149 et le jeton "/" résolu par réduction (%left "/").
Conflit entre la règle 149 et le jeton "./" résolu par réduction (%left "./").
Conflit entre la règle 149 et le jeton "/." résolu par réduction (%left "/.").
Conflit entre la règle 149 et le jeton "./." résolu par réduction (%left "./.").
Conflit entre la règle 149 et le jeton "\\" résolu par réduction (%left "\\").
Conflit entre la règle 149 et le jeton ".\\" résolu par réduction (%left ".\\").
Conflit entre la règle 149 et le jeton ".\\." résolu par réduction (%left ".\\.").
Conflit entre la règle 149 et le jeton "** or ^" résolu par décalage (KRONRDIVIDE < "** or ^").
Conflit entre la règle 149 et le jeton ".^" résolu par décalage (KRONRDIVIDE < ".^").
Conflit entre la règle 149 et le jeton "==" résolu par réduction ("==" < KRONRDIVIDE).
Conflit entre la règle 149 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < KRONRDIVIDE).
Conflit entre la règle 149 et le jeton "<" résolu par réduction ("<" < KRONRDIVIDE).
Conflit entre la règle 149 et le jeton "<=" résolu par réduction ("<=" < KRONRDIVIDE).
Conflit entre la règle 149 et le jeton ">" résolu par réduction (">" < KRONRDIVIDE).
Conflit entre la règle 149 et le jeton ">=" résolu par réduction (">=" < KRONRDIVIDE).
Conflit entre la règle 149 et le jeton "&" résolu par réduction ("&" < KRONRDIVIDE).
Conflit entre la règle 149 et le jeton "|" résolu par réduction ("|" < KRONRDIVIDE).


état 262

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  148             | ".\\." variable .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  158         | variable . listableEnd
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"        décalage et aller à l'état 148
    "."        décalage et aller à l'état 167
    ".'"       décalage et aller à l'état 151
    "** or ^"  décalage et aller à l'état 152
    ".^"       décalage et aller à l'état 153

    $défaut  réduction par utilisation de la règle 148 (rightOperand)

    rightOperand   aller à l'état 154
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 155
    comparators    aller à l'état 156

Conflit entre la règle 148 et le jeton "'" résolu par décalage (KRONRDIVIDE < "'").
Conflit entre la règle 148 et le jeton ":" résolu par réduction (":" < KRONRDIVIDE).
Conflit entre la règle 148 et le jeton "(" résolu par réduction ("(" < KRONRDIVIDE).
Conflit entre la règle 148 et le jeton "." résolu par décalage (KRONRDIVIDE < ".").
Conflit entre la règle 148 et le jeton ".'" résolu par décalage (KRONRDIVIDE < ".'").
Conflit entre la règle 148 et le jeton "+" résolu par réduction ("+" < KRONRDIVIDE).
Conflit entre la règle 148 et le jeton "-" résolu par réduction ("-" < KRONRDIVIDE).
Conflit entre la règle 148 et le jeton "*" résolu par réduction (%left "*").
Conflit entre la règle 148 et le jeton ".*" résolu par réduction (%left ".*").
Conflit entre la règle 148 et le jeton ".*." résolu par réduction (%left ".*.").
Conflit entre la règle 148 et le jeton "/" résolu par réduction (%left "/").
Conflit entre la règle 148 et le jeton "./" résolu par réduction (%left "./").
Conflit entre la règle 148 et le jeton "/." résolu par réduction (%left "/.").
Conflit entre la règle 148 et le jeton "./." résolu par réduction (%left "./.").
Conflit entre la règle 148 et le jeton "\\" résolu par réduction (%left "\\").
Conflit entre la règle 148 et le jeton ".\\" résolu par réduction (%left ".\\").
Conflit entre la règle 148 et le jeton ".\\." résolu par réduction (%left ".\\.").
Conflit entre la règle 148 et le jeton "** or ^" résolu par décalage (KRONRDIVIDE < "** or ^").
Conflit entre la règle 148 et le jeton ".^" résolu par décalage (KRONRDIVIDE < ".^").
Conflit entre la règle 148 et le jeton "==" résolu par réduction ("==" < KRONRDIVIDE).
Conflit entre la règle 148 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < KRONRDIVIDE).
Conflit entre la règle 148 et le jeton "<" résolu par réduction ("<" < KRONRDIVIDE).
Conflit entre la règle 148 et le jeton "<=" résolu par réduction ("<=" < KRONRDIVIDE).
Conflit entre la règle 148 et le jeton ">" résolu par réduction (">" < KRONRDIVIDE).
Conflit entre la règle 148 et le jeton ">=" résolu par réduction (">=" < KRONRDIVIDE).
Conflit entre la règle 148 et le jeton "&" résolu par réduction ("&" < KRONRDIVIDE).
Conflit entre la règle 148 et le jeton "|" résolu par réduction ("|" < KRONRDIVIDE).


état 263

  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  117          | functionCall "** or ^" functionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  157 variable: functionCall . "." variable
  159         | functionCall . listableEnd
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"   décalage et aller à l'état 115
    "."   décalage et aller à l'état 166
    ".'"  décalage et aller à l'état 118

    $défaut  réduction par utilisation de la règle 117 (operation)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145

Conflit entre la règle 117 et le jeton "'" résolu par décalage (POWER < "'").
Conflit entre la règle 117 et le jeton ":" résolu par réduction (":" < POWER).
Conflit entre la règle 117 et le jeton "." résolu par décalage (POWER < ".").
Conflit entre la règle 117 et le jeton ".'" résolu par décalage (POWER < ".'").
Conflit entre la règle 117 et le jeton "+" résolu par réduction ("+" < POWER).
Conflit entre la règle 117 et le jeton "-" résolu par réduction ("-" < POWER).
Conflit entre la règle 117 et le jeton "*" résolu par réduction ("*" < POWER).
Conflit entre la règle 117 et le jeton ".*" résolu par réduction (".*" < POWER).
Conflit entre la règle 117 et le jeton ".*." résolu par réduction (".*." < POWER).
Conflit entre la règle 117 et le jeton "/" résolu par réduction ("/" < POWER).
Conflit entre la règle 117 et le jeton "./" résolu par réduction ("./" < POWER).
Conflit entre la règle 117 et le jeton "/." résolu par réduction ("/." < POWER).
Conflit entre la règle 117 et le jeton "./." résolu par réduction ("./." < POWER).
Conflit entre la règle 117 et le jeton "\\" résolu par réduction ("\\" < POWER).
Conflit entre la règle 117 et le jeton ".\\" résolu par réduction (".\\" < POWER).
Conflit entre la règle 117 et le jeton ".\\." résolu par réduction (".\\." < POWER).
Conflit entre la règle 117 et le jeton "** or ^" résolu par réduction (%left "** or ^").
Conflit entre la règle 117 et le jeton ".^" résolu par réduction (%left ".^").
Conflit entre la règle 117 et le jeton "==" résolu par réduction ("==" < POWER).
Conflit entre la règle 117 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < POWER).
Conflit entre la règle 117 et le jeton "<" résolu par réduction ("<" < POWER).
Conflit entre la règle 117 et le jeton "<=" résolu par réduction ("<=" < POWER).
Conflit entre la règle 117 et le jeton ">" résolu par réduction (">" < POWER).
Conflit entre la règle 117 et le jeton ">=" résolu par réduction (">=" < POWER).
Conflit entre la règle 117 et le jeton "&" résolu par réduction ("&" < POWER).
Conflit entre la règle 117 et le jeton "|" résolu par réduction ("|" < POWER).


état 264

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  116          | functionCall "** or ^" variable .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  158         | variable . listableEnd
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"   décalage et aller à l'état 148
    "."   décalage et aller à l'état 167
    ".'"  décalage et aller à l'état 151

    $défaut  réduction par utilisation de la règle 116 (operation)

    rightOperand   aller à l'état 154
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 155
    comparators    aller à l'état 156

Conflit entre la règle 116 et le jeton "'" résolu par décalage (POWER < "'").
Conflit entre la règle 116 et le jeton ":" résolu par réduction (":" < POWER).
Conflit entre la règle 116 et le jeton "(" résolu par réduction ("(" < POWER).
Conflit entre la règle 116 et le jeton "." résolu par décalage (POWER < ".").
Conflit entre la règle 116 et le jeton ".'" résolu par décalage (POWER < ".'").
Conflit entre la règle 116 et le jeton "+" résolu par réduction ("+" < POWER).
Conflit entre la règle 116 et le jeton "-" résolu par réduction ("-" < POWER).
Conflit entre la règle 116 et le jeton "*" résolu par réduction ("*" < POWER).
Conflit entre la règle 116 et le jeton ".*" résolu par réduction (".*" < POWER).
Conflit entre la règle 116 et le jeton ".*." résolu par réduction (".*." < POWER).
Conflit entre la règle 116 et le jeton "/" résolu par réduction ("/" < POWER).
Conflit entre la règle 116 et le jeton "./" résolu par réduction ("./" < POWER).
Conflit entre la règle 116 et le jeton "/." résolu par réduction ("/." < POWER).
Conflit entre la règle 116 et le jeton "./." résolu par réduction ("./." < POWER).
Conflit entre la règle 116 et le jeton "\\" résolu par réduction ("\\" < POWER).
Conflit entre la règle 116 et le jeton ".\\" résolu par réduction (".\\" < POWER).
Conflit entre la règle 116 et le jeton ".\\." résolu par réduction (".\\." < POWER).
Conflit entre la règle 116 et le jeton "** or ^" résolu par réduction (%left "** or ^").
Conflit entre la règle 116 et le jeton ".^" résolu par réduction (%left ".^").
Conflit entre la règle 116 et le jeton "==" résolu par réduction ("==" < POWER).
Conflit entre la règle 116 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < POWER).
Conflit entre la règle 116 et le jeton "<" résolu par réduction ("<" < POWER).
Conflit entre la règle 116 et le jeton "<=" résolu par réduction ("<=" < POWER).
Conflit entre la règle 116 et le jeton ">" résolu par réduction (">" < POWER).
Conflit entre la règle 116 et le jeton ">=" résolu par réduction (">=" < POWER).
Conflit entre la règle 116 et le jeton "&" résolu par réduction ("&" < POWER).
Conflit entre la règle 116 et le jeton "|" résolu par réduction ("|" < POWER).


état 265

  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  121          | functionCall ".^" functionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  157 variable: functionCall . "." variable
  159         | functionCall . listableEnd
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"   décalage et aller à l'état 115
    "."   décalage et aller à l'état 166
    ".'"  décalage et aller à l'état 118

    $défaut  réduction par utilisation de la règle 121 (operation)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145

Conflit entre la règle 121 et le jeton "'" résolu par décalage (DOTPOWER < "'").
Conflit entre la règle 121 et le jeton ":" résolu par réduction (":" < DOTPOWER).
Conflit entre la règle 121 et le jeton "." résolu par décalage (DOTPOWER < ".").
Conflit entre la règle 121 et le jeton ".'" résolu par décalage (DOTPOWER < ".'").
Conflit entre la règle 121 et le jeton "+" résolu par réduction ("+" < DOTPOWER).
Conflit entre la règle 121 et le jeton "-" résolu par réduction ("-" < DOTPOWER).
Conflit entre la règle 121 et le jeton "*" résolu par réduction ("*" < DOTPOWER).
Conflit entre la règle 121 et le jeton ".*" résolu par réduction (".*" < DOTPOWER).
Conflit entre la règle 121 et le jeton ".*." résolu par réduction (".*." < DOTPOWER).
Conflit entre la règle 121 et le jeton "/" résolu par réduction ("/" < DOTPOWER).
Conflit entre la règle 121 et le jeton "./" résolu par réduction ("./" < DOTPOWER).
Conflit entre la règle 121 et le jeton "/." résolu par réduction ("/." < DOTPOWER).
Conflit entre la règle 121 et le jeton "./." résolu par réduction ("./." < DOTPOWER).
Conflit entre la règle 121 et le jeton "\\" résolu par réduction ("\\" < DOTPOWER).
Conflit entre la règle 121 et le jeton ".\\" résolu par réduction (".\\" < DOTPOWER).
Conflit entre la règle 121 et le jeton ".\\." résolu par réduction (".\\." < DOTPOWER).
Conflit entre la règle 121 et le jeton "** or ^" résolu par réduction (%left "** or ^").
Conflit entre la règle 121 et le jeton ".^" résolu par réduction (%left ".^").
Conflit entre la règle 121 et le jeton "==" résolu par réduction ("==" < DOTPOWER).
Conflit entre la règle 121 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < DOTPOWER).
Conflit entre la règle 121 et le jeton "<" résolu par réduction ("<" < DOTPOWER).
Conflit entre la règle 121 et le jeton "<=" résolu par réduction ("<=" < DOTPOWER).
Conflit entre la règle 121 et le jeton ">" résolu par réduction (">" < DOTPOWER).
Conflit entre la règle 121 et le jeton ">=" résolu par réduction (">=" < DOTPOWER).
Conflit entre la règle 121 et le jeton "&" résolu par réduction ("&" < DOTPOWER).
Conflit entre la règle 121 et le jeton "|" résolu par réduction ("|" < DOTPOWER).


état 266

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  120          | functionCall ".^" variable .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  158         | variable . listableEnd
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"   décalage et aller à l'état 148
    "."   décalage et aller à l'état 167
    ".'"  décalage et aller à l'état 151

    $défaut  réduction par utilisation de la règle 120 (operation)

    rightOperand   aller à l'état 154
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 155
    comparators    aller à l'état 156

Conflit entre la règle 120 et le jeton "'" résolu par décalage (DOTPOWER < "'").
Conflit entre la règle 120 et le jeton ":" résolu par réduction (":" < DOTPOWER).
Conflit entre la règle 120 et le jeton "(" résolu par réduction ("(" < DOTPOWER).
Conflit entre la règle 120 et le jeton "." résolu par décalage (DOTPOWER < ".").
Conflit entre la règle 120 et le jeton ".'" résolu par décalage (DOTPOWER < ".'").
Conflit entre la règle 120 et le jeton "+" résolu par réduction ("+" < DOTPOWER).
Conflit entre la règle 120 et le jeton "-" résolu par réduction ("-" < DOTPOWER).
Conflit entre la règle 120 et le jeton "*" résolu par réduction ("*" < DOTPOWER).
Conflit entre la règle 120 et le jeton ".*" résolu par réduction (".*" < DOTPOWER).
Conflit entre la règle 120 et le jeton ".*." résolu par réduction (".*." < DOTPOWER).
Conflit entre la règle 120 et le jeton "/" résolu par réduction ("/" < DOTPOWER).
Conflit entre la règle 120 et le jeton "./" résolu par réduction ("./" < DOTPOWER).
Conflit entre la règle 120 et le jeton "/." résolu par réduction ("/." < DOTPOWER).
Conflit entre la règle 120 et le jeton "./." résolu par réduction ("./." < DOTPOWER).
Conflit entre la règle 120 et le jeton "\\" résolu par réduction ("\\" < DOTPOWER).
Conflit entre la règle 120 et le jeton ".\\" résolu par réduction (".\\" < DOTPOWER).
Conflit entre la règle 120 et le jeton ".\\." résolu par réduction (".\\." < DOTPOWER).
Conflit entre la règle 120 et le jeton "** or ^" résolu par réduction (%left "** or ^").
Conflit entre la règle 120 et le jeton ".^" résolu par réduction (%left ".^").
Conflit entre la règle 120 et le jeton "==" résolu par réduction ("==" < DOTPOWER).
Conflit entre la règle 120 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < DOTPOWER).
Conflit entre la règle 120 et le jeton "<" résolu par réduction ("<" < DOTPOWER).
Conflit entre la règle 120 et le jeton "<=" résolu par réduction ("<=" < DOTPOWER).
Conflit entre la règle 120 et le jeton ">" résolu par réduction (">" < DOTPOWER).
Conflit entre la règle 120 et le jeton ">=" résolu par réduction (">=" < DOTPOWER).
Conflit entre la règle 120 et le jeton "&" résolu par réduction ("&" < DOTPOWER).
Conflit entre la règle 120 et le jeton "|" résolu par réduction ("|" < DOTPOWER).


état 267

  218 variableDeclaration: functionCall "=" ":" .

    $défaut  réduction par utilisation de la règle 218 (variableDeclaration)


état 268

  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  157 variable: functionCall . "." variable
  159         | functionCall . listableEnd
  216 variableDeclaration: functionCall "=" functionCall .  ["end of file", "end of line", ",", ";", ")", "else", "elseif", "end", "case", "endfunction", "catch", "line comment"]
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"         décalage et aller à l'état 115
    ":"         décalage et aller à l'état 116
    "."         décalage et aller à l'état 166
    ".'"        décalage et aller à l'état 118
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 131
    ".^"        décalage et aller à l'état 132
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140

    $défaut  réduction par utilisation de la règle 216 (variableDeclaration)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145


état 269

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  158         | variable . listableEnd
  215 variableDeclaration: functionCall "=" variable .  ["end of file", "end of line", ",", ";", ")", "else", "elseif", "end", "case", "endfunction", "catch", "line comment"]
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"         décalage et aller à l'état 148
    ":"         décalage et aller à l'état 116
    "("         décalage et aller à l'état 149
    "."         décalage et aller à l'état 167
    ".'"        décalage et aller à l'état 151
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 152
    ".^"        décalage et aller à l'état 153
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140

    $défaut  réduction par utilisation de la règle 215 (variableDeclaration)

    rightOperand   aller à l'état 154
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 155
    comparators    aller à l'état 156


état 270

  220 variableDeclaration: functionCall "=" returnControl .

    $défaut  réduction par utilisation de la règle 220 (variableDeclaration)


état 271

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  152 listableEnd: listableBegin ":" . variable
  153            | listableBegin ":" . functionCall
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 362
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 363
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 272

  107 comparable: ":" .

    $défaut  réduction par utilisation de la règle 107 (comparable)


état 273

  104 comparison: functionCall . comparators comparable
  106 comparable: functionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "(", ")", "[", "]", "{", "}", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  157 variable: functionCall . "." variable
  159         | functionCall . listableEnd
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"         décalage et aller à l'état 115
    ":"         décalage et aller à l'état 116
    "."         décalage et aller à l'état 166
    ".'"        décalage et aller à l'état 118
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 131
    ".^"        décalage et aller à l'état 132
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140

    $défaut  réduction par utilisation de la règle 106 (comparable)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145

Conflit entre la règle 106 et le jeton "'" résolu par décalage (HIGHLEVEL < "'").
Conflit entre la règle 106 et le jeton ":" résolu par décalage (HIGHLEVEL < ":").
Conflit entre la règle 106 et le jeton "." résolu par décalage (HIGHLEVEL < ".").
Conflit entre la règle 106 et le jeton ".'" résolu par décalage (HIGHLEVEL < ".'").
Conflit entre la règle 106 et le jeton "+" résolu par décalage (HIGHLEVEL < "+").
Conflit entre la règle 106 et le jeton "-" résolu par décalage (HIGHLEVEL < "-").
Conflit entre la règle 106 et le jeton "*" résolu par décalage (HIGHLEVEL < "*").
Conflit entre la règle 106 et le jeton ".*" résolu par décalage (HIGHLEVEL < ".*").
Conflit entre la règle 106 et le jeton ".*." résolu par décalage (HIGHLEVEL < ".*.").
Conflit entre la règle 106 et le jeton "/" résolu par décalage (HIGHLEVEL < "/").
Conflit entre la règle 106 et le jeton "./" résolu par décalage (HIGHLEVEL < "./").
Conflit entre la règle 106 et le jeton "/." résolu par décalage (HIGHLEVEL < "/.").
Conflit entre la règle 106 et le jeton "./." résolu par décalage (HIGHLEVEL < "./.").
Conflit entre la règle 106 et le jeton "\\" résolu par décalage (HIGHLEVEL < "\\").
Conflit entre la règle 106 et le jeton ".\\" résolu par décalage (HIGHLEVEL < ".\\").
Conflit entre la règle 106 et le jeton ".\\." résolu par décalage (HIGHLEVEL < ".\\.").
Conflit entre la règle 106 et le jeton "** or ^" résolu par décalage (HIGHLEVEL < "** or ^").
Conflit entre la règle 106 et le jeton ".^" résolu par décalage (HIGHLEVEL < ".^").
Conflit entre la règle 106 et le jeton "==" résolu par décalage (HIGHLEVEL < "==").
Conflit entre la règle 106 et le jeton "<> or ~=" résolu par décalage (HIGHLEVEL < "<> or ~=").
Conflit entre la règle 106 et le jeton "<" résolu par décalage (HIGHLEVEL < "<").
Conflit entre la règle 106 et le jeton "<=" résolu par décalage (HIGHLEVEL < "<=").
Conflit entre la règle 106 et le jeton ">" résolu par décalage (HIGHLEVEL < ">").
Conflit entre la règle 106 et le jeton ">=" résolu par décalage (HIGHLEVEL < ">=").
Conflit entre la règle 106 et le jeton "&" résolu par décalage (HIGHLEVEL < "&").
Conflit entre la règle 106 et le jeton "|" résolu par décalage (HIGHLEVEL < "|").


état 274

  104 comparison: functionCall comparators comparable .

    $défaut  réduction par utilisation de la règle 104 (comparison)


état 275

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  105 comparable: variable .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", ")", "[", "]", "{", "}", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  158         | variable . listableEnd
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"         décalage et aller à l'état 148
    ":"         décalage et aller à l'état 116
    "("         décalage et aller à l'état 149
    "."         décalage et aller à l'état 167
    ".'"        décalage et aller à l'état 151
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 152
    ".^"        décalage et aller à l'état 153
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140

    $défaut  réduction par utilisation de la règle 105 (comparable)

    rightOperand   aller à l'état 154
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 155
    comparators    aller à l'état 156

Conflit entre la règle 105 et le jeton "'" résolu par décalage (HIGHLEVEL < "'").
Conflit entre la règle 105 et le jeton ":" résolu par décalage (HIGHLEVEL < ":").
Conflit entre la règle 105 et le jeton "(" résolu par décalage (HIGHLEVEL < "(").
Conflit entre la règle 105 et le jeton "." résolu par décalage (HIGHLEVEL < ".").
Conflit entre la règle 105 et le jeton ".'" résolu par décalage (HIGHLEVEL < ".'").
Conflit entre la règle 105 et le jeton "+" résolu par décalage (HIGHLEVEL < "+").
Conflit entre la règle 105 et le jeton "-" résolu par décalage (HIGHLEVEL < "-").
Conflit entre la règle 105 et le jeton "*" résolu par décalage (HIGHLEVEL < "*").
Conflit entre la règle 105 et le jeton ".*" résolu par décalage (HIGHLEVEL < ".*").
Conflit entre la règle 105 et le jeton ".*." résolu par décalage (HIGHLEVEL < ".*.").
Conflit entre la règle 105 et le jeton "/" résolu par décalage (HIGHLEVEL < "/").
Conflit entre la règle 105 et le jeton "./" résolu par décalage (HIGHLEVEL < "./").
Conflit entre la règle 105 et le jeton "/." résolu par décalage (HIGHLEVEL < "/.").
Conflit entre la règle 105 et le jeton "./." résolu par décalage (HIGHLEVEL < "./.").
Conflit entre la règle 105 et le jeton "\\" résolu par décalage (HIGHLEVEL < "\\").
Conflit entre la règle 105 et le jeton ".\\" résolu par décalage (HIGHLEVEL < ".\\").
Conflit entre la règle 105 et le jeton ".\\." résolu par décalage (HIGHLEVEL < ".\\.").
Conflit entre la règle 105 et le jeton "** or ^" résolu par décalage (HIGHLEVEL < "** or ^").
Conflit entre la règle 105 et le jeton ".^" résolu par décalage (HIGHLEVEL < ".^").
Conflit entre la règle 105 et le jeton "==" résolu par décalage (HIGHLEVEL < "==").
Conflit entre la règle 105 et le jeton "<> or ~=" résolu par décalage (HIGHLEVEL < "<> or ~=").
Conflit entre la règle 105 et le jeton "<" résolu par décalage (HIGHLEVEL < "<").
Conflit entre la règle 105 et le jeton "<=" résolu par décalage (HIGHLEVEL < "<=").
Conflit entre la règle 105 et le jeton ">" résolu par décalage (HIGHLEVEL < ">").
Conflit entre la règle 105 et le jeton ">=" résolu par décalage (HIGHLEVEL < ">=").
Conflit entre la règle 105 et le jeton "&" résolu par décalage (HIGHLEVEL < "&").
Conflit entre la règle 105 et le jeton "|" résolu par décalage (HIGHLEVEL < "|").


état 276

   56 recursiveFunctionCall: simpleFunctionCall "(" functionArgs . ")"
   63 functionArgs: functionArgs . "," variable
   64             | functionArgs . "," functionCall
   65             | functionArgs . "," ":"
   66             | functionArgs . "," variableDeclaration
   67             | functionArgs . ","

    ","  décalage et aller à l'état 290
    ")"  décalage et aller à l'état 364


état 277

   57 recursiveFunctionCall: recursiveFunctionCall "(" functionArgs . ")"
   63 functionArgs: functionArgs . "," variable
   64             | functionArgs . "," functionCall
   65             | functionArgs . "," ":"
   66             | functionArgs . "," variableDeclaration
   67             | functionArgs . ","

    ","  décalage et aller à l'état 290
    ")"  décalage et aller à l'état 365


état 278

   55 simpleFunctionCall: variable "(" functionArgs . ")"
   63 functionArgs: functionArgs . "," variable
   64             | functionArgs . "," functionCall
   65             | functionArgs . "," ":"
   66             | functionArgs . "," variableDeclaration
   67             | functionArgs . ","

    ","  décalage et aller à l'état 290
    ")"  décalage et aller à l'état 366


état 279

  156 variable: variable "." "identifier" .  ["end of file", "end of line", "'", ",", ":", ";", "(", ")", ".", ".'", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "else", "elseif", "end", "case", "endfunction", "catch", "line comment"]
  163         | "identifier" .  ["'", ":", "(", ".", ".'", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|"]
  221 assignable: variable "." "identifier" .  ["="]

    "'"         réduction par utilisation de la règle 156 (variable)
    "'"         [réduction par utilisation de la règle 163 (variable)]
    ":"         réduction par utilisation de la règle 156 (variable)
    ":"         [réduction par utilisation de la règle 163 (variable)]
    "("         réduction par utilisation de la règle 156 (variable)
    "("         [réduction par utilisation de la règle 163 (variable)]
    "."         réduction par utilisation de la règle 156 (variable)
    "."         [réduction par utilisation de la règle 163 (variable)]
    ".'"        réduction par utilisation de la règle 156 (variable)
    ".'"        [réduction par utilisation de la règle 163 (variable)]
    "+"         réduction par utilisation de la règle 156 (variable)
    "+"         [réduction par utilisation de la règle 163 (variable)]
    "-"         réduction par utilisation de la règle 156 (variable)
    "-"         [réduction par utilisation de la règle 163 (variable)]
    "*"         réduction par utilisation de la règle 156 (variable)
    "*"         [réduction par utilisation de la règle 163 (variable)]
    ".*"        réduction par utilisation de la règle 156 (variable)
    ".*"        [réduction par utilisation de la règle 163 (variable)]
    ".*."       réduction par utilisation de la règle 156 (variable)
    ".*."       [réduction par utilisation de la règle 163 (variable)]
    "/"         réduction par utilisation de la règle 156 (variable)
    "/"         [réduction par utilisation de la règle 163 (variable)]
    "./"        réduction par utilisation de la règle 156 (variable)
    "./"        [réduction par utilisation de la règle 163 (variable)]
    "/."        réduction par utilisation de la règle 156 (variable)
    "/."        [réduction par utilisation de la règle 163 (variable)]
    "./."       réduction par utilisation de la règle 156 (variable)
    "./."       [réduction par utilisation de la règle 163 (variable)]
    "\\"        réduction par utilisation de la règle 156 (variable)
    "\\"        [réduction par utilisation de la règle 163 (variable)]
    ".\\"       réduction par utilisation de la règle 156 (variable)
    ".\\"       [réduction par utilisation de la règle 163 (variable)]
    ".\\."      réduction par utilisation de la règle 156 (variable)
    ".\\."      [réduction par utilisation de la règle 163 (variable)]
    "** or ^"   réduction par utilisation de la règle 156 (variable)
    "** or ^"   [réduction par utilisation de la règle 163 (variable)]
    ".^"        réduction par utilisation de la règle 156 (variable)
    ".^"        [réduction par utilisation de la règle 163 (variable)]
    "=="        réduction par utilisation de la règle 156 (variable)
    "=="        [réduction par utilisation de la règle 163 (variable)]
    "<> or ~="  réduction par utilisation de la règle 156 (variable)
    "<> or ~="  [réduction par utilisation de la règle 163 (variable)]
    "<"         réduction par utilisation de la règle 156 (variable)
    "<"         [réduction par utilisation de la règle 163 (variable)]
    "<="        réduction par utilisation de la règle 156 (variable)
    "<="        [réduction par utilisation de la règle 163 (variable)]
    ">"         réduction par utilisation de la règle 156 (variable)
    ">"         [réduction par utilisation de la règle 163 (variable)]
    ">="        réduction par utilisation de la règle 156 (variable)
    ">="        [réduction par utilisation de la règle 163 (variable)]
    "&"         réduction par utilisation de la règle 156 (variable)
    "&"         [réduction par utilisation de la règle 163 (variable)]
    "|"         réduction par utilisation de la règle 156 (variable)
    "|"         [réduction par utilisation de la règle 163 (variable)]
    "="         réduction par utilisation de la règle 221 (assignable)
    $défaut    réduction par utilisation de la règle 156 (variable)


état 280

  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  157 variable: functionCall . "." variable
  159         | functionCall . listableEnd
  222 assignable: variable "." functionCall .  ["="]
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"         décalage et aller à l'état 115
    ":"         décalage et aller à l'état 116
    "."         décalage et aller à l'état 166
    ".'"        décalage et aller à l'état 118
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 131
    ".^"        décalage et aller à l'état 132
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140

    $défaut  réduction par utilisation de la règle 222 (assignable)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145


état 281

  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  115          | variable "** or ^" functionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  157 variable: functionCall . "." variable
  159         | functionCall . listableEnd
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"   décalage et aller à l'état 115
    "."   décalage et aller à l'état 166
    ".'"  décalage et aller à l'état 118

    $défaut  réduction par utilisation de la règle 115 (operation)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145

Conflit entre la règle 115 et le jeton "'" résolu par décalage (POWER < "'").
Conflit entre la règle 115 et le jeton ":" résolu par réduction (":" < POWER).
Conflit entre la règle 115 et le jeton "." résolu par décalage (POWER < ".").
Conflit entre la règle 115 et le jeton ".'" résolu par décalage (POWER < ".'").
Conflit entre la règle 115 et le jeton "+" résolu par réduction ("+" < POWER).
Conflit entre la règle 115 et le jeton "-" résolu par réduction ("-" < POWER).
Conflit entre la règle 115 et le jeton "*" résolu par réduction ("*" < POWER).
Conflit entre la règle 115 et le jeton ".*" résolu par réduction (".*" < POWER).
Conflit entre la règle 115 et le jeton ".*." résolu par réduction (".*." < POWER).
Conflit entre la règle 115 et le jeton "/" résolu par réduction ("/" < POWER).
Conflit entre la règle 115 et le jeton "./" résolu par réduction ("./" < POWER).
Conflit entre la règle 115 et le jeton "/." résolu par réduction ("/." < POWER).
Conflit entre la règle 115 et le jeton "./." résolu par réduction ("./." < POWER).
Conflit entre la règle 115 et le jeton "\\" résolu par réduction ("\\" < POWER).
Conflit entre la règle 115 et le jeton ".\\" résolu par réduction (".\\" < POWER).
Conflit entre la règle 115 et le jeton ".\\." résolu par réduction (".\\." < POWER).
Conflit entre la règle 115 et le jeton "** or ^" résolu par réduction (%left "** or ^").
Conflit entre la règle 115 et le jeton ".^" résolu par réduction (%left ".^").
Conflit entre la règle 115 et le jeton "==" résolu par réduction ("==" < POWER).
Conflit entre la règle 115 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < POWER).
Conflit entre la règle 115 et le jeton "<" résolu par réduction ("<" < POWER).
Conflit entre la règle 115 et le jeton "<=" résolu par réduction ("<=" < POWER).
Conflit entre la règle 115 et le jeton ">" résolu par réduction (">" < POWER).
Conflit entre la règle 115 et le jeton ">=" résolu par réduction (">=" < POWER).
Conflit entre la règle 115 et le jeton "&" résolu par réduction ("&" < POWER).
Conflit entre la règle 115 et le jeton "|" résolu par réduction ("|" < POWER).


état 282

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  114          | variable "** or ^" variable .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  158         | variable . listableEnd
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"   décalage et aller à l'état 148
    "."   décalage et aller à l'état 167
    ".'"  décalage et aller à l'état 151

    $défaut  réduction par utilisation de la règle 114 (operation)

    rightOperand   aller à l'état 154
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 155
    comparators    aller à l'état 156

Conflit entre la règle 114 et le jeton "'" résolu par décalage (POWER < "'").
Conflit entre la règle 114 et le jeton ":" résolu par réduction (":" < POWER).
Conflit entre la règle 114 et le jeton "(" résolu par réduction ("(" < POWER).
Conflit entre la règle 114 et le jeton "." résolu par décalage (POWER < ".").
Conflit entre la règle 114 et le jeton ".'" résolu par décalage (POWER < ".'").
Conflit entre la règle 114 et le jeton "+" résolu par réduction ("+" < POWER).
Conflit entre la règle 114 et le jeton "-" résolu par réduction ("-" < POWER).
Conflit entre la règle 114 et le jeton "*" résolu par réduction ("*" < POWER).
Conflit entre la règle 114 et le jeton ".*" résolu par réduction (".*" < POWER).
Conflit entre la règle 114 et le jeton ".*." résolu par réduction (".*." < POWER).
Conflit entre la règle 114 et le jeton "/" résolu par réduction ("/" < POWER).
Conflit entre la règle 114 et le jeton "./" résolu par réduction ("./" < POWER).
Conflit entre la règle 114 et le jeton "/." résolu par réduction ("/." < POWER).
Conflit entre la règle 114 et le jeton "./." résolu par réduction ("./." < POWER).
Conflit entre la règle 114 et le jeton "\\" résolu par réduction ("\\" < POWER).
Conflit entre la règle 114 et le jeton ".\\" résolu par réduction (".\\" < POWER).
Conflit entre la règle 114 et le jeton ".\\." résolu par réduction (".\\." < POWER).
Conflit entre la règle 114 et le jeton "** or ^" résolu par réduction (%left "** or ^").
Conflit entre la règle 114 et le jeton ".^" résolu par réduction (%left ".^").
Conflit entre la règle 114 et le jeton "==" résolu par réduction ("==" < POWER).
Conflit entre la règle 114 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < POWER).
Conflit entre la règle 114 et le jeton "<" résolu par réduction ("<" < POWER).
Conflit entre la règle 114 et le jeton "<=" résolu par réduction ("<=" < POWER).
Conflit entre la règle 114 et le jeton ">" résolu par réduction (">" < POWER).
Conflit entre la règle 114 et le jeton ">=" résolu par réduction (">=" < POWER).
Conflit entre la règle 114 et le jeton "&" résolu par réduction ("&" < POWER).
Conflit entre la règle 114 et le jeton "|" résolu par réduction ("|" < POWER).


état 283

  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  119          | variable ".^" functionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  157 variable: functionCall . "." variable
  159         | functionCall . listableEnd
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"   décalage et aller à l'état 115
    "."   décalage et aller à l'état 166
    ".'"  décalage et aller à l'état 118

    $défaut  réduction par utilisation de la règle 119 (operation)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145

Conflit entre la règle 119 et le jeton "'" résolu par décalage (DOTPOWER < "'").
Conflit entre la règle 119 et le jeton ":" résolu par réduction (":" < DOTPOWER).
Conflit entre la règle 119 et le jeton "." résolu par décalage (DOTPOWER < ".").
Conflit entre la règle 119 et le jeton ".'" résolu par décalage (DOTPOWER < ".'").
Conflit entre la règle 119 et le jeton "+" résolu par réduction ("+" < DOTPOWER).
Conflit entre la règle 119 et le jeton "-" résolu par réduction ("-" < DOTPOWER).
Conflit entre la règle 119 et le jeton "*" résolu par réduction ("*" < DOTPOWER).
Conflit entre la règle 119 et le jeton ".*" résolu par réduction (".*" < DOTPOWER).
Conflit entre la règle 119 et le jeton ".*." résolu par réduction (".*." < DOTPOWER).
Conflit entre la règle 119 et le jeton "/" résolu par réduction ("/" < DOTPOWER).
Conflit entre la règle 119 et le jeton "./" résolu par réduction ("./" < DOTPOWER).
Conflit entre la règle 119 et le jeton "/." résolu par réduction ("/." < DOTPOWER).
Conflit entre la règle 119 et le jeton "./." résolu par réduction ("./." < DOTPOWER).
Conflit entre la règle 119 et le jeton "\\" résolu par réduction ("\\" < DOTPOWER).
Conflit entre la règle 119 et le jeton ".\\" résolu par réduction (".\\" < DOTPOWER).
Conflit entre la règle 119 et le jeton ".\\." résolu par réduction (".\\." < DOTPOWER).
Conflit entre la règle 119 et le jeton "** or ^" résolu par réduction (%left "** or ^").
Conflit entre la règle 119 et le jeton ".^" résolu par réduction (%left ".^").
Conflit entre la règle 119 et le jeton "==" résolu par réduction ("==" < DOTPOWER).
Conflit entre la règle 119 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < DOTPOWER).
Conflit entre la règle 119 et le jeton "<" résolu par réduction ("<" < DOTPOWER).
Conflit entre la règle 119 et le jeton "<=" résolu par réduction ("<=" < DOTPOWER).
Conflit entre la règle 119 et le jeton ">" résolu par réduction (">" < DOTPOWER).
Conflit entre la règle 119 et le jeton ">=" résolu par réduction (">=" < DOTPOWER).
Conflit entre la règle 119 et le jeton "&" résolu par réduction ("&" < DOTPOWER).
Conflit entre la règle 119 et le jeton "|" résolu par réduction ("|" < DOTPOWER).


état 284

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  118          | variable ".^" variable .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  158         | variable . listableEnd
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"   décalage et aller à l'état 148
    "."   décalage et aller à l'état 167
    ".'"  décalage et aller à l'état 151

    $défaut  réduction par utilisation de la règle 118 (operation)

    rightOperand   aller à l'état 154
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 155
    comparators    aller à l'état 156

Conflit entre la règle 118 et le jeton "'" résolu par décalage (DOTPOWER < "'").
Conflit entre la règle 118 et le jeton ":" résolu par réduction (":" < DOTPOWER).
Conflit entre la règle 118 et le jeton "(" résolu par réduction ("(" < DOTPOWER).
Conflit entre la règle 118 et le jeton "." résolu par décalage (DOTPOWER < ".").
Conflit entre la règle 118 et le jeton ".'" résolu par décalage (DOTPOWER < ".'").
Conflit entre la règle 118 et le jeton "+" résolu par réduction ("+" < DOTPOWER).
Conflit entre la règle 118 et le jeton "-" résolu par réduction ("-" < DOTPOWER).
Conflit entre la règle 118 et le jeton "*" résolu par réduction ("*" < DOTPOWER).
Conflit entre la règle 118 et le jeton ".*" résolu par réduction (".*" < DOTPOWER).
Conflit entre la règle 118 et le jeton ".*." résolu par réduction (".*." < DOTPOWER).
Conflit entre la règle 118 et le jeton "/" résolu par réduction ("/" < DOTPOWER).
Conflit entre la règle 118 et le jeton "./" résolu par réduction ("./" < DOTPOWER).
Conflit entre la règle 118 et le jeton "/." résolu par réduction ("/." < DOTPOWER).
Conflit entre la règle 118 et le jeton "./." résolu par réduction ("./." < DOTPOWER).
Conflit entre la règle 118 et le jeton "\\" résolu par réduction ("\\" < DOTPOWER).
Conflit entre la règle 118 et le jeton ".\\" résolu par réduction (".\\" < DOTPOWER).
Conflit entre la règle 118 et le jeton ".\\." résolu par réduction (".\\." < DOTPOWER).
Conflit entre la règle 118 et le jeton "** or ^" résolu par réduction (%left "** or ^").
Conflit entre la règle 118 et le jeton ".^" résolu par réduction (%left ".^").
Conflit entre la règle 118 et le jeton "==" résolu par réduction ("==" < DOTPOWER).
Conflit entre la règle 118 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < DOTPOWER).
Conflit entre la règle 118 et le jeton "<" résolu par réduction ("<" < DOTPOWER).
Conflit entre la règle 118 et le jeton "<=" résolu par réduction ("<=" < DOTPOWER).
Conflit entre la règle 118 et le jeton ">" résolu par réduction (">" < DOTPOWER).
Conflit entre la règle 118 et le jeton ">=" résolu par réduction (">=" < DOTPOWER).
Conflit entre la règle 118 et le jeton "&" résolu par réduction ("&" < DOTPOWER).
Conflit entre la règle 118 et le jeton "|" résolu par réduction ("|" < DOTPOWER).


état 285

  103 comparison: variable comparators comparable .

    $défaut  réduction par utilisation de la règle 103 (comparison)


état 286

  217 variableDeclaration: assignable "=" ":" .

    $défaut  réduction par utilisation de la règle 217 (variableDeclaration)


état 287

  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  157 variable: functionCall . "." variable
  159         | functionCall . listableEnd
  214 variableDeclaration: assignable "=" functionCall .  ["end of file", "end of line", ",", ";", ")", "else", "elseif", "end", "case", "endfunction", "catch", "line comment"]
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"         décalage et aller à l'état 115
    ":"         décalage et aller à l'état 116
    "."         décalage et aller à l'état 166
    ".'"        décalage et aller à l'état 118
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 131
    ".^"        décalage et aller à l'état 132
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140

    $défaut  réduction par utilisation de la règle 214 (variableDeclaration)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145


état 288

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  158         | variable . listableEnd
  213 variableDeclaration: assignable "=" variable .  ["end of file", "end of line", ",", ";", ")", "else", "elseif", "end", "case", "endfunction", "catch", "line comment"]
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"         décalage et aller à l'état 148
    ":"         décalage et aller à l'état 116
    "("         décalage et aller à l'état 149
    "."         décalage et aller à l'état 167
    ".'"        décalage et aller à l'état 151
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 152
    ".^"        décalage et aller à l'état 153
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140

    $défaut  réduction par utilisation de la règle 213 (variableDeclaration)

    rightOperand   aller à l'état 154
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 155
    comparators    aller à l'état 156


état 289

  219 variableDeclaration: assignable "=" returnControl .

    $défaut  réduction par utilisation de la règle 219 (variableDeclaration)


état 290

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   63 functionArgs: functionArgs "," . variable
   64             | functionArgs "," . functionCall
   65             | functionArgs "," . ":"
   66             | functionArgs "," . variableDeclaration
   67             | functionArgs "," .  [",", ")"]
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"
  213 variableDeclaration: . assignable "=" variable
  214                    | . assignable "=" functionCall
  215                    | . functionCall "=" variable
  216                    | . functionCall "=" functionCall
  217                    | . assignable "=" ":"
  218                    | . functionCall "=" ":"
  219                    | . assignable "=" returnControl
  220                    | . functionCall "=" returnControl
  221 assignable: . variable "." "identifier"
  222           | . variable "." functionCall
  223           | . functionCall "." variable
  224           | . functionCall "." functionCall
  225           | . "identifier"
  226           | . multipleResults
  227 multipleResults: . "[" matrixOrCellColumns "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    ":"           décalage et aller à l'état 367
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 8
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 159
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    $défaut  réduction par utilisation de la règle 67 (functionArgs)

    functionCall           aller à l'état 368
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 369
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 370
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45


état 291

   53 specificFunctionCall: "%t or %T" "(" functionArgs ")" .

    $défaut  réduction par utilisation de la règle 53 (specificFunctionCall)


état 292

   54 specificFunctionCall: "%f or %F" "(" functionArgs ")" .

    $défaut  réduction par utilisation de la règle 54 (specificFunctionCall)


état 293

  191 matrix: "[" matrixOrCellColumns "]" .

    $défaut  réduction par utilisation de la règle 191 (matrix)


état 294

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  157         | functionCall "." variable .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "'", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", ".", ".'", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  158         | variable . listableEnd
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    $défaut  réduction par utilisation de la règle 157 (variable)

    rightOperand   aller à l'état 154
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 155
    comparators    aller à l'état 156

Conflit entre la règle 157 et le jeton "'" résolu par réduction ("'" < DOT).
Conflit entre la règle 157 et le jeton ":" résolu par réduction (":" < DOT).
Conflit entre la règle 157 et le jeton "(" résolu par réduction ("(" < DOT).
Conflit entre la règle 157 et le jeton "." résolu par réduction (%left ".").
Conflit entre la règle 157 et le jeton ".'" résolu par réduction (".'" < DOT).
Conflit entre la règle 157 et le jeton "+" résolu par réduction ("+" < DOT).
Conflit entre la règle 157 et le jeton "-" résolu par réduction ("-" < DOT).
Conflit entre la règle 157 et le jeton "*" résolu par réduction ("*" < DOT).
Conflit entre la règle 157 et le jeton ".*" résolu par réduction (".*" < DOT).
Conflit entre la règle 157 et le jeton ".*." résolu par réduction (".*." < DOT).
Conflit entre la règle 157 et le jeton "/" résolu par réduction ("/" < DOT).
Conflit entre la règle 157 et le jeton "./" résolu par réduction ("./" < DOT).
Conflit entre la règle 157 et le jeton "/." résolu par réduction ("/." < DOT).
Conflit entre la règle 157 et le jeton "./." résolu par réduction ("./." < DOT).
Conflit entre la règle 157 et le jeton "\\" résolu par réduction ("\\" < DOT).
Conflit entre la règle 157 et le jeton ".\\" résolu par réduction (".\\" < DOT).
Conflit entre la règle 157 et le jeton ".\\." résolu par réduction (".\\." < DOT).
Conflit entre la règle 157 et le jeton "** or ^" résolu par réduction ("** or ^" < DOT).
Conflit entre la règle 157 et le jeton ".^" résolu par réduction (".^" < DOT).
Conflit entre la règle 157 et le jeton "==" résolu par réduction ("==" < DOT).
Conflit entre la règle 157 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < DOT).
Conflit entre la règle 157 et le jeton "<" résolu par réduction ("<" < DOT).
Conflit entre la règle 157 et le jeton "<=" résolu par réduction ("<=" < DOT).
Conflit entre la règle 157 et le jeton ">" résolu par réduction (">" < DOT).
Conflit entre la règle 157 et le jeton ">=" résolu par réduction (">=" < DOT).
Conflit entre la règle 157 et le jeton "&" résolu par réduction ("&" < DOT).
Conflit entre la règle 157 et le jeton "|" résolu par réduction ("|" < DOT).


état 295

  156 variable: variable "." "identifier" .

    $défaut  réduction par utilisation de la règle 156 (variable)


état 296

  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  157 variable: functionCall . "." variable
  159         | functionCall . listableEnd
  177 variableFields: functionCall "," functionCall .  [",", ")"]
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"         décalage et aller à l'état 115
    ":"         décalage et aller à l'état 116
    "."         décalage et aller à l'état 166
    ".'"        décalage et aller à l'état 118
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 131
    ".^"        décalage et aller à l'état 132
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140

    $défaut  réduction par utilisation de la règle 177 (variableFields)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145


état 297

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  158         | variable . listableEnd
  178 variableFields: functionCall "," variable .  [",", ")"]
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"         décalage et aller à l'état 148
    ":"         décalage et aller à l'état 116
    "("         décalage et aller à l'état 149
    "."         décalage et aller à l'état 167
    ".'"        décalage et aller à l'état 151
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 152
    ".^"        décalage et aller à l'état 153
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140

    $défaut  réduction par utilisation de la règle 178 (variableFields)

    rightOperand   aller à l'état 154
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 155
    comparators    aller à l'état 156


état 298

  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  157 variable: functionCall . "." variable
  159         | functionCall . listableEnd
  179 variableFields: variable "," functionCall .  [",", ")"]
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"         décalage et aller à l'état 115
    ":"         décalage et aller à l'état 116
    "."         décalage et aller à l'état 166
    ".'"        décalage et aller à l'état 118
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 131
    ".^"        décalage et aller à l'état 132
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140

    $défaut  réduction par utilisation de la règle 179 (variableFields)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145


état 299

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  158         | variable . listableEnd
  176 variableFields: variable "," variable .  [",", ")"]
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"         décalage et aller à l'état 148
    ":"         décalage et aller à l'état 116
    "("         décalage et aller à l'état 149
    "."         décalage et aller à l'état 167
    ".'"        décalage et aller à l'état 151
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 152
    ".^"        décalage et aller à l'état 153
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140

    $défaut  réduction par utilisation de la règle 176 (variableFields)

    rightOperand   aller à l'état 154
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 155
    comparators    aller à l'état 156


état 300

  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  157 variable: functionCall . "." variable
  159         | functionCall . listableEnd
  175 variableFields: variableFields "," functionCall .  [",", ")"]
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"         décalage et aller à l'état 115
    ":"         décalage et aller à l'état 116
    "."         décalage et aller à l'état 166
    ".'"        décalage et aller à l'état 118
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 131
    ".^"        décalage et aller à l'état 132
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140

    $défaut  réduction par utilisation de la règle 175 (variableFields)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145


état 301

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  158         | variable . listableEnd
  174 variableFields: variableFields "," variable .  [",", ")"]
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"         décalage et aller à l'état 148
    ":"         décalage et aller à l'état 116
    "("         décalage et aller à l'état 149
    "."         décalage et aller à l'état 167
    ".'"        décalage et aller à l'état 151
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 152
    ".^"        décalage et aller à l'état 153
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140

    $défaut  réduction par utilisation de la règle 174 (variableFields)

    rightOperand   aller à l'état 154
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 155
    comparators    aller à l'état 156


état 302

  189 matrix: "[" matrixOrCellLines matrixOrCellColumns "]" .

    $défaut  réduction par utilisation de la règle 189 (matrix)


état 303

  198 matrixOrCellLineBreak: ";" "end of line" .

    $défaut  réduction par utilisation de la règle 198 (matrixOrCellLineBreak)


état 304

  201 matrixOrCellLine: matrixOrCellColumns ";" "line comment" . "end of line"

    "end of line"  décalage et aller à l'état 371


état 305

  200 matrixOrCellLine: matrixOrCellColumns "line comment" "end of line" .

    $défaut  réduction par utilisation de la règle 200 (matrixOrCellLine)


état 306

  211 matrixOrCellColumnsBreak: matrixOrCellColumnsBreak "," .

    $défaut  réduction par utilisation de la règle 211 (matrixOrCellColumnsBreak)


état 307

  196 matrixOrCellLineBreak: ";" .  ["%t or %T", "%f or %F", "~ or @", "$", "(", "[", "]", "{", "}", "+", "-", "string", "identifier", "integer", "float", "number"]
  198                      | ";" . "end of line"
  204 matrixOrCellLine: matrixOrCellColumns matrixOrCellColumnsBreak ";" . "line comment" "end of line"

    "end of line"   décalage et aller à l'état 303
    "line comment"  décalage et aller à l'état 372

    $défaut  réduction par utilisation de la règle 196 (matrixOrCellLineBreak)


état 308

  203 matrixOrCellLine: matrixOrCellColumns matrixOrCellColumnsBreak "line comment" . "end of line"

    "end of line"  décalage et aller à l'état 373


état 309

  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  157 variable: functionCall . "." variable
  159         | functionCall . listableEnd
  206 matrixOrCellColumns: matrixOrCellColumns matrixOrCellColumnsBreak functionCall .  ["end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "(", "[", "]", "{", "}", "string", "identifier", "integer", "float", "number", "line comment"]
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"         décalage et aller à l'état 115
    ":"         décalage et aller à l'état 116
    "."         décalage et aller à l'état 166
    ".'"        décalage et aller à l'état 118
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 131
    ".^"        décalage et aller à l'état 132
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140

    $défaut  réduction par utilisation de la règle 206 (matrixOrCellColumns)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145

Conflit entre la règle 206 et le jeton "+" résolu par décalage (HIGHLEVEL < "+").
Conflit entre la règle 206 et le jeton "-" résolu par décalage (HIGHLEVEL < "-").


état 310

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  158         | variable . listableEnd
  205 matrixOrCellColumns: matrixOrCellColumns matrixOrCellColumnsBreak variable .  ["end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "[", "]", "{", "}", "string", "identifier", "integer", "float", "number", "line comment"]
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"         décalage et aller à l'état 148
    ":"         décalage et aller à l'état 116
    "("         décalage et aller à l'état 149
    "."         décalage et aller à l'état 167
    ".'"        décalage et aller à l'état 151
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 152
    ".^"        décalage et aller à l'état 153
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140

    $défaut  réduction par utilisation de la règle 205 (matrixOrCellColumns)

    rightOperand   aller à l'état 154
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 155
    comparators    aller à l'état 156

Conflit entre la règle 205 et le jeton "(" résolu par décalage (HIGHLEVEL < "(").
Conflit entre la règle 205 et le jeton "+" résolu par décalage (HIGHLEVEL < "+").
Conflit entre la règle 205 et le jeton "-" résolu par décalage (HIGHLEVEL < "-").


état 311

  202 matrixOrCellLine: matrixOrCellColumns matrixOrCellColumnsBreak matrixOrCellLineBreak .

    $défaut  réduction par utilisation de la règle 202 (matrixOrCellLine)


état 312

  188 matrix: "[" lineEnd matrixOrCellLines "]" .

    $défaut  réduction par utilisation de la règle 188 (matrix)


état 313

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  190       | "[" lineEnd matrixOrCellLines matrixOrCellColumns . "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"
  196 matrixOrCellLineBreak: . ";"
  197                      | . "end of line"
  198                      | . ";" "end of line"
  199 matrixOrCellLine: matrixOrCellColumns . matrixOrCellLineBreak
  200                 | matrixOrCellColumns . "line comment" "end of line"
  201                 | matrixOrCellColumns . ";" "line comment" "end of line"
  202                 | matrixOrCellColumns . matrixOrCellColumnsBreak matrixOrCellLineBreak
  203                 | matrixOrCellColumns . matrixOrCellColumnsBreak "line comment" "end of line"
  204                 | matrixOrCellColumns . matrixOrCellColumnsBreak ";" "line comment" "end of line"
  205 matrixOrCellColumns: matrixOrCellColumns . matrixOrCellColumnsBreak variable
  206                    | matrixOrCellColumns . matrixOrCellColumnsBreak functionCall
  207                    | matrixOrCellColumns . variable
  208                    | matrixOrCellColumns . functionCall
  211 matrixOrCellColumnsBreak: . matrixOrCellColumnsBreak ","
  212                         | . ","

    "end of line"   décalage et aller à l'état 178
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    ","             décalage et aller à l'état 179
    ";"             décalage et aller à l'état 180
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 55
    "]"             décalage et aller à l'état 374
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 56
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 182

    functionCall              aller à l'état 183
    specificFunctionCall      aller à l'état 33
    simpleFunctionCall        aller à l'état 34
    recursiveFunctionCall     aller à l'état 35
    comparison                aller à l'état 38
    operation                 aller à l'état 39
    variable                  aller à l'état 184
    cell                      aller à l'état 41
    matrix                    aller à l'état 42
    matrixOrCellLineBreak     aller à l'état 185
    matrixOrCellColumnsBreak  aller à l'état 186


état 314

  192 matrix: "[" lineEnd matrixOrCellColumns "]" .

    $défaut  réduction par utilisation de la règle 192 (matrix)


état 315

  182 cell: "{" matrixOrCellLines matrixOrCellColumns "}" .

    $défaut  réduction par utilisation de la règle 182 (cell)


état 316

  181 cell: "{" lineEnd matrixOrCellLines "}" .

    $défaut  réduction par utilisation de la règle 181 (cell)


état 317

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  183     | "{" lineEnd matrixOrCellLines matrixOrCellColumns . "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"
  196 matrixOrCellLineBreak: . ";"
  197                      | . "end of line"
  198                      | . ";" "end of line"
  199 matrixOrCellLine: matrixOrCellColumns . matrixOrCellLineBreak
  200                 | matrixOrCellColumns . "line comment" "end of line"
  201                 | matrixOrCellColumns . ";" "line comment" "end of line"
  202                 | matrixOrCellColumns . matrixOrCellColumnsBreak matrixOrCellLineBreak
  203                 | matrixOrCellColumns . matrixOrCellColumnsBreak "line comment" "end of line"
  204                 | matrixOrCellColumns . matrixOrCellColumnsBreak ";" "line comment" "end of line"
  205 matrixOrCellColumns: matrixOrCellColumns . matrixOrCellColumnsBreak variable
  206                    | matrixOrCellColumns . matrixOrCellColumnsBreak functionCall
  207                    | matrixOrCellColumns . variable
  208                    | matrixOrCellColumns . functionCall
  211 matrixOrCellColumnsBreak: . matrixOrCellColumnsBreak ","
  212                         | . ","

    "end of line"   décalage et aller à l'état 178
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    ","             décalage et aller à l'état 179
    ";"             décalage et aller à l'état 180
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 55
    "{"             décalage et aller à l'état 9
    "}"             décalage et aller à l'état 375
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 56
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 182

    functionCall              aller à l'état 183
    specificFunctionCall      aller à l'état 33
    simpleFunctionCall        aller à l'état 34
    recursiveFunctionCall     aller à l'état 35
    comparison                aller à l'état 38
    operation                 aller à l'état 39
    variable                  aller à l'état 184
    cell                      aller à l'état 41
    matrix                    aller à l'état 42
    matrixOrCellLineBreak     aller à l'état 185
    matrixOrCellColumnsBreak  aller à l'état 186


état 318

  185 cell: "{" lineEnd matrixOrCellColumns "}" .

    $défaut  réduction par utilisation de la règle 185 (cell)


état 319

  238 ifConditionBreak: "," "end of line" .

    $défaut  réduction par utilisation de la règle 238 (ifConditionBreak)


état 320

  236 ifConditionBreak: ";" "end of line" .

    $défaut  réduction par utilisation de la règle 236 (ifConditionBreak)


état 321

  243 then: "then" ifConditionBreak .

    $défaut  réduction par utilisation de la règle 243 (then)


état 322

  241 then: ifConditionBreak "then" .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "else", "elseif", "end", "select", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  242     | ifConditionBreak "then" . "end of line"

    "end of line"  décalage et aller à l'état 376

    $défaut  réduction par utilisation de la règle 241 (then)


état 323

  231 thenBody: expressions .

    $défaut  réduction par utilisation de la règle 231 (thenBody)


état 324

  228 ifControl: "if" condition then thenBody . "end"
  229          | "if" condition then thenBody . else elseBody "end"
  230          | "if" condition then thenBody . elseIfControl "end"
  246 else: . "else"
  247     | . "else" ","
  248     | . "else" ";"
  249     | . "else" "end of line"
  250     | . "else" "," "end of line"
  251     | . "else" ";" "end of line"
  252 elseIfControl: . "elseif" condition then thenBody
  253              | . "elseif" condition then thenBody else elseBody
  254              | . "elseif" condition then thenBody elseIfControl

    "else"    décalage et aller à l'état 377
    "elseif"  décalage et aller à l'état 378
    "end"     décalage et aller à l'état 379

    else           aller à l'état 380
    elseIfControl  aller à l'état 381


état 325

  262 selectConditionBreak: "," "end of line" .

    $défaut  réduction par utilisation de la règle 262 (selectConditionBreak)


état 326

  263 selectConditionBreak: ";" "end of line" .

    $défaut  réduction par utilisation de la règle 263 (selectConditionBreak)


état 327

  257 selectControl: "select" selectable "line comment" selectConditionBreak . casesControl "end"
  258              | "select" selectable "line comment" selectConditionBreak . casesControl else elseBody "end"
  264 casesControl: . "case" variable caseControlBreak caseBody
  265             | . comments "case" variable caseControlBreak caseBody
  266             | . "case" variable "line comment" "end of line" caseBody
  267             | . comments "case" variable "line comment" "end of line" caseBody
  268             | . casesControl "case" variable caseControlBreak caseBody
  269             | . casesControl "case" variable "line comment" "end of line" caseBody
  329 comments: . "line comment" "end of line"
  330         | . comments "line comment" "end of line"

    "case"          décalage et aller à l'état 328
    "line comment"  décalage et aller à l'état 329

    casesControl  aller à l'état 382
    comments      aller à l'état 331


état 328

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"
  264 casesControl: "case" . variable caseControlBreak caseBody
  266             | "case" . variable "line comment" "end of line" caseBody

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 93
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 383
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 329

  329 comments: "line comment" . "end of line"

    "end of line"  décalage et aller à l'état 384


état 330

  246 else: . "else"
  247     | . "else" ","
  248     | . "else" ";"
  249     | . "else" "end of line"
  250     | . "else" "," "end of line"
  251     | . "else" ";" "end of line"
  255 selectControl: "select" selectable selectConditionBreak casesControl . "end"
  256              | "select" selectable selectConditionBreak casesControl . else elseBody "end"
  268 casesControl: casesControl . "case" variable caseControlBreak caseBody
  269             | casesControl . "case" variable "line comment" "end of line" caseBody

    "else"  décalage et aller à l'état 377
    "end"   décalage et aller à l'état 385
    "case"  décalage et aller à l'état 386

    else  aller à l'état 387


état 331

  265 casesControl: comments . "case" variable caseControlBreak caseBody
  267             | comments . "case" variable "line comment" "end of line" caseBody
  330 comments: comments . "line comment" "end of line"

    "case"          décalage et aller à l'état 388
    "line comment"  décalage et aller à l'état 389


état 332

   70 functionDeclaration: "function" "[" "]" "=" . "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"

    "identifier"  décalage et aller à l'état 390


état 333

   69 functionDeclaration: "function" "[" functionDeclarationReturns "]" . "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"

    "="  décalage et aller à l'état 391


état 334

   76 idList: idList "," . "identifier"

    "identifier"  décalage et aller à l'état 392


état 335

   74 functionDeclarationArguments: "(" ")" .

    $défaut  réduction par utilisation de la règle 74 (functionDeclarationArguments)


état 336

   73 functionDeclarationArguments: "(" idList . ")"
   76 idList: idList . "," "identifier"

    ","  décalage et aller à l'état 334
    ")"  décalage et aller à l'état 393


état 337

   68 functionDeclaration: "function" "identifier" "=" "identifier" . functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   73 functionDeclarationArguments: . "(" idList ")"
   74                             | . "(" ")"
   75                             | .  ["end of line", ",", ";", "line comment"]

    "("  décalage et aller à l'état 209

    $défaut  réduction par utilisation de la règle 75 (functionDeclarationArguments)

    functionDeclarationArguments  aller à l'état 394


état 338

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | "function" "identifier" functionDeclarationArguments functionDeclarationBreak . functionBody "endfunction"
   83 functionBody: . expressions
   84             | .  ["endfunction"]
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"
  213 variableDeclaration: . assignable "=" variable
  214                    | . assignable "=" functionCall
  215                    | . functionCall "=" variable
  216                    | . functionCall "=" functionCall
  217                    | . assignable "=" ":"
  218                    | . functionCall "=" ":"
  219                    | . assignable "=" returnControl
  220                    | . functionCall "=" returnControl
  221 assignable: . variable "." "identifier"
  222           | . variable "." functionCall
  223           | . functionCall "." variable
  224           | . functionCall "." functionCall
  225           | . "identifier"
  226           | . multipleResults
  227 multipleResults: . "[" matrixOrCellColumns "]"
  228 ifControl: . "if" condition then thenBody "end"
  229          | . "if" condition then thenBody else elseBody "end"
  230          | . "if" condition then thenBody elseIfControl "end"
  255 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  256              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  257              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  258              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  281 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  282           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  295 whileControl: . "while" condition whileConditionBreak whileBody "end"
  315 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  316           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  317           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  318           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  319 returnControl: . "return"
  320              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "endfunction"  réduction par utilisation de la règle 84 (functionBody)

    expressions            aller à l'état 395
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    functionBody           aller à l'état 396
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 339

   82 functionDeclarationBreak: "," "end of line" .

    $défaut  réduction par utilisation de la règle 82 (functionDeclarationBreak)


état 340

   80 functionDeclarationBreak: ";" "end of line" .

    $défaut  réduction par utilisation de la règle 80 (functionDeclarationBreak)


état 341

   78 functionDeclarationBreak: . lineEnd
   79                         | . ";"
   80                         | . ";" "end of line"
   81                         | . ","
   82                         | . "," "end of line"
   85 classDeclaration: "class" "identifier" "<" "identifier" . functionDeclarationBreak slotsDeclaration "endclass"
  331 lineEnd: . "end of line"
  332        | . "line comment" "end of line"

    "end of line"   décalage et aller à l'état 62
    ","             décalage et aller à l'état 212
    ";"             décalage et aller à l'état 213
    "line comment"  décalage et aller à l'état 64

    functionDeclarationBreak  aller à l'état 397
    lineEnd                   aller à l'état 216


état 342

   78 functionDeclarationBreak: . lineEnd
   79                         | . ";"
   80                         | . ";" "end of line"
   81                         | . ","
   82                         | . "," "end of line"
   86 classDeclaration: "class" "identifier" functionDeclarationBreak slotsDeclaration . "endclass"
   87 slotsDeclaration: slotsDeclaration . slotDeclaration functionDeclarationBreak
   88                 | slotsDeclaration . functionDeclarationBreak
   90 slotDeclaration: . methodDeclaration
   91                | . propertyDeclaration
   92 methodDeclaration: . "function" slotAttributes "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   93                  | . "function" slotAttributes "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   94                  | . "function" slotAttributes "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   95                  | . "function" slotAttributes "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   96 propertyDeclaration: . "property" slotAttributes "identifier" "=" variable
   97                    | . "property" slotAttributes "identifier"
  331 lineEnd: . "end of line"
  332        | . "line comment" "end of line"

    "end of line"   décalage et aller à l'état 62
    ","             décalage et aller à l'état 212
    ";"             décalage et aller à l'état 213
    "function"      décalage et aller à l'état 398
    "endclass"      décalage et aller à l'état 399
    "property"      décalage et aller à l'état 400
    "line comment"  décalage et aller à l'état 64

    functionDeclarationBreak  aller à l'état 401
    slotDeclaration           aller à l'état 402
    methodDeclaration         aller à l'état 403
    propertyDeclaration       aller à l'état 404
    lineEnd                   aller à l'état 216


état 343

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"
  282 forControl: "for" "(" "identifier" "=" . forIterator ")" forConditionBreak forBody "end"
  283 forIterator: . functionCall
  284            | . variable

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 344
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 345
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    forIterator            aller à l'état 405


état 344

  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  157 variable: functionCall . "." variable
  159         | functionCall . listableEnd
  283 forIterator: functionCall .  [error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "(", ")", "[", "{", "if", "end", "select", "function", "class", "for", "while", "do", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"         décalage et aller à l'état 115
    ":"         décalage et aller à l'état 116
    "."         décalage et aller à l'état 166
    ".'"        décalage et aller à l'état 118
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 131
    ".^"        décalage et aller à l'état 132
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140

    $défaut  réduction par utilisation de la règle 283 (forIterator)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145

Conflit entre la règle 283 et le jeton "+" résolu par décalage (UPLEVEL < "+").
Conflit entre la règle 283 et le jeton "-" résolu par décalage (UPLEVEL < "-").


état 345

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  158         | variable . listableEnd
  284 forIterator: variable .  [error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", ")", "[", "{", "if", "end", "select", "function", "class", "for", "while", "do", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"         décalage et aller à l'état 148
    ":"         décalage et aller à l'état 116
    "("         décalage et aller à l'état 149
    "."         décalage et aller à l'état 167
    ".'"        décalage et aller à l'état 151
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 152
    ".^"        décalage et aller à l'état 153
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140

    $défaut  réduction par utilisation de la règle 284 (forIterator)

    rightOperand   aller à l'état 154
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 155
    comparators    aller à l'état 156

Conflit entre la règle 284 et le jeton "(" résolu par décalage (UPLEVEL < "(").
Conflit entre la règle 284 et le jeton "+" résolu par décalage (UPLEVEL < "+").
Conflit entre la règle 284 et le jeton "-" résolu par décalage (UPLEVEL < "-").


état 346

  281 forControl: "for" "identifier" "=" forIterator . forConditionBreak forBody "end"
  285 forConditionBreak: . "end of line"
  286                  | . ";"
  287                  | . ";" "end of line"
  288                  | . ","
  289                  | . "," "end of line"
  290                  | . "do"
  291                  | . "do" "end of line"
  292                  | .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "end", "select", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]

    "end of line"  décalage et aller à l'état 406
    ","            décalage et aller à l'état 407
    ";"            décalage et aller à l'état 408
    "do"           décalage et aller à l'état 409

    $défaut  réduction par utilisation de la règle 292 (forConditionBreak)

    forConditionBreak  aller à l'état 410


état 347

  307 whileConditionBreak: "," "end of line" .

    $défaut  réduction par utilisation de la règle 307 (whileConditionBreak)


état 348

  308 whileConditionBreak: ";" "end of line" .

    $défaut  réduction par utilisation de la règle 308 (whileConditionBreak)


état 349

  312 whileConditionBreak: "then" "end of line" .

    $défaut  réduction par utilisation de la règle 312 (whileConditionBreak)


état 350

  304 whileConditionBreak: "then" "," .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "end", "select", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  313                    | "then" "," . "end of line"

    "end of line"  décalage et aller à l'état 411

    $défaut  réduction par utilisation de la règle 304 (whileConditionBreak)


état 351

  305 whileConditionBreak: "then" ";" .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "end", "select", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  314                    | "then" ";" . "end of line"

    "end of line"  décalage et aller à l'état 412

    $défaut  réduction par utilisation de la règle 305 (whileConditionBreak)


état 352

  309 whileConditionBreak: "do" "end of line" .

    $défaut  réduction par utilisation de la règle 309 (whileConditionBreak)


état 353

  301 whileConditionBreak: "do" "," .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "end", "select", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  310                    | "do" "," . "end of line"

    "end of line"  décalage et aller à l'état 413

    $défaut  réduction par utilisation de la règle 301 (whileConditionBreak)


état 354

  302 whileConditionBreak: "do" ";" .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "end", "select", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  311                    | "do" ";" . "end of line"

    "end of line"  décalage et aller à l'état 414

    $défaut  réduction par utilisation de la règle 302 (whileConditionBreak)


état 355

  296 whileBody: expressions .

    $défaut  réduction par utilisation de la règle 296 (whileBody)


état 356

  295 whileControl: "while" condition whileConditionBreak whileBody . "end"

    "end"  décalage et aller à l'état 415


état 357

  315 tryControl: "try" "end of line" expressions "catch" . "end of line" expressions "end"
  317           | "try" "end of line" expressions "catch" . "line comment" "end of line" expressions "end"

    "end of line"   décalage et aller à l'état 416
    "line comment"  décalage et aller à l'état 417


état 358

  316 tryControl: "try" "line comment" "end of line" expressions . "catch" "end of line" expressions "end"
  318           | "try" "line comment" "end of line" expressions . "catch" "line comment" "end of line" expressions "end"

    "catch"  décalage et aller à l'état 418


état 359

   43 implicitCallable: implicitCallable "." "identifier" .  ["end of file", "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "(", "[", "{", ".", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "else", "elseif", "end", "case", "endfunction", "catch", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  163 variable: "identifier" .  ["'", ":", "(", ".", ".'", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|"]

    "'"         réduction par utilisation de la règle 163 (variable)
    ":"         réduction par utilisation de la règle 163 (variable)
    "("         réduction par utilisation de la règle 43 (implicitCallable)
    "("         [réduction par utilisation de la règle 163 (variable)]
    "."         réduction par utilisation de la règle 43 (implicitCallable)
    "."         [réduction par utilisation de la règle 163 (variable)]
    ".'"        réduction par utilisation de la règle 163 (variable)
    "+"         réduction par utilisation de la règle 43 (implicitCallable)
    "+"         [réduction par utilisation de la règle 163 (variable)]
    "-"         réduction par utilisation de la règle 43 (implicitCallable)
    "-"         [réduction par utilisation de la règle 163 (variable)]
    "*"         réduction par utilisation de la règle 43 (implicitCallable)
    "*"         [réduction par utilisation de la règle 163 (variable)]
    ".*"        réduction par utilisation de la règle 43 (implicitCallable)
    ".*"        [réduction par utilisation de la règle 163 (variable)]
    ".*."       réduction par utilisation de la règle 43 (implicitCallable)
    ".*."       [réduction par utilisation de la règle 163 (variable)]
    "/"         réduction par utilisation de la règle 43 (implicitCallable)
    "/"         [réduction par utilisation de la règle 163 (variable)]
    "./"        réduction par utilisation de la règle 43 (implicitCallable)
    "./"        [réduction par utilisation de la règle 163 (variable)]
    "/."        réduction par utilisation de la règle 43 (implicitCallable)
    "/."        [réduction par utilisation de la règle 163 (variable)]
    "./."       réduction par utilisation de la règle 43 (implicitCallable)
    "./."       [réduction par utilisation de la règle 163 (variable)]
    "\\"        réduction par utilisation de la règle 43 (implicitCallable)
    "\\"        [réduction par utilisation de la règle 163 (variable)]
    ".\\"       réduction par utilisation de la règle 43 (implicitCallable)
    ".\\"       [réduction par utilisation de la règle 163 (variable)]
    ".\\."      réduction par utilisation de la règle 43 (implicitCallable)
    ".\\."      [réduction par utilisation de la règle 163 (variable)]
    "** or ^"   réduction par utilisation de la règle 163 (variable)
    ".^"        réduction par utilisation de la règle 163 (variable)
    "=="        réduction par utilisation de la règle 163 (variable)
    "<> or ~="  réduction par utilisation de la règle 163 (variable)
    "<"         réduction par utilisation de la règle 163 (variable)
    "<="        réduction par utilisation de la règle 163 (variable)
    ">"         réduction par utilisation de la règle 163 (variable)
    ">="        réduction par utilisation de la règle 163 (variable)
    "&"         réduction par utilisation de la règle 163 (variable)
    "|"         réduction par utilisation de la règle 163 (variable)
    $défaut    réduction par utilisation de la règle 43 (implicitCallable)


état 360

   44 implicitCallable: implicitCallable "." functionCall .  ["end of file", "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "(", "[", "{", ".", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "else", "elseif", "end", "case", "endfunction", "catch", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  157 variable: functionCall . "." variable
  159         | functionCall . listableEnd
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"         décalage et aller à l'état 115
    ":"         décalage et aller à l'état 116
    ".'"        décalage et aller à l'état 118
    "** or ^"   décalage et aller à l'état 131
    ".^"        décalage et aller à l'état 132
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140

    $défaut  réduction par utilisation de la règle 44 (implicitCallable)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145

Conflit entre la règle 44 et le jeton "." résolu par réduction (%left ".").
Conflit entre la règle 44 et le jeton "+" résolu par réduction ("+" < DOT).
Conflit entre la règle 44 et le jeton "-" résolu par réduction ("-" < DOT).
Conflit entre la règle 44 et le jeton "*" résolu par réduction ("*" < DOT).
Conflit entre la règle 44 et le jeton ".*" résolu par réduction (".*" < DOT).
Conflit entre la règle 44 et le jeton ".*." résolu par réduction (".*." < DOT).
Conflit entre la règle 44 et le jeton "/" résolu par réduction ("/" < DOT).
Conflit entre la règle 44 et le jeton "./" résolu par réduction ("./" < DOT).
Conflit entre la règle 44 et le jeton "/." résolu par réduction ("/." < DOT).
Conflit entre la règle 44 et le jeton "./." résolu par réduction ("./." < DOT).
Conflit entre la règle 44 et le jeton "\\" résolu par réduction ("\\" < DOT).
Conflit entre la règle 44 et le jeton ".\\" résolu par réduction (".\\" < DOT).
Conflit entre la règle 44 et le jeton ".\\." résolu par réduction (".\\." < DOT).


état 361

    9 recursiveExpression: recursiveExpression expression "line comment" expressionLineBreak .  ["end of file", error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "line comment"]
   15 expressionLineBreak: expressionLineBreak . ";"
   16                    | expressionLineBreak . ","
   17                    | expressionLineBreak . "end of line"

    "end of line"  décalage et aller à l'état 232
    ","            décalage et aller à l'état 233
    ";"            décalage et aller à l'état 234

    $défaut  réduction par utilisation de la règle 9 (recursiveExpression)


état 362

  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  153            | listableBegin ":" functionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  154            | . listableBegin
  157 variable: functionCall . "." variable
  159         | functionCall . listableEnd
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"         décalage et aller à l'état 115
    "."         décalage et aller à l'état 166
    ".'"        décalage et aller à l'état 118
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 131
    ".^"        décalage et aller à l'état 132
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138

    $défaut  réduction par utilisation de la règle 153 (listableEnd)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145

Conflit entre la règle 153 et le jeton "'" résolu par décalage (COLON < "'").
Conflit entre la règle 153 et le jeton ":" résolu par réduction (%left ":").
Conflit entre la règle 153 et le jeton "." résolu par décalage (COLON < ".").
Conflit entre la règle 153 et le jeton ".'" résolu par décalage (COLON < ".'").
Conflit entre la règle 153 et le jeton "+" résolu par décalage (COLON < "+").
Conflit entre la règle 153 et le jeton "-" résolu par décalage (COLON < "-").
Conflit entre la règle 153 et le jeton "*" résolu par décalage (COLON < "*").
Conflit entre la règle 153 et le jeton ".*" résolu par décalage (COLON < ".*").
Conflit entre la règle 153 et le jeton ".*." résolu par décalage (COLON < ".*.").
Conflit entre la règle 153 et le jeton "/" résolu par décalage (COLON < "/").
Conflit entre la règle 153 et le jeton "./" résolu par décalage (COLON < "./").
Conflit entre la règle 153 et le jeton "/." résolu par décalage (COLON < "/.").
Conflit entre la règle 153 et le jeton "./." résolu par décalage (COLON < "./.").
Conflit entre la règle 153 et le jeton "\\" résolu par décalage (COLON < "\\").
Conflit entre la règle 153 et le jeton ".\\" résolu par décalage (COLON < ".\\").
Conflit entre la règle 153 et le jeton ".\\." résolu par décalage (COLON < ".\\.").
Conflit entre la règle 153 et le jeton "** or ^" résolu par décalage (COLON < "** or ^").
Conflit entre la règle 153 et le jeton ".^" résolu par décalage (COLON < ".^").
Conflit entre la règle 153 et le jeton "==" résolu par décalage (COLON < "==").
Conflit entre la règle 153 et le jeton "<> or ~=" résolu par décalage (COLON < "<> or ~=").
Conflit entre la règle 153 et le jeton "<" résolu par décalage (COLON < "<").
Conflit entre la règle 153 et le jeton "<=" résolu par décalage (COLON < "<=").
Conflit entre la règle 153 et le jeton ">" résolu par décalage (COLON < ">").
Conflit entre la règle 153 et le jeton ">=" résolu par décalage (COLON < ">=").
Conflit entre la règle 153 et le jeton "&" résolu par réduction ("&" < COLON).
Conflit entre la règle 153 et le jeton "|" résolu par réduction ("|" < COLON).


état 363

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  152            | listableBegin ":" variable .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  158         | variable . listableEnd
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"         décalage et aller à l'état 148
    "."         décalage et aller à l'état 167
    ".'"        décalage et aller à l'état 151
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 152
    ".^"        décalage et aller à l'état 153
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138

    $défaut  réduction par utilisation de la règle 152 (listableEnd)

    rightOperand   aller à l'état 154
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 155
    comparators    aller à l'état 156

Conflit entre la règle 152 et le jeton "'" résolu par décalage (COLON < "'").
Conflit entre la règle 152 et le jeton ":" résolu par réduction (%left ":").
Conflit entre la règle 152 et le jeton "(" résolu par réduction ("(" < COLON).
Conflit entre la règle 152 et le jeton "." résolu par décalage (COLON < ".").
Conflit entre la règle 152 et le jeton ".'" résolu par décalage (COLON < ".'").
Conflit entre la règle 152 et le jeton "+" résolu par décalage (COLON < "+").
Conflit entre la règle 152 et le jeton "-" résolu par décalage (COLON < "-").
Conflit entre la règle 152 et le jeton "*" résolu par décalage (COLON < "*").
Conflit entre la règle 152 et le jeton ".*" résolu par décalage (COLON < ".*").
Conflit entre la règle 152 et le jeton ".*." résolu par décalage (COLON < ".*.").
Conflit entre la règle 152 et le jeton "/" résolu par décalage (COLON < "/").
Conflit entre la règle 152 et le jeton "./" résolu par décalage (COLON < "./").
Conflit entre la règle 152 et le jeton "/." résolu par décalage (COLON < "/.").
Conflit entre la règle 152 et le jeton "./." résolu par décalage (COLON < "./.").
Conflit entre la règle 152 et le jeton "\\" résolu par décalage (COLON < "\\").
Conflit entre la règle 152 et le jeton ".\\" résolu par décalage (COLON < ".\\").
Conflit entre la règle 152 et le jeton ".\\." résolu par décalage (COLON < ".\\.").
Conflit entre la règle 152 et le jeton "** or ^" résolu par décalage (COLON < "** or ^").
Conflit entre la règle 152 et le jeton ".^" résolu par décalage (COLON < ".^").
Conflit entre la règle 152 et le jeton "==" résolu par décalage (COLON < "==").
Conflit entre la règle 152 et le jeton "<> or ~=" résolu par décalage (COLON < "<> or ~=").
Conflit entre la règle 152 et le jeton "<" résolu par décalage (COLON < "<").
Conflit entre la règle 152 et le jeton "<=" résolu par décalage (COLON < "<=").
Conflit entre la règle 152 et le jeton ">" résolu par décalage (COLON < ">").
Conflit entre la règle 152 et le jeton ">=" résolu par décalage (COLON < ">=").
Conflit entre la règle 152 et le jeton "&" résolu par réduction ("&" < COLON).
Conflit entre la règle 152 et le jeton "|" résolu par réduction ("|" < COLON).


état 364

   56 recursiveFunctionCall: simpleFunctionCall "(" functionArgs ")" .

    $défaut  réduction par utilisation de la règle 56 (recursiveFunctionCall)


état 365

   57 recursiveFunctionCall: recursiveFunctionCall "(" functionArgs ")" .

    $défaut  réduction par utilisation de la règle 57 (recursiveFunctionCall)


état 366

   55 simpleFunctionCall: variable "(" functionArgs ")" .

    $défaut  réduction par utilisation de la règle 55 (simpleFunctionCall)


état 367

   65 functionArgs: functionArgs "," ":" .

    $défaut  réduction par utilisation de la règle 65 (functionArgs)


état 368

   64 functionArgs: functionArgs "," functionCall .  [",", ")"]
  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  157 variable: functionCall . "." variable
  159         | functionCall . listableEnd
  215 variableDeclaration: functionCall . "=" variable
  216                    | functionCall . "=" functionCall
  218                    | functionCall . "=" ":"
  220                    | functionCall . "=" returnControl
  223 assignable: functionCall . "." variable
  224           | functionCall . "." functionCall
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"         décalage et aller à l'état 115
    ":"         décalage et aller à l'état 116
    "."         décalage et aller à l'état 117
    ".'"        décalage et aller à l'état 118
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 131
    ".^"        décalage et aller à l'état 132
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140
    "="         décalage et aller à l'état 141

    $défaut  réduction par utilisation de la règle 64 (functionArgs)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145


état 369

   55 simpleFunctionCall: variable . "(" functionArgs ")"
   63 functionArgs: functionArgs "," variable .  [",", ")"]
  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  158         | variable . listableEnd
  221 assignable: variable . "." "identifier"
  222           | variable . "." functionCall
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"         décalage et aller à l'état 148
    ":"         décalage et aller à l'état 116
    "("         décalage et aller à l'état 149
    "."         décalage et aller à l'état 150
    ".'"        décalage et aller à l'état 151
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 152
    ".^"        décalage et aller à l'état 153
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140

    $défaut  réduction par utilisation de la règle 63 (functionArgs)

    rightOperand   aller à l'état 154
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 155
    comparators    aller à l'état 156


état 370

   66 functionArgs: functionArgs "," variableDeclaration .

    $défaut  réduction par utilisation de la règle 66 (functionArgs)


état 371

  201 matrixOrCellLine: matrixOrCellColumns ";" "line comment" "end of line" .

    $défaut  réduction par utilisation de la règle 201 (matrixOrCellLine)


état 372

  204 matrixOrCellLine: matrixOrCellColumns matrixOrCellColumnsBreak ";" "line comment" . "end of line"

    "end of line"  décalage et aller à l'état 419


état 373

  203 matrixOrCellLine: matrixOrCellColumns matrixOrCellColumnsBreak "line comment" "end of line" .

    $défaut  réduction par utilisation de la règle 203 (matrixOrCellLine)


état 374

  190 matrix: "[" lineEnd matrixOrCellLines matrixOrCellColumns "]" .

    $défaut  réduction par utilisation de la règle 190 (matrix)


état 375

  183 cell: "{" lineEnd matrixOrCellLines matrixOrCellColumns "}" .

    $défaut  réduction par utilisation de la règle 183 (cell)


état 376

  242 then: ifConditionBreak "then" "end of line" .

    $défaut  réduction par utilisation de la règle 242 (then)


état 377

  246 else: "else" .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "end", "select", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  247     | "else" . ","
  248     | "else" . ";"
  249     | "else" . "end of line"
  250     | "else" . "," "end of line"
  251     | "else" . ";" "end of line"

    "end of line"  décalage et aller à l'état 420
    ","            décalage et aller à l'état 421
    ";"            décalage et aller à l'état 422

    $défaut  réduction par utilisation de la règle 246 (else)


état 378

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  101 condition: . functionCall
  102          | . variable
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"
  252 elseIfControl: "elseif" . condition then thenBody
  253              | "elseif" . condition then thenBody else elseBody
  254              | "elseif" . condition then thenBody elseIfControl

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 79
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    condition              aller à l'état 423
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 81
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 379

  228 ifControl: "if" condition then thenBody "end" .

    $défaut  réduction par utilisation de la règle 228 (ifControl)


état 380

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"
  213 variableDeclaration: . assignable "=" variable
  214                    | . assignable "=" functionCall
  215                    | . functionCall "=" variable
  216                    | . functionCall "=" functionCall
  217                    | . assignable "=" ":"
  218                    | . functionCall "=" ":"
  219                    | . assignable "=" returnControl
  220                    | . functionCall "=" returnControl
  221 assignable: . variable "." "identifier"
  222           | . variable "." functionCall
  223           | . functionCall "." variable
  224           | . functionCall "." functionCall
  225           | . "identifier"
  226           | . multipleResults
  227 multipleResults: . "[" matrixOrCellColumns "]"
  228 ifControl: . "if" condition then thenBody "end"
  229          | . "if" condition then thenBody else elseBody "end"
  229          | "if" condition then thenBody else . elseBody "end"
  230          | . "if" condition then thenBody elseIfControl "end"
  233 elseBody: . expressions
  234         | .  ["end"]
  255 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  256              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  257              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  258              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  281 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  282           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  295 whileControl: . "while" condition whileConditionBreak whileBody "end"
  315 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  316           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  317           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  318           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  319 returnControl: . "return"
  320              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "end"  réduction par utilisation de la règle 234 (elseBody)

    expressions            aller à l'état 424
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    elseBody               aller à l'état 425
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 381

  230 ifControl: "if" condition then thenBody elseIfControl . "end"

    "end"  décalage et aller à l'état 426


état 382

  246 else: . "else"
  247     | . "else" ","
  248     | . "else" ";"
  249     | . "else" "end of line"
  250     | . "else" "," "end of line"
  251     | . "else" ";" "end of line"
  257 selectControl: "select" selectable "line comment" selectConditionBreak casesControl . "end"
  258              | "select" selectable "line comment" selectConditionBreak casesControl . else elseBody "end"
  268 casesControl: casesControl . "case" variable caseControlBreak caseBody
  269             | casesControl . "case" variable "line comment" "end of line" caseBody

    "else"  décalage et aller à l'état 377
    "end"   décalage et aller à l'état 427
    "case"  décalage et aller à l'état 386

    else  aller à l'état 428


état 383

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  158         | variable . listableEnd
  264 casesControl: "case" variable . caseControlBreak caseBody
  266             | "case" variable . "line comment" "end of line" caseBody
  272 caseControlBreak: . "then"
  273                 | . ","
  274                 | . ";"
  275                 | . "end of line"
  276                 | . "then" "end of line"
  277                 | . "," "end of line"
  278                 | . ";" "end of line"
  279                 | . "then" ","
  280                 | . "then" "," "end of line"
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "end of line"   décalage et aller à l'état 429
    "'"             décalage et aller à l'état 148
    ","             décalage et aller à l'état 430
    ":"             décalage et aller à l'état 116
    ";"             décalage et aller à l'état 431
    "("             décalage et aller à l'état 149
    "."             décalage et aller à l'état 167
    ".'"            décalage et aller à l'état 151
    "+"             décalage et aller à l'état 119
    "-"             décalage et aller à l'état 120
    "*"             décalage et aller à l'état 121
    ".*"            décalage et aller à l'état 122
    ".*."           décalage et aller à l'état 123
    "/"             décalage et aller à l'état 124
    "./"            décalage et aller à l'état 125
    "/."            décalage et aller à l'état 126
    "./."           décalage et aller à l'état 127
    "\\"            décalage et aller à l'état 128
    ".\\"           décalage et aller à l'état 129
    ".\\."          décalage et aller à l'état 130
    "** or ^"       décalage et aller à l'état 152
    ".^"            décalage et aller à l'état 153
    "=="            décalage et aller à l'état 133
    "<> or ~="      décalage et aller à l'état 134
    "<"             décalage et aller à l'état 135
    "<="            décalage et aller à l'état 136
    ">"             décalage et aller à l'état 137
    ">="            décalage et aller à l'état 138
    "&"             décalage et aller à l'état 139
    "|"             décalage et aller à l'état 140
    "then"          décalage et aller à l'état 432
    "line comment"  décalage et aller à l'état 433

    rightOperand      aller à l'état 154
    listableBegin     aller à l'état 143
    listableEnd       aller à l'état 155
    caseControlBreak  aller à l'état 434
    comparators       aller à l'état 156


état 384

  329 comments: "line comment" "end of line" .

    $défaut  réduction par utilisation de la règle 329 (comments)


état 385

  255 selectControl: "select" selectable selectConditionBreak casesControl "end" .

    $défaut  réduction par utilisation de la règle 255 (selectControl)


état 386

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"
  268 casesControl: casesControl "case" . variable caseControlBreak caseBody
  269             | casesControl "case" . variable "line comment" "end of line" caseBody

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 93
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 435
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 387

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"
  213 variableDeclaration: . assignable "=" variable
  214                    | . assignable "=" functionCall
  215                    | . functionCall "=" variable
  216                    | . functionCall "=" functionCall
  217                    | . assignable "=" ":"
  218                    | . functionCall "=" ":"
  219                    | . assignable "=" returnControl
  220                    | . functionCall "=" returnControl
  221 assignable: . variable "." "identifier"
  222           | . variable "." functionCall
  223           | . functionCall "." variable
  224           | . functionCall "." functionCall
  225           | . "identifier"
  226           | . multipleResults
  227 multipleResults: . "[" matrixOrCellColumns "]"
  228 ifControl: . "if" condition then thenBody "end"
  229          | . "if" condition then thenBody else elseBody "end"
  230          | . "if" condition then thenBody elseIfControl "end"
  233 elseBody: . expressions
  234         | .  ["end"]
  255 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  256              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  256              | "select" selectable selectConditionBreak casesControl else . elseBody "end"
  257              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  258              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  281 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  282           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  295 whileControl: . "while" condition whileConditionBreak whileBody "end"
  315 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  316           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  317           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  318           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  319 returnControl: . "return"
  320              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "end"  réduction par utilisation de la règle 234 (elseBody)

    expressions            aller à l'état 424
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    elseBody               aller à l'état 436
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 388

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"
  265 casesControl: comments "case" . variable caseControlBreak caseBody
  267             | comments "case" . variable "line comment" "end of line" caseBody

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 93
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 437
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 389

  330 comments: comments "line comment" . "end of line"

    "end of line"  décalage et aller à l'état 438


état 390

   70 functionDeclaration: "function" "[" "]" "=" "identifier" . functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   73 functionDeclarationArguments: . "(" idList ")"
   74                             | . "(" ")"
   75                             | .  ["end of line", ",", ";", "line comment"]

    "("  décalage et aller à l'état 209

    $défaut  réduction par utilisation de la règle 75 (functionDeclarationArguments)

    functionDeclarationArguments  aller à l'état 439


état 391

   69 functionDeclaration: "function" "[" functionDeclarationReturns "]" "=" . "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"

    "identifier"  décalage et aller à l'état 440


état 392

   76 idList: idList "," "identifier" .

    $défaut  réduction par utilisation de la règle 76 (idList)


état 393

   73 functionDeclarationArguments: "(" idList ")" .

    $défaut  réduction par utilisation de la règle 73 (functionDeclarationArguments)


état 394

   68 functionDeclaration: "function" "identifier" "=" "identifier" functionDeclarationArguments . functionDeclarationBreak functionBody "endfunction"
   78 functionDeclarationBreak: . lineEnd
   79                         | . ";"
   80                         | . ";" "end of line"
   81                         | . ","
   82                         | . "," "end of line"
  331 lineEnd: . "end of line"
  332        | . "line comment" "end of line"

    "end of line"   décalage et aller à l'état 62
    ","             décalage et aller à l'état 212
    ";"             décalage et aller à l'état 213
    "line comment"  décalage et aller à l'état 64

    functionDeclarationBreak  aller à l'état 441
    lineEnd                   aller à l'état 216


état 395

   83 functionBody: expressions .

    $défaut  réduction par utilisation de la règle 83 (functionBody)


état 396

   71 functionDeclaration: "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody . "endfunction"

    "endfunction"  décalage et aller à l'état 442


état 397

   85 classDeclaration: "class" "identifier" "<" "identifier" functionDeclarationBreak . slotsDeclaration "endclass"
   87 slotsDeclaration: . slotsDeclaration slotDeclaration functionDeclarationBreak
   88                 | . slotsDeclaration functionDeclarationBreak
   89                 | .

    $défaut  réduction par utilisation de la règle 89 (slotsDeclaration)

    slotsDeclaration  aller à l'état 443


état 398

   92 methodDeclaration: "function" . slotAttributes "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   93                  | "function" . slotAttributes "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   94                  | "function" . slotAttributes "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   95                  | "function" . slotAttributes "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   98 slotAttributes: . "(" idList ")"
   99               | . "(" ")"
  100               | .  ["[", "identifier"]

    "("  décalage et aller à l'état 444

    $défaut  réduction par utilisation de la règle 100 (slotAttributes)

    slotAttributes  aller à l'état 445


état 399

   86 classDeclaration: "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass" .

    $défaut  réduction par utilisation de la règle 86 (classDeclaration)


état 400

   96 propertyDeclaration: "property" . slotAttributes "identifier" "=" variable
   97                    | "property" . slotAttributes "identifier"
   98 slotAttributes: . "(" idList ")"
   99               | . "(" ")"
  100               | .  ["identifier"]

    "("  décalage et aller à l'état 444

    $défaut  réduction par utilisation de la règle 100 (slotAttributes)

    slotAttributes  aller à l'état 446


état 401

   88 slotsDeclaration: slotsDeclaration functionDeclarationBreak .

    $défaut  réduction par utilisation de la règle 88 (slotsDeclaration)


état 402

   78 functionDeclarationBreak: . lineEnd
   79                         | . ";"
   80                         | . ";" "end of line"
   81                         | . ","
   82                         | . "," "end of line"
   87 slotsDeclaration: slotsDeclaration slotDeclaration . functionDeclarationBreak
  331 lineEnd: . "end of line"
  332        | . "line comment" "end of line"

    "end of line"   décalage et aller à l'état 62
    ","             décalage et aller à l'état 212
    ";"             décalage et aller à l'état 213
    "line comment"  décalage et aller à l'état 64

    functionDeclarationBreak  aller à l'état 447
    lineEnd                   aller à l'état 216


état 403

   90 slotDeclaration: methodDeclaration .

    $défaut  réduction par utilisation de la règle 90 (slotDeclaration)


état 404

   91 slotDeclaration: propertyDeclaration .

    $défaut  réduction par utilisation de la règle 91 (slotDeclaration)


état 405

  282 forControl: "for" "(" "identifier" "=" forIterator . ")" forConditionBreak forBody "end"

    ")"  décalage et aller à l'état 448


état 406

  285 forConditionBreak: "end of line" .

    $défaut  réduction par utilisation de la règle 285 (forConditionBreak)


état 407

  288 forConditionBreak: "," .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "end", "select", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  289                  | "," . "end of line"

    "end of line"  décalage et aller à l'état 449

    $défaut  réduction par utilisation de la règle 288 (forConditionBreak)


état 408

  286 forConditionBreak: ";" .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "end", "select", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  287                  | ";" . "end of line"

    "end of line"  décalage et aller à l'état 450

    $défaut  réduction par utilisation de la règle 286 (forConditionBreak)


état 409

  290 forConditionBreak: "do" .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "end", "select", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  291                  | "do" . "end of line"

    "end of line"  décalage et aller à l'état 451

    $défaut  réduction par utilisation de la règle 290 (forConditionBreak)


état 410

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"
  213 variableDeclaration: . assignable "=" variable
  214                    | . assignable "=" functionCall
  215                    | . functionCall "=" variable
  216                    | . functionCall "=" functionCall
  217                    | . assignable "=" ":"
  218                    | . functionCall "=" ":"
  219                    | . assignable "=" returnControl
  220                    | . functionCall "=" returnControl
  221 assignable: . variable "." "identifier"
  222           | . variable "." functionCall
  223           | . functionCall "." variable
  224           | . functionCall "." functionCall
  225           | . "identifier"
  226           | . multipleResults
  227 multipleResults: . "[" matrixOrCellColumns "]"
  228 ifControl: . "if" condition then thenBody "end"
  229          | . "if" condition then thenBody else elseBody "end"
  230          | . "if" condition then thenBody elseIfControl "end"
  255 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  256              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  257              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  258              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  281 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  281           | "for" "identifier" "=" forIterator forConditionBreak . forBody "end"
  282           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  293 forBody: . expressions
  294        | .  ["end"]
  295 whileControl: . "while" condition whileConditionBreak whileBody "end"
  315 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  316           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  317           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  318           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  319 returnControl: . "return"
  320              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "end"  réduction par utilisation de la règle 294 (forBody)

    expressions            aller à l'état 452
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    forBody                aller à l'état 453
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 411

  313 whileConditionBreak: "then" "," "end of line" .

    $défaut  réduction par utilisation de la règle 313 (whileConditionBreak)


état 412

  314 whileConditionBreak: "then" ";" "end of line" .

    $défaut  réduction par utilisation de la règle 314 (whileConditionBreak)


état 413

  310 whileConditionBreak: "do" "," "end of line" .

    $défaut  réduction par utilisation de la règle 310 (whileConditionBreak)


état 414

  311 whileConditionBreak: "do" ";" "end of line" .

    $défaut  réduction par utilisation de la règle 311 (whileConditionBreak)


état 415

  295 whileControl: "while" condition whileConditionBreak whileBody "end" .

    $défaut  réduction par utilisation de la règle 295 (whileControl)


état 416

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"
  213 variableDeclaration: . assignable "=" variable
  214                    | . assignable "=" functionCall
  215                    | . functionCall "=" variable
  216                    | . functionCall "=" functionCall
  217                    | . assignable "=" ":"
  218                    | . functionCall "=" ":"
  219                    | . assignable "=" returnControl
  220                    | . functionCall "=" returnControl
  221 assignable: . variable "." "identifier"
  222           | . variable "." functionCall
  223           | . functionCall "." variable
  224           | . functionCall "." functionCall
  225           | . "identifier"
  226           | . multipleResults
  227 multipleResults: . "[" matrixOrCellColumns "]"
  228 ifControl: . "if" condition then thenBody "end"
  229          | . "if" condition then thenBody else elseBody "end"
  230          | . "if" condition then thenBody elseIfControl "end"
  255 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  256              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  257              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  258              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  281 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  282           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  295 whileControl: . "while" condition whileConditionBreak whileBody "end"
  315 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  315           | "try" "end of line" expressions "catch" "end of line" . expressions "end"
  316           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  317           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  318           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  319 returnControl: . "return"
  320              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    expressions            aller à l'état 454
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 417

  317 tryControl: "try" "end of line" expressions "catch" "line comment" . "end of line" expressions "end"

    "end of line"  décalage et aller à l'état 455


état 418

  316 tryControl: "try" "line comment" "end of line" expressions "catch" . "end of line" expressions "end"
  318           | "try" "line comment" "end of line" expressions "catch" . "line comment" "end of line" expressions "end"

    "end of line"   décalage et aller à l'état 456
    "line comment"  décalage et aller à l'état 457


état 419

  204 matrixOrCellLine: matrixOrCellColumns matrixOrCellColumnsBreak ";" "line comment" "end of line" .

    $défaut  réduction par utilisation de la règle 204 (matrixOrCellLine)


état 420

  249 else: "else" "end of line" .

    $défaut  réduction par utilisation de la règle 249 (else)


état 421

  247 else: "else" "," .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "end", "select", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  250     | "else" "," . "end of line"

    "end of line"  décalage et aller à l'état 458

    $défaut  réduction par utilisation de la règle 247 (else)


état 422

  248 else: "else" ";" .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "end", "select", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  251     | "else" ";" . "end of line"

    "end of line"  décalage et aller à l'état 459

    $défaut  réduction par utilisation de la règle 248 (else)


état 423

  235 ifConditionBreak: . ";"
  236                 | . ";" "end of line"
  237                 | . ","
  238                 | . "," "end of line"
  239                 | . "end of line"
  240 then: . "then"
  241     | . ifConditionBreak "then"
  242     | . ifConditionBreak "then" "end of line"
  243     | . "then" ifConditionBreak
  244     | . ifConditionBreak
  245     | .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "else", "elseif", "end", "select", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  252 elseIfControl: "elseif" condition . then thenBody
  253              | "elseif" condition . then thenBody else elseBody
  254              | "elseif" condition . then thenBody elseIfControl

    "end of line"  décalage et aller à l'état 194
    ","            décalage et aller à l'état 195
    ";"            décalage et aller à l'état 196
    "then"         décalage et aller à l'état 197

    $défaut  réduction par utilisation de la règle 245 (then)

    ifConditionBreak  aller à l'état 198
    then              aller à l'état 460


état 424

  233 elseBody: expressions .

    $défaut  réduction par utilisation de la règle 233 (elseBody)


état 425

  229 ifControl: "if" condition then thenBody else elseBody . "end"

    "end"  décalage et aller à l'état 461


état 426

  230 ifControl: "if" condition then thenBody elseIfControl "end" .

    $défaut  réduction par utilisation de la règle 230 (ifControl)


état 427

  257 selectControl: "select" selectable "line comment" selectConditionBreak casesControl "end" .

    $défaut  réduction par utilisation de la règle 257 (selectControl)


état 428

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"
  213 variableDeclaration: . assignable "=" variable
  214                    | . assignable "=" functionCall
  215                    | . functionCall "=" variable
  216                    | . functionCall "=" functionCall
  217                    | . assignable "=" ":"
  218                    | . functionCall "=" ":"
  219                    | . assignable "=" returnControl
  220                    | . functionCall "=" returnControl
  221 assignable: . variable "." "identifier"
  222           | . variable "." functionCall
  223           | . functionCall "." variable
  224           | . functionCall "." functionCall
  225           | . "identifier"
  226           | . multipleResults
  227 multipleResults: . "[" matrixOrCellColumns "]"
  228 ifControl: . "if" condition then thenBody "end"
  229          | . "if" condition then thenBody else elseBody "end"
  230          | . "if" condition then thenBody elseIfControl "end"
  233 elseBody: . expressions
  234         | .  ["end"]
  255 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  256              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  257              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  258              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  258              | "select" selectable "line comment" selectConditionBreak casesControl else . elseBody "end"
  281 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  282           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  295 whileControl: . "while" condition whileConditionBreak whileBody "end"
  315 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  316           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  317           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  318           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  319 returnControl: . "return"
  320              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "end"  réduction par utilisation de la règle 234 (elseBody)

    expressions            aller à l'état 424
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    elseBody               aller à l'état 462
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 429

  275 caseControlBreak: "end of line" .

    $défaut  réduction par utilisation de la règle 275 (caseControlBreak)


état 430

  273 caseControlBreak: "," .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "else", "end", "select", "case", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  277                 | "," . "end of line"

    "end of line"  décalage et aller à l'état 463

    $défaut  réduction par utilisation de la règle 273 (caseControlBreak)


état 431

  274 caseControlBreak: ";" .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "else", "end", "select", "case", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  278                 | ";" . "end of line"

    "end of line"  décalage et aller à l'état 464

    $défaut  réduction par utilisation de la règle 274 (caseControlBreak)


état 432

  272 caseControlBreak: "then" .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "else", "end", "select", "case", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  276                 | "then" . "end of line"
  279                 | "then" . ","
  280                 | "then" . "," "end of line"

    "end of line"  décalage et aller à l'état 465
    ","            décalage et aller à l'état 466

    $défaut  réduction par utilisation de la règle 272 (caseControlBreak)


état 433

  266 casesControl: "case" variable "line comment" . "end of line" caseBody

    "end of line"  décalage et aller à l'état 467


état 434

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"
  213 variableDeclaration: . assignable "=" variable
  214                    | . assignable "=" functionCall
  215                    | . functionCall "=" variable
  216                    | . functionCall "=" functionCall
  217                    | . assignable "=" ":"
  218                    | . functionCall "=" ":"
  219                    | . assignable "=" returnControl
  220                    | . functionCall "=" returnControl
  221 assignable: . variable "." "identifier"
  222           | . variable "." functionCall
  223           | . functionCall "." variable
  224           | . functionCall "." functionCall
  225           | . "identifier"
  226           | . multipleResults
  227 multipleResults: . "[" matrixOrCellColumns "]"
  228 ifControl: . "if" condition then thenBody "end"
  229          | . "if" condition then thenBody else elseBody "end"
  230          | . "if" condition then thenBody elseIfControl "end"
  255 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  256              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  257              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  258              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  264 casesControl: "case" variable caseControlBreak . caseBody
  270 caseBody: . expressions
  271         | .  ["else", "end", "case"]
  281 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  282           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  295 whileControl: . "while" condition whileConditionBreak whileBody "end"
  315 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  316           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  317           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  318           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  319 returnControl: . "return"
  320              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "else"  réduction par utilisation de la règle 271 (caseBody)
    "end"   réduction par utilisation de la règle 271 (caseBody)
    "case"  réduction par utilisation de la règle 271 (caseBody)

    expressions            aller à l'état 468
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    caseBody               aller à l'état 469
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 435

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  158         | variable . listableEnd
  268 casesControl: casesControl "case" variable . caseControlBreak caseBody
  269             | casesControl "case" variable . "line comment" "end of line" caseBody
  272 caseControlBreak: . "then"
  273                 | . ","
  274                 | . ";"
  275                 | . "end of line"
  276                 | . "then" "end of line"
  277                 | . "," "end of line"
  278                 | . ";" "end of line"
  279                 | . "then" ","
  280                 | . "then" "," "end of line"
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "end of line"   décalage et aller à l'état 429
    "'"             décalage et aller à l'état 148
    ","             décalage et aller à l'état 430
    ":"             décalage et aller à l'état 116
    ";"             décalage et aller à l'état 431
    "("             décalage et aller à l'état 149
    "."             décalage et aller à l'état 167
    ".'"            décalage et aller à l'état 151
    "+"             décalage et aller à l'état 119
    "-"             décalage et aller à l'état 120
    "*"             décalage et aller à l'état 121
    ".*"            décalage et aller à l'état 122
    ".*."           décalage et aller à l'état 123
    "/"             décalage et aller à l'état 124
    "./"            décalage et aller à l'état 125
    "/."            décalage et aller à l'état 126
    "./."           décalage et aller à l'état 127
    "\\"            décalage et aller à l'état 128
    ".\\"           décalage et aller à l'état 129
    ".\\."          décalage et aller à l'état 130
    "** or ^"       décalage et aller à l'état 152
    ".^"            décalage et aller à l'état 153
    "=="            décalage et aller à l'état 133
    "<> or ~="      décalage et aller à l'état 134
    "<"             décalage et aller à l'état 135
    "<="            décalage et aller à l'état 136
    ">"             décalage et aller à l'état 137
    ">="            décalage et aller à l'état 138
    "&"             décalage et aller à l'état 139
    "|"             décalage et aller à l'état 140
    "then"          décalage et aller à l'état 432
    "line comment"  décalage et aller à l'état 470

    rightOperand      aller à l'état 154
    listableBegin     aller à l'état 143
    listableEnd       aller à l'état 155
    caseControlBreak  aller à l'état 471
    comparators       aller à l'état 156


état 436

  256 selectControl: "select" selectable selectConditionBreak casesControl else elseBody . "end"

    "end"  décalage et aller à l'état 472


état 437

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  158         | variable . listableEnd
  265 casesControl: comments "case" variable . caseControlBreak caseBody
  267             | comments "case" variable . "line comment" "end of line" caseBody
  272 caseControlBreak: . "then"
  273                 | . ","
  274                 | . ";"
  275                 | . "end of line"
  276                 | . "then" "end of line"
  277                 | . "," "end of line"
  278                 | . ";" "end of line"
  279                 | . "then" ","
  280                 | . "then" "," "end of line"
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "end of line"   décalage et aller à l'état 429
    "'"             décalage et aller à l'état 148
    ","             décalage et aller à l'état 430
    ":"             décalage et aller à l'état 116
    ";"             décalage et aller à l'état 431
    "("             décalage et aller à l'état 149
    "."             décalage et aller à l'état 167
    ".'"            décalage et aller à l'état 151
    "+"             décalage et aller à l'état 119
    "-"             décalage et aller à l'état 120
    "*"             décalage et aller à l'état 121
    ".*"            décalage et aller à l'état 122
    ".*."           décalage et aller à l'état 123
    "/"             décalage et aller à l'état 124
    "./"            décalage et aller à l'état 125
    "/."            décalage et aller à l'état 126
    "./."           décalage et aller à l'état 127
    "\\"            décalage et aller à l'état 128
    ".\\"           décalage et aller à l'état 129
    ".\\."          décalage et aller à l'état 130
    "** or ^"       décalage et aller à l'état 152
    ".^"            décalage et aller à l'état 153
    "=="            décalage et aller à l'état 133
    "<> or ~="      décalage et aller à l'état 134
    "<"             décalage et aller à l'état 135
    "<="            décalage et aller à l'état 136
    ">"             décalage et aller à l'état 137
    ">="            décalage et aller à l'état 138
    "&"             décalage et aller à l'état 139
    "|"             décalage et aller à l'état 140
    "then"          décalage et aller à l'état 432
    "line comment"  décalage et aller à l'état 473

    rightOperand      aller à l'état 154
    listableBegin     aller à l'état 143
    listableEnd       aller à l'état 155
    caseControlBreak  aller à l'état 474
    comparators       aller à l'état 156


état 438

  330 comments: comments "line comment" "end of line" .

    $défaut  réduction par utilisation de la règle 330 (comments)


état 439

   70 functionDeclaration: "function" "[" "]" "=" "identifier" functionDeclarationArguments . functionDeclarationBreak functionBody "endfunction"
   78 functionDeclarationBreak: . lineEnd
   79                         | . ";"
   80                         | . ";" "end of line"
   81                         | . ","
   82                         | . "," "end of line"
  331 lineEnd: . "end of line"
  332        | . "line comment" "end of line"

    "end of line"   décalage et aller à l'état 62
    ","             décalage et aller à l'état 212
    ";"             décalage et aller à l'état 213
    "line comment"  décalage et aller à l'état 64

    functionDeclarationBreak  aller à l'état 475
    lineEnd                   aller à l'état 216


état 440

   69 functionDeclaration: "function" "[" functionDeclarationReturns "]" "=" "identifier" . functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   73 functionDeclarationArguments: . "(" idList ")"
   74                             | . "(" ")"
   75                             | .  ["end of line", ",", ";", "line comment"]

    "("  décalage et aller à l'état 209

    $défaut  réduction par utilisation de la règle 75 (functionDeclarationArguments)

    functionDeclarationArguments  aller à l'état 476


état 441

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   68                    | "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak . functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   83 functionBody: . expressions
   84             | .  ["endfunction"]
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"
  213 variableDeclaration: . assignable "=" variable
  214                    | . assignable "=" functionCall
  215                    | . functionCall "=" variable
  216                    | . functionCall "=" functionCall
  217                    | . assignable "=" ":"
  218                    | . functionCall "=" ":"
  219                    | . assignable "=" returnControl
  220                    | . functionCall "=" returnControl
  221 assignable: . variable "." "identifier"
  222           | . variable "." functionCall
  223           | . functionCall "." variable
  224           | . functionCall "." functionCall
  225           | . "identifier"
  226           | . multipleResults
  227 multipleResults: . "[" matrixOrCellColumns "]"
  228 ifControl: . "if" condition then thenBody "end"
  229          | . "if" condition then thenBody else elseBody "end"
  230          | . "if" condition then thenBody elseIfControl "end"
  255 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  256              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  257              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  258              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  281 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  282           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  295 whileControl: . "while" condition whileConditionBreak whileBody "end"
  315 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  316           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  317           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  318           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  319 returnControl: . "return"
  320              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "endfunction"  réduction par utilisation de la règle 84 (functionBody)

    expressions            aller à l'état 395
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    functionBody           aller à l'état 477
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 442

   71 functionDeclaration: "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction" .

    $défaut  réduction par utilisation de la règle 71 (functionDeclaration)


état 443

   78 functionDeclarationBreak: . lineEnd
   79                         | . ";"
   80                         | . ";" "end of line"
   81                         | . ","
   82                         | . "," "end of line"
   85 classDeclaration: "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration . "endclass"
   87 slotsDeclaration: slotsDeclaration . slotDeclaration functionDeclarationBreak
   88                 | slotsDeclaration . functionDeclarationBreak
   90 slotDeclaration: . methodDeclaration
   91                | . propertyDeclaration
   92 methodDeclaration: . "function" slotAttributes "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   93                  | . "function" slotAttributes "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   94                  | . "function" slotAttributes "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   95                  | . "function" slotAttributes "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   96 propertyDeclaration: . "property" slotAttributes "identifier" "=" variable
   97                    | . "property" slotAttributes "identifier"
  331 lineEnd: . "end of line"
  332        | . "line comment" "end of line"

    "end of line"   décalage et aller à l'état 62
    ","             décalage et aller à l'état 212
    ";"             décalage et aller à l'état 213
    "function"      décalage et aller à l'état 398
    "endclass"      décalage et aller à l'état 478
    "property"      décalage et aller à l'état 400
    "line comment"  décalage et aller à l'état 64

    functionDeclarationBreak  aller à l'état 401
    slotDeclaration           aller à l'état 402
    methodDeclaration         aller à l'état 403
    propertyDeclaration       aller à l'état 404
    lineEnd                   aller à l'état 216


état 444

   76 idList: . idList "," "identifier"
   77       | . "identifier"
   98 slotAttributes: "(" . idList ")"
   99               | "(" . ")"

    ")"           décalage et aller à l'état 479
    "identifier"  décalage et aller à l'état 206

    idList  aller à l'état 480


état 445

   92 methodDeclaration: "function" slotAttributes . "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   93                  | "function" slotAttributes . "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   94                  | "function" slotAttributes . "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   95                  | "function" slotAttributes . "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"

    "["           décalage et aller à l'état 481
    "identifier"  décalage et aller à l'état 482


état 446

   96 propertyDeclaration: "property" slotAttributes . "identifier" "=" variable
   97                    | "property" slotAttributes . "identifier"

    "identifier"  décalage et aller à l'état 483


état 447

   87 slotsDeclaration: slotsDeclaration slotDeclaration functionDeclarationBreak .

    $défaut  réduction par utilisation de la règle 87 (slotsDeclaration)


état 448

  282 forControl: "for" "(" "identifier" "=" forIterator ")" . forConditionBreak forBody "end"
  285 forConditionBreak: . "end of line"
  286                  | . ";"
  287                  | . ";" "end of line"
  288                  | . ","
  289                  | . "," "end of line"
  290                  | . "do"
  291                  | . "do" "end of line"
  292                  | .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "end", "select", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]

    "end of line"  décalage et aller à l'état 406
    ","            décalage et aller à l'état 407
    ";"            décalage et aller à l'état 408
    "do"           décalage et aller à l'état 409

    $défaut  réduction par utilisation de la règle 292 (forConditionBreak)

    forConditionBreak  aller à l'état 484


état 449

  289 forConditionBreak: "," "end of line" .

    $défaut  réduction par utilisation de la règle 289 (forConditionBreak)


état 450

  287 forConditionBreak: ";" "end of line" .

    $défaut  réduction par utilisation de la règle 287 (forConditionBreak)


état 451

  291 forConditionBreak: "do" "end of line" .

    $défaut  réduction par utilisation de la règle 291 (forConditionBreak)


état 452

  293 forBody: expressions .

    $défaut  réduction par utilisation de la règle 293 (forBody)


état 453

  281 forControl: "for" "identifier" "=" forIterator forConditionBreak forBody . "end"

    "end"  décalage et aller à l'état 485


état 454

  315 tryControl: "try" "end of line" expressions "catch" "end of line" expressions . "end"

    "end"  décalage et aller à l'état 486


état 455

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"
  213 variableDeclaration: . assignable "=" variable
  214                    | . assignable "=" functionCall
  215                    | . functionCall "=" variable
  216                    | . functionCall "=" functionCall
  217                    | . assignable "=" ":"
  218                    | . functionCall "=" ":"
  219                    | . assignable "=" returnControl
  220                    | . functionCall "=" returnControl
  221 assignable: . variable "." "identifier"
  222           | . variable "." functionCall
  223           | . functionCall "." variable
  224           | . functionCall "." functionCall
  225           | . "identifier"
  226           | . multipleResults
  227 multipleResults: . "[" matrixOrCellColumns "]"
  228 ifControl: . "if" condition then thenBody "end"
  229          | . "if" condition then thenBody else elseBody "end"
  230          | . "if" condition then thenBody elseIfControl "end"
  255 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  256              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  257              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  258              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  281 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  282           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  295 whileControl: . "while" condition whileConditionBreak whileBody "end"
  315 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  316           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  317           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  317           | "try" "end of line" expressions "catch" "line comment" "end of line" . expressions "end"
  318           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  319 returnControl: . "return"
  320              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    expressions            aller à l'état 487
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 456

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"
  213 variableDeclaration: . assignable "=" variable
  214                    | . assignable "=" functionCall
  215                    | . functionCall "=" variable
  216                    | . functionCall "=" functionCall
  217                    | . assignable "=" ":"
  218                    | . functionCall "=" ":"
  219                    | . assignable "=" returnControl
  220                    | . functionCall "=" returnControl
  221 assignable: . variable "." "identifier"
  222           | . variable "." functionCall
  223           | . functionCall "." variable
  224           | . functionCall "." functionCall
  225           | . "identifier"
  226           | . multipleResults
  227 multipleResults: . "[" matrixOrCellColumns "]"
  228 ifControl: . "if" condition then thenBody "end"
  229          | . "if" condition then thenBody else elseBody "end"
  230          | . "if" condition then thenBody elseIfControl "end"
  255 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  256              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  257              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  258              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  281 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  282           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  295 whileControl: . "while" condition whileConditionBreak whileBody "end"
  315 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  316           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  316           | "try" "line comment" "end of line" expressions "catch" "end of line" . expressions "end"
  317           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  318           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  319 returnControl: . "return"
  320              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    expressions            aller à l'état 488
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 457

  318 tryControl: "try" "line comment" "end of line" expressions "catch" "line comment" . "end of line" expressions "end"

    "end of line"  décalage et aller à l'état 489


état 458

  250 else: "else" "," "end of line" .

    $défaut  réduction par utilisation de la règle 250 (else)


état 459

  251 else: "else" ";" "end of line" .

    $défaut  réduction par utilisation de la règle 251 (else)


état 460

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"
  213 variableDeclaration: . assignable "=" variable
  214                    | . assignable "=" functionCall
  215                    | . functionCall "=" variable
  216                    | . functionCall "=" functionCall
  217                    | . assignable "=" ":"
  218                    | . functionCall "=" ":"
  219                    | . assignable "=" returnControl
  220                    | . functionCall "=" returnControl
  221 assignable: . variable "." "identifier"
  222           | . variable "." functionCall
  223           | . functionCall "." variable
  224           | . functionCall "." functionCall
  225           | . "identifier"
  226           | . multipleResults
  227 multipleResults: . "[" matrixOrCellColumns "]"
  228 ifControl: . "if" condition then thenBody "end"
  229          | . "if" condition then thenBody else elseBody "end"
  230          | . "if" condition then thenBody elseIfControl "end"
  231 thenBody: . expressions
  232         | .  ["else", "elseif", "end"]
  252 elseIfControl: "elseif" condition then . thenBody
  253              | "elseif" condition then . thenBody else elseBody
  254              | "elseif" condition then . thenBody elseIfControl
  255 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  256              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  257              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  258              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  281 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  282           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  295 whileControl: . "while" condition whileConditionBreak whileBody "end"
  315 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  316           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  317           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  318           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  319 returnControl: . "return"
  320              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "else"    réduction par utilisation de la règle 232 (thenBody)
    "elseif"  réduction par utilisation de la règle 232 (thenBody)
    "end"     réduction par utilisation de la règle 232 (thenBody)

    expressions            aller à l'état 323
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    thenBody               aller à l'état 490
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 461

  229 ifControl: "if" condition then thenBody else elseBody "end" .

    $défaut  réduction par utilisation de la règle 229 (ifControl)


état 462

  258 selectControl: "select" selectable "line comment" selectConditionBreak casesControl else elseBody . "end"

    "end"  décalage et aller à l'état 491


état 463

  277 caseControlBreak: "," "end of line" .

    $défaut  réduction par utilisation de la règle 277 (caseControlBreak)


état 464

  278 caseControlBreak: ";" "end of line" .

    $défaut  réduction par utilisation de la règle 278 (caseControlBreak)


état 465

  276 caseControlBreak: "then" "end of line" .

    $défaut  réduction par utilisation de la règle 276 (caseControlBreak)


état 466

  279 caseControlBreak: "then" "," .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "else", "end", "select", "case", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  280                 | "then" "," . "end of line"

    "end of line"  décalage et aller à l'état 492

    $défaut  réduction par utilisation de la règle 279 (caseControlBreak)


état 467

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"
  213 variableDeclaration: . assignable "=" variable
  214                    | . assignable "=" functionCall
  215                    | . functionCall "=" variable
  216                    | . functionCall "=" functionCall
  217                    | . assignable "=" ":"
  218                    | . functionCall "=" ":"
  219                    | . assignable "=" returnControl
  220                    | . functionCall "=" returnControl
  221 assignable: . variable "." "identifier"
  222           | . variable "." functionCall
  223           | . functionCall "." variable
  224           | . functionCall "." functionCall
  225           | . "identifier"
  226           | . multipleResults
  227 multipleResults: . "[" matrixOrCellColumns "]"
  228 ifControl: . "if" condition then thenBody "end"
  229          | . "if" condition then thenBody else elseBody "end"
  230          | . "if" condition then thenBody elseIfControl "end"
  255 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  256              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  257              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  258              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  266 casesControl: "case" variable "line comment" "end of line" . caseBody
  270 caseBody: . expressions
  271         | .  ["else", "end", "case"]
  281 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  282           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  295 whileControl: . "while" condition whileConditionBreak whileBody "end"
  315 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  316           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  317           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  318           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  319 returnControl: . "return"
  320              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "else"  réduction par utilisation de la règle 271 (caseBody)
    "end"   réduction par utilisation de la règle 271 (caseBody)
    "case"  réduction par utilisation de la règle 271 (caseBody)

    expressions            aller à l'état 468
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    caseBody               aller à l'état 493
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 468

  270 caseBody: expressions .

    $défaut  réduction par utilisation de la règle 270 (caseBody)


état 469

  264 casesControl: "case" variable caseControlBreak caseBody .

    $défaut  réduction par utilisation de la règle 264 (casesControl)


état 470

  269 casesControl: casesControl "case" variable "line comment" . "end of line" caseBody

    "end of line"  décalage et aller à l'état 494


état 471

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"
  213 variableDeclaration: . assignable "=" variable
  214                    | . assignable "=" functionCall
  215                    | . functionCall "=" variable
  216                    | . functionCall "=" functionCall
  217                    | . assignable "=" ":"
  218                    | . functionCall "=" ":"
  219                    | . assignable "=" returnControl
  220                    | . functionCall "=" returnControl
  221 assignable: . variable "." "identifier"
  222           | . variable "." functionCall
  223           | . functionCall "." variable
  224           | . functionCall "." functionCall
  225           | . "identifier"
  226           | . multipleResults
  227 multipleResults: . "[" matrixOrCellColumns "]"
  228 ifControl: . "if" condition then thenBody "end"
  229          | . "if" condition then thenBody else elseBody "end"
  230          | . "if" condition then thenBody elseIfControl "end"
  255 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  256              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  257              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  258              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  268 casesControl: casesControl "case" variable caseControlBreak . caseBody
  270 caseBody: . expressions
  271         | .  ["else", "end", "case"]
  281 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  282           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  295 whileControl: . "while" condition whileConditionBreak whileBody "end"
  315 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  316           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  317           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  318           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  319 returnControl: . "return"
  320              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "else"  réduction par utilisation de la règle 271 (caseBody)
    "end"   réduction par utilisation de la règle 271 (caseBody)
    "case"  réduction par utilisation de la règle 271 (caseBody)

    expressions            aller à l'état 468
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    caseBody               aller à l'état 495
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 472

  256 selectControl: "select" selectable selectConditionBreak casesControl else elseBody "end" .

    $défaut  réduction par utilisation de la règle 256 (selectControl)


état 473

  267 casesControl: comments "case" variable "line comment" . "end of line" caseBody

    "end of line"  décalage et aller à l'état 496


état 474

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"
  213 variableDeclaration: . assignable "=" variable
  214                    | . assignable "=" functionCall
  215                    | . functionCall "=" variable
  216                    | . functionCall "=" functionCall
  217                    | . assignable "=" ":"
  218                    | . functionCall "=" ":"
  219                    | . assignable "=" returnControl
  220                    | . functionCall "=" returnControl
  221 assignable: . variable "." "identifier"
  222           | . variable "." functionCall
  223           | . functionCall "." variable
  224           | . functionCall "." functionCall
  225           | . "identifier"
  226           | . multipleResults
  227 multipleResults: . "[" matrixOrCellColumns "]"
  228 ifControl: . "if" condition then thenBody "end"
  229          | . "if" condition then thenBody else elseBody "end"
  230          | . "if" condition then thenBody elseIfControl "end"
  255 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  256              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  257              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  258              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  265 casesControl: comments "case" variable caseControlBreak . caseBody
  270 caseBody: . expressions
  271         | .  ["else", "end", "case"]
  281 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  282           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  295 whileControl: . "while" condition whileConditionBreak whileBody "end"
  315 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  316           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  317           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  318           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  319 returnControl: . "return"
  320              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "else"  réduction par utilisation de la règle 271 (caseBody)
    "end"   réduction par utilisation de la règle 271 (caseBody)
    "case"  réduction par utilisation de la règle 271 (caseBody)

    expressions            aller à l'état 468
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    caseBody               aller à l'état 497
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 475

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak . functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   83 functionBody: . expressions
   84             | .  ["endfunction"]
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"
  213 variableDeclaration: . assignable "=" variable
  214                    | . assignable "=" functionCall
  215                    | . functionCall "=" variable
  216                    | . functionCall "=" functionCall
  217                    | . assignable "=" ":"
  218                    | . functionCall "=" ":"
  219                    | . assignable "=" returnControl
  220                    | . functionCall "=" returnControl
  221 assignable: . variable "." "identifier"
  222           | . variable "." functionCall
  223           | . functionCall "." variable
  224           | . functionCall "." functionCall
  225           | . "identifier"
  226           | . multipleResults
  227 multipleResults: . "[" matrixOrCellColumns "]"
  228 ifControl: . "if" condition then thenBody "end"
  229          | . "if" condition then thenBody else elseBody "end"
  230          | . "if" condition then thenBody elseIfControl "end"
  255 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  256              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  257              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  258              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  281 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  282           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  295 whileControl: . "while" condition whileConditionBreak whileBody "end"
  315 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  316           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  317           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  318           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  319 returnControl: . "return"
  320              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "endfunction"  réduction par utilisation de la règle 84 (functionBody)

    expressions            aller à l'état 395
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    functionBody           aller à l'état 498
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 476

   69 functionDeclaration: "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments . functionDeclarationBreak functionBody "endfunction"
   78 functionDeclarationBreak: . lineEnd
   79                         | . ";"
   80                         | . ";" "end of line"
   81                         | . ","
   82                         | . "," "end of line"
  331 lineEnd: . "end of line"
  332        | . "line comment" "end of line"

    "end of line"   décalage et aller à l'état 62
    ","             décalage et aller à l'état 212
    ";"             décalage et aller à l'état 213
    "line comment"  décalage et aller à l'état 64

    functionDeclarationBreak  aller à l'état 499
    lineEnd                   aller à l'état 216


état 477

   68 functionDeclaration: "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody . "endfunction"

    "endfunction"  décalage et aller à l'état 500


état 478

   85 classDeclaration: "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass" .

    $défaut  réduction par utilisation de la règle 85 (classDeclaration)


état 479

   99 slotAttributes: "(" ")" .

    $défaut  réduction par utilisation de la règle 99 (slotAttributes)


état 480

   76 idList: idList . "," "identifier"
   98 slotAttributes: "(" idList . ")"

    ","  décalage et aller à l'état 334
    ")"  décalage et aller à l'état 501


état 481

   72 functionDeclarationReturns: . idList
   76 idList: . idList "," "identifier"
   77       | . "identifier"
   93 methodDeclaration: "function" slotAttributes "[" . functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   94                  | "function" slotAttributes "[" . "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"

    "]"           décalage et aller à l'état 502
    "identifier"  décalage et aller à l'état 206

    functionDeclarationReturns  aller à l'état 503
    idList                      aller à l'état 208


état 482

   73 functionDeclarationArguments: . "(" idList ")"
   74                             | . "(" ")"
   75                             | .  ["end of line", ",", ";", "line comment"]
   92 methodDeclaration: "function" slotAttributes "identifier" . "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   95                  | "function" slotAttributes "identifier" . functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"

    "("  décalage et aller à l'état 209
    "="  décalage et aller à l'état 504

    $défaut  réduction par utilisation de la règle 75 (functionDeclarationArguments)

    functionDeclarationArguments  aller à l'état 505


état 483

   96 propertyDeclaration: "property" slotAttributes "identifier" . "=" variable
   97                    | "property" slotAttributes "identifier" .  ["end of line", ",", ";", "line comment"]

    "="  décalage et aller à l'état 506

    $défaut  réduction par utilisation de la règle 97 (propertyDeclaration)


état 484

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"
  213 variableDeclaration: . assignable "=" variable
  214                    | . assignable "=" functionCall
  215                    | . functionCall "=" variable
  216                    | . functionCall "=" functionCall
  217                    | . assignable "=" ":"
  218                    | . functionCall "=" ":"
  219                    | . assignable "=" returnControl
  220                    | . functionCall "=" returnControl
  221 assignable: . variable "." "identifier"
  222           | . variable "." functionCall
  223           | . functionCall "." variable
  224           | . functionCall "." functionCall
  225           | . "identifier"
  226           | . multipleResults
  227 multipleResults: . "[" matrixOrCellColumns "]"
  228 ifControl: . "if" condition then thenBody "end"
  229          | . "if" condition then thenBody else elseBody "end"
  230          | . "if" condition then thenBody elseIfControl "end"
  255 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  256              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  257              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  258              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  281 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  282           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  282           | "for" "(" "identifier" "=" forIterator ")" forConditionBreak . forBody "end"
  293 forBody: . expressions
  294        | .  ["end"]
  295 whileControl: . "while" condition whileConditionBreak whileBody "end"
  315 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  316           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  317           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  318           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  319 returnControl: . "return"
  320              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "end"  réduction par utilisation de la règle 294 (forBody)

    expressions            aller à l'état 452
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    forBody                aller à l'état 507
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 485

  281 forControl: "for" "identifier" "=" forIterator forConditionBreak forBody "end" .

    $défaut  réduction par utilisation de la règle 281 (forControl)


état 486

  315 tryControl: "try" "end of line" expressions "catch" "end of line" expressions "end" .

    $défaut  réduction par utilisation de la règle 315 (tryControl)


état 487

  317 tryControl: "try" "end of line" expressions "catch" "line comment" "end of line" expressions . "end"

    "end"  décalage et aller à l'état 508


état 488

  316 tryControl: "try" "line comment" "end of line" expressions "catch" "end of line" expressions . "end"

    "end"  décalage et aller à l'état 509


état 489

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"
  213 variableDeclaration: . assignable "=" variable
  214                    | . assignable "=" functionCall
  215                    | . functionCall "=" variable
  216                    | . functionCall "=" functionCall
  217                    | . assignable "=" ":"
  218                    | . functionCall "=" ":"
  219                    | . assignable "=" returnControl
  220                    | . functionCall "=" returnControl
  221 assignable: . variable "." "identifier"
  222           | . variable "." functionCall
  223           | . functionCall "." variable
  224           | . functionCall "." functionCall
  225           | . "identifier"
  226           | . multipleResults
  227 multipleResults: . "[" matrixOrCellColumns "]"
  228 ifControl: . "if" condition then thenBody "end"
  229          | . "if" condition then thenBody else elseBody "end"
  230          | . "if" condition then thenBody elseIfControl "end"
  255 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  256              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  257              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  258              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  281 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  282           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  295 whileControl: . "while" condition whileConditionBreak whileBody "end"
  315 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  316           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  317           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  318           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  318           | "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" . expressions "end"
  319 returnControl: . "return"
  320              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    expressions            aller à l'état 510
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 490

  246 else: . "else"
  247     | . "else" ","
  248     | . "else" ";"
  249     | . "else" "end of line"
  250     | . "else" "," "end of line"
  251     | . "else" ";" "end of line"
  252 elseIfControl: . "elseif" condition then thenBody
  252              | "elseif" condition then thenBody .  ["end"]
  253              | . "elseif" condition then thenBody else elseBody
  253              | "elseif" condition then thenBody . else elseBody
  254              | . "elseif" condition then thenBody elseIfControl
  254              | "elseif" condition then thenBody . elseIfControl

    "else"    décalage et aller à l'état 377
    "elseif"  décalage et aller à l'état 378

    $défaut  réduction par utilisation de la règle 252 (elseIfControl)

    else           aller à l'état 511
    elseIfControl  aller à l'état 512


état 491

  258 selectControl: "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end" .

    $défaut  réduction par utilisation de la règle 258 (selectControl)


état 492

  280 caseControlBreak: "then" "," "end of line" .

    $défaut  réduction par utilisation de la règle 280 (caseControlBreak)


état 493

  266 casesControl: "case" variable "line comment" "end of line" caseBody .

    $défaut  réduction par utilisation de la règle 266 (casesControl)


état 494

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"
  213 variableDeclaration: . assignable "=" variable
  214                    | . assignable "=" functionCall
  215                    | . functionCall "=" variable
  216                    | . functionCall "=" functionCall
  217                    | . assignable "=" ":"
  218                    | . functionCall "=" ":"
  219                    | . assignable "=" returnControl
  220                    | . functionCall "=" returnControl
  221 assignable: . variable "." "identifier"
  222           | . variable "." functionCall
  223           | . functionCall "." variable
  224           | . functionCall "." functionCall
  225           | . "identifier"
  226           | . multipleResults
  227 multipleResults: . "[" matrixOrCellColumns "]"
  228 ifControl: . "if" condition then thenBody "end"
  229          | . "if" condition then thenBody else elseBody "end"
  230          | . "if" condition then thenBody elseIfControl "end"
  255 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  256              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  257              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  258              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  269 casesControl: casesControl "case" variable "line comment" "end of line" . caseBody
  270 caseBody: . expressions
  271         | .  ["else", "end", "case"]
  281 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  282           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  295 whileControl: . "while" condition whileConditionBreak whileBody "end"
  315 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  316           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  317           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  318           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  319 returnControl: . "return"
  320              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "else"  réduction par utilisation de la règle 271 (caseBody)
    "end"   réduction par utilisation de la règle 271 (caseBody)
    "case"  réduction par utilisation de la règle 271 (caseBody)

    expressions            aller à l'état 468
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    caseBody               aller à l'état 513
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 495

  268 casesControl: casesControl "case" variable caseControlBreak caseBody .

    $défaut  réduction par utilisation de la règle 268 (casesControl)


état 496

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"
  213 variableDeclaration: . assignable "=" variable
  214                    | . assignable "=" functionCall
  215                    | . functionCall "=" variable
  216                    | . functionCall "=" functionCall
  217                    | . assignable "=" ":"
  218                    | . functionCall "=" ":"
  219                    | . assignable "=" returnControl
  220                    | . functionCall "=" returnControl
  221 assignable: . variable "." "identifier"
  222           | . variable "." functionCall
  223           | . functionCall "." variable
  224           | . functionCall "." functionCall
  225           | . "identifier"
  226           | . multipleResults
  227 multipleResults: . "[" matrixOrCellColumns "]"
  228 ifControl: . "if" condition then thenBody "end"
  229          | . "if" condition then thenBody else elseBody "end"
  230          | . "if" condition then thenBody elseIfControl "end"
  255 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  256              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  257              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  258              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  267 casesControl: comments "case" variable "line comment" "end of line" . caseBody
  270 caseBody: . expressions
  271         | .  ["else", "end", "case"]
  281 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  282           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  295 whileControl: . "while" condition whileConditionBreak whileBody "end"
  315 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  316           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  317           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  318           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  319 returnControl: . "return"
  320              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "else"  réduction par utilisation de la règle 271 (caseBody)
    "end"   réduction par utilisation de la règle 271 (caseBody)
    "case"  réduction par utilisation de la règle 271 (caseBody)

    expressions            aller à l'état 468
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    caseBody               aller à l'état 514
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 497

  265 casesControl: comments "case" variable caseControlBreak caseBody .

    $défaut  réduction par utilisation de la règle 265 (casesControl)


état 498

   70 functionDeclaration: "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody . "endfunction"

    "endfunction"  décalage et aller à l'état 515


état 499

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak . functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   83 functionBody: . expressions
   84             | .  ["endfunction"]
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"
  213 variableDeclaration: . assignable "=" variable
  214                    | . assignable "=" functionCall
  215                    | . functionCall "=" variable
  216                    | . functionCall "=" functionCall
  217                    | . assignable "=" ":"
  218                    | . functionCall "=" ":"
  219                    | . assignable "=" returnControl
  220                    | . functionCall "=" returnControl
  221 assignable: . variable "." "identifier"
  222           | . variable "." functionCall
  223           | . functionCall "." variable
  224           | . functionCall "." functionCall
  225           | . "identifier"
  226           | . multipleResults
  227 multipleResults: . "[" matrixOrCellColumns "]"
  228 ifControl: . "if" condition then thenBody "end"
  229          | . "if" condition then thenBody else elseBody "end"
  230          | . "if" condition then thenBody elseIfControl "end"
  255 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  256              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  257              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  258              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  281 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  282           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  295 whileControl: . "while" condition whileConditionBreak whileBody "end"
  315 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  316           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  317           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  318           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  319 returnControl: . "return"
  320              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "endfunction"  réduction par utilisation de la règle 84 (functionBody)

    expressions            aller à l'état 395
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    functionBody           aller à l'état 516
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 500

   68 functionDeclaration: "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction" .

    $défaut  réduction par utilisation de la règle 68 (functionDeclaration)


état 501

   98 slotAttributes: "(" idList ")" .

    $défaut  réduction par utilisation de la règle 98 (slotAttributes)


état 502

   94 methodDeclaration: "function" slotAttributes "[" "]" . "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"

    "="  décalage et aller à l'état 517


état 503

   93 methodDeclaration: "function" slotAttributes "[" functionDeclarationReturns . "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"

    "]"  décalage et aller à l'état 518


état 504

   92 methodDeclaration: "function" slotAttributes "identifier" "=" . "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"

    "identifier"  décalage et aller à l'état 519


état 505

   78 functionDeclarationBreak: . lineEnd
   79                         | . ";"
   80                         | . ";" "end of line"
   81                         | . ","
   82                         | . "," "end of line"
   95 methodDeclaration: "function" slotAttributes "identifier" functionDeclarationArguments . functionDeclarationBreak functionBody "endfunction"
  331 lineEnd: . "end of line"
  332        | . "line comment" "end of line"

    "end of line"   décalage et aller à l'état 62
    ","             décalage et aller à l'état 212
    ";"             décalage et aller à l'état 213
    "line comment"  décalage et aller à l'état 64

    functionDeclarationBreak  aller à l'état 520
    lineEnd                   aller à l'état 216


état 506

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   96 propertyDeclaration: "property" slotAttributes "identifier" "=" . variable
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 93
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 521
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 507

  282 forControl: "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody . "end"

    "end"  décalage et aller à l'état 522


état 508

  317 tryControl: "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end" .

    $défaut  réduction par utilisation de la règle 317 (tryControl)


état 509

  316 tryControl: "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end" .

    $défaut  réduction par utilisation de la règle 316 (tryControl)


état 510

  318 tryControl: "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions . "end"

    "end"  décalage et aller à l'état 523


état 511

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"
  213 variableDeclaration: . assignable "=" variable
  214                    | . assignable "=" functionCall
  215                    | . functionCall "=" variable
  216                    | . functionCall "=" functionCall
  217                    | . assignable "=" ":"
  218                    | . functionCall "=" ":"
  219                    | . assignable "=" returnControl
  220                    | . functionCall "=" returnControl
  221 assignable: . variable "." "identifier"
  222           | . variable "." functionCall
  223           | . functionCall "." variable
  224           | . functionCall "." functionCall
  225           | . "identifier"
  226           | . multipleResults
  227 multipleResults: . "[" matrixOrCellColumns "]"
  228 ifControl: . "if" condition then thenBody "end"
  229          | . "if" condition then thenBody else elseBody "end"
  230          | . "if" condition then thenBody elseIfControl "end"
  233 elseBody: . expressions
  234         | .  ["end"]
  253 elseIfControl: "elseif" condition then thenBody else . elseBody
  255 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  256              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  257              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  258              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  281 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  282           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  295 whileControl: . "while" condition whileConditionBreak whileBody "end"
  315 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  316           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  317           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  318           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  319 returnControl: . "return"
  320              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "end"  réduction par utilisation de la règle 234 (elseBody)

    expressions            aller à l'état 424
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    elseBody               aller à l'état 524
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 512

  254 elseIfControl: "elseif" condition then thenBody elseIfControl .

    $défaut  réduction par utilisation de la règle 254 (elseIfControl)


état 513

  269 casesControl: casesControl "case" variable "line comment" "end of line" caseBody .

    $défaut  réduction par utilisation de la règle 269 (casesControl)


état 514

  267 casesControl: comments "case" variable "line comment" "end of line" caseBody .

    $défaut  réduction par utilisation de la règle 267 (casesControl)


état 515

   70 functionDeclaration: "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction" .

    $défaut  réduction par utilisation de la règle 70 (functionDeclaration)


état 516

   69 functionDeclaration: "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody . "endfunction"

    "endfunction"  décalage et aller à l'état 525


état 517

   94 methodDeclaration: "function" slotAttributes "[" "]" "=" . "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"

    "identifier"  décalage et aller à l'état 526


état 518

   93 methodDeclaration: "function" slotAttributes "[" functionDeclarationReturns "]" . "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"

    "="  décalage et aller à l'état 527


état 519

   73 functionDeclarationArguments: . "(" idList ")"
   74                             | . "(" ")"
   75                             | .  ["end of line", ",", ";", "line comment"]
   92 methodDeclaration: "function" slotAttributes "identifier" "=" "identifier" . functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"

    "("  décalage et aller à l'état 209

    $défaut  réduction par utilisation de la règle 75 (functionDeclarationArguments)

    functionDeclarationArguments  aller à l'état 528


état 520

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   83 functionBody: . expressions
   84             | .  ["endfunction"]
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   95 methodDeclaration: "function" slotAttributes "identifier" functionDeclarationArguments functionDeclarationBreak . functionBody "endfunction"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"
  213 variableDeclaration: . assignable "=" variable
  214                    | . assignable "=" functionCall
  215                    | . functionCall "=" variable
  216                    | . functionCall "=" functionCall
  217                    | . assignable "=" ":"
  218                    | . functionCall "=" ":"
  219                    | . assignable "=" returnControl
  220                    | . functionCall "=" returnControl
  221 assignable: . variable "." "identifier"
  222           | . variable "." functionCall
  223           | . functionCall "." variable
  224           | . functionCall "." functionCall
  225           | . "identifier"
  226           | . multipleResults
  227 multipleResults: . "[" matrixOrCellColumns "]"
  228 ifControl: . "if" condition then thenBody "end"
  229          | . "if" condition then thenBody else elseBody "end"
  230          | . "if" condition then thenBody elseIfControl "end"
  255 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  256              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  257              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  258              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  281 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  282           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  295 whileControl: . "while" condition whileConditionBreak whileBody "end"
  315 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  316           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  317           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  318           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  319 returnControl: . "return"
  320              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "endfunction"  réduction par utilisation de la règle 84 (functionBody)

    expressions            aller à l'état 395
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    functionBody           aller à l'état 529
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 521

   55 simpleFunctionCall: variable . "(" functionArgs ")"
   96 propertyDeclaration: "property" slotAttributes "identifier" "=" variable .  ["end of line", ",", ";", "line comment"]
  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  158         | variable . listableEnd
  321 comparators: . "=="
  322            | . "<> or ~="
  323            | . "<"
  324            | . "<="
  325            | . ">"
  326            | . ">="
  327            | . "&"
  328            | . "|"

    "'"         décalage et aller à l'état 148
    ":"         décalage et aller à l'état 116
    "("         décalage et aller à l'état 149
    "."         décalage et aller à l'état 167
    ".'"        décalage et aller à l'état 151
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 152
    ".^"        décalage et aller à l'état 153
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140

    $défaut  réduction par utilisation de la règle 96 (propertyDeclaration)

    rightOperand   aller à l'état 154
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 155
    comparators    aller à l'état 156


état 522

  282 forControl: "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end" .

    $défaut  réduction par utilisation de la règle 282 (forControl)


état 523

  318 tryControl: "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end" .

    $défaut  réduction par utilisation de la règle 318 (tryControl)


état 524

  253 elseIfControl: "elseif" condition then thenBody else elseBody .

    $défaut  réduction par utilisation de la règle 253 (elseIfControl)


état 525

   69 functionDeclaration: "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction" .

    $défaut  réduction par utilisation de la règle 69 (functionDeclaration)


état 526

   73 functionDeclarationArguments: . "(" idList ")"
   74                             | . "(" ")"
   75                             | .  ["end of line", ",", ";", "line comment"]
   94 methodDeclaration: "function" slotAttributes "[" "]" "=" "identifier" . functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"

    "("  décalage et aller à l'état 209

    $défaut  réduction par utilisation de la règle 75 (functionDeclarationArguments)

    functionDeclarationArguments  aller à l'état 530


état 527

   93 methodDeclaration: "function" slotAttributes "[" functionDeclarationReturns "]" "=" . "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"

    "identifier"  décalage et aller à l'état 531


état 528

   78 functionDeclarationBreak: . lineEnd
   79                         | . ";"
   80                         | . ";" "end of line"
   81                         | . ","
   82                         | . "," "end of line"
   92 methodDeclaration: "function" slotAttributes "identifier" "=" "identifier" functionDeclarationArguments . functionDeclarationBreak functionBody "endfunction"
  331 lineEnd: . "end of line"
  332        | . "line comment" "end of line"

    "end of line"   décalage et aller à l'état 62
    ","             décalage et aller à l'état 212
    ";"             décalage et aller à l'état 213
    "line comment"  décalage et aller à l'état 64

    functionDeclarationBreak  aller à l'état 532
    lineEnd                   aller à l'état 216


état 529

   95 methodDeclaration: "function" slotAttributes "identifier" functionDeclarationArguments functionDeclarationBreak functionBody . "endfunction"

    "endfunction"  décalage et aller à l'état 533


état 530

   78 functionDeclarationBreak: . lineEnd
   79                         | . ";"
   80                         | . ";" "end of line"
   81                         | . ","
   82                         | . "," "end of line"
   94 methodDeclaration: "function" slotAttributes "[" "]" "=" "identifier" functionDeclarationArguments . functionDeclarationBreak functionBody "endfunction"
  331 lineEnd: . "end of line"
  332        | . "line comment" "end of line"

    "end of line"   décalage et aller à l'état 62
    ","             décalage et aller à l'état 212
    ";"             décalage et aller à l'état 213
    "line comment"  décalage et aller à l'état 64

    functionDeclarationBreak  aller à l'état 534
    lineEnd                   aller à l'état 216


état 531

   73 functionDeclarationArguments: . "(" idList ")"
   74                             | . "(" ")"
   75                             | .  ["end of line", ",", ";", "line comment"]
   93 methodDeclaration: "function" slotAttributes "[" functionDeclarationReturns "]" "=" "identifier" . functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"

    "("  décalage et aller à l'état 209

    $défaut  réduction par utilisation de la règle 75 (functionDeclarationArguments)

    functionDeclarationArguments  aller à l'état 535


état 532

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   83 functionBody: . expressions
   84             | .  ["endfunction"]
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   92 methodDeclaration: "function" slotAttributes "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak . functionBody "endfunction"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"
  213 variableDeclaration: . assignable "=" variable
  214                    | . assignable "=" functionCall
  215                    | . functionCall "=" variable
  216                    | . functionCall "=" functionCall
  217                    | . assignable "=" ":"
  218                    | . functionCall "=" ":"
  219                    | . assignable "=" returnControl
  220                    | . functionCall "=" returnControl
  221 assignable: . variable "." "identifier"
  222           | . variable "." functionCall
  223           | . functionCall "." variable
  224           | . functionCall "." functionCall
  225           | . "identifier"
  226           | . multipleResults
  227 multipleResults: . "[" matrixOrCellColumns "]"
  228 ifControl: . "if" condition then thenBody "end"
  229          | . "if" condition then thenBody else elseBody "end"
  230          | . "if" condition then thenBody elseIfControl "end"
  255 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  256              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  257              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  258              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  281 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  282           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  295 whileControl: . "while" condition whileConditionBreak whileBody "end"
  315 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  316           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  317           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  318           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  319 returnControl: . "return"
  320              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "endfunction"  réduction par utilisation de la règle 84 (functionBody)

    expressions            aller à l'état 395
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    functionBody           aller à l'état 536
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 533

   95 methodDeclaration: "function" slotAttributes "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction" .

    $défaut  réduction par utilisation de la règle 95 (methodDeclaration)


état 534

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   83 functionBody: . expressions
   84             | .  ["endfunction"]
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   94 methodDeclaration: "function" slotAttributes "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak . functionBody "endfunction"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"
  213 variableDeclaration: . assignable "=" variable
  214                    | . assignable "=" functionCall
  215                    | . functionCall "=" variable
  216                    | . functionCall "=" functionCall
  217                    | . assignable "=" ":"
  218                    | . functionCall "=" ":"
  219                    | . assignable "=" returnControl
  220                    | . functionCall "=" returnControl
  221 assignable: . variable "." "identifier"
  222           | . variable "." functionCall
  223           | . functionCall "." variable
  224           | . functionCall "." functionCall
  225           | . "identifier"
  226           | . multipleResults
  227 multipleResults: . "[" matrixOrCellColumns "]"
  228 ifControl: . "if" condition then thenBody "end"
  229          | . "if" condition then thenBody else elseBody "end"
  230          | . "if" condition then thenBody elseIfControl "end"
  255 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  256              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  257              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  258              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  281 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  282           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  295 whileControl: . "while" condition whileConditionBreak whileBody "end"
  315 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  316           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  317           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  318           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  319 returnControl: . "return"
  320              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "endfunction"  réduction par utilisation de la règle 84 (functionBody)

    expressions            aller à l'état 395
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    functionBody           aller à l'état 537
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 535

   78 functionDeclarationBreak: . lineEnd
   79                         | . ";"
   80                         | . ";" "end of line"
   81                         | . ","
   82                         | . "," "end of line"
   93 methodDeclaration: "function" slotAttributes "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments . functionDeclarationBreak functionBody "endfunction"
  331 lineEnd: . "end of line"
  332        | . "line comment" "end of line"

    "end of line"   décalage et aller à l'état 62
    ","             décalage et aller à l'état 212
    ";"             décalage et aller à l'état 213
    "line comment"  décalage et aller à l'état 64

    functionDeclarationBreak  aller à l'état 538
    lineEnd                   aller à l'état 216


état 536

   92 methodDeclaration: "function" slotAttributes "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody . "endfunction"

    "endfunction"  décalage et aller à l'état 539


état 537

   94 methodDeclaration: "function" slotAttributes "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody . "endfunction"

    "endfunction"  décalage et aller à l'état 540


état 538

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   83 functionBody: . expressions
   84             | .  ["endfunction"]
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   93 methodDeclaration: "function" slotAttributes "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak . functionBody "endfunction"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . functionCall "." variable
  158         | . variable listableEnd
  159         | . functionCall listableEnd
  160         | . matrix
  161         | . cell
  162         | . operation
  163         | . "identifier"
  164         | . "integer"
  165         | . "number"
  166         | . "float"
  167         | . "string"
  168         | . "$"
  169         | . "%t or %T"
  170         | . "%f or %F"
  171         | . "(" variable ")"
  172         | . "(" variableFields ")"
  173         | . comparison
  180 cell: . "{" matrixOrCellLines "}"
  181     | . "{" lineEnd matrixOrCellLines "}"
  182     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  183     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  184     | . "{" matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellColumns "}"
  186     | . "{" "}"
  187 matrix: . "[" matrixOrCellLines "]"
  188       | . "[" lineEnd matrixOrCellLines "]"
  189       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  190       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  191       | . "[" matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellColumns "]"
  193       | . "[" "]"
  213 variableDeclaration: . assignable "=" variable
  214                    | . assignable "=" functionCall
  215                    | . functionCall "=" variable
  216                    | . functionCall "=" functionCall
  217                    | . assignable "=" ":"
  218                    | . functionCall "=" ":"
  219                    | . assignable "=" returnControl
  220                    | . functionCall "=" returnControl
  221 assignable: . variable "." "identifier"
  222           | . variable "." functionCall
  223           | . functionCall "." variable
  224           | . functionCall "." functionCall
  225           | . "identifier"
  226           | . multipleResults
  227 multipleResults: . "[" matrixOrCellColumns "]"
  228 ifControl: . "if" condition then thenBody "end"
  229          | . "if" condition then thenBody else elseBody "end"
  230          | . "if" condition then thenBody elseIfControl "end"
  255 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  256              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  257              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  258              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  281 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  282           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  295 whileControl: . "while" condition whileConditionBreak whileBody "end"
  315 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  316           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  317           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  318           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  319 returnControl: . "return"
  320              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "endfunction"  réduction par utilisation de la règle 84 (functionBody)

    expressions            aller à l'état 395
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    functionBody           aller à l'état 541
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 539

   92 methodDeclaration: "function" slotAttributes "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction" .

    $défaut  réduction par utilisation de la règle 92 (methodDeclaration)


état 540

   94 methodDeclaration: "function" slotAttributes "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction" .

    $défaut  réduction par utilisation de la règle 94 (methodDeclaration)


état 541

   93 methodDeclaration: "function" slotAttributes "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody . "endfunction"

    "endfunction"  décalage et aller à l'état 542


état 542

   93 methodDeclaration: "function" slotAttributes "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction" .

    $défaut  réduction par utilisation de la règle 93 (methodDeclaration)
