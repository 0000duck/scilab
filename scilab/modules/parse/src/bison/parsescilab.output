Terminals unused in grammar

   "line break"
   "spaces"
   "block comment"


État 95conflits: 13 réduction/réduction
État 96conflits: 13 réduction/réduction
État 97conflits: 14 réduction/réduction
État 98conflits: 14 réduction/réduction
État 99conflits: 14 réduction/réduction
État 100conflits: 14 réduction/réduction
État 101conflits: 14 réduction/réduction
État 102conflits: 14 réduction/réduction
État 104conflits: 2 décalage/réduction
État 105conflits: 1 décalage/réduction, 13 réduction/réduction
État 114conflits: 2 décalage/réduction
État 216conflits: 1 décalage/réduction
État 217conflits: 1 décalage/réduction
État 284conflits: 29 réduction/réduction
État 365conflits: 14 réduction/réduction


Grammaire

    0 $accept: program "end of file"

    1 program: expressions
    2        | "end of line" expressions

    3 expressions: recursiveExpression
    4            | recursiveExpression expression
    5            | recursiveExpression expression "line comment"
    6            | expression
    7            | expression "line comment"

    8 recursiveExpression: recursiveExpression expression expressionLineBreak
    9                    | recursiveExpression expression "line comment" expressionLineBreak
   10                    | expression "line comment" expressionLineBreak
   11                    | expression expressionLineBreak

   12 expressionLineBreak: ";"
   13                    | ","
   14                    | "end of line"
   15                    | expressionLineBreak ";"
   16                    | expressionLineBreak ","
   17                    | expressionLineBreak "end of line"

   18 expression: functionDeclaration
   19           | classDeclaration
   20           | functionCall
   21           | variableDeclaration
   22           | ifControl
   23           | selectControl
   24           | forControl
   25           | whileControl
   26           | tryControl
   27           | variable
   28           | implicitFunctionCall
   29           | "break"
   30           | returnControl
   31           | "line comment"
   32           | error

   33 implicitFunctionCall: implicitFunctionCall implicitCallable
   34                     | "identifier" implicitCallable

   35 implicitCallable: "identifier"
   36                 | "integer"
   37                 | "number"
   38                 | "float"
   39                 | "string"
   40                 | "$"
   41                 | "%t or %T"
   42                 | "%f or %F"
   43                 | implicitCallable "." "identifier"
   44                 | implicitCallable "." functionCall
   45                 | simpleFunctionCall
   46                 | implicitCallable rightOperand
   47                 | "path"

   48 functionCall: simpleFunctionCall
   49             | specificFunctionCall
   50             | recursiveFunctionCall
   51             | "(" functionCall ")"
   52             | "~ or @" functionCall

   53 specificFunctionCall: "%t or %T" "(" functionArgs ")"
   54                     | "%f or %F" "(" functionArgs ")"

   55 simpleFunctionCall: variable "(" functionArgs ")"

   56 recursiveFunctionCall: simpleFunctionCall "(" functionArgs ")"
   57                      | recursiveFunctionCall "(" functionArgs ")"

   58 functionArgs: variable
   59             | functionCall
   60             | ":"
   61             | variableDeclaration
   62             | /* vide */
   63             | functionArgs "," variable
   64             | functionArgs "," functionCall
   65             | functionArgs "," ":"
   66             | functionArgs "," variableDeclaration
   67             | functionArgs ","

   68 functionDeclaration: "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"

   72 functionDeclarationReturns: idList

   73 functionDeclarationArguments: "(" idList ")"
   74                             | "(" ")"
   75                             | /* vide */

   76 idList: idList "," "identifier"
   77       | "identifier"

   78 functionDeclarationBreak: lineEnd
   79                         | ";"
   80                         | ";" "end of line"
   81                         | ","
   82                         | "," "end of line"

   83 functionBody: expressions
   84             | /* vide */

   85 classDeclaration: "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"

   87 slotsDeclaration: slotsDeclaration slotDeclaration functionDeclarationBreak
   88                 | slotsDeclaration functionDeclarationBreak
   89                 | /* vide */

   90 slotDeclaration: methodDeclaration
   91                | propertyDeclaration

   92 methodDeclaration: "function" slotAttributes "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   93                  | "function" slotAttributes "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   94                  | "function" slotAttributes "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   95                  | "function" slotAttributes "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"

   96 propertyDeclaration: "property" slotAttributes "identifier" "=" variable
   97                    | "property" slotAttributes "identifier"

   98 slotAttributes: "(" idList ")"
   99               | "(" ")"
  100               | /* vide */

  101 condition: functionCall
  102          | variable

  103 comparison: variable comparators comparable
  104           | functionCall comparators comparable
  105           | variable logicalComparators comparable
  106           | functionCall logicalComparators comparable

  107 logicalComparators: "&"
  108                   | "&&"
  109                   | "|"
  110                   | "||"

  111 comparable: variable
  112           | functionCall
  113           | ":"

  114 operation: variable rightOperand
  115          | functionCall rightOperand
  116          | "-" variable
  117          | "-" functionCall
  118          | "+" variable
  119          | "+" functionCall
  120          | variable "** or ^" variable
  121          | variable "** or ^" functionCall
  122          | functionCall "** or ^" variable
  123          | functionCall "** or ^" functionCall
  124          | variable ".^" variable
  125          | variable ".^" functionCall
  126          | functionCall ".^" variable
  127          | functionCall ".^" functionCall
  128          | variable "'"
  129          | variable ".'"
  130          | functionCall "'"
  131          | functionCall ".'"

  132 rightOperand: "+" variable
  133             | "+" functionCall
  134             | "-" variable
  135             | "-" functionCall
  136             | "*" variable
  137             | "*" functionCall
  138             | ".*" variable
  139             | ".*" functionCall
  140             | ".*." variable
  141             | ".*." functionCall
  142             | "/" variable
  143             | "/" functionCall
  144             | "./" variable
  145             | "./" functionCall
  146             | "./." variable
  147             | "./." functionCall
  148             | "/." variable
  149             | "/." functionCall
  150             | "\\" variable
  151             | "\\" functionCall
  152             | ".\\" variable
  153             | ".\\" functionCall
  154             | ".\\." variable
  155             | ".\\." functionCall

  156 listableBegin: ":" variable
  157              | ":" functionCall

  158 listableEnd: listableBegin ":" variable
  159            | listableBegin ":" functionCall
  160            | listableBegin

  161 variable: "~ or @" variable
  162         | variable "." "identifier"
  163         | functionCall "." variable
  164         | variable listableEnd
  165         | functionCall listableEnd
  166         | matrix
  167         | cell
  168         | operation
  169         | "identifier"
  170         | "integer"
  171         | "number"
  172         | "float"
  173         | "string"
  174         | "$"
  175         | "%t or %T"
  176         | "%f or %F"
  177         | "(" variable ")"
  178         | "(" variableFields ")"
  179         | comparison

  180 variableFields: variableFields "," variable
  181               | variableFields "," functionCall
  182               | variable "," variable
  183               | functionCall "," functionCall
  184               | functionCall "," variable
  185               | variable "," functionCall

  186 cell: "{" matrixOrCellLines "}"
  187     | "{" lineEnd matrixOrCellLines "}"
  188     | "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | "{" matrixOrCellColumns "}"
  191     | "{" lineEnd matrixOrCellColumns "}"
  192     | "{" "}"

  193 matrix: "[" matrixOrCellLines "]"
  194       | "[" lineEnd matrixOrCellLines "]"
  195       | "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | "[" matrixOrCellColumns "]"
  198       | "[" lineEnd matrixOrCellColumns "]"
  199       | "[" "]"

  200 matrixOrCellLines: matrixOrCellLines matrixOrCellLine
  201                  | matrixOrCellLine

  202 matrixOrCellLineBreak: ";"
  203                      | "end of line"
  204                      | ";" "end of line"

  205 matrixOrCellLine: matrixOrCellColumns matrixOrCellLineBreak
  206                 | matrixOrCellColumns "line comment" "end of line"
  207                 | matrixOrCellColumns ";" "line comment" "end of line"
  208                 | matrixOrCellColumns matrixOrCellColumnsBreak matrixOrCellLineBreak
  209                 | matrixOrCellColumns matrixOrCellColumnsBreak "line comment" "end of line"
  210                 | matrixOrCellColumns matrixOrCellColumnsBreak ";" "line comment" "end of line"

  211 matrixOrCellColumns: matrixOrCellColumns matrixOrCellColumnsBreak variable
  212                    | matrixOrCellColumns matrixOrCellColumnsBreak functionCall
  213                    | matrixOrCellColumns variable
  214                    | matrixOrCellColumns functionCall
  215                    | variable
  216                    | functionCall

  217 matrixOrCellColumnsBreak: matrixOrCellColumnsBreak ","
  218                         | ","

  219 variableDeclaration: assignable "=" variable
  220                    | assignable "=" functionCall
  221                    | functionCall "=" variable
  222                    | functionCall "=" functionCall
  223                    | assignable "=" ":"
  224                    | functionCall "=" ":"
  225                    | assignable "=" returnControl
  226                    | functionCall "=" returnControl

  227 assignable: variable "." "identifier"
  228           | variable "." functionCall
  229           | functionCall "." variable
  230           | functionCall "." functionCall
  231           | "identifier"
  232           | multipleResults

  233 multipleResults: "[" matrixOrCellColumns "]"

  234 ifControl: "if" condition then thenBody "end"
  235          | "if" condition then thenBody else elseBody "end"
  236          | "if" condition then thenBody elseIfControl "end"

  237 thenBody: expressions
  238         | /* vide */

  239 elseBody: expressions
  240         | /* vide */

  241 ifConditionBreak: ";"
  242                 | ";" "end of line"
  243                 | ","
  244                 | "," "end of line"
  245                 | "end of line"

  246 then: "then"
  247     | ifConditionBreak "then"
  248     | ifConditionBreak "then" "end of line"
  249     | "then" ifConditionBreak
  250     | ifConditionBreak
  251     | /* vide */

  252 else: "else"
  253     | "else" ","
  254     | "else" ";"
  255     | "else" "end of line"
  256     | "else" "," "end of line"
  257     | "else" ";" "end of line"

  258 elseIfControl: "elseif" condition then thenBody
  259              | "elseif" condition then thenBody else elseBody
  260              | "elseif" condition then thenBody elseIfControl

  261 selectControl: "select" selectable selectConditionBreak casesControl "end"
  262              | "select" selectable selectConditionBreak casesControl else elseBody "end"
  263              | "select" selectable "line comment" selectConditionBreak casesControl "end"
  264              | "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"

  265 selectable: variable
  266           | functionCall

  267 selectConditionBreak: "end of line"
  268                     | "," "end of line"
  269                     | ";" "end of line"

  270 casesControl: "case" variable caseControlBreak caseBody
  271             | comments "case" variable caseControlBreak caseBody
  272             | "case" variable "line comment" "end of line" caseBody
  273             | comments "case" variable "line comment" "end of line" caseBody
  274             | casesControl "case" variable caseControlBreak caseBody
  275             | casesControl "case" variable "line comment" "end of line" caseBody

  276 caseBody: expressions
  277         | /* vide */

  278 caseControlBreak: "then"
  279                 | ","
  280                 | ";"
  281                 | "end of line"
  282                 | "then" "end of line"
  283                 | "," "end of line"
  284                 | ";" "end of line"
  285                 | "then" ","
  286                 | "then" "," "end of line"

  287 forControl: "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  288           | "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"

  289 forIterator: functionCall
  290            | variable

  291 forConditionBreak: "end of line"
  292                  | ";"
  293                  | ";" "end of line"
  294                  | ","
  295                  | "," "end of line"
  296                  | "do"
  297                  | "do" "end of line"
  298                  | /* vide */

  299 forBody: expressions
  300        | /* vide */

  301 whileControl: "while" condition whileConditionBreak whileBody "end"

  302 whileBody: expressions
  303          | /* vide */

  304 whileConditionBreak: ","
  305                    | ";"
  306                    | "do"
  307                    | "do" ","
  308                    | "do" ";"
  309                    | "then"
  310                    | "then" ","
  311                    | "then" ";"
  312                    | lineEnd
  313                    | "," "end of line"
  314                    | ";" "end of line"
  315                    | "do" "end of line"
  316                    | "do" "," "end of line"
  317                    | "do" ";" "end of line"
  318                    | "then" "end of line"
  319                    | "then" "," "end of line"
  320                    | "then" ";" "end of line"

  321 tryControl: "try" "end of line" expressions "catch" "end of line" expressions "end"
  322           | "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  323           | "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  324           | "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"

  325 returnControl: "return"
  326              | "return" variable

  327 comparators: "=="
  328            | "<> or ~="
  329            | "<"
  330            | "<="
  331            | ">"
  332            | ">="

  333 comments: "line comment" "end of line"
  334         | comments "line comment" "end of line"

  335 lineEnd: "end of line"
  336        | "line comment" "end of line"


Terminaux, suivis des règles où ils apparaissent

"end of file" (0) 0
error (256) 32
"line break" (258)
"end of line" (259) 2 14 17 80 82 203 204 206 207 209 210 242 244 245
    248 255 256 257 267 268 269 272 273 275 281 282 283 284 286 291
    293 295 297 313 314 315 316 317 318 319 320 321 322 323 324 333
    334 335 336
"spaces" (260)
"%t or %T" (261) 41 53 175
"%f or %F" (262) 42 54 176
"'" (263) 128 130
"~ or @" (264) 52 161
"$" (265) 40 174
"," (266) 13 16 63 64 65 66 67 76 81 82 180 181 182 183 184 185 217
    218 243 244 253 256 268 279 283 285 286 294 295 304 307 310 313
    316 319
":" (267) 60 65 113 156 157 158 159 223 224
";" (268) 12 15 79 80 202 204 207 210 241 242 254 257 269 280 284 292
    293 305 308 311 314 317 320
"(" (269) 51 53 54 55 56 57 73 74 98 99 177 178 288
")" (270) 51 53 54 55 56 57 73 74 98 99 177 178 288
"[" (271) 69 70 93 94 193 194 195 196 197 198 199 233
"]" (272) 69 70 93 94 193 194 195 196 197 198 199 233
"{" (273) 186 187 188 189 190 191 192
"}" (274) 186 187 188 189 190 191 192
"." (275) 43 44 162 163 227 228 229 230
".'" (276) 129 131
"+" (277) 118 119 132 133
"-" (278) 116 117 134 135
"*" (279) 136 137
".*" (280) 138 139
".*." (281) 140 141
"/" (282) 142 143
"./" (283) 144 145
"/." (284) 148 149
"./." (285) 146 147
"\\" (286) 150 151
".\\" (287) 152 153
".\\." (288) 154 155
"** or ^" (289) 120 121 122 123
".^" (290) 124 125 126 127
"==" (291) 327
"<> or ~=" (292) 328
"<" (293) 85 329
"<=" (294) 330
">" (295) 331
">=" (296) 332
"&" (297) 107
"&&" (298) 108
"|" (299) 109
"||" (300) 110
"=" (301) 68 69 70 92 93 94 96 219 220 221 222 223 224 225 226 287
    288
"if" (302) 234 235 236
"then" (303) 246 247 248 249 278 282 285 286 309 310 311 318 319 320
"else" (304) 252 253 254 255 256 257
"elseif" (305) 258 259 260
"end" (306) 234 235 236 261 262 263 264 287 288 301 321 322 323 324
"select" (307) 261 262 263 264
"case" (308) 270 271 272 273 274 275
"function" (309) 68 69 70 71 92 93 94 95
"endfunction" (310) 68 69 70 71 92 93 94 95
"class" (311) 85 86
"endclass" (312) 85 86
"property" (313) 96 97
"for" (314) 287 288
"while" (315) 301
"do" (316) 296 297 306 307 308 315 316 317
"break" (317) 29
"try" (318) 321 322 323 324
"catch" (319) 321 322 323 324
"return" (320) 325 326
"string" (321) 39 173
"identifier" (322) 34 35 43 68 69 70 71 76 77 85 86 92 93 94 95 96
    97 162 169 227 231 287 288
"integer" (323) 36 170
"float" (324) 38 172
"number" (325) 37 171
"path" (326) 47
"line comment" (327) 5 7 9 10 31 206 207 209 210 263 264 272 273 275
    322 323 324 333 334 336
"block comment" (328)
TOPLEVEL (329)
HIGHLEVEL (330)
UPLEVEL (331)
LISTABLE (332)
FUNCTIONCALL (333)


Non-terminaux, suivis des règles où ils apparaissent

$accept (79)
    à gauche: 0
program (80)
    à gauche: 1 2, à droite: 0
expressions (81)
    à gauche: 3 4 5 6 7, à droite: 1 2 83 237 239 276 299 302 321
    322 323 324
recursiveExpression (82)
    à gauche: 8 9 10 11, à droite: 3 4 5 8 9
expressionLineBreak (83)
    à gauche: 12 13 14 15 16 17, à droite: 8 9 10 11 15 16 17
expression (84)
    à gauche: 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32, à droite:
    4 5 6 7 8 9 10 11
implicitFunctionCall (85)
    à gauche: 33 34, à droite: 28 33
implicitCallable (86)
    à gauche: 35 36 37 38 39 40 41 42 43 44 45 46 47, à droite: 33
    34 43 44 46
functionCall (87)
    à gauche: 48 49 50 51 52, à droite: 20 44 51 52 59 64 101 104
    106 112 115 117 119 121 122 123 125 126 127 130 131 133 135 137
    139 141 143 145 147 149 151 153 155 157 159 163 165 181 183 184
    185 212 214 216 220 221 222 224 226 228 229 230 266 289
specificFunctionCall (88)
    à gauche: 53 54, à droite: 49
simpleFunctionCall (89)
    à gauche: 55, à droite: 45 48 56
recursiveFunctionCall (90)
    à gauche: 56 57, à droite: 50 57
functionArgs (91)
    à gauche: 58 59 60 61 62 63 64 65 66 67, à droite: 53 54 55 56
    57 63 64 65 66 67
functionDeclaration (92)
    à gauche: 68 69 70 71, à droite: 18
functionDeclarationReturns (93)
    à gauche: 72, à droite: 69 93
functionDeclarationArguments (94)
    à gauche: 73 74 75, à droite: 68 69 70 71 92 93 94 95
idList (95)
    à gauche: 76 77, à droite: 72 73 76 98
functionDeclarationBreak (96)
    à gauche: 78 79 80 81 82, à droite: 68 69 70 71 85 86 87 88 92
    93 94 95
functionBody (97)
    à gauche: 83 84, à droite: 68 69 70 71 92 93 94 95
classDeclaration (98)
    à gauche: 85 86, à droite: 19
slotsDeclaration (99)
    à gauche: 87 88 89, à droite: 85 86 87 88
slotDeclaration (100)
    à gauche: 90 91, à droite: 87
methodDeclaration (101)
    à gauche: 92 93 94 95, à droite: 90
propertyDeclaration (102)
    à gauche: 96 97, à droite: 91
slotAttributes (103)
    à gauche: 98 99 100, à droite: 92 93 94 95 96 97
condition (104)
    à gauche: 101 102, à droite: 234 235 236 258 259 260 301
comparison (105)
    à gauche: 103 104 105 106, à droite: 179
logicalComparators (106)
    à gauche: 107 108 109 110, à droite: 105 106
comparable (107)
    à gauche: 111 112 113, à droite: 103 104 105 106
operation (108)
    à gauche: 114 115 116 117 118 119 120 121 122 123 124 125 126
    127 128 129 130 131, à droite: 168
rightOperand (109)
    à gauche: 132 133 134 135 136 137 138 139 140 141 142 143 144
    145 146 147 148 149 150 151 152 153 154 155, à droite: 46 114
    115
listableBegin (110)
    à gauche: 156 157, à droite: 158 159 160
listableEnd (111)
    à gauche: 158 159 160, à droite: 164 165
variable (112)
    à gauche: 161 162 163 164 165 166 167 168 169 170 171 172 173
    174 175 176 177 178 179, à droite: 27 55 58 63 96 102 103 105
    111 114 116 118 120 121 122 124 125 126 128 129 132 134 136 138
    140 142 144 146 148 150 152 154 156 158 161 162 163 164 177 180
    182 184 185 211 213 215 219 221 227 228 229 265 270 271 272 273
    274 275 290 326
variableFields (113)
    à gauche: 180 181 182 183 184 185, à droite: 178 180 181
cell (114)
    à gauche: 186 187 188 189 190 191 192, à droite: 167
matrix (115)
    à gauche: 193 194 195 196 197 198 199, à droite: 166
matrixOrCellLines (116)
    à gauche: 200 201, à droite: 186 187 188 189 193 194 195 196
    200
matrixOrCellLineBreak (117)
    à gauche: 202 203 204, à droite: 205 208
matrixOrCellLine (118)
    à gauche: 205 206 207 208 209 210, à droite: 200 201
matrixOrCellColumns (119)
    à gauche: 211 212 213 214 215 216, à droite: 188 189 190 191
    195 196 197 198 205 206 207 208 209 210 211 212 213 214 233
matrixOrCellColumnsBreak (120)
    à gauche: 217 218, à droite: 208 209 210 211 212 217
variableDeclaration (121)
    à gauche: 219 220 221 222 223 224 225 226, à droite: 21 61 66
assignable (122)
    à gauche: 227 228 229 230 231 232, à droite: 219 220 223 225
multipleResults (123)
    à gauche: 233, à droite: 232
ifControl (124)
    à gauche: 234 235 236, à droite: 22
thenBody (125)
    à gauche: 237 238, à droite: 234 235 236 258 259 260
elseBody (126)
    à gauche: 239 240, à droite: 235 259 262 264
ifConditionBreak (127)
    à gauche: 241 242 243 244 245, à droite: 247 248 249 250
then (128)
    à gauche: 246 247 248 249 250 251, à droite: 234 235 236 258
    259 260
else (129)
    à gauche: 252 253 254 255 256 257, à droite: 235 259 262 264
elseIfControl (130)
    à gauche: 258 259 260, à droite: 236 260
selectControl (131)
    à gauche: 261 262 263 264, à droite: 23
selectable (132)
    à gauche: 265 266, à droite: 261 262 263 264
selectConditionBreak (133)
    à gauche: 267 268 269, à droite: 261 262 263 264
casesControl (134)
    à gauche: 270 271 272 273 274 275, à droite: 261 262 263 264
    274 275
caseBody (135)
    à gauche: 276 277, à droite: 270 271 272 273 274 275
caseControlBreak (136)
    à gauche: 278 279 280 281 282 283 284 285 286, à droite: 270
    271 274
forControl (137)
    à gauche: 287 288, à droite: 24
forIterator (138)
    à gauche: 289 290, à droite: 287 288
forConditionBreak (139)
    à gauche: 291 292 293 294 295 296 297 298, à droite: 287 288
forBody (140)
    à gauche: 299 300, à droite: 287 288
whileControl (141)
    à gauche: 301, à droite: 25
whileBody (142)
    à gauche: 302 303, à droite: 301
whileConditionBreak (143)
    à gauche: 304 305 306 307 308 309 310 311 312 313 314 315 316
    317 318 319 320, à droite: 301
tryControl (144)
    à gauche: 321 322 323 324, à droite: 26
returnControl (145)
    à gauche: 325 326, à droite: 30 225 226
comparators (146)
    à gauche: 327 328 329 330 331 332, à droite: 103 104
comments (147)
    à gauche: 333 334, à droite: 271 273 334
lineEnd (148)
    à gauche: 335 336, à droite: 78 187 189 191 194 196 198 312


état 0

    0 $accept: . program "end of file"
    1 program: . expressions
    2        | . "end of line" expressions
    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"
  219 variableDeclaration: . assignable "=" variable
  220                    | . assignable "=" functionCall
  221                    | . functionCall "=" variable
  222                    | . functionCall "=" functionCall
  223                    | . assignable "=" ":"
  224                    | . functionCall "=" ":"
  225                    | . assignable "=" returnControl
  226                    | . functionCall "=" returnControl
  227 assignable: . variable "." "identifier"
  228           | . variable "." functionCall
  229           | . functionCall "." variable
  230           | . functionCall "." functionCall
  231           | . "identifier"
  232           | . multipleResults
  233 multipleResults: . "[" matrixOrCellColumns "]"
  234 ifControl: . "if" condition then thenBody "end"
  235          | . "if" condition then thenBody else elseBody "end"
  236          | . "if" condition then thenBody elseIfControl "end"
  261 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  262              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  263              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  264              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  287 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  288           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  301 whileControl: . "while" condition whileConditionBreak whileBody "end"
  321 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  322           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  323           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  324           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  325 returnControl: . "return"
  326              | . "return" variable

    error           décalage et aller à l'état 1
    "end of line"   décalage et aller à l'état 2
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    program                aller à l'état 27
    expressions            aller à l'état 28
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 1

   32 expression: error .

    $défaut  réduction par utilisation de la règle 32 (expression)


état 2

    2 program: "end of line" . expressions
    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"
  219 variableDeclaration: . assignable "=" variable
  220                    | . assignable "=" functionCall
  221                    | . functionCall "=" variable
  222                    | . functionCall "=" functionCall
  223                    | . assignable "=" ":"
  224                    | . functionCall "=" ":"
  225                    | . assignable "=" returnControl
  226                    | . functionCall "=" returnControl
  227 assignable: . variable "." "identifier"
  228           | . variable "." functionCall
  229           | . functionCall "." variable
  230           | . functionCall "." functionCall
  231           | . "identifier"
  232           | . multipleResults
  233 multipleResults: . "[" matrixOrCellColumns "]"
  234 ifControl: . "if" condition then thenBody "end"
  235          | . "if" condition then thenBody else elseBody "end"
  236          | . "if" condition then thenBody elseIfControl "end"
  261 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  262              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  263              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  264              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  287 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  288           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  301 whileControl: . "while" condition whileConditionBreak whileBody "end"
  321 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  322           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  323           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  324           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  325 returnControl: . "return"
  326              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    expressions            aller à l'état 52
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 3

   53 specificFunctionCall: "%t or %T" . "(" functionArgs ")"
  175 variable: "%t or %T" .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "'", "~ or @", "$", ",", ":", ";", ")", "[", "]", "{", "}", ".", ".'", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]

    "("  décalage et aller à l'état 53

    $défaut  réduction par utilisation de la règle 175 (variable)

Conflit entre la règle 175 et le jeton "(" résolu par décalage (BOOLTRUE < "(").


état 4

   54 specificFunctionCall: "%f or %F" . "(" functionArgs ")"
  176 variable: "%f or %F" .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "'", "~ or @", "$", ",", ":", ";", ")", "[", "]", "{", "}", ".", ".'", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]

    "("  décalage et aller à l'état 54

    $défaut  réduction par utilisation de la règle 176 (variable)

Conflit entre la règle 176 et le jeton "(" résolu par décalage (BOOLFALSE < "(").


état 5

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   52             | "~ or @" . functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  161         | "~ or @" . variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 57
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 58
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 6

  174 variable: "$" .

    $défaut  réduction par utilisation de la règle 174 (variable)


état 7

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   51             | "(" . functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  177         | "(" . variable ")"
  178         | . "(" variableFields ")"
  178         | "(" . variableFields ")"
  179         | . comparison
  180 variableFields: . variableFields "," variable
  181               | . variableFields "," functionCall
  182               | . variable "," variable
  183               | . functionCall "," functionCall
  184               | . functionCall "," variable
  185               | . variable "," functionCall
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 59
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 60
    variableFields         aller à l'état 61
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 8

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  193       | "[" . matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  194       | "[" . lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  195       | "[" . matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  196       | "[" . lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  197       | "[" . matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  198       | "[" . lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"
  199       | "[" . "]"
  200 matrixOrCellLines: . matrixOrCellLines matrixOrCellLine
  201                  | . matrixOrCellLine
  205 matrixOrCellLine: . matrixOrCellColumns matrixOrCellLineBreak
  206                 | . matrixOrCellColumns "line comment" "end of line"
  207                 | . matrixOrCellColumns ";" "line comment" "end of line"
  208                 | . matrixOrCellColumns matrixOrCellColumnsBreak matrixOrCellLineBreak
  209                 | . matrixOrCellColumns matrixOrCellColumnsBreak "line comment" "end of line"
  210                 | . matrixOrCellColumns matrixOrCellColumnsBreak ";" "line comment" "end of line"
  211 matrixOrCellColumns: . matrixOrCellColumns matrixOrCellColumnsBreak variable
  212                    | . matrixOrCellColumns matrixOrCellColumnsBreak functionCall
  213                    | . matrixOrCellColumns variable
  214                    | . matrixOrCellColumns functionCall
  215                    | . variable
  216                    | . functionCall
  233 multipleResults: "[" . matrixOrCellColumns "]"
  335 lineEnd: . "end of line"
  336        | . "line comment" "end of line"

    "end of line"   décalage et aller à l'état 62
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 55
    "]"             décalage et aller à l'état 63
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 56
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 64

    functionCall           aller à l'état 65
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 66
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    matrixOrCellLines      aller à l'état 67
    matrixOrCellLine       aller à l'état 68
    matrixOrCellColumns    aller à l'état 69
    lineEnd                aller à l'état 70


état 9

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  186     | "{" . matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  187     | "{" . lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  188     | "{" . matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  189     | "{" . lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  190     | "{" . matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  191     | "{" . lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  192     | "{" . "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"
  200 matrixOrCellLines: . matrixOrCellLines matrixOrCellLine
  201                  | . matrixOrCellLine
  205 matrixOrCellLine: . matrixOrCellColumns matrixOrCellLineBreak
  206                 | . matrixOrCellColumns "line comment" "end of line"
  207                 | . matrixOrCellColumns ";" "line comment" "end of line"
  208                 | . matrixOrCellColumns matrixOrCellColumnsBreak matrixOrCellLineBreak
  209                 | . matrixOrCellColumns matrixOrCellColumnsBreak "line comment" "end of line"
  210                 | . matrixOrCellColumns matrixOrCellColumnsBreak ";" "line comment" "end of line"
  211 matrixOrCellColumns: . matrixOrCellColumns matrixOrCellColumnsBreak variable
  212                    | . matrixOrCellColumns matrixOrCellColumnsBreak functionCall
  213                    | . matrixOrCellColumns variable
  214                    | . matrixOrCellColumns functionCall
  215                    | . variable
  216                    | . functionCall
  335 lineEnd: . "end of line"
  336        | . "line comment" "end of line"

    "end of line"   décalage et aller à l'état 62
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 55
    "{"             décalage et aller à l'état 9
    "}"             décalage et aller à l'état 71
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 56
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 64

    functionCall           aller à l'état 65
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 66
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    matrixOrCellLines      aller à l'état 72
    matrixOrCellLine       aller à l'état 68
    matrixOrCellColumns    aller à l'état 73
    lineEnd                aller à l'état 74


état 10

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  118          | "+" . variable
  119          | . "+" functionCall
  119          | "+" . functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 75
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 76
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 11

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  116          | "-" . variable
  117          | . "-" functionCall
  117          | "-" . functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 77
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 78
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 12

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  101 condition: . functionCall
  102          | . variable
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"
  234 ifControl: "if" . condition then thenBody "end"
  235          | "if" . condition then thenBody else elseBody "end"
  236          | "if" . condition then thenBody elseIfControl "end"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 79
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    condition              aller à l'état 80
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 81
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 13

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"
  261 selectControl: "select" . selectable selectConditionBreak casesControl "end"
  262              | "select" . selectable selectConditionBreak casesControl else elseBody "end"
  263              | "select" . selectable "line comment" selectConditionBreak casesControl "end"
  264              | "select" . selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  265 selectable: . variable
  266           | . functionCall

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 82
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 83
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    selectable             aller à l'état 84


état 14

   68 functionDeclaration: "function" . "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | "function" . "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | "function" . "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | "function" . "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"

    "["           décalage et aller à l'état 85
    "identifier"  décalage et aller à l'état 86


état 15

   85 classDeclaration: "class" . "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | "class" . "identifier" functionDeclarationBreak slotsDeclaration "endclass"

    "identifier"  décalage et aller à l'état 87


état 16

  287 forControl: "for" . "identifier" "=" forIterator forConditionBreak forBody "end"
  288           | "for" . "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"

    "("           décalage et aller à l'état 88
    "identifier"  décalage et aller à l'état 89


état 17

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  101 condition: . functionCall
  102          | . variable
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"
  301 whileControl: "while" . condition whileConditionBreak whileBody "end"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 79
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    condition              aller à l'état 90
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 81
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 18

   29 expression: "break" .

    $défaut  réduction par utilisation de la règle 29 (expression)


état 19

  321 tryControl: "try" . "end of line" expressions "catch" "end of line" expressions "end"
  322           | "try" . "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  323           | "try" . "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  324           | "try" . "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"

    "end of line"   décalage et aller à l'état 91
    "line comment"  décalage et aller à l'état 92


état 20

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"
  325 returnControl: "return" .  ["end of file", "end of line", ",", ";", ")", "else", "elseif", "end", "case", "endfunction", "catch", "line comment"]
  326              | "return" . variable

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    $défaut  réduction par utilisation de la règle 325 (returnControl)

    functionCall           aller à l'état 93
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 94
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 21

  173 variable: "string" .

    $défaut  réduction par utilisation de la règle 173 (variable)


état 22

   34 implicitFunctionCall: "identifier" . implicitCallable
   35 implicitCallable: . "identifier"
   36                 | . "integer"
   37                 | . "number"
   38                 | . "float"
   39                 | . "string"
   40                 | . "$"
   41                 | . "%t or %T"
   42                 | . "%f or %F"
   43                 | . implicitCallable "." "identifier"
   44                 | . implicitCallable "." functionCall
   45                 | . simpleFunctionCall
   46                 | . implicitCallable rightOperand
   47                 | . "path"
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  169         | "identifier" .  ["end of file", "end of line", "'", ",", ":", ";", "(", ".", ".'", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "else", "elseif", "end", "case", "endfunction", "catch", "line comment"]
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"
  231 assignable: "identifier" .  ["="]

    "%t or %T"    décalage et aller à l'état 95
    "%f or %F"    décalage et aller à l'état 96
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 97
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "string"      décalage et aller à l'état 98
    "identifier"  décalage et aller à l'état 99
    "integer"     décalage et aller à l'état 100
    "float"       décalage et aller à l'état 101
    "number"      décalage et aller à l'état 102
    "path"        décalage et aller à l'état 103

    "="       réduction par utilisation de la règle 231 (assignable)
    $défaut  réduction par utilisation de la règle 169 (variable)

    implicitCallable       aller à l'état 104
    functionCall           aller à l'état 93
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 105
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 106
    cell                   aller à l'état 41
    matrix                 aller à l'état 42

Conflit entre la règle 169 et le jeton "(" résolu par réduction ("(" < DOT).
Conflit entre la règle 169 et le jeton "+" résolu par réduction ("+" < DOT).
Conflit entre la règle 169 et le jeton "-" résolu par réduction ("-" < DOT).


état 23

  170 variable: "integer" .

    $défaut  réduction par utilisation de la règle 170 (variable)


état 24

  172 variable: "float" .

    $défaut  réduction par utilisation de la règle 172 (variable)


état 25

  171 variable: "number" .

    $défaut  réduction par utilisation de la règle 171 (variable)


état 26

   31 expression: "line comment" .

    $défaut  réduction par utilisation de la règle 31 (expression)


état 27

    0 $accept: program . "end of file"

    "end of file"  décalage et aller à l'état 107


état 28

    1 program: expressions .

    $défaut  réduction par utilisation de la règle 1 (program)


état 29

    3 expressions: recursiveExpression .  ["end of file", "else", "elseif", "end", "case", "endfunction", "catch"]
    4            | recursiveExpression . expression
    5            | recursiveExpression . expression "line comment"
    8 recursiveExpression: recursiveExpression . expression expressionLineBreak
    9                    | recursiveExpression . expression "line comment" expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"
  219 variableDeclaration: . assignable "=" variable
  220                    | . assignable "=" functionCall
  221                    | . functionCall "=" variable
  222                    | . functionCall "=" functionCall
  223                    | . assignable "=" ":"
  224                    | . functionCall "=" ":"
  225                    | . assignable "=" returnControl
  226                    | . functionCall "=" returnControl
  227 assignable: . variable "." "identifier"
  228           | . variable "." functionCall
  229           | . functionCall "." variable
  230           | . functionCall "." functionCall
  231           | . "identifier"
  232           | . multipleResults
  233 multipleResults: . "[" matrixOrCellColumns "]"
  234 ifControl: . "if" condition then thenBody "end"
  235          | . "if" condition then thenBody else elseBody "end"
  236          | . "if" condition then thenBody elseIfControl "end"
  261 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  262              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  263              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  264              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  287 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  288           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  301 whileControl: . "while" condition whileConditionBreak whileBody "end"
  321 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  322           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  323           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  324           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  325 returnControl: . "return"
  326              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "end of file"  réduction par utilisation de la règle 3 (expressions)
    "else"         réduction par utilisation de la règle 3 (expressions)
    "elseif"       réduction par utilisation de la règle 3 (expressions)
    "end"          réduction par utilisation de la règle 3 (expressions)
    "case"         réduction par utilisation de la règle 3 (expressions)
    "endfunction"  réduction par utilisation de la règle 3 (expressions)
    "catch"        réduction par utilisation de la règle 3 (expressions)

    expression             aller à l'état 108
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 30

    6 expressions: expression .  ["end of file", "else", "elseif", "end", "case", "endfunction", "catch"]
    7            | expression . "line comment"
   10 recursiveExpression: expression . "line comment" expressionLineBreak
   11                    | expression . expressionLineBreak
   12 expressionLineBreak: . ";"
   13                    | . ","
   14                    | . "end of line"
   15                    | . expressionLineBreak ";"
   16                    | . expressionLineBreak ","
   17                    | . expressionLineBreak "end of line"

    "end of line"   décalage et aller à l'état 109
    ","             décalage et aller à l'état 110
    ";"             décalage et aller à l'état 111
    "line comment"  décalage et aller à l'état 112

    $défaut  réduction par utilisation de la règle 6 (expressions)

    expressionLineBreak  aller à l'état 113


état 31

   28 expression: implicitFunctionCall .  ["end of file", "end of line", ",", ";", "else", "elseif", "end", "case", "endfunction", "catch", "line comment"]
   33 implicitFunctionCall: implicitFunctionCall . implicitCallable
   35 implicitCallable: . "identifier"
   36                 | . "integer"
   37                 | . "number"
   38                 | . "float"
   39                 | . "string"
   40                 | . "$"
   41                 | . "%t or %T"
   42                 | . "%f or %F"
   43                 | . implicitCallable "." "identifier"
   44                 | . implicitCallable "." functionCall
   45                 | . simpleFunctionCall
   46                 | . implicitCallable rightOperand
   47                 | . "path"
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 95
    "%f or %F"    décalage et aller à l'état 96
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 97
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 98
    "identifier"  décalage et aller à l'état 99
    "integer"     décalage et aller à l'état 100
    "float"       décalage et aller à l'état 101
    "number"      décalage et aller à l'état 102
    "path"        décalage et aller à l'état 103

    $défaut  réduction par utilisation de la règle 28 (expression)

    implicitCallable       aller à l'état 114
    functionCall           aller à l'état 93
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 105
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 106
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 32

   20 expression: functionCall .  ["end of file", "end of line", ",", ";", "else", "elseif", "end", "case", "endfunction", "catch", "line comment"]
  104 comparison: functionCall . comparators comparable
  106           | functionCall . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  115 operation: functionCall . rightOperand
  122          | functionCall . "** or ^" variable
  123          | functionCall . "** or ^" functionCall
  126          | functionCall . ".^" variable
  127          | functionCall . ".^" functionCall
  130          | functionCall . "'"
  131          | functionCall . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  163 variable: functionCall . "." variable
  165         | functionCall . listableEnd
  221 variableDeclaration: functionCall . "=" variable
  222                    | functionCall . "=" functionCall
  224                    | functionCall . "=" ":"
  226                    | functionCall . "=" returnControl
  229 assignable: functionCall . "." variable
  230           | functionCall . "." functionCall
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"         décalage et aller à l'état 115
    ":"         décalage et aller à l'état 116
    "."         décalage et aller à l'état 117
    ".'"        décalage et aller à l'état 118
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 131
    ".^"        décalage et aller à l'état 132
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "&&"        décalage et aller à l'état 140
    "|"         décalage et aller à l'état 141
    "||"        décalage et aller à l'état 142
    "="         décalage et aller à l'état 143

    $défaut  réduction par utilisation de la règle 20 (expression)

    logicalComparators  aller à l'état 144
    rightOperand        aller à l'état 145
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 147
    comparators         aller à l'état 148


état 33

   49 functionCall: specificFunctionCall .

    $défaut  réduction par utilisation de la règle 49 (functionCall)


état 34

   48 functionCall: simpleFunctionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "'", "~ or @", "$", ",", ":", ";", ")", "[", "]", "{", "}", ".", ".'", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
   56 recursiveFunctionCall: simpleFunctionCall . "(" functionArgs ")"

    "("  décalage et aller à l'état 149

    $défaut  réduction par utilisation de la règle 48 (functionCall)

Conflit entre la règle 48 et le jeton "(" résolu par décalage (FUNCTIONCALL < "(").


état 35

   50 functionCall: recursiveFunctionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "'", "~ or @", "$", ",", ":", ";", ")", "[", "]", "{", "}", ".", ".'", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
   57 recursiveFunctionCall: recursiveFunctionCall . "(" functionArgs ")"

    "("  décalage et aller à l'état 150

    $défaut  réduction par utilisation de la règle 50 (functionCall)

Conflit entre la règle 50 et le jeton "(" résolu par décalage (FUNCTIONCALL < "(").


état 36

   18 expression: functionDeclaration .

    $défaut  réduction par utilisation de la règle 18 (expression)


état 37

   19 expression: classDeclaration .

    $défaut  réduction par utilisation de la règle 19 (expression)


état 38

  179 variable: comparison .

    $défaut  réduction par utilisation de la règle 179 (variable)


état 39

  168 variable: operation .

    $défaut  réduction par utilisation de la règle 168 (variable)


état 40

   27 expression: variable .  ["end of file", "end of line", ",", ";", "else", "elseif", "end", "case", "endfunction", "catch", "line comment"]
   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  105           | variable . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  114 operation: variable . rightOperand
  120          | variable . "** or ^" variable
  121          | variable . "** or ^" functionCall
  124          | variable . ".^" variable
  125          | variable . ".^" functionCall
  128          | variable . "'"
  129          | variable . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  162 variable: variable . "." "identifier"
  164         | variable . listableEnd
  227 assignable: variable . "." "identifier"
  228           | variable . "." functionCall
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"         décalage et aller à l'état 151
    ":"         décalage et aller à l'état 116
    "("         décalage et aller à l'état 152
    "."         décalage et aller à l'état 153
    ".'"        décalage et aller à l'état 154
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 155
    ".^"        décalage et aller à l'état 156
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "&&"        décalage et aller à l'état 140
    "|"         décalage et aller à l'état 141
    "||"        décalage et aller à l'état 142

    $défaut  réduction par utilisation de la règle 27 (expression)

    logicalComparators  aller à l'état 157
    rightOperand        aller à l'état 158
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 159
    comparators         aller à l'état 160


état 41

  167 variable: cell .

    $défaut  réduction par utilisation de la règle 167 (variable)


état 42

  166 variable: matrix .

    $défaut  réduction par utilisation de la règle 166 (variable)


état 43

   21 expression: variableDeclaration .

    $défaut  réduction par utilisation de la règle 21 (expression)


état 44

  219 variableDeclaration: assignable . "=" variable
  220                    | assignable . "=" functionCall
  223                    | assignable . "=" ":"
  225                    | assignable . "=" returnControl

    "="  décalage et aller à l'état 161


état 45

  232 assignable: multipleResults .

    $défaut  réduction par utilisation de la règle 232 (assignable)


état 46

   22 expression: ifControl .

    $défaut  réduction par utilisation de la règle 22 (expression)


état 47

   23 expression: selectControl .

    $défaut  réduction par utilisation de la règle 23 (expression)


état 48

   24 expression: forControl .

    $défaut  réduction par utilisation de la règle 24 (expression)


état 49

   25 expression: whileControl .

    $défaut  réduction par utilisation de la règle 25 (expression)


état 50

   26 expression: tryControl .

    $défaut  réduction par utilisation de la règle 26 (expression)


état 51

   30 expression: returnControl .

    $défaut  réduction par utilisation de la règle 30 (expression)


état 52

    2 program: "end of line" expressions .

    $défaut  réduction par utilisation de la règle 2 (program)


état 53

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   53                     | "%t or %T" "(" . functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   58 functionArgs: . variable
   59             | . functionCall
   60             | . ":"
   61             | . variableDeclaration
   62             | .  [",", ")"]
   63             | . functionArgs "," variable
   64             | . functionArgs "," functionCall
   65             | . functionArgs "," ":"
   66             | . functionArgs "," variableDeclaration
   67             | . functionArgs ","
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"
  219 variableDeclaration: . assignable "=" variable
  220                    | . assignable "=" functionCall
  221                    | . functionCall "=" variable
  222                    | . functionCall "=" functionCall
  223                    | . assignable "=" ":"
  224                    | . functionCall "=" ":"
  225                    | . assignable "=" returnControl
  226                    | . functionCall "=" returnControl
  227 assignable: . variable "." "identifier"
  228           | . variable "." functionCall
  229           | . functionCall "." variable
  230           | . functionCall "." functionCall
  231           | . "identifier"
  232           | . multipleResults
  233 multipleResults: . "[" matrixOrCellColumns "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    ":"           décalage et aller à l'état 162
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 8
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 163
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    $défaut  réduction par utilisation de la règle 62 (functionArgs)

    functionCall           aller à l'état 164
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionArgs           aller à l'état 165
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 166
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 167
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45


état 54

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   54                     | "%f or %F" "(" . functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   58 functionArgs: . variable
   59             | . functionCall
   60             | . ":"
   61             | . variableDeclaration
   62             | .  [",", ")"]
   63             | . functionArgs "," variable
   64             | . functionArgs "," functionCall
   65             | . functionArgs "," ":"
   66             | . functionArgs "," variableDeclaration
   67             | . functionArgs ","
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"
  219 variableDeclaration: . assignable "=" variable
  220                    | . assignable "=" functionCall
  221                    | . functionCall "=" variable
  222                    | . functionCall "=" functionCall
  223                    | . assignable "=" ":"
  224                    | . functionCall "=" ":"
  225                    | . assignable "=" returnControl
  226                    | . functionCall "=" returnControl
  227 assignable: . variable "." "identifier"
  228           | . variable "." functionCall
  229           | . functionCall "." variable
  230           | . functionCall "." functionCall
  231           | . "identifier"
  232           | . multipleResults
  233 multipleResults: . "[" matrixOrCellColumns "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    ":"           décalage et aller à l'état 162
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 8
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 163
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    $défaut  réduction par utilisation de la règle 62 (functionArgs)

    functionCall           aller à l'état 164
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionArgs           aller à l'état 168
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 166
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 167
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45


état 55

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  193       | "[" . matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  194       | "[" . lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  195       | "[" . matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  196       | "[" . lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  197       | "[" . matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  198       | "[" . lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"
  199       | "[" . "]"
  200 matrixOrCellLines: . matrixOrCellLines matrixOrCellLine
  201                  | . matrixOrCellLine
  205 matrixOrCellLine: . matrixOrCellColumns matrixOrCellLineBreak
  206                 | . matrixOrCellColumns "line comment" "end of line"
  207                 | . matrixOrCellColumns ";" "line comment" "end of line"
  208                 | . matrixOrCellColumns matrixOrCellColumnsBreak matrixOrCellLineBreak
  209                 | . matrixOrCellColumns matrixOrCellColumnsBreak "line comment" "end of line"
  210                 | . matrixOrCellColumns matrixOrCellColumnsBreak ";" "line comment" "end of line"
  211 matrixOrCellColumns: . matrixOrCellColumns matrixOrCellColumnsBreak variable
  212                    | . matrixOrCellColumns matrixOrCellColumnsBreak functionCall
  213                    | . matrixOrCellColumns variable
  214                    | . matrixOrCellColumns functionCall
  215                    | . variable
  216                    | . functionCall
  335 lineEnd: . "end of line"
  336        | . "line comment" "end of line"

    "end of line"   décalage et aller à l'état 62
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 55
    "]"             décalage et aller à l'état 63
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 56
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 64

    functionCall           aller à l'état 65
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 66
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    matrixOrCellLines      aller à l'état 67
    matrixOrCellLine       aller à l'état 68
    matrixOrCellColumns    aller à l'état 169
    lineEnd                aller à l'état 70


état 56

  169 variable: "identifier" .

    $défaut  réduction par utilisation de la règle 169 (variable)


état 57

   52 functionCall: "~ or @" functionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "'", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", ".", ".'", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  104 comparison: functionCall . comparators comparable
  106           | functionCall . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  115 operation: functionCall . rightOperand
  122          | functionCall . "** or ^" variable
  123          | functionCall . "** or ^" functionCall
  126          | functionCall . ".^" variable
  127          | functionCall . ".^" functionCall
  130          | functionCall . "'"
  131          | functionCall . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  163 variable: functionCall . "." variable
  165         | functionCall . listableEnd
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    $défaut  réduction par utilisation de la règle 52 (functionCall)

    logicalComparators  aller à l'état 144
    rightOperand        aller à l'état 145
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 147
    comparators         aller à l'état 148

Conflit entre la règle 52 et le jeton "'" résolu par réduction ("'" < NOT).
Conflit entre la règle 52 et le jeton ":" résolu par réduction (":" < NOT).
Conflit entre la règle 52 et le jeton "." résolu par réduction ("." < NOT).
Conflit entre la règle 52 et le jeton ".'" résolu par réduction (".'" < NOT).
Conflit entre la règle 52 et le jeton "+" résolu par réduction ("+" < NOT).
Conflit entre la règle 52 et le jeton "-" résolu par réduction ("-" < NOT).
Conflit entre la règle 52 et le jeton "*" résolu par réduction ("*" < NOT).
Conflit entre la règle 52 et le jeton ".*" résolu par réduction (".*" < NOT).
Conflit entre la règle 52 et le jeton ".*." résolu par réduction (".*." < NOT).
Conflit entre la règle 52 et le jeton "/" résolu par réduction ("/" < NOT).
Conflit entre la règle 52 et le jeton "./" résolu par réduction ("./" < NOT).
Conflit entre la règle 52 et le jeton "/." résolu par réduction ("/." < NOT).
Conflit entre la règle 52 et le jeton "./." résolu par réduction ("./." < NOT).
Conflit entre la règle 52 et le jeton "\\" résolu par réduction ("\\" < NOT).
Conflit entre la règle 52 et le jeton ".\\" résolu par réduction (".\\" < NOT).
Conflit entre la règle 52 et le jeton ".\\." résolu par réduction (".\\." < NOT).
Conflit entre la règle 52 et le jeton "** or ^" résolu par réduction ("** or ^" < NOT).
Conflit entre la règle 52 et le jeton ".^" résolu par réduction (".^" < NOT).
Conflit entre la règle 52 et le jeton "==" résolu par réduction ("==" < NOT).
Conflit entre la règle 52 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < NOT).
Conflit entre la règle 52 et le jeton "<" résolu par réduction ("<" < NOT).
Conflit entre la règle 52 et le jeton "<=" résolu par réduction ("<=" < NOT).
Conflit entre la règle 52 et le jeton ">" résolu par réduction (">" < NOT).
Conflit entre la règle 52 et le jeton ">=" résolu par réduction (">=" < NOT).
Conflit entre la règle 52 et le jeton "&" résolu par réduction ("&" < NOT).
Conflit entre la règle 52 et le jeton "&&" résolu par réduction ("&&" < NOT).
Conflit entre la règle 52 et le jeton "|" résolu par réduction ("|" < NOT).
Conflit entre la règle 52 et le jeton "||" résolu par réduction ("||" < NOT).


état 58

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  105           | variable . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  114 operation: variable . rightOperand
  120          | variable . "** or ^" variable
  121          | variable . "** or ^" functionCall
  124          | variable . ".^" variable
  125          | variable . ".^" functionCall
  128          | variable . "'"
  129          | variable . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  161 variable: "~ or @" variable .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "'", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", ".", ".'", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  162         | variable . "." "identifier"
  164         | variable . listableEnd
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    $défaut  réduction par utilisation de la règle 161 (variable)

    logicalComparators  aller à l'état 157
    rightOperand        aller à l'état 158
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 159
    comparators         aller à l'état 160

Conflit entre la règle 161 et le jeton "'" résolu par réduction ("'" < NOT).
Conflit entre la règle 161 et le jeton ":" résolu par réduction (":" < NOT).
Conflit entre la règle 161 et le jeton "(" résolu par réduction ("(" < NOT).
Conflit entre la règle 161 et le jeton "." résolu par réduction ("." < NOT).
Conflit entre la règle 161 et le jeton ".'" résolu par réduction (".'" < NOT).
Conflit entre la règle 161 et le jeton "+" résolu par réduction ("+" < NOT).
Conflit entre la règle 161 et le jeton "-" résolu par réduction ("-" < NOT).
Conflit entre la règle 161 et le jeton "*" résolu par réduction ("*" < NOT).
Conflit entre la règle 161 et le jeton ".*" résolu par réduction (".*" < NOT).
Conflit entre la règle 161 et le jeton ".*." résolu par réduction (".*." < NOT).
Conflit entre la règle 161 et le jeton "/" résolu par réduction ("/" < NOT).
Conflit entre la règle 161 et le jeton "./" résolu par réduction ("./" < NOT).
Conflit entre la règle 161 et le jeton "/." résolu par réduction ("/." < NOT).
Conflit entre la règle 161 et le jeton "./." résolu par réduction ("./." < NOT).
Conflit entre la règle 161 et le jeton "\\" résolu par réduction ("\\" < NOT).
Conflit entre la règle 161 et le jeton ".\\" résolu par réduction (".\\" < NOT).
Conflit entre la règle 161 et le jeton ".\\." résolu par réduction (".\\." < NOT).
Conflit entre la règle 161 et le jeton "** or ^" résolu par réduction ("** or ^" < NOT).
Conflit entre la règle 161 et le jeton ".^" résolu par réduction (".^" < NOT).
Conflit entre la règle 161 et le jeton "==" résolu par réduction ("==" < NOT).
Conflit entre la règle 161 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < NOT).
Conflit entre la règle 161 et le jeton "<" résolu par réduction ("<" < NOT).
Conflit entre la règle 161 et le jeton "<=" résolu par réduction ("<=" < NOT).
Conflit entre la règle 161 et le jeton ">" résolu par réduction (">" < NOT).
Conflit entre la règle 161 et le jeton ">=" résolu par réduction (">=" < NOT).
Conflit entre la règle 161 et le jeton "&" résolu par réduction ("&" < NOT).
Conflit entre la règle 161 et le jeton "&&" résolu par réduction ("&&" < NOT).
Conflit entre la règle 161 et le jeton "|" résolu par réduction ("|" < NOT).
Conflit entre la règle 161 et le jeton "||" résolu par réduction ("||" < NOT).


état 59

   51 functionCall: "(" functionCall . ")"
  104 comparison: functionCall . comparators comparable
  106           | functionCall . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  115 operation: functionCall . rightOperand
  122          | functionCall . "** or ^" variable
  123          | functionCall . "** or ^" functionCall
  126          | functionCall . ".^" variable
  127          | functionCall . ".^" functionCall
  130          | functionCall . "'"
  131          | functionCall . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  163 variable: functionCall . "." variable
  165         | functionCall . listableEnd
  183 variableFields: functionCall . "," functionCall
  184               | functionCall . "," variable
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"         décalage et aller à l'état 115
    ","         décalage et aller à l'état 172
    ":"         décalage et aller à l'état 116
    ")"         décalage et aller à l'état 173
    "."         décalage et aller à l'état 170
    ".'"        décalage et aller à l'état 118
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 131
    ".^"        décalage et aller à l'état 132
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "&&"        décalage et aller à l'état 140
    "|"         décalage et aller à l'état 141
    "||"        décalage et aller à l'état 142

    logicalComparators  aller à l'état 144
    rightOperand        aller à l'état 145
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 147
    comparators         aller à l'état 148


état 60

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  105           | variable . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  114 operation: variable . rightOperand
  120          | variable . "** or ^" variable
  121          | variable . "** or ^" functionCall
  124          | variable . ".^" variable
  125          | variable . ".^" functionCall
  128          | variable . "'"
  129          | variable . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  162 variable: variable . "." "identifier"
  164         | variable . listableEnd
  177         | "(" variable . ")"
  182 variableFields: variable . "," variable
  185               | variable . "," functionCall
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"         décalage et aller à l'état 151
    ","         décalage et aller à l'état 174
    ":"         décalage et aller à l'état 116
    "("         décalage et aller à l'état 152
    ")"         décalage et aller à l'état 175
    "."         décalage et aller à l'état 171
    ".'"        décalage et aller à l'état 154
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 155
    ".^"        décalage et aller à l'état 156
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "&&"        décalage et aller à l'état 140
    "|"         décalage et aller à l'état 141
    "||"        décalage et aller à l'état 142

    logicalComparators  aller à l'état 157
    rightOperand        aller à l'état 158
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 159
    comparators         aller à l'état 160


état 61

  178 variable: "(" variableFields . ")"
  180 variableFields: variableFields . "," variable
  181               | variableFields . "," functionCall

    ","  décalage et aller à l'état 176
    ")"  décalage et aller à l'état 177


état 62

  335 lineEnd: "end of line" .

    $défaut  réduction par utilisation de la règle 335 (lineEnd)


état 63

  199 matrix: "[" "]" .

    $défaut  réduction par utilisation de la règle 199 (matrix)


état 64

  336 lineEnd: "line comment" . "end of line"

    "end of line"  décalage et aller à l'état 178


état 65

  104 comparison: functionCall . comparators comparable
  106           | functionCall . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  115 operation: functionCall . rightOperand
  122          | functionCall . "** or ^" variable
  123          | functionCall . "** or ^" functionCall
  126          | functionCall . ".^" variable
  127          | functionCall . ".^" functionCall
  130          | functionCall . "'"
  131          | functionCall . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  163 variable: functionCall . "." variable
  165         | functionCall . listableEnd
  216 matrixOrCellColumns: functionCall .  ["end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "(", "[", "]", "{", "}", "string", "identifier", "integer", "float", "number", "line comment"]
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"         décalage et aller à l'état 115
    ":"         décalage et aller à l'état 116
    "."         décalage et aller à l'état 170
    ".'"        décalage et aller à l'état 118
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 131
    ".^"        décalage et aller à l'état 132
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "&&"        décalage et aller à l'état 140
    "|"         décalage et aller à l'état 141
    "||"        décalage et aller à l'état 142

    $défaut  réduction par utilisation de la règle 216 (matrixOrCellColumns)

    logicalComparators  aller à l'état 144
    rightOperand        aller à l'état 145
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 147
    comparators         aller à l'état 148

Conflit entre la règle 216 et le jeton "+" résolu par décalage (HIGHLEVEL < "+").
Conflit entre la règle 216 et le jeton "-" résolu par décalage (HIGHLEVEL < "-").


état 66

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  105           | variable . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  114 operation: variable . rightOperand
  120          | variable . "** or ^" variable
  121          | variable . "** or ^" functionCall
  124          | variable . ".^" variable
  125          | variable . ".^" functionCall
  128          | variable . "'"
  129          | variable . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  162 variable: variable . "." "identifier"
  164         | variable . listableEnd
  215 matrixOrCellColumns: variable .  ["end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "[", "]", "{", "}", "string", "identifier", "integer", "float", "number", "line comment"]
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"         décalage et aller à l'état 151
    ":"         décalage et aller à l'état 116
    "("         décalage et aller à l'état 152
    "."         décalage et aller à l'état 171
    ".'"        décalage et aller à l'état 154
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 155
    ".^"        décalage et aller à l'état 156
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "&&"        décalage et aller à l'état 140
    "|"         décalage et aller à l'état 141
    "||"        décalage et aller à l'état 142

    $défaut  réduction par utilisation de la règle 215 (matrixOrCellColumns)

    logicalComparators  aller à l'état 157
    rightOperand        aller à l'état 158
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 159
    comparators         aller à l'état 160

Conflit entre la règle 215 et le jeton "(" résolu par décalage (HIGHLEVEL < "(").
Conflit entre la règle 215 et le jeton "+" résolu par décalage (HIGHLEVEL < "+").
Conflit entre la règle 215 et le jeton "-" résolu par décalage (HIGHLEVEL < "-").


état 67

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  193       | "[" matrixOrCellLines . "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  195       | "[" matrixOrCellLines . matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"
  200 matrixOrCellLines: matrixOrCellLines . matrixOrCellLine
  205 matrixOrCellLine: . matrixOrCellColumns matrixOrCellLineBreak
  206                 | . matrixOrCellColumns "line comment" "end of line"
  207                 | . matrixOrCellColumns ";" "line comment" "end of line"
  208                 | . matrixOrCellColumns matrixOrCellColumnsBreak matrixOrCellLineBreak
  209                 | . matrixOrCellColumns matrixOrCellColumnsBreak "line comment" "end of line"
  210                 | . matrixOrCellColumns matrixOrCellColumnsBreak ";" "line comment" "end of line"
  211 matrixOrCellColumns: . matrixOrCellColumns matrixOrCellColumnsBreak variable
  212                    | . matrixOrCellColumns matrixOrCellColumnsBreak functionCall
  213                    | . matrixOrCellColumns variable
  214                    | . matrixOrCellColumns functionCall
  215                    | . variable
  216                    | . functionCall

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "]"           décalage et aller à l'état 179
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 65
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 66
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    matrixOrCellLine       aller à l'état 180
    matrixOrCellColumns    aller à l'état 181


état 68

  201 matrixOrCellLines: matrixOrCellLine .

    $défaut  réduction par utilisation de la règle 201 (matrixOrCellLines)


état 69

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  197       | "[" matrixOrCellColumns . "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"
  202 matrixOrCellLineBreak: . ";"
  203                      | . "end of line"
  204                      | . ";" "end of line"
  205 matrixOrCellLine: matrixOrCellColumns . matrixOrCellLineBreak
  206                 | matrixOrCellColumns . "line comment" "end of line"
  207                 | matrixOrCellColumns . ";" "line comment" "end of line"
  208                 | matrixOrCellColumns . matrixOrCellColumnsBreak matrixOrCellLineBreak
  209                 | matrixOrCellColumns . matrixOrCellColumnsBreak "line comment" "end of line"
  210                 | matrixOrCellColumns . matrixOrCellColumnsBreak ";" "line comment" "end of line"
  211 matrixOrCellColumns: matrixOrCellColumns . matrixOrCellColumnsBreak variable
  212                    | matrixOrCellColumns . matrixOrCellColumnsBreak functionCall
  213                    | matrixOrCellColumns . variable
  214                    | matrixOrCellColumns . functionCall
  217 matrixOrCellColumnsBreak: . matrixOrCellColumnsBreak ","
  218                         | . ","
  233 multipleResults: "[" matrixOrCellColumns . "]"

    "end of line"   décalage et aller à l'état 182
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    ","             décalage et aller à l'état 183
    ";"             décalage et aller à l'état 184
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 55
    "]"             décalage et aller à l'état 185
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 56
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 186

    functionCall              aller à l'état 187
    specificFunctionCall      aller à l'état 33
    simpleFunctionCall        aller à l'état 34
    recursiveFunctionCall     aller à l'état 35
    comparison                aller à l'état 38
    operation                 aller à l'état 39
    variable                  aller à l'état 188
    cell                      aller à l'état 41
    matrix                    aller à l'état 42
    matrixOrCellLineBreak     aller à l'état 189
    matrixOrCellColumnsBreak  aller à l'état 190


état 70

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  194       | "[" lineEnd . matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  196       | "[" lineEnd . matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  198       | "[" lineEnd . matrixOrCellColumns "]"
  199       | . "[" "]"
  200 matrixOrCellLines: . matrixOrCellLines matrixOrCellLine
  201                  | . matrixOrCellLine
  205 matrixOrCellLine: . matrixOrCellColumns matrixOrCellLineBreak
  206                 | . matrixOrCellColumns "line comment" "end of line"
  207                 | . matrixOrCellColumns ";" "line comment" "end of line"
  208                 | . matrixOrCellColumns matrixOrCellColumnsBreak matrixOrCellLineBreak
  209                 | . matrixOrCellColumns matrixOrCellColumnsBreak "line comment" "end of line"
  210                 | . matrixOrCellColumns matrixOrCellColumnsBreak ";" "line comment" "end of line"
  211 matrixOrCellColumns: . matrixOrCellColumns matrixOrCellColumnsBreak variable
  212                    | . matrixOrCellColumns matrixOrCellColumnsBreak functionCall
  213                    | . matrixOrCellColumns variable
  214                    | . matrixOrCellColumns functionCall
  215                    | . variable
  216                    | . functionCall

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 65
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 66
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    matrixOrCellLines      aller à l'état 191
    matrixOrCellLine       aller à l'état 68
    matrixOrCellColumns    aller à l'état 192


état 71

  192 cell: "{" "}" .

    $défaut  réduction par utilisation de la règle 192 (cell)


état 72

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  186     | "{" matrixOrCellLines . "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  188     | "{" matrixOrCellLines . matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"
  200 matrixOrCellLines: matrixOrCellLines . matrixOrCellLine
  205 matrixOrCellLine: . matrixOrCellColumns matrixOrCellLineBreak
  206                 | . matrixOrCellColumns "line comment" "end of line"
  207                 | . matrixOrCellColumns ";" "line comment" "end of line"
  208                 | . matrixOrCellColumns matrixOrCellColumnsBreak matrixOrCellLineBreak
  209                 | . matrixOrCellColumns matrixOrCellColumnsBreak "line comment" "end of line"
  210                 | . matrixOrCellColumns matrixOrCellColumnsBreak ";" "line comment" "end of line"
  211 matrixOrCellColumns: . matrixOrCellColumns matrixOrCellColumnsBreak variable
  212                    | . matrixOrCellColumns matrixOrCellColumnsBreak functionCall
  213                    | . matrixOrCellColumns variable
  214                    | . matrixOrCellColumns functionCall
  215                    | . variable
  216                    | . functionCall

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "}"           décalage et aller à l'état 193
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 65
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 66
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    matrixOrCellLine       aller à l'état 180
    matrixOrCellColumns    aller à l'état 194


état 73

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  190     | "{" matrixOrCellColumns . "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"
  202 matrixOrCellLineBreak: . ";"
  203                      | . "end of line"
  204                      | . ";" "end of line"
  205 matrixOrCellLine: matrixOrCellColumns . matrixOrCellLineBreak
  206                 | matrixOrCellColumns . "line comment" "end of line"
  207                 | matrixOrCellColumns . ";" "line comment" "end of line"
  208                 | matrixOrCellColumns . matrixOrCellColumnsBreak matrixOrCellLineBreak
  209                 | matrixOrCellColumns . matrixOrCellColumnsBreak "line comment" "end of line"
  210                 | matrixOrCellColumns . matrixOrCellColumnsBreak ";" "line comment" "end of line"
  211 matrixOrCellColumns: matrixOrCellColumns . matrixOrCellColumnsBreak variable
  212                    | matrixOrCellColumns . matrixOrCellColumnsBreak functionCall
  213                    | matrixOrCellColumns . variable
  214                    | matrixOrCellColumns . functionCall
  217 matrixOrCellColumnsBreak: . matrixOrCellColumnsBreak ","
  218                         | . ","

    "end of line"   décalage et aller à l'état 182
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    ","             décalage et aller à l'état 183
    ";"             décalage et aller à l'état 184
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 55
    "{"             décalage et aller à l'état 9
    "}"             décalage et aller à l'état 195
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 56
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 186

    functionCall              aller à l'état 187
    specificFunctionCall      aller à l'état 33
    simpleFunctionCall        aller à l'état 34
    recursiveFunctionCall     aller à l'état 35
    comparison                aller à l'état 38
    operation                 aller à l'état 39
    variable                  aller à l'état 188
    cell                      aller à l'état 41
    matrix                    aller à l'état 42
    matrixOrCellLineBreak     aller à l'état 189
    matrixOrCellColumnsBreak  aller à l'état 190


état 74

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  187     | "{" lineEnd . matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  189     | "{" lineEnd . matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  191     | "{" lineEnd . matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"
  200 matrixOrCellLines: . matrixOrCellLines matrixOrCellLine
  201                  | . matrixOrCellLine
  205 matrixOrCellLine: . matrixOrCellColumns matrixOrCellLineBreak
  206                 | . matrixOrCellColumns "line comment" "end of line"
  207                 | . matrixOrCellColumns ";" "line comment" "end of line"
  208                 | . matrixOrCellColumns matrixOrCellColumnsBreak matrixOrCellLineBreak
  209                 | . matrixOrCellColumns matrixOrCellColumnsBreak "line comment" "end of line"
  210                 | . matrixOrCellColumns matrixOrCellColumnsBreak ";" "line comment" "end of line"
  211 matrixOrCellColumns: . matrixOrCellColumns matrixOrCellColumnsBreak variable
  212                    | . matrixOrCellColumns matrixOrCellColumnsBreak functionCall
  213                    | . matrixOrCellColumns variable
  214                    | . matrixOrCellColumns functionCall
  215                    | . variable
  216                    | . functionCall

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 65
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 66
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    matrixOrCellLines      aller à l'état 196
    matrixOrCellLine       aller à l'état 68
    matrixOrCellColumns    aller à l'état 197


état 75

  104 comparison: functionCall . comparators comparable
  106           | functionCall . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  115 operation: functionCall . rightOperand
  119          | "+" functionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  122          | functionCall . "** or ^" variable
  123          | functionCall . "** or ^" functionCall
  126          | functionCall . ".^" variable
  127          | functionCall . ".^" functionCall
  130          | functionCall . "'"
  131          | functionCall . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  163 variable: functionCall . "." variable
  165         | functionCall . listableEnd
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"        décalage et aller à l'état 115
    "."        décalage et aller à l'état 170
    ".'"       décalage et aller à l'état 118
    "*"        décalage et aller à l'état 121
    ".*"       décalage et aller à l'état 122
    ".*."      décalage et aller à l'état 123
    "/"        décalage et aller à l'état 124
    "./"       décalage et aller à l'état 125
    "/."       décalage et aller à l'état 126
    "./."      décalage et aller à l'état 127
    "\\"       décalage et aller à l'état 128
    ".\\"      décalage et aller à l'état 129
    ".\\."     décalage et aller à l'état 130
    "** or ^"  décalage et aller à l'état 131
    ".^"       décalage et aller à l'état 132

    $défaut  réduction par utilisation de la règle 119 (operation)

    logicalComparators  aller à l'état 144
    rightOperand        aller à l'état 145
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 147
    comparators         aller à l'état 148

Conflit entre la règle 119 et le jeton "'" résolu par décalage (PLUS < "'").
Conflit entre la règle 119 et le jeton ":" résolu par réduction (":" < PLUS).
Conflit entre la règle 119 et le jeton "." résolu par décalage (PLUS < ".").
Conflit entre la règle 119 et le jeton ".'" résolu par décalage (PLUS < ".'").
Conflit entre la règle 119 et le jeton "+" résolu par réduction (%left "+").
Conflit entre la règle 119 et le jeton "-" résolu par réduction (%left "-").
Conflit entre la règle 119 et le jeton "*" résolu par décalage (PLUS < "*").
Conflit entre la règle 119 et le jeton ".*" résolu par décalage (PLUS < ".*").
Conflit entre la règle 119 et le jeton ".*." résolu par décalage (PLUS < ".*.").
Conflit entre la règle 119 et le jeton "/" résolu par décalage (PLUS < "/").
Conflit entre la règle 119 et le jeton "./" résolu par décalage (PLUS < "./").
Conflit entre la règle 119 et le jeton "/." résolu par décalage (PLUS < "/.").
Conflit entre la règle 119 et le jeton "./." résolu par décalage (PLUS < "./.").
Conflit entre la règle 119 et le jeton "\\" résolu par décalage (PLUS < "\\").
Conflit entre la règle 119 et le jeton ".\\" résolu par décalage (PLUS < ".\\").
Conflit entre la règle 119 et le jeton ".\\." résolu par décalage (PLUS < ".\\.").
Conflit entre la règle 119 et le jeton "** or ^" résolu par décalage (PLUS < "** or ^").
Conflit entre la règle 119 et le jeton ".^" résolu par décalage (PLUS < ".^").
Conflit entre la règle 119 et le jeton "==" résolu par réduction ("==" < PLUS).
Conflit entre la règle 119 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < PLUS).
Conflit entre la règle 119 et le jeton "<" résolu par réduction ("<" < PLUS).
Conflit entre la règle 119 et le jeton "<=" résolu par réduction ("<=" < PLUS).
Conflit entre la règle 119 et le jeton ">" résolu par réduction (">" < PLUS).
Conflit entre la règle 119 et le jeton ">=" résolu par réduction (">=" < PLUS).
Conflit entre la règle 119 et le jeton "&" résolu par réduction ("&" < PLUS).
Conflit entre la règle 119 et le jeton "&&" résolu par réduction ("&&" < PLUS).
Conflit entre la règle 119 et le jeton "|" résolu par réduction ("|" < PLUS).
Conflit entre la règle 119 et le jeton "||" résolu par réduction ("||" < PLUS).


état 76

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  105           | variable . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  114 operation: variable . rightOperand
  118          | "+" variable .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  120          | variable . "** or ^" variable
  121          | variable . "** or ^" functionCall
  124          | variable . ".^" variable
  125          | variable . ".^" functionCall
  128          | variable . "'"
  129          | variable . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  162 variable: variable . "." "identifier"
  164         | variable . listableEnd
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"        décalage et aller à l'état 151
    "."        décalage et aller à l'état 171
    ".'"       décalage et aller à l'état 154
    "*"        décalage et aller à l'état 121
    ".*"       décalage et aller à l'état 122
    ".*."      décalage et aller à l'état 123
    "/"        décalage et aller à l'état 124
    "./"       décalage et aller à l'état 125
    "/."       décalage et aller à l'état 126
    "./."      décalage et aller à l'état 127
    "\\"       décalage et aller à l'état 128
    ".\\"      décalage et aller à l'état 129
    ".\\."     décalage et aller à l'état 130
    "** or ^"  décalage et aller à l'état 155
    ".^"       décalage et aller à l'état 156

    $défaut  réduction par utilisation de la règle 118 (operation)

    logicalComparators  aller à l'état 157
    rightOperand        aller à l'état 158
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 159
    comparators         aller à l'état 160

Conflit entre la règle 118 et le jeton "'" résolu par décalage (PLUS < "'").
Conflit entre la règle 118 et le jeton ":" résolu par réduction (":" < PLUS).
Conflit entre la règle 118 et le jeton "(" résolu par réduction ("(" < PLUS).
Conflit entre la règle 118 et le jeton "." résolu par décalage (PLUS < ".").
Conflit entre la règle 118 et le jeton ".'" résolu par décalage (PLUS < ".'").
Conflit entre la règle 118 et le jeton "+" résolu par réduction (%left "+").
Conflit entre la règle 118 et le jeton "-" résolu par réduction (%left "-").
Conflit entre la règle 118 et le jeton "*" résolu par décalage (PLUS < "*").
Conflit entre la règle 118 et le jeton ".*" résolu par décalage (PLUS < ".*").
Conflit entre la règle 118 et le jeton ".*." résolu par décalage (PLUS < ".*.").
Conflit entre la règle 118 et le jeton "/" résolu par décalage (PLUS < "/").
Conflit entre la règle 118 et le jeton "./" résolu par décalage (PLUS < "./").
Conflit entre la règle 118 et le jeton "/." résolu par décalage (PLUS < "/.").
Conflit entre la règle 118 et le jeton "./." résolu par décalage (PLUS < "./.").
Conflit entre la règle 118 et le jeton "\\" résolu par décalage (PLUS < "\\").
Conflit entre la règle 118 et le jeton ".\\" résolu par décalage (PLUS < ".\\").
Conflit entre la règle 118 et le jeton ".\\." résolu par décalage (PLUS < ".\\.").
Conflit entre la règle 118 et le jeton "** or ^" résolu par décalage (PLUS < "** or ^").
Conflit entre la règle 118 et le jeton ".^" résolu par décalage (PLUS < ".^").
Conflit entre la règle 118 et le jeton "==" résolu par réduction ("==" < PLUS).
Conflit entre la règle 118 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < PLUS).
Conflit entre la règle 118 et le jeton "<" résolu par réduction ("<" < PLUS).
Conflit entre la règle 118 et le jeton "<=" résolu par réduction ("<=" < PLUS).
Conflit entre la règle 118 et le jeton ">" résolu par réduction (">" < PLUS).
Conflit entre la règle 118 et le jeton ">=" résolu par réduction (">=" < PLUS).
Conflit entre la règle 118 et le jeton "&" résolu par réduction ("&" < PLUS).
Conflit entre la règle 118 et le jeton "&&" résolu par réduction ("&&" < PLUS).
Conflit entre la règle 118 et le jeton "|" résolu par réduction ("|" < PLUS).
Conflit entre la règle 118 et le jeton "||" résolu par réduction ("||" < PLUS).


état 77

  104 comparison: functionCall . comparators comparable
  106           | functionCall . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  115 operation: functionCall . rightOperand
  117          | "-" functionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  122          | functionCall . "** or ^" variable
  123          | functionCall . "** or ^" functionCall
  126          | functionCall . ".^" variable
  127          | functionCall . ".^" functionCall
  130          | functionCall . "'"
  131          | functionCall . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  163 variable: functionCall . "." variable
  165         | functionCall . listableEnd
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"        décalage et aller à l'état 115
    "."        décalage et aller à l'état 170
    ".'"       décalage et aller à l'état 118
    "*"        décalage et aller à l'état 121
    ".*"       décalage et aller à l'état 122
    ".*."      décalage et aller à l'état 123
    "/"        décalage et aller à l'état 124
    "./"       décalage et aller à l'état 125
    "/."       décalage et aller à l'état 126
    "./."      décalage et aller à l'état 127
    "\\"       décalage et aller à l'état 128
    ".\\"      décalage et aller à l'état 129
    ".\\."     décalage et aller à l'état 130
    "** or ^"  décalage et aller à l'état 131
    ".^"       décalage et aller à l'état 132

    $défaut  réduction par utilisation de la règle 117 (operation)

    logicalComparators  aller à l'état 144
    rightOperand        aller à l'état 145
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 147
    comparators         aller à l'état 148

Conflit entre la règle 117 et le jeton "'" résolu par décalage (MINUS < "'").
Conflit entre la règle 117 et le jeton ":" résolu par réduction (":" < MINUS).
Conflit entre la règle 117 et le jeton "." résolu par décalage (MINUS < ".").
Conflit entre la règle 117 et le jeton ".'" résolu par décalage (MINUS < ".'").
Conflit entre la règle 117 et le jeton "+" résolu par réduction (%left "+").
Conflit entre la règle 117 et le jeton "-" résolu par réduction (%left "-").
Conflit entre la règle 117 et le jeton "*" résolu par décalage (MINUS < "*").
Conflit entre la règle 117 et le jeton ".*" résolu par décalage (MINUS < ".*").
Conflit entre la règle 117 et le jeton ".*." résolu par décalage (MINUS < ".*.").
Conflit entre la règle 117 et le jeton "/" résolu par décalage (MINUS < "/").
Conflit entre la règle 117 et le jeton "./" résolu par décalage (MINUS < "./").
Conflit entre la règle 117 et le jeton "/." résolu par décalage (MINUS < "/.").
Conflit entre la règle 117 et le jeton "./." résolu par décalage (MINUS < "./.").
Conflit entre la règle 117 et le jeton "\\" résolu par décalage (MINUS < "\\").
Conflit entre la règle 117 et le jeton ".\\" résolu par décalage (MINUS < ".\\").
Conflit entre la règle 117 et le jeton ".\\." résolu par décalage (MINUS < ".\\.").
Conflit entre la règle 117 et le jeton "** or ^" résolu par décalage (MINUS < "** or ^").
Conflit entre la règle 117 et le jeton ".^" résolu par décalage (MINUS < ".^").
Conflit entre la règle 117 et le jeton "==" résolu par réduction ("==" < MINUS).
Conflit entre la règle 117 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < MINUS).
Conflit entre la règle 117 et le jeton "<" résolu par réduction ("<" < MINUS).
Conflit entre la règle 117 et le jeton "<=" résolu par réduction ("<=" < MINUS).
Conflit entre la règle 117 et le jeton ">" résolu par réduction (">" < MINUS).
Conflit entre la règle 117 et le jeton ">=" résolu par réduction (">=" < MINUS).
Conflit entre la règle 117 et le jeton "&" résolu par réduction ("&" < MINUS).
Conflit entre la règle 117 et le jeton "&&" résolu par réduction ("&&" < MINUS).
Conflit entre la règle 117 et le jeton "|" résolu par réduction ("|" < MINUS).
Conflit entre la règle 117 et le jeton "||" résolu par réduction ("||" < MINUS).


état 78

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  105           | variable . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  114 operation: variable . rightOperand
  116          | "-" variable .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  120          | variable . "** or ^" variable
  121          | variable . "** or ^" functionCall
  124          | variable . ".^" variable
  125          | variable . ".^" functionCall
  128          | variable . "'"
  129          | variable . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  162 variable: variable . "." "identifier"
  164         | variable . listableEnd
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"        décalage et aller à l'état 151
    "."        décalage et aller à l'état 171
    ".'"       décalage et aller à l'état 154
    "*"        décalage et aller à l'état 121
    ".*"       décalage et aller à l'état 122
    ".*."      décalage et aller à l'état 123
    "/"        décalage et aller à l'état 124
    "./"       décalage et aller à l'état 125
    "/."       décalage et aller à l'état 126
    "./."      décalage et aller à l'état 127
    "\\"       décalage et aller à l'état 128
    ".\\"      décalage et aller à l'état 129
    ".\\."     décalage et aller à l'état 130
    "** or ^"  décalage et aller à l'état 155
    ".^"       décalage et aller à l'état 156

    $défaut  réduction par utilisation de la règle 116 (operation)

    logicalComparators  aller à l'état 157
    rightOperand        aller à l'état 158
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 159
    comparators         aller à l'état 160

Conflit entre la règle 116 et le jeton "'" résolu par décalage (MINUS < "'").
Conflit entre la règle 116 et le jeton ":" résolu par réduction (":" < MINUS).
Conflit entre la règle 116 et le jeton "(" résolu par réduction ("(" < MINUS).
Conflit entre la règle 116 et le jeton "." résolu par décalage (MINUS < ".").
Conflit entre la règle 116 et le jeton ".'" résolu par décalage (MINUS < ".'").
Conflit entre la règle 116 et le jeton "+" résolu par réduction (%left "+").
Conflit entre la règle 116 et le jeton "-" résolu par réduction (%left "-").
Conflit entre la règle 116 et le jeton "*" résolu par décalage (MINUS < "*").
Conflit entre la règle 116 et le jeton ".*" résolu par décalage (MINUS < ".*").
Conflit entre la règle 116 et le jeton ".*." résolu par décalage (MINUS < ".*.").
Conflit entre la règle 116 et le jeton "/" résolu par décalage (MINUS < "/").
Conflit entre la règle 116 et le jeton "./" résolu par décalage (MINUS < "./").
Conflit entre la règle 116 et le jeton "/." résolu par décalage (MINUS < "/.").
Conflit entre la règle 116 et le jeton "./." résolu par décalage (MINUS < "./.").
Conflit entre la règle 116 et le jeton "\\" résolu par décalage (MINUS < "\\").
Conflit entre la règle 116 et le jeton ".\\" résolu par décalage (MINUS < ".\\").
Conflit entre la règle 116 et le jeton ".\\." résolu par décalage (MINUS < ".\\.").
Conflit entre la règle 116 et le jeton "** or ^" résolu par décalage (MINUS < "** or ^").
Conflit entre la règle 116 et le jeton ".^" résolu par décalage (MINUS < ".^").
Conflit entre la règle 116 et le jeton "==" résolu par réduction ("==" < MINUS).
Conflit entre la règle 116 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < MINUS).
Conflit entre la règle 116 et le jeton "<" résolu par réduction ("<" < MINUS).
Conflit entre la règle 116 et le jeton "<=" résolu par réduction ("<=" < MINUS).
Conflit entre la règle 116 et le jeton ">" résolu par réduction (">" < MINUS).
Conflit entre la règle 116 et le jeton ">=" résolu par réduction (">=" < MINUS).
Conflit entre la règle 116 et le jeton "&" résolu par réduction ("&" < MINUS).
Conflit entre la règle 116 et le jeton "&&" résolu par réduction ("&&" < MINUS).
Conflit entre la règle 116 et le jeton "|" résolu par réduction ("|" < MINUS).
Conflit entre la règle 116 et le jeton "||" résolu par réduction ("||" < MINUS).


état 79

  101 condition: functionCall .  [error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "(", "[", "{", "if", "then", "else", "elseif", "end", "select", "function", "class", "for", "while", "do", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  104 comparison: functionCall . comparators comparable
  106           | functionCall . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  115 operation: functionCall . rightOperand
  122          | functionCall . "** or ^" variable
  123          | functionCall . "** or ^" functionCall
  126          | functionCall . ".^" variable
  127          | functionCall . ".^" functionCall
  130          | functionCall . "'"
  131          | functionCall . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  163 variable: functionCall . "." variable
  165         | functionCall . listableEnd
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"         décalage et aller à l'état 115
    ":"         décalage et aller à l'état 116
    "."         décalage et aller à l'état 170
    ".'"        décalage et aller à l'état 118
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 131
    ".^"        décalage et aller à l'état 132
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "&&"        décalage et aller à l'état 140
    "|"         décalage et aller à l'état 141
    "||"        décalage et aller à l'état 142

    $défaut  réduction par utilisation de la règle 101 (condition)

    logicalComparators  aller à l'état 144
    rightOperand        aller à l'état 145
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 147
    comparators         aller à l'état 148

Conflit entre la règle 101 et le jeton "+" résolu par décalage (HIGHLEVEL < "+").
Conflit entre la règle 101 et le jeton "-" résolu par décalage (HIGHLEVEL < "-").


état 80

  234 ifControl: "if" condition . then thenBody "end"
  235          | "if" condition . then thenBody else elseBody "end"
  236          | "if" condition . then thenBody elseIfControl "end"
  241 ifConditionBreak: . ";"
  242                 | . ";" "end of line"
  243                 | . ","
  244                 | . "," "end of line"
  245                 | . "end of line"
  246 then: . "then"
  247     | . ifConditionBreak "then"
  248     | . ifConditionBreak "then" "end of line"
  249     | . "then" ifConditionBreak
  250     | . ifConditionBreak
  251     | .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "else", "elseif", "end", "select", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]

    "end of line"  décalage et aller à l'état 198
    ","            décalage et aller à l'état 199
    ";"            décalage et aller à l'état 200
    "then"         décalage et aller à l'état 201

    $défaut  réduction par utilisation de la règle 251 (then)

    ifConditionBreak  aller à l'état 202
    then              aller à l'état 203


état 81

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  102 condition: variable .  [error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "[", "{", "if", "then", "else", "elseif", "end", "select", "function", "class", "for", "while", "do", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  103 comparison: variable . comparators comparable
  105           | variable . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  114 operation: variable . rightOperand
  120          | variable . "** or ^" variable
  121          | variable . "** or ^" functionCall
  124          | variable . ".^" variable
  125          | variable . ".^" functionCall
  128          | variable . "'"
  129          | variable . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  162 variable: variable . "." "identifier"
  164         | variable . listableEnd
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"         décalage et aller à l'état 151
    ":"         décalage et aller à l'état 116
    "("         décalage et aller à l'état 152
    "."         décalage et aller à l'état 171
    ".'"        décalage et aller à l'état 154
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 155
    ".^"        décalage et aller à l'état 156
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "&&"        décalage et aller à l'état 140
    "|"         décalage et aller à l'état 141
    "||"        décalage et aller à l'état 142

    $défaut  réduction par utilisation de la règle 102 (condition)

    logicalComparators  aller à l'état 157
    rightOperand        aller à l'état 158
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 159
    comparators         aller à l'état 160

Conflit entre la règle 102 et le jeton "(" résolu par décalage (HIGHLEVEL < "(").
Conflit entre la règle 102 et le jeton "+" résolu par décalage (HIGHLEVEL < "+").
Conflit entre la règle 102 et le jeton "-" résolu par décalage (HIGHLEVEL < "-").


état 82

  104 comparison: functionCall . comparators comparable
  106           | functionCall . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  115 operation: functionCall . rightOperand
  122          | functionCall . "** or ^" variable
  123          | functionCall . "** or ^" functionCall
  126          | functionCall . ".^" variable
  127          | functionCall . ".^" functionCall
  130          | functionCall . "'"
  131          | functionCall . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  163 variable: functionCall . "." variable
  165         | functionCall . listableEnd
  266 selectable: functionCall .  ["end of line", ",", ";", "line comment"]
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"         décalage et aller à l'état 115
    ":"         décalage et aller à l'état 116
    "."         décalage et aller à l'état 170
    ".'"        décalage et aller à l'état 118
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 131
    ".^"        décalage et aller à l'état 132
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "&&"        décalage et aller à l'état 140
    "|"         décalage et aller à l'état 141
    "||"        décalage et aller à l'état 142

    $défaut  réduction par utilisation de la règle 266 (selectable)

    logicalComparators  aller à l'état 144
    rightOperand        aller à l'état 145
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 147
    comparators         aller à l'état 148


état 83

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  105           | variable . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  114 operation: variable . rightOperand
  120          | variable . "** or ^" variable
  121          | variable . "** or ^" functionCall
  124          | variable . ".^" variable
  125          | variable . ".^" functionCall
  128          | variable . "'"
  129          | variable . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  162 variable: variable . "." "identifier"
  164         | variable . listableEnd
  265 selectable: variable .  ["end of line", ",", ";", "line comment"]
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"         décalage et aller à l'état 151
    ":"         décalage et aller à l'état 116
    "("         décalage et aller à l'état 152
    "."         décalage et aller à l'état 171
    ".'"        décalage et aller à l'état 154
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 155
    ".^"        décalage et aller à l'état 156
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "&&"        décalage et aller à l'état 140
    "|"         décalage et aller à l'état 141
    "||"        décalage et aller à l'état 142

    $défaut  réduction par utilisation de la règle 265 (selectable)

    logicalComparators  aller à l'état 157
    rightOperand        aller à l'état 158
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 159
    comparators         aller à l'état 160


état 84

  261 selectControl: "select" selectable . selectConditionBreak casesControl "end"
  262              | "select" selectable . selectConditionBreak casesControl else elseBody "end"
  263              | "select" selectable . "line comment" selectConditionBreak casesControl "end"
  264              | "select" selectable . "line comment" selectConditionBreak casesControl else elseBody "end"
  267 selectConditionBreak: . "end of line"
  268                     | . "," "end of line"
  269                     | . ";" "end of line"

    "end of line"   décalage et aller à l'état 204
    ","             décalage et aller à l'état 205
    ";"             décalage et aller à l'état 206
    "line comment"  décalage et aller à l'état 207

    selectConditionBreak  aller à l'état 208


état 85

   69 functionDeclaration: "function" "[" . functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | "function" "[" . "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   72 functionDeclarationReturns: . idList
   76 idList: . idList "," "identifier"
   77       | . "identifier"

    "]"           décalage et aller à l'état 209
    "identifier"  décalage et aller à l'état 210

    functionDeclarationReturns  aller à l'état 211
    idList                      aller à l'état 212


état 86

   68 functionDeclaration: "function" "identifier" . "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | "function" "identifier" . functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   73 functionDeclarationArguments: . "(" idList ")"
   74                             | . "(" ")"
   75                             | .  ["end of line", ",", ";", "line comment"]

    "("  décalage et aller à l'état 213
    "="  décalage et aller à l'état 214

    $défaut  réduction par utilisation de la règle 75 (functionDeclarationArguments)

    functionDeclarationArguments  aller à l'état 215


état 87

   78 functionDeclarationBreak: . lineEnd
   79                         | . ";"
   80                         | . ";" "end of line"
   81                         | . ","
   82                         | . "," "end of line"
   85 classDeclaration: "class" "identifier" . "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | "class" "identifier" . functionDeclarationBreak slotsDeclaration "endclass"
  335 lineEnd: . "end of line"
  336        | . "line comment" "end of line"

    "end of line"   décalage et aller à l'état 62
    ","             décalage et aller à l'état 216
    ";"             décalage et aller à l'état 217
    "<"             décalage et aller à l'état 218
    "line comment"  décalage et aller à l'état 64

    functionDeclarationBreak  aller à l'état 219
    lineEnd                   aller à l'état 220


état 88

  288 forControl: "for" "(" . "identifier" "=" forIterator ")" forConditionBreak forBody "end"

    "identifier"  décalage et aller à l'état 221


état 89

  287 forControl: "for" "identifier" . "=" forIterator forConditionBreak forBody "end"

    "="  décalage et aller à l'état 222


état 90

  301 whileControl: "while" condition . whileConditionBreak whileBody "end"
  304 whileConditionBreak: . ","
  305                    | . ";"
  306                    | . "do"
  307                    | . "do" ","
  308                    | . "do" ";"
  309                    | . "then"
  310                    | . "then" ","
  311                    | . "then" ";"
  312                    | . lineEnd
  313                    | . "," "end of line"
  314                    | . ";" "end of line"
  315                    | . "do" "end of line"
  316                    | . "do" "," "end of line"
  317                    | . "do" ";" "end of line"
  318                    | . "then" "end of line"
  319                    | . "then" "," "end of line"
  320                    | . "then" ";" "end of line"
  335 lineEnd: . "end of line"
  336        | . "line comment" "end of line"

    "end of line"   décalage et aller à l'état 62
    ","             décalage et aller à l'état 223
    ";"             décalage et aller à l'état 224
    "then"          décalage et aller à l'état 225
    "do"            décalage et aller à l'état 226
    "line comment"  décalage et aller à l'état 64

    whileConditionBreak  aller à l'état 227
    lineEnd              aller à l'état 228


état 91

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"
  219 variableDeclaration: . assignable "=" variable
  220                    | . assignable "=" functionCall
  221                    | . functionCall "=" variable
  222                    | . functionCall "=" functionCall
  223                    | . assignable "=" ":"
  224                    | . functionCall "=" ":"
  225                    | . assignable "=" returnControl
  226                    | . functionCall "=" returnControl
  227 assignable: . variable "." "identifier"
  228           | . variable "." functionCall
  229           | . functionCall "." variable
  230           | . functionCall "." functionCall
  231           | . "identifier"
  232           | . multipleResults
  233 multipleResults: . "[" matrixOrCellColumns "]"
  234 ifControl: . "if" condition then thenBody "end"
  235          | . "if" condition then thenBody else elseBody "end"
  236          | . "if" condition then thenBody elseIfControl "end"
  261 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  262              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  263              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  264              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  287 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  288           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  301 whileControl: . "while" condition whileConditionBreak whileBody "end"
  321 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  321           | "try" "end of line" . expressions "catch" "end of line" expressions "end"
  322           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  323           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  323           | "try" "end of line" . expressions "catch" "line comment" "end of line" expressions "end"
  324           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  325 returnControl: . "return"
  326              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    expressions            aller à l'état 229
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 92

  322 tryControl: "try" "line comment" . "end of line" expressions "catch" "end of line" expressions "end"
  324           | "try" "line comment" . "end of line" expressions "catch" "line comment" "end of line" expressions "end"

    "end of line"  décalage et aller à l'état 230


état 93

  104 comparison: functionCall . comparators comparable
  106           | functionCall . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  115 operation: functionCall . rightOperand
  122          | functionCall . "** or ^" variable
  123          | functionCall . "** or ^" functionCall
  126          | functionCall . ".^" variable
  127          | functionCall . ".^" functionCall
  130          | functionCall . "'"
  131          | functionCall . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  163 variable: functionCall . "." variable
  165         | functionCall . listableEnd
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"         décalage et aller à l'état 115
    ":"         décalage et aller à l'état 116
    "."         décalage et aller à l'état 170
    ".'"        décalage et aller à l'état 118
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 131
    ".^"        décalage et aller à l'état 132
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "&&"        décalage et aller à l'état 140
    "|"         décalage et aller à l'état 141
    "||"        décalage et aller à l'état 142

    logicalComparators  aller à l'état 144
    rightOperand        aller à l'état 145
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 147
    comparators         aller à l'état 148


état 94

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  105           | variable . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  114 operation: variable . rightOperand
  120          | variable . "** or ^" variable
  121          | variable . "** or ^" functionCall
  124          | variable . ".^" variable
  125          | variable . ".^" functionCall
  128          | variable . "'"
  129          | variable . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  162 variable: variable . "." "identifier"
  164         | variable . listableEnd
  326 returnControl: "return" variable .  ["end of file", "end of line", ",", ";", ")", "else", "elseif", "end", "case", "endfunction", "catch", "line comment"]
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"         décalage et aller à l'état 151
    ":"         décalage et aller à l'état 116
    "("         décalage et aller à l'état 152
    "."         décalage et aller à l'état 171
    ".'"        décalage et aller à l'état 154
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 155
    ".^"        décalage et aller à l'état 156
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "&&"        décalage et aller à l'état 140
    "|"         décalage et aller à l'état 141
    "||"        décalage et aller à l'état 142

    $défaut  réduction par utilisation de la règle 326 (returnControl)

    logicalComparators  aller à l'état 157
    rightOperand        aller à l'état 158
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 159
    comparators         aller à l'état 160


état 95

   41 implicitCallable: "%t or %T" .  ["end of file", "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "[", "{", ".", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "else", "elseif", "end", "case", "endfunction", "catch", "string", "identifier", "integer", "float", "number", "path", "line comment"]
   53 specificFunctionCall: "%t or %T" . "(" functionArgs ")"
  175 variable: "%t or %T" .  ["'", ":", ".", ".'", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||"]

    "("  décalage et aller à l'état 53

    "'"         réduction par utilisation de la règle 175 (variable)
    ":"         réduction par utilisation de la règle 175 (variable)
    "."         réduction par utilisation de la règle 41 (implicitCallable)
    "."         [réduction par utilisation de la règle 175 (variable)]
    ".'"        réduction par utilisation de la règle 175 (variable)
    "+"         réduction par utilisation de la règle 41 (implicitCallable)
    "+"         [réduction par utilisation de la règle 175 (variable)]
    "-"         réduction par utilisation de la règle 41 (implicitCallable)
    "-"         [réduction par utilisation de la règle 175 (variable)]
    "*"         réduction par utilisation de la règle 41 (implicitCallable)
    "*"         [réduction par utilisation de la règle 175 (variable)]
    ".*"        réduction par utilisation de la règle 41 (implicitCallable)
    ".*"        [réduction par utilisation de la règle 175 (variable)]
    ".*."       réduction par utilisation de la règle 41 (implicitCallable)
    ".*."       [réduction par utilisation de la règle 175 (variable)]
    "/"         réduction par utilisation de la règle 41 (implicitCallable)
    "/"         [réduction par utilisation de la règle 175 (variable)]
    "./"        réduction par utilisation de la règle 41 (implicitCallable)
    "./"        [réduction par utilisation de la règle 175 (variable)]
    "/."        réduction par utilisation de la règle 41 (implicitCallable)
    "/."        [réduction par utilisation de la règle 175 (variable)]
    "./."       réduction par utilisation de la règle 41 (implicitCallable)
    "./."       [réduction par utilisation de la règle 175 (variable)]
    "\\"        réduction par utilisation de la règle 41 (implicitCallable)
    "\\"        [réduction par utilisation de la règle 175 (variable)]
    ".\\"       réduction par utilisation de la règle 41 (implicitCallable)
    ".\\"       [réduction par utilisation de la règle 175 (variable)]
    ".\\."      réduction par utilisation de la règle 41 (implicitCallable)
    ".\\."      [réduction par utilisation de la règle 175 (variable)]
    "** or ^"   réduction par utilisation de la règle 175 (variable)
    ".^"        réduction par utilisation de la règle 175 (variable)
    "=="        réduction par utilisation de la règle 175 (variable)
    "<> or ~="  réduction par utilisation de la règle 175 (variable)
    "<"         réduction par utilisation de la règle 175 (variable)
    "<="        réduction par utilisation de la règle 175 (variable)
    ">"         réduction par utilisation de la règle 175 (variable)
    ">="        réduction par utilisation de la règle 175 (variable)
    "&"         réduction par utilisation de la règle 175 (variable)
    "&&"        réduction par utilisation de la règle 175 (variable)
    "|"         réduction par utilisation de la règle 175 (variable)
    "||"        réduction par utilisation de la règle 175 (variable)
    $défaut    réduction par utilisation de la règle 41 (implicitCallable)

Conflit entre la règle 41 et le jeton "(" résolu par décalage (BOOLTRUE < "(").
Conflit entre la règle 175 et le jeton "(" résolu par décalage (BOOLTRUE < "(").


état 96

   42 implicitCallable: "%f or %F" .  ["end of file", "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "[", "{", ".", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "else", "elseif", "end", "case", "endfunction", "catch", "string", "identifier", "integer", "float", "number", "path", "line comment"]
   54 specificFunctionCall: "%f or %F" . "(" functionArgs ")"
  176 variable: "%f or %F" .  ["'", ":", ".", ".'", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||"]

    "("  décalage et aller à l'état 54

    "'"         réduction par utilisation de la règle 176 (variable)
    ":"         réduction par utilisation de la règle 176 (variable)
    "."         réduction par utilisation de la règle 42 (implicitCallable)
    "."         [réduction par utilisation de la règle 176 (variable)]
    ".'"        réduction par utilisation de la règle 176 (variable)
    "+"         réduction par utilisation de la règle 42 (implicitCallable)
    "+"         [réduction par utilisation de la règle 176 (variable)]
    "-"         réduction par utilisation de la règle 42 (implicitCallable)
    "-"         [réduction par utilisation de la règle 176 (variable)]
    "*"         réduction par utilisation de la règle 42 (implicitCallable)
    "*"         [réduction par utilisation de la règle 176 (variable)]
    ".*"        réduction par utilisation de la règle 42 (implicitCallable)
    ".*"        [réduction par utilisation de la règle 176 (variable)]
    ".*."       réduction par utilisation de la règle 42 (implicitCallable)
    ".*."       [réduction par utilisation de la règle 176 (variable)]
    "/"         réduction par utilisation de la règle 42 (implicitCallable)
    "/"         [réduction par utilisation de la règle 176 (variable)]
    "./"        réduction par utilisation de la règle 42 (implicitCallable)
    "./"        [réduction par utilisation de la règle 176 (variable)]
    "/."        réduction par utilisation de la règle 42 (implicitCallable)
    "/."        [réduction par utilisation de la règle 176 (variable)]
    "./."       réduction par utilisation de la règle 42 (implicitCallable)
    "./."       [réduction par utilisation de la règle 176 (variable)]
    "\\"        réduction par utilisation de la règle 42 (implicitCallable)
    "\\"        [réduction par utilisation de la règle 176 (variable)]
    ".\\"       réduction par utilisation de la règle 42 (implicitCallable)
    ".\\"       [réduction par utilisation de la règle 176 (variable)]
    ".\\."      réduction par utilisation de la règle 42 (implicitCallable)
    ".\\."      [réduction par utilisation de la règle 176 (variable)]
    "** or ^"   réduction par utilisation de la règle 176 (variable)
    ".^"        réduction par utilisation de la règle 176 (variable)
    "=="        réduction par utilisation de la règle 176 (variable)
    "<> or ~="  réduction par utilisation de la règle 176 (variable)
    "<"         réduction par utilisation de la règle 176 (variable)
    "<="        réduction par utilisation de la règle 176 (variable)
    ">"         réduction par utilisation de la règle 176 (variable)
    ">="        réduction par utilisation de la règle 176 (variable)
    "&"         réduction par utilisation de la règle 176 (variable)
    "&&"        réduction par utilisation de la règle 176 (variable)
    "|"         réduction par utilisation de la règle 176 (variable)
    "||"        réduction par utilisation de la règle 176 (variable)
    $défaut    réduction par utilisation de la règle 42 (implicitCallable)

Conflit entre la règle 42 et le jeton "(" résolu par décalage (BOOLFALSE < "(").
Conflit entre la règle 176 et le jeton "(" résolu par décalage (BOOLFALSE < "(").


état 97

   40 implicitCallable: "$" .  ["end of file", "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "(", "[", "{", ".", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "else", "elseif", "end", "case", "endfunction", "catch", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  174 variable: "$" .  ["'", ":", "(", ".", ".'", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||"]

    "'"         réduction par utilisation de la règle 174 (variable)
    ":"         réduction par utilisation de la règle 174 (variable)
    "("         réduction par utilisation de la règle 40 (implicitCallable)
    "("         [réduction par utilisation de la règle 174 (variable)]
    "."         réduction par utilisation de la règle 40 (implicitCallable)
    "."         [réduction par utilisation de la règle 174 (variable)]
    ".'"        réduction par utilisation de la règle 174 (variable)
    "+"         réduction par utilisation de la règle 40 (implicitCallable)
    "+"         [réduction par utilisation de la règle 174 (variable)]
    "-"         réduction par utilisation de la règle 40 (implicitCallable)
    "-"         [réduction par utilisation de la règle 174 (variable)]
    "*"         réduction par utilisation de la règle 40 (implicitCallable)
    "*"         [réduction par utilisation de la règle 174 (variable)]
    ".*"        réduction par utilisation de la règle 40 (implicitCallable)
    ".*"        [réduction par utilisation de la règle 174 (variable)]
    ".*."       réduction par utilisation de la règle 40 (implicitCallable)
    ".*."       [réduction par utilisation de la règle 174 (variable)]
    "/"         réduction par utilisation de la règle 40 (implicitCallable)
    "/"         [réduction par utilisation de la règle 174 (variable)]
    "./"        réduction par utilisation de la règle 40 (implicitCallable)
    "./"        [réduction par utilisation de la règle 174 (variable)]
    "/."        réduction par utilisation de la règle 40 (implicitCallable)
    "/."        [réduction par utilisation de la règle 174 (variable)]
    "./."       réduction par utilisation de la règle 40 (implicitCallable)
    "./."       [réduction par utilisation de la règle 174 (variable)]
    "\\"        réduction par utilisation de la règle 40 (implicitCallable)
    "\\"        [réduction par utilisation de la règle 174 (variable)]
    ".\\"       réduction par utilisation de la règle 40 (implicitCallable)
    ".\\"       [réduction par utilisation de la règle 174 (variable)]
    ".\\."      réduction par utilisation de la règle 40 (implicitCallable)
    ".\\."      [réduction par utilisation de la règle 174 (variable)]
    "** or ^"   réduction par utilisation de la règle 174 (variable)
    ".^"        réduction par utilisation de la règle 174 (variable)
    "=="        réduction par utilisation de la règle 174 (variable)
    "<> or ~="  réduction par utilisation de la règle 174 (variable)
    "<"         réduction par utilisation de la règle 174 (variable)
    "<="        réduction par utilisation de la règle 174 (variable)
    ">"         réduction par utilisation de la règle 174 (variable)
    ">="        réduction par utilisation de la règle 174 (variable)
    "&"         réduction par utilisation de la règle 174 (variable)
    "&&"        réduction par utilisation de la règle 174 (variable)
    "|"         réduction par utilisation de la règle 174 (variable)
    "||"        réduction par utilisation de la règle 174 (variable)
    $défaut    réduction par utilisation de la règle 40 (implicitCallable)


état 98

   39 implicitCallable: "string" .  ["end of file", "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "(", "[", "{", ".", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "else", "elseif", "end", "case", "endfunction", "catch", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  173 variable: "string" .  ["'", ":", "(", ".", ".'", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||"]

    "'"         réduction par utilisation de la règle 173 (variable)
    ":"         réduction par utilisation de la règle 173 (variable)
    "("         réduction par utilisation de la règle 39 (implicitCallable)
    "("         [réduction par utilisation de la règle 173 (variable)]
    "."         réduction par utilisation de la règle 39 (implicitCallable)
    "."         [réduction par utilisation de la règle 173 (variable)]
    ".'"        réduction par utilisation de la règle 173 (variable)
    "+"         réduction par utilisation de la règle 39 (implicitCallable)
    "+"         [réduction par utilisation de la règle 173 (variable)]
    "-"         réduction par utilisation de la règle 39 (implicitCallable)
    "-"         [réduction par utilisation de la règle 173 (variable)]
    "*"         réduction par utilisation de la règle 39 (implicitCallable)
    "*"         [réduction par utilisation de la règle 173 (variable)]
    ".*"        réduction par utilisation de la règle 39 (implicitCallable)
    ".*"        [réduction par utilisation de la règle 173 (variable)]
    ".*."       réduction par utilisation de la règle 39 (implicitCallable)
    ".*."       [réduction par utilisation de la règle 173 (variable)]
    "/"         réduction par utilisation de la règle 39 (implicitCallable)
    "/"         [réduction par utilisation de la règle 173 (variable)]
    "./"        réduction par utilisation de la règle 39 (implicitCallable)
    "./"        [réduction par utilisation de la règle 173 (variable)]
    "/."        réduction par utilisation de la règle 39 (implicitCallable)
    "/."        [réduction par utilisation de la règle 173 (variable)]
    "./."       réduction par utilisation de la règle 39 (implicitCallable)
    "./."       [réduction par utilisation de la règle 173 (variable)]
    "\\"        réduction par utilisation de la règle 39 (implicitCallable)
    "\\"        [réduction par utilisation de la règle 173 (variable)]
    ".\\"       réduction par utilisation de la règle 39 (implicitCallable)
    ".\\"       [réduction par utilisation de la règle 173 (variable)]
    ".\\."      réduction par utilisation de la règle 39 (implicitCallable)
    ".\\."      [réduction par utilisation de la règle 173 (variable)]
    "** or ^"   réduction par utilisation de la règle 173 (variable)
    ".^"        réduction par utilisation de la règle 173 (variable)
    "=="        réduction par utilisation de la règle 173 (variable)
    "<> or ~="  réduction par utilisation de la règle 173 (variable)
    "<"         réduction par utilisation de la règle 173 (variable)
    "<="        réduction par utilisation de la règle 173 (variable)
    ">"         réduction par utilisation de la règle 173 (variable)
    ">="        réduction par utilisation de la règle 173 (variable)
    "&"         réduction par utilisation de la règle 173 (variable)
    "&&"        réduction par utilisation de la règle 173 (variable)
    "|"         réduction par utilisation de la règle 173 (variable)
    "||"        réduction par utilisation de la règle 173 (variable)
    $défaut    réduction par utilisation de la règle 39 (implicitCallable)


état 99

   35 implicitCallable: "identifier" .  ["end of file", "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "(", "[", "{", ".", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "else", "elseif", "end", "case", "endfunction", "catch", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  169 variable: "identifier" .  ["'", ":", "(", ".", ".'", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||"]

    "'"         réduction par utilisation de la règle 169 (variable)
    ":"         réduction par utilisation de la règle 169 (variable)
    "("         réduction par utilisation de la règle 35 (implicitCallable)
    "("         [réduction par utilisation de la règle 169 (variable)]
    "."         réduction par utilisation de la règle 35 (implicitCallable)
    "."         [réduction par utilisation de la règle 169 (variable)]
    ".'"        réduction par utilisation de la règle 169 (variable)
    "+"         réduction par utilisation de la règle 35 (implicitCallable)
    "+"         [réduction par utilisation de la règle 169 (variable)]
    "-"         réduction par utilisation de la règle 35 (implicitCallable)
    "-"         [réduction par utilisation de la règle 169 (variable)]
    "*"         réduction par utilisation de la règle 35 (implicitCallable)
    "*"         [réduction par utilisation de la règle 169 (variable)]
    ".*"        réduction par utilisation de la règle 35 (implicitCallable)
    ".*"        [réduction par utilisation de la règle 169 (variable)]
    ".*."       réduction par utilisation de la règle 35 (implicitCallable)
    ".*."       [réduction par utilisation de la règle 169 (variable)]
    "/"         réduction par utilisation de la règle 35 (implicitCallable)
    "/"         [réduction par utilisation de la règle 169 (variable)]
    "./"        réduction par utilisation de la règle 35 (implicitCallable)
    "./"        [réduction par utilisation de la règle 169 (variable)]
    "/."        réduction par utilisation de la règle 35 (implicitCallable)
    "/."        [réduction par utilisation de la règle 169 (variable)]
    "./."       réduction par utilisation de la règle 35 (implicitCallable)
    "./."       [réduction par utilisation de la règle 169 (variable)]
    "\\"        réduction par utilisation de la règle 35 (implicitCallable)
    "\\"        [réduction par utilisation de la règle 169 (variable)]
    ".\\"       réduction par utilisation de la règle 35 (implicitCallable)
    ".\\"       [réduction par utilisation de la règle 169 (variable)]
    ".\\."      réduction par utilisation de la règle 35 (implicitCallable)
    ".\\."      [réduction par utilisation de la règle 169 (variable)]
    "** or ^"   réduction par utilisation de la règle 169 (variable)
    ".^"        réduction par utilisation de la règle 169 (variable)
    "=="        réduction par utilisation de la règle 169 (variable)
    "<> or ~="  réduction par utilisation de la règle 169 (variable)
    "<"         réduction par utilisation de la règle 169 (variable)
    "<="        réduction par utilisation de la règle 169 (variable)
    ">"         réduction par utilisation de la règle 169 (variable)
    ">="        réduction par utilisation de la règle 169 (variable)
    "&"         réduction par utilisation de la règle 169 (variable)
    "&&"        réduction par utilisation de la règle 169 (variable)
    "|"         réduction par utilisation de la règle 169 (variable)
    "||"        réduction par utilisation de la règle 169 (variable)
    $défaut    réduction par utilisation de la règle 35 (implicitCallable)


état 100

   36 implicitCallable: "integer" .  ["end of file", "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "(", "[", "{", ".", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "else", "elseif", "end", "case", "endfunction", "catch", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  170 variable: "integer" .  ["'", ":", "(", ".", ".'", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||"]

    "'"         réduction par utilisation de la règle 170 (variable)
    ":"         réduction par utilisation de la règle 170 (variable)
    "("         réduction par utilisation de la règle 36 (implicitCallable)
    "("         [réduction par utilisation de la règle 170 (variable)]
    "."         réduction par utilisation de la règle 36 (implicitCallable)
    "."         [réduction par utilisation de la règle 170 (variable)]
    ".'"        réduction par utilisation de la règle 170 (variable)
    "+"         réduction par utilisation de la règle 36 (implicitCallable)
    "+"         [réduction par utilisation de la règle 170 (variable)]
    "-"         réduction par utilisation de la règle 36 (implicitCallable)
    "-"         [réduction par utilisation de la règle 170 (variable)]
    "*"         réduction par utilisation de la règle 36 (implicitCallable)
    "*"         [réduction par utilisation de la règle 170 (variable)]
    ".*"        réduction par utilisation de la règle 36 (implicitCallable)
    ".*"        [réduction par utilisation de la règle 170 (variable)]
    ".*."       réduction par utilisation de la règle 36 (implicitCallable)
    ".*."       [réduction par utilisation de la règle 170 (variable)]
    "/"         réduction par utilisation de la règle 36 (implicitCallable)
    "/"         [réduction par utilisation de la règle 170 (variable)]
    "./"        réduction par utilisation de la règle 36 (implicitCallable)
    "./"        [réduction par utilisation de la règle 170 (variable)]
    "/."        réduction par utilisation de la règle 36 (implicitCallable)
    "/."        [réduction par utilisation de la règle 170 (variable)]
    "./."       réduction par utilisation de la règle 36 (implicitCallable)
    "./."       [réduction par utilisation de la règle 170 (variable)]
    "\\"        réduction par utilisation de la règle 36 (implicitCallable)
    "\\"        [réduction par utilisation de la règle 170 (variable)]
    ".\\"       réduction par utilisation de la règle 36 (implicitCallable)
    ".\\"       [réduction par utilisation de la règle 170 (variable)]
    ".\\."      réduction par utilisation de la règle 36 (implicitCallable)
    ".\\."      [réduction par utilisation de la règle 170 (variable)]
    "** or ^"   réduction par utilisation de la règle 170 (variable)
    ".^"        réduction par utilisation de la règle 170 (variable)
    "=="        réduction par utilisation de la règle 170 (variable)
    "<> or ~="  réduction par utilisation de la règle 170 (variable)
    "<"         réduction par utilisation de la règle 170 (variable)
    "<="        réduction par utilisation de la règle 170 (variable)
    ">"         réduction par utilisation de la règle 170 (variable)
    ">="        réduction par utilisation de la règle 170 (variable)
    "&"         réduction par utilisation de la règle 170 (variable)
    "&&"        réduction par utilisation de la règle 170 (variable)
    "|"         réduction par utilisation de la règle 170 (variable)
    "||"        réduction par utilisation de la règle 170 (variable)
    $défaut    réduction par utilisation de la règle 36 (implicitCallable)


état 101

   38 implicitCallable: "float" .  ["end of file", "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "(", "[", "{", ".", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "else", "elseif", "end", "case", "endfunction", "catch", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  172 variable: "float" .  ["'", ":", "(", ".", ".'", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||"]

    "'"         réduction par utilisation de la règle 172 (variable)
    ":"         réduction par utilisation de la règle 172 (variable)
    "("         réduction par utilisation de la règle 38 (implicitCallable)
    "("         [réduction par utilisation de la règle 172 (variable)]
    "."         réduction par utilisation de la règle 38 (implicitCallable)
    "."         [réduction par utilisation de la règle 172 (variable)]
    ".'"        réduction par utilisation de la règle 172 (variable)
    "+"         réduction par utilisation de la règle 38 (implicitCallable)
    "+"         [réduction par utilisation de la règle 172 (variable)]
    "-"         réduction par utilisation de la règle 38 (implicitCallable)
    "-"         [réduction par utilisation de la règle 172 (variable)]
    "*"         réduction par utilisation de la règle 38 (implicitCallable)
    "*"         [réduction par utilisation de la règle 172 (variable)]
    ".*"        réduction par utilisation de la règle 38 (implicitCallable)
    ".*"        [réduction par utilisation de la règle 172 (variable)]
    ".*."       réduction par utilisation de la règle 38 (implicitCallable)
    ".*."       [réduction par utilisation de la règle 172 (variable)]
    "/"         réduction par utilisation de la règle 38 (implicitCallable)
    "/"         [réduction par utilisation de la règle 172 (variable)]
    "./"        réduction par utilisation de la règle 38 (implicitCallable)
    "./"        [réduction par utilisation de la règle 172 (variable)]
    "/."        réduction par utilisation de la règle 38 (implicitCallable)
    "/."        [réduction par utilisation de la règle 172 (variable)]
    "./."       réduction par utilisation de la règle 38 (implicitCallable)
    "./."       [réduction par utilisation de la règle 172 (variable)]
    "\\"        réduction par utilisation de la règle 38 (implicitCallable)
    "\\"        [réduction par utilisation de la règle 172 (variable)]
    ".\\"       réduction par utilisation de la règle 38 (implicitCallable)
    ".\\"       [réduction par utilisation de la règle 172 (variable)]
    ".\\."      réduction par utilisation de la règle 38 (implicitCallable)
    ".\\."      [réduction par utilisation de la règle 172 (variable)]
    "** or ^"   réduction par utilisation de la règle 172 (variable)
    ".^"        réduction par utilisation de la règle 172 (variable)
    "=="        réduction par utilisation de la règle 172 (variable)
    "<> or ~="  réduction par utilisation de la règle 172 (variable)
    "<"         réduction par utilisation de la règle 172 (variable)
    "<="        réduction par utilisation de la règle 172 (variable)
    ">"         réduction par utilisation de la règle 172 (variable)
    ">="        réduction par utilisation de la règle 172 (variable)
    "&"         réduction par utilisation de la règle 172 (variable)
    "&&"        réduction par utilisation de la règle 172 (variable)
    "|"         réduction par utilisation de la règle 172 (variable)
    "||"        réduction par utilisation de la règle 172 (variable)
    $défaut    réduction par utilisation de la règle 38 (implicitCallable)


état 102

   37 implicitCallable: "number" .  ["end of file", "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "(", "[", "{", ".", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "else", "elseif", "end", "case", "endfunction", "catch", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  171 variable: "number" .  ["'", ":", "(", ".", ".'", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||"]

    "'"         réduction par utilisation de la règle 171 (variable)
    ":"         réduction par utilisation de la règle 171 (variable)
    "("         réduction par utilisation de la règle 37 (implicitCallable)
    "("         [réduction par utilisation de la règle 171 (variable)]
    "."         réduction par utilisation de la règle 37 (implicitCallable)
    "."         [réduction par utilisation de la règle 171 (variable)]
    ".'"        réduction par utilisation de la règle 171 (variable)
    "+"         réduction par utilisation de la règle 37 (implicitCallable)
    "+"         [réduction par utilisation de la règle 171 (variable)]
    "-"         réduction par utilisation de la règle 37 (implicitCallable)
    "-"         [réduction par utilisation de la règle 171 (variable)]
    "*"         réduction par utilisation de la règle 37 (implicitCallable)
    "*"         [réduction par utilisation de la règle 171 (variable)]
    ".*"        réduction par utilisation de la règle 37 (implicitCallable)
    ".*"        [réduction par utilisation de la règle 171 (variable)]
    ".*."       réduction par utilisation de la règle 37 (implicitCallable)
    ".*."       [réduction par utilisation de la règle 171 (variable)]
    "/"         réduction par utilisation de la règle 37 (implicitCallable)
    "/"         [réduction par utilisation de la règle 171 (variable)]
    "./"        réduction par utilisation de la règle 37 (implicitCallable)
    "./"        [réduction par utilisation de la règle 171 (variable)]
    "/."        réduction par utilisation de la règle 37 (implicitCallable)
    "/."        [réduction par utilisation de la règle 171 (variable)]
    "./."       réduction par utilisation de la règle 37 (implicitCallable)
    "./."       [réduction par utilisation de la règle 171 (variable)]
    "\\"        réduction par utilisation de la règle 37 (implicitCallable)
    "\\"        [réduction par utilisation de la règle 171 (variable)]
    ".\\"       réduction par utilisation de la règle 37 (implicitCallable)
    ".\\"       [réduction par utilisation de la règle 171 (variable)]
    ".\\."      réduction par utilisation de la règle 37 (implicitCallable)
    ".\\."      [réduction par utilisation de la règle 171 (variable)]
    "** or ^"   réduction par utilisation de la règle 171 (variable)
    ".^"        réduction par utilisation de la règle 171 (variable)
    "=="        réduction par utilisation de la règle 171 (variable)
    "<> or ~="  réduction par utilisation de la règle 171 (variable)
    "<"         réduction par utilisation de la règle 171 (variable)
    "<="        réduction par utilisation de la règle 171 (variable)
    ">"         réduction par utilisation de la règle 171 (variable)
    ">="        réduction par utilisation de la règle 171 (variable)
    "&"         réduction par utilisation de la règle 171 (variable)
    "&&"        réduction par utilisation de la règle 171 (variable)
    "|"         réduction par utilisation de la règle 171 (variable)
    "||"        réduction par utilisation de la règle 171 (variable)
    $défaut    réduction par utilisation de la règle 37 (implicitCallable)


état 103

   47 implicitCallable: "path" .

    $défaut  réduction par utilisation de la règle 47 (implicitCallable)


état 104

   34 implicitFunctionCall: "identifier" implicitCallable .  ["end of file", "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "(", "[", "{", "+", "-", "else", "elseif", "end", "case", "endfunction", "catch", "string", "identifier", "integer", "float", "number", "path", "line comment"]
   43 implicitCallable: implicitCallable . "." "identifier"
   44                 | implicitCallable . "." functionCall
   46                 | implicitCallable . rightOperand
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall

    "."     décalage et aller à l'état 231
    "+"     décalage et aller à l'état 119
    "-"     décalage et aller à l'état 120
    "*"     décalage et aller à l'état 121
    ".*"    décalage et aller à l'état 122
    ".*."   décalage et aller à l'état 123
    "/"     décalage et aller à l'état 124
    "./"    décalage et aller à l'état 125
    "/."    décalage et aller à l'état 126
    "./."   décalage et aller à l'état 127
    "\\"    décalage et aller à l'état 128
    ".\\"   décalage et aller à l'état 129
    ".\\."  décalage et aller à l'état 130

    "+"       [réduction par utilisation de la règle 34 (implicitFunctionCall)]
    "-"       [réduction par utilisation de la règle 34 (implicitFunctionCall)]
    $défaut  réduction par utilisation de la règle 34 (implicitFunctionCall)

    rightOperand  aller à l'état 232


état 105

   45 implicitCallable: simpleFunctionCall .  ["end of file", "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "(", "[", "{", ".", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "else", "elseif", "end", "case", "endfunction", "catch", "string", "identifier", "integer", "float", "number", "path", "line comment"]
   48 functionCall: simpleFunctionCall .  ["'", ":", ".", ".'", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||"]
   56 recursiveFunctionCall: simpleFunctionCall . "(" functionArgs ")"

    "("  décalage et aller à l'état 149

    "'"         réduction par utilisation de la règle 48 (functionCall)
    ":"         réduction par utilisation de la règle 48 (functionCall)
    "("         [réduction par utilisation de la règle 45 (implicitCallable)]
    "."         réduction par utilisation de la règle 45 (implicitCallable)
    "."         [réduction par utilisation de la règle 48 (functionCall)]
    ".'"        réduction par utilisation de la règle 48 (functionCall)
    "+"         réduction par utilisation de la règle 45 (implicitCallable)
    "+"         [réduction par utilisation de la règle 48 (functionCall)]
    "-"         réduction par utilisation de la règle 45 (implicitCallable)
    "-"         [réduction par utilisation de la règle 48 (functionCall)]
    "*"         réduction par utilisation de la règle 45 (implicitCallable)
    "*"         [réduction par utilisation de la règle 48 (functionCall)]
    ".*"        réduction par utilisation de la règle 45 (implicitCallable)
    ".*"        [réduction par utilisation de la règle 48 (functionCall)]
    ".*."       réduction par utilisation de la règle 45 (implicitCallable)
    ".*."       [réduction par utilisation de la règle 48 (functionCall)]
    "/"         réduction par utilisation de la règle 45 (implicitCallable)
    "/"         [réduction par utilisation de la règle 48 (functionCall)]
    "./"        réduction par utilisation de la règle 45 (implicitCallable)
    "./"        [réduction par utilisation de la règle 48 (functionCall)]
    "/."        réduction par utilisation de la règle 45 (implicitCallable)
    "/."        [réduction par utilisation de la règle 48 (functionCall)]
    "./."       réduction par utilisation de la règle 45 (implicitCallable)
    "./."       [réduction par utilisation de la règle 48 (functionCall)]
    "\\"        réduction par utilisation de la règle 45 (implicitCallable)
    "\\"        [réduction par utilisation de la règle 48 (functionCall)]
    ".\\"       réduction par utilisation de la règle 45 (implicitCallable)
    ".\\"       [réduction par utilisation de la règle 48 (functionCall)]
    ".\\."      réduction par utilisation de la règle 45 (implicitCallable)
    ".\\."      [réduction par utilisation de la règle 48 (functionCall)]
    "** or ^"   réduction par utilisation de la règle 48 (functionCall)
    ".^"        réduction par utilisation de la règle 48 (functionCall)
    "=="        réduction par utilisation de la règle 48 (functionCall)
    "<> or ~="  réduction par utilisation de la règle 48 (functionCall)
    "<"         réduction par utilisation de la règle 48 (functionCall)
    "<="        réduction par utilisation de la règle 48 (functionCall)
    ">"         réduction par utilisation de la règle 48 (functionCall)
    ">="        réduction par utilisation de la règle 48 (functionCall)
    "&"         réduction par utilisation de la règle 48 (functionCall)
    "&&"        réduction par utilisation de la règle 48 (functionCall)
    "|"         réduction par utilisation de la règle 48 (functionCall)
    "||"        réduction par utilisation de la règle 48 (functionCall)
    $défaut    réduction par utilisation de la règle 45 (implicitCallable)


état 106

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  105           | variable . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  114 operation: variable . rightOperand
  120          | variable . "** or ^" variable
  121          | variable . "** or ^" functionCall
  124          | variable . ".^" variable
  125          | variable . ".^" functionCall
  128          | variable . "'"
  129          | variable . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  162 variable: variable . "." "identifier"
  164         | variable . listableEnd
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"         décalage et aller à l'état 151
    ":"         décalage et aller à l'état 116
    "("         décalage et aller à l'état 152
    "."         décalage et aller à l'état 171
    ".'"        décalage et aller à l'état 154
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 155
    ".^"        décalage et aller à l'état 156
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "&&"        décalage et aller à l'état 140
    "|"         décalage et aller à l'état 141
    "||"        décalage et aller à l'état 142

    logicalComparators  aller à l'état 157
    rightOperand        aller à l'état 158
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 159
    comparators         aller à l'état 160


état 107

    0 $accept: program "end of file" .

    $défaut  accepter


état 108

    4 expressions: recursiveExpression expression .  ["end of file", "else", "elseif", "end", "case", "endfunction", "catch"]
    5            | recursiveExpression expression . "line comment"
    8 recursiveExpression: recursiveExpression expression . expressionLineBreak
    9                    | recursiveExpression expression . "line comment" expressionLineBreak
   12 expressionLineBreak: . ";"
   13                    | . ","
   14                    | . "end of line"
   15                    | . expressionLineBreak ";"
   16                    | . expressionLineBreak ","
   17                    | . expressionLineBreak "end of line"

    "end of line"   décalage et aller à l'état 109
    ","             décalage et aller à l'état 110
    ";"             décalage et aller à l'état 111
    "line comment"  décalage et aller à l'état 233

    $défaut  réduction par utilisation de la règle 4 (expressions)

    expressionLineBreak  aller à l'état 234


état 109

   14 expressionLineBreak: "end of line" .

    $défaut  réduction par utilisation de la règle 14 (expressionLineBreak)


état 110

   13 expressionLineBreak: "," .

    $défaut  réduction par utilisation de la règle 13 (expressionLineBreak)


état 111

   12 expressionLineBreak: ";" .

    $défaut  réduction par utilisation de la règle 12 (expressionLineBreak)


état 112

    7 expressions: expression "line comment" .  ["end of file", "else", "elseif", "end", "case", "endfunction", "catch"]
   10 recursiveExpression: expression "line comment" . expressionLineBreak
   12 expressionLineBreak: . ";"
   13                    | . ","
   14                    | . "end of line"
   15                    | . expressionLineBreak ";"
   16                    | . expressionLineBreak ","
   17                    | . expressionLineBreak "end of line"

    "end of line"  décalage et aller à l'état 109
    ","            décalage et aller à l'état 110
    ";"            décalage et aller à l'état 111

    $défaut  réduction par utilisation de la règle 7 (expressions)

    expressionLineBreak  aller à l'état 235


état 113

   11 recursiveExpression: expression expressionLineBreak .  ["end of file", error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "line comment"]
   15 expressionLineBreak: expressionLineBreak . ";"
   16                    | expressionLineBreak . ","
   17                    | expressionLineBreak . "end of line"

    "end of line"  décalage et aller à l'état 236
    ","            décalage et aller à l'état 237
    ";"            décalage et aller à l'état 238

    $défaut  réduction par utilisation de la règle 11 (recursiveExpression)


état 114

   33 implicitFunctionCall: implicitFunctionCall implicitCallable .  ["end of file", "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "(", "[", "{", "+", "-", "else", "elseif", "end", "case", "endfunction", "catch", "string", "identifier", "integer", "float", "number", "path", "line comment"]
   43 implicitCallable: implicitCallable . "." "identifier"
   44                 | implicitCallable . "." functionCall
   46                 | implicitCallable . rightOperand
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall

    "."     décalage et aller à l'état 231
    "+"     décalage et aller à l'état 119
    "-"     décalage et aller à l'état 120
    "*"     décalage et aller à l'état 121
    ".*"    décalage et aller à l'état 122
    ".*."   décalage et aller à l'état 123
    "/"     décalage et aller à l'état 124
    "./"    décalage et aller à l'état 125
    "/."    décalage et aller à l'état 126
    "./."   décalage et aller à l'état 127
    "\\"    décalage et aller à l'état 128
    ".\\"   décalage et aller à l'état 129
    ".\\."  décalage et aller à l'état 130

    "+"       [réduction par utilisation de la règle 33 (implicitFunctionCall)]
    "-"       [réduction par utilisation de la règle 33 (implicitFunctionCall)]
    $défaut  réduction par utilisation de la règle 33 (implicitFunctionCall)

    rightOperand  aller à l'état 232


état 115

  130 operation: functionCall "'" .

    $défaut  réduction par utilisation de la règle 130 (operation)


état 116

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  156 listableBegin: ":" . variable
  157              | ":" . functionCall
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 239
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 240
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 117

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  163         | functionCall "." . variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"
  229 assignable: functionCall "." . variable
  230           | functionCall "." . functionCall

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 241
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 242
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 118

  131 operation: functionCall ".'" .

    $défaut  réduction par utilisation de la règle 131 (operation)


état 119

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  132 rightOperand: "+" . variable
  133             | "+" . functionCall
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 243
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 244
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 120

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  134 rightOperand: "-" . variable
  135             | "-" . functionCall
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 245
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 246
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 121

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  136 rightOperand: "*" . variable
  137             | "*" . functionCall
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 247
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 248
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 122

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  138 rightOperand: ".*" . variable
  139             | ".*" . functionCall
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 249
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 250
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 123

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  140 rightOperand: ".*." . variable
  141             | ".*." . functionCall
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 251
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 252
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 124

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  142 rightOperand: "/" . variable
  143             | "/" . functionCall
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 253
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 254
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 125

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  144 rightOperand: "./" . variable
  145             | "./" . functionCall
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 255
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 256
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 126

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  148 rightOperand: "/." . variable
  149             | "/." . functionCall
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 257
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 258
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 127

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  146 rightOperand: "./." . variable
  147             | "./." . functionCall
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 259
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 260
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 128

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  150 rightOperand: "\\" . variable
  151             | "\\" . functionCall
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 261
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 262
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 129

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  152 rightOperand: ".\\" . variable
  153             | ".\\" . functionCall
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 263
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 264
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 130

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  154 rightOperand: ".\\." . variable
  155             | ".\\." . functionCall
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 265
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 266
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 131

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  122          | functionCall "** or ^" . variable
  123          | . functionCall "** or ^" functionCall
  123          | functionCall "** or ^" . functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 267
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 268
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 132

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  126          | functionCall ".^" . variable
  127          | . functionCall ".^" functionCall
  127          | functionCall ".^" . functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 269
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 270
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 133

  327 comparators: "==" .

    $défaut  réduction par utilisation de la règle 327 (comparators)


état 134

  328 comparators: "<> or ~=" .

    $défaut  réduction par utilisation de la règle 328 (comparators)


état 135

  329 comparators: "<" .

    $défaut  réduction par utilisation de la règle 329 (comparators)


état 136

  330 comparators: "<=" .

    $défaut  réduction par utilisation de la règle 330 (comparators)


état 137

  331 comparators: ">" .

    $défaut  réduction par utilisation de la règle 331 (comparators)


état 138

  332 comparators: ">=" .

    $défaut  réduction par utilisation de la règle 332 (comparators)


état 139

  107 logicalComparators: "&" .

    $défaut  réduction par utilisation de la règle 107 (logicalComparators)


état 140

  108 logicalComparators: "&&" .

    $défaut  réduction par utilisation de la règle 108 (logicalComparators)


état 141

  109 logicalComparators: "|" .

    $défaut  réduction par utilisation de la règle 109 (logicalComparators)


état 142

  110 logicalComparators: "||" .

    $défaut  réduction par utilisation de la règle 110 (logicalComparators)


état 143

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"
  221 variableDeclaration: functionCall "=" . variable
  222                    | functionCall "=" . functionCall
  224                    | functionCall "=" . ":"
  226                    | functionCall "=" . returnControl
  325 returnControl: . "return"
  326              | . "return" variable

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    ":"           décalage et aller à l'état 271
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "return"      décalage et aller à l'état 20
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 272
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 273
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    returnControl          aller à l'état 274


état 144

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  106           | functionCall logicalComparators . comparable
  111 comparable: . variable
  112           | . functionCall
  113           | . ":"
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    ":"           décalage et aller à l'état 275
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 276
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    comparable             aller à l'état 277
    operation              aller à l'état 39
    variable               aller à l'état 278
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 145

  115 operation: functionCall rightOperand .

    $défaut  réduction par utilisation de la règle 115 (operation)


état 146

  158 listableEnd: listableBegin . ":" variable
  159            | listableBegin . ":" functionCall
  160            | listableBegin .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "'", "~ or @", "$", ",", ";", "(", ")", "[", "]", "{", "}", ".", ".'", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]

    ":"  décalage et aller à l'état 279

    $défaut  réduction par utilisation de la règle 160 (listableEnd)

Conflit entre la règle 160 et le jeton ":" résolu par décalage (LISTABLE < ":").


état 147

  165 variable: functionCall listableEnd .

    $défaut  réduction par utilisation de la règle 165 (variable)


état 148

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  104           | functionCall comparators . comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  111 comparable: . variable
  112           | . functionCall
  113           | . ":"
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    ":"           décalage et aller à l'état 275
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 276
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    comparable             aller à l'état 280
    operation              aller à l'état 39
    variable               aller à l'état 278
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 149

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   56                      | simpleFunctionCall "(" . functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   58 functionArgs: . variable
   59             | . functionCall
   60             | . ":"
   61             | . variableDeclaration
   62             | .  [",", ")"]
   63             | . functionArgs "," variable
   64             | . functionArgs "," functionCall
   65             | . functionArgs "," ":"
   66             | . functionArgs "," variableDeclaration
   67             | . functionArgs ","
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"
  219 variableDeclaration: . assignable "=" variable
  220                    | . assignable "=" functionCall
  221                    | . functionCall "=" variable
  222                    | . functionCall "=" functionCall
  223                    | . assignable "=" ":"
  224                    | . functionCall "=" ":"
  225                    | . assignable "=" returnControl
  226                    | . functionCall "=" returnControl
  227 assignable: . variable "." "identifier"
  228           | . variable "." functionCall
  229           | . functionCall "." variable
  230           | . functionCall "." functionCall
  231           | . "identifier"
  232           | . multipleResults
  233 multipleResults: . "[" matrixOrCellColumns "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    ":"           décalage et aller à l'état 162
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 8
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 163
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    $défaut  réduction par utilisation de la règle 62 (functionArgs)

    functionCall           aller à l'état 164
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionArgs           aller à l'état 281
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 166
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 167
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45


état 150

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   57                      | recursiveFunctionCall "(" . functionArgs ")"
   58 functionArgs: . variable
   59             | . functionCall
   60             | . ":"
   61             | . variableDeclaration
   62             | .  [",", ")"]
   63             | . functionArgs "," variable
   64             | . functionArgs "," functionCall
   65             | . functionArgs "," ":"
   66             | . functionArgs "," variableDeclaration
   67             | . functionArgs ","
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"
  219 variableDeclaration: . assignable "=" variable
  220                    | . assignable "=" functionCall
  221                    | . functionCall "=" variable
  222                    | . functionCall "=" functionCall
  223                    | . assignable "=" ":"
  224                    | . functionCall "=" ":"
  225                    | . assignable "=" returnControl
  226                    | . functionCall "=" returnControl
  227 assignable: . variable "." "identifier"
  228           | . variable "." functionCall
  229           | . functionCall "." variable
  230           | . functionCall "." functionCall
  231           | . "identifier"
  232           | . multipleResults
  233 multipleResults: . "[" matrixOrCellColumns "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    ":"           décalage et aller à l'état 162
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 8
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 163
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    $défaut  réduction par utilisation de la règle 62 (functionArgs)

    functionCall           aller à l'état 164
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionArgs           aller à l'état 282
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 166
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 167
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45


état 151

  128 operation: variable "'" .

    $défaut  réduction par utilisation de la règle 128 (operation)


état 152

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   55                   | variable "(" . functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   58 functionArgs: . variable
   59             | . functionCall
   60             | . ":"
   61             | . variableDeclaration
   62             | .  [",", ")"]
   63             | . functionArgs "," variable
   64             | . functionArgs "," functionCall
   65             | . functionArgs "," ":"
   66             | . functionArgs "," variableDeclaration
   67             | . functionArgs ","
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"
  219 variableDeclaration: . assignable "=" variable
  220                    | . assignable "=" functionCall
  221                    | . functionCall "=" variable
  222                    | . functionCall "=" functionCall
  223                    | . assignable "=" ":"
  224                    | . functionCall "=" ":"
  225                    | . assignable "=" returnControl
  226                    | . functionCall "=" returnControl
  227 assignable: . variable "." "identifier"
  228           | . variable "." functionCall
  229           | . functionCall "." variable
  230           | . functionCall "." functionCall
  231           | . "identifier"
  232           | . multipleResults
  233 multipleResults: . "[" matrixOrCellColumns "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    ":"           décalage et aller à l'état 162
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 8
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 163
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    $défaut  réduction par utilisation de la règle 62 (functionArgs)

    functionCall           aller à l'état 164
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionArgs           aller à l'état 283
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 166
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 167
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45


état 153

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  162         | variable "." . "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"
  227 assignable: variable "." . "identifier"
  228           | variable "." . functionCall

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 284
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 285
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 106
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 154

  129 operation: variable ".'" .

    $défaut  réduction par utilisation de la règle 129 (operation)


état 155

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  120          | variable "** or ^" . variable
  121          | . variable "** or ^" functionCall
  121          | variable "** or ^" . functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 286
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 287
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 156

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  124          | variable ".^" . variable
  125          | . variable ".^" functionCall
  125          | variable ".^" . functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 288
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 289
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 157

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  105           | variable logicalComparators . comparable
  106           | . functionCall logicalComparators comparable
  111 comparable: . variable
  112           | . functionCall
  113           | . ":"
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    ":"           décalage et aller à l'état 275
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 276
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    comparable             aller à l'état 290
    operation              aller à l'état 39
    variable               aller à l'état 278
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 158

  114 operation: variable rightOperand .

    $défaut  réduction par utilisation de la règle 114 (operation)


état 159

  164 variable: variable listableEnd .

    $défaut  réduction par utilisation de la règle 164 (variable)


état 160

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  103           | variable comparators . comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  111 comparable: . variable
  112           | . functionCall
  113           | . ":"
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    ":"           décalage et aller à l'état 275
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 276
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    comparable             aller à l'état 291
    operation              aller à l'état 39
    variable               aller à l'état 278
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 161

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"
  219 variableDeclaration: assignable "=" . variable
  220                    | assignable "=" . functionCall
  223                    | assignable "=" . ":"
  225                    | assignable "=" . returnControl
  325 returnControl: . "return"
  326              | . "return" variable

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    ":"           décalage et aller à l'état 292
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "return"      décalage et aller à l'état 20
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 293
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 294
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    returnControl          aller à l'état 295


état 162

   60 functionArgs: ":" .

    $défaut  réduction par utilisation de la règle 60 (functionArgs)


état 163

  169 variable: "identifier" .  ["'", ",", ":", "(", ")", ".", ".'", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||"]
  231 assignable: "identifier" .  ["="]

    "="       réduction par utilisation de la règle 231 (assignable)
    $défaut  réduction par utilisation de la règle 169 (variable)


état 164

   59 functionArgs: functionCall .  [",", ")"]
  104 comparison: functionCall . comparators comparable
  106           | functionCall . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  115 operation: functionCall . rightOperand
  122          | functionCall . "** or ^" variable
  123          | functionCall . "** or ^" functionCall
  126          | functionCall . ".^" variable
  127          | functionCall . ".^" functionCall
  130          | functionCall . "'"
  131          | functionCall . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  163 variable: functionCall . "." variable
  165         | functionCall . listableEnd
  221 variableDeclaration: functionCall . "=" variable
  222                    | functionCall . "=" functionCall
  224                    | functionCall . "=" ":"
  226                    | functionCall . "=" returnControl
  229 assignable: functionCall . "." variable
  230           | functionCall . "." functionCall
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"         décalage et aller à l'état 115
    ":"         décalage et aller à l'état 116
    "."         décalage et aller à l'état 117
    ".'"        décalage et aller à l'état 118
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 131
    ".^"        décalage et aller à l'état 132
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "&&"        décalage et aller à l'état 140
    "|"         décalage et aller à l'état 141
    "||"        décalage et aller à l'état 142
    "="         décalage et aller à l'état 143

    $défaut  réduction par utilisation de la règle 59 (functionArgs)

    logicalComparators  aller à l'état 144
    rightOperand        aller à l'état 145
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 147
    comparators         aller à l'état 148


état 165

   53 specificFunctionCall: "%t or %T" "(" functionArgs . ")"
   63 functionArgs: functionArgs . "," variable
   64             | functionArgs . "," functionCall
   65             | functionArgs . "," ":"
   66             | functionArgs . "," variableDeclaration
   67             | functionArgs . ","

    ","  décalage et aller à l'état 296
    ")"  décalage et aller à l'état 297


état 166

   55 simpleFunctionCall: variable . "(" functionArgs ")"
   58 functionArgs: variable .  [",", ")"]
  103 comparison: variable . comparators comparable
  105           | variable . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  114 operation: variable . rightOperand
  120          | variable . "** or ^" variable
  121          | variable . "** or ^" functionCall
  124          | variable . ".^" variable
  125          | variable . ".^" functionCall
  128          | variable . "'"
  129          | variable . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  162 variable: variable . "." "identifier"
  164         | variable . listableEnd
  227 assignable: variable . "." "identifier"
  228           | variable . "." functionCall
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"         décalage et aller à l'état 151
    ":"         décalage et aller à l'état 116
    "("         décalage et aller à l'état 152
    "."         décalage et aller à l'état 153
    ".'"        décalage et aller à l'état 154
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 155
    ".^"        décalage et aller à l'état 156
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "&&"        décalage et aller à l'état 140
    "|"         décalage et aller à l'état 141
    "||"        décalage et aller à l'état 142

    $défaut  réduction par utilisation de la règle 58 (functionArgs)

    logicalComparators  aller à l'état 157
    rightOperand        aller à l'état 158
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 159
    comparators         aller à l'état 160


état 167

   61 functionArgs: variableDeclaration .

    $défaut  réduction par utilisation de la règle 61 (functionArgs)


état 168

   54 specificFunctionCall: "%f or %F" "(" functionArgs . ")"
   63 functionArgs: functionArgs . "," variable
   64             | functionArgs . "," functionCall
   65             | functionArgs . "," ":"
   66             | functionArgs . "," variableDeclaration
   67             | functionArgs . ","

    ","  décalage et aller à l'état 296
    ")"  décalage et aller à l'état 298


état 169

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  197       | "[" matrixOrCellColumns . "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"
  202 matrixOrCellLineBreak: . ";"
  203                      | . "end of line"
  204                      | . ";" "end of line"
  205 matrixOrCellLine: matrixOrCellColumns . matrixOrCellLineBreak
  206                 | matrixOrCellColumns . "line comment" "end of line"
  207                 | matrixOrCellColumns . ";" "line comment" "end of line"
  208                 | matrixOrCellColumns . matrixOrCellColumnsBreak matrixOrCellLineBreak
  209                 | matrixOrCellColumns . matrixOrCellColumnsBreak "line comment" "end of line"
  210                 | matrixOrCellColumns . matrixOrCellColumnsBreak ";" "line comment" "end of line"
  211 matrixOrCellColumns: matrixOrCellColumns . matrixOrCellColumnsBreak variable
  212                    | matrixOrCellColumns . matrixOrCellColumnsBreak functionCall
  213                    | matrixOrCellColumns . variable
  214                    | matrixOrCellColumns . functionCall
  217 matrixOrCellColumnsBreak: . matrixOrCellColumnsBreak ","
  218                         | . ","

    "end of line"   décalage et aller à l'état 182
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    ","             décalage et aller à l'état 183
    ";"             décalage et aller à l'état 184
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 55
    "]"             décalage et aller à l'état 299
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 56
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 186

    functionCall              aller à l'état 187
    specificFunctionCall      aller à l'état 33
    simpleFunctionCall        aller à l'état 34
    recursiveFunctionCall     aller à l'état 35
    comparison                aller à l'état 38
    operation                 aller à l'état 39
    variable                  aller à l'état 188
    cell                      aller à l'état 41
    matrix                    aller à l'état 42
    matrixOrCellLineBreak     aller à l'état 189
    matrixOrCellColumnsBreak  aller à l'état 190


état 170

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  163         | functionCall "." . variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 93
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 300
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 171

  162 variable: variable "." . "identifier"

    "identifier"  décalage et aller à l'état 301


état 172

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  183 variableFields: functionCall "," . functionCall
  184               | functionCall "," . variable
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 302
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 303
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 173

   51 functionCall: "(" functionCall ")" .

    $défaut  réduction par utilisation de la règle 51 (functionCall)


état 174

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  182 variableFields: variable "," . variable
  185               | variable "," . functionCall
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 304
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 305
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 175

  177 variable: "(" variable ")" .

    $défaut  réduction par utilisation de la règle 177 (variable)


état 176

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  180 variableFields: variableFields "," . variable
  181               | variableFields "," . functionCall
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 306
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 307
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 177

  178 variable: "(" variableFields ")" .

    $défaut  réduction par utilisation de la règle 178 (variable)


état 178

  336 lineEnd: "line comment" "end of line" .

    $défaut  réduction par utilisation de la règle 336 (lineEnd)


état 179

  193 matrix: "[" matrixOrCellLines "]" .

    $défaut  réduction par utilisation de la règle 193 (matrix)


état 180

  200 matrixOrCellLines: matrixOrCellLines matrixOrCellLine .

    $défaut  réduction par utilisation de la règle 200 (matrixOrCellLines)


état 181

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  195       | "[" matrixOrCellLines matrixOrCellColumns . "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"
  202 matrixOrCellLineBreak: . ";"
  203                      | . "end of line"
  204                      | . ";" "end of line"
  205 matrixOrCellLine: matrixOrCellColumns . matrixOrCellLineBreak
  206                 | matrixOrCellColumns . "line comment" "end of line"
  207                 | matrixOrCellColumns . ";" "line comment" "end of line"
  208                 | matrixOrCellColumns . matrixOrCellColumnsBreak matrixOrCellLineBreak
  209                 | matrixOrCellColumns . matrixOrCellColumnsBreak "line comment" "end of line"
  210                 | matrixOrCellColumns . matrixOrCellColumnsBreak ";" "line comment" "end of line"
  211 matrixOrCellColumns: matrixOrCellColumns . matrixOrCellColumnsBreak variable
  212                    | matrixOrCellColumns . matrixOrCellColumnsBreak functionCall
  213                    | matrixOrCellColumns . variable
  214                    | matrixOrCellColumns . functionCall
  217 matrixOrCellColumnsBreak: . matrixOrCellColumnsBreak ","
  218                         | . ","

    "end of line"   décalage et aller à l'état 182
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    ","             décalage et aller à l'état 183
    ";"             décalage et aller à l'état 184
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 55
    "]"             décalage et aller à l'état 308
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 56
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 186

    functionCall              aller à l'état 187
    specificFunctionCall      aller à l'état 33
    simpleFunctionCall        aller à l'état 34
    recursiveFunctionCall     aller à l'état 35
    comparison                aller à l'état 38
    operation                 aller à l'état 39
    variable                  aller à l'état 188
    cell                      aller à l'état 41
    matrix                    aller à l'état 42
    matrixOrCellLineBreak     aller à l'état 189
    matrixOrCellColumnsBreak  aller à l'état 190


état 182

  203 matrixOrCellLineBreak: "end of line" .

    $défaut  réduction par utilisation de la règle 203 (matrixOrCellLineBreak)


état 183

  218 matrixOrCellColumnsBreak: "," .

    $défaut  réduction par utilisation de la règle 218 (matrixOrCellColumnsBreak)


état 184

  202 matrixOrCellLineBreak: ";" .  ["%t or %T", "%f or %F", "~ or @", "$", "(", "[", "]", "{", "}", "+", "-", "string", "identifier", "integer", "float", "number"]
  204                      | ";" . "end of line"
  207 matrixOrCellLine: matrixOrCellColumns ";" . "line comment" "end of line"

    "end of line"   décalage et aller à l'état 309
    "line comment"  décalage et aller à l'état 310

    $défaut  réduction par utilisation de la règle 202 (matrixOrCellLineBreak)


état 185

  197 matrix: "[" matrixOrCellColumns "]" .  ["end of file", "end of line", "'", ",", ":", ";", "(", ")", ".", ".'", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "else", "elseif", "end", "case", "endfunction", "catch", "line comment"]
  233 multipleResults: "[" matrixOrCellColumns "]" .  ["="]

    "="       réduction par utilisation de la règle 233 (multipleResults)
    $défaut  réduction par utilisation de la règle 197 (matrix)


état 186

  206 matrixOrCellLine: matrixOrCellColumns "line comment" . "end of line"

    "end of line"  décalage et aller à l'état 311


état 187

  104 comparison: functionCall . comparators comparable
  106           | functionCall . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  115 operation: functionCall . rightOperand
  122          | functionCall . "** or ^" variable
  123          | functionCall . "** or ^" functionCall
  126          | functionCall . ".^" variable
  127          | functionCall . ".^" functionCall
  130          | functionCall . "'"
  131          | functionCall . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  163 variable: functionCall . "." variable
  165         | functionCall . listableEnd
  214 matrixOrCellColumns: matrixOrCellColumns functionCall .  ["end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "(", "[", "]", "{", "}", "string", "identifier", "integer", "float", "number", "line comment"]
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"         décalage et aller à l'état 115
    ":"         décalage et aller à l'état 116
    "."         décalage et aller à l'état 170
    ".'"        décalage et aller à l'état 118
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 131
    ".^"        décalage et aller à l'état 132
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "&&"        décalage et aller à l'état 140
    "|"         décalage et aller à l'état 141
    "||"        décalage et aller à l'état 142

    $défaut  réduction par utilisation de la règle 214 (matrixOrCellColumns)

    logicalComparators  aller à l'état 144
    rightOperand        aller à l'état 145
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 147
    comparators         aller à l'état 148

Conflit entre la règle 214 et le jeton "+" résolu par décalage (HIGHLEVEL < "+").
Conflit entre la règle 214 et le jeton "-" résolu par décalage (HIGHLEVEL < "-").


état 188

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  105           | variable . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  114 operation: variable . rightOperand
  120          | variable . "** or ^" variable
  121          | variable . "** or ^" functionCall
  124          | variable . ".^" variable
  125          | variable . ".^" functionCall
  128          | variable . "'"
  129          | variable . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  162 variable: variable . "." "identifier"
  164         | variable . listableEnd
  213 matrixOrCellColumns: matrixOrCellColumns variable .  ["end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "[", "]", "{", "}", "string", "identifier", "integer", "float", "number", "line comment"]
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"         décalage et aller à l'état 151
    ":"         décalage et aller à l'état 116
    "("         décalage et aller à l'état 152
    "."         décalage et aller à l'état 171
    ".'"        décalage et aller à l'état 154
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 155
    ".^"        décalage et aller à l'état 156
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "&&"        décalage et aller à l'état 140
    "|"         décalage et aller à l'état 141
    "||"        décalage et aller à l'état 142

    $défaut  réduction par utilisation de la règle 213 (matrixOrCellColumns)

    logicalComparators  aller à l'état 157
    rightOperand        aller à l'état 158
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 159
    comparators         aller à l'état 160

Conflit entre la règle 213 et le jeton "(" résolu par décalage (HIGHLEVEL < "(").
Conflit entre la règle 213 et le jeton "+" résolu par décalage (HIGHLEVEL < "+").
Conflit entre la règle 213 et le jeton "-" résolu par décalage (HIGHLEVEL < "-").


état 189

  205 matrixOrCellLine: matrixOrCellColumns matrixOrCellLineBreak .

    $défaut  réduction par utilisation de la règle 205 (matrixOrCellLine)


état 190

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"
  202 matrixOrCellLineBreak: . ";"
  203                      | . "end of line"
  204                      | . ";" "end of line"
  208 matrixOrCellLine: matrixOrCellColumns matrixOrCellColumnsBreak . matrixOrCellLineBreak
  209                 | matrixOrCellColumns matrixOrCellColumnsBreak . "line comment" "end of line"
  210                 | matrixOrCellColumns matrixOrCellColumnsBreak . ";" "line comment" "end of line"
  211 matrixOrCellColumns: matrixOrCellColumns matrixOrCellColumnsBreak . variable
  212                    | matrixOrCellColumns matrixOrCellColumnsBreak . functionCall
  217 matrixOrCellColumnsBreak: matrixOrCellColumnsBreak . ","

    "end of line"   décalage et aller à l'état 182
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    ","             décalage et aller à l'état 312
    ";"             décalage et aller à l'état 313
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 55
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 56
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 314

    functionCall           aller à l'état 315
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 316
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    matrixOrCellLineBreak  aller à l'état 317


état 191

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  194       | "[" lineEnd matrixOrCellLines . "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  196       | "[" lineEnd matrixOrCellLines . matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"
  200 matrixOrCellLines: matrixOrCellLines . matrixOrCellLine
  205 matrixOrCellLine: . matrixOrCellColumns matrixOrCellLineBreak
  206                 | . matrixOrCellColumns "line comment" "end of line"
  207                 | . matrixOrCellColumns ";" "line comment" "end of line"
  208                 | . matrixOrCellColumns matrixOrCellColumnsBreak matrixOrCellLineBreak
  209                 | . matrixOrCellColumns matrixOrCellColumnsBreak "line comment" "end of line"
  210                 | . matrixOrCellColumns matrixOrCellColumnsBreak ";" "line comment" "end of line"
  211 matrixOrCellColumns: . matrixOrCellColumns matrixOrCellColumnsBreak variable
  212                    | . matrixOrCellColumns matrixOrCellColumnsBreak functionCall
  213                    | . matrixOrCellColumns variable
  214                    | . matrixOrCellColumns functionCall
  215                    | . variable
  216                    | . functionCall

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "]"           décalage et aller à l'état 318
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 65
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 66
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    matrixOrCellLine       aller à l'état 180
    matrixOrCellColumns    aller à l'état 319


état 192

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  198       | "[" lineEnd matrixOrCellColumns . "]"
  199       | . "[" "]"
  202 matrixOrCellLineBreak: . ";"
  203                      | . "end of line"
  204                      | . ";" "end of line"
  205 matrixOrCellLine: matrixOrCellColumns . matrixOrCellLineBreak
  206                 | matrixOrCellColumns . "line comment" "end of line"
  207                 | matrixOrCellColumns . ";" "line comment" "end of line"
  208                 | matrixOrCellColumns . matrixOrCellColumnsBreak matrixOrCellLineBreak
  209                 | matrixOrCellColumns . matrixOrCellColumnsBreak "line comment" "end of line"
  210                 | matrixOrCellColumns . matrixOrCellColumnsBreak ";" "line comment" "end of line"
  211 matrixOrCellColumns: matrixOrCellColumns . matrixOrCellColumnsBreak variable
  212                    | matrixOrCellColumns . matrixOrCellColumnsBreak functionCall
  213                    | matrixOrCellColumns . variable
  214                    | matrixOrCellColumns . functionCall
  217 matrixOrCellColumnsBreak: . matrixOrCellColumnsBreak ","
  218                         | . ","

    "end of line"   décalage et aller à l'état 182
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    ","             décalage et aller à l'état 183
    ";"             décalage et aller à l'état 184
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 55
    "]"             décalage et aller à l'état 320
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 56
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 186

    functionCall              aller à l'état 187
    specificFunctionCall      aller à l'état 33
    simpleFunctionCall        aller à l'état 34
    recursiveFunctionCall     aller à l'état 35
    comparison                aller à l'état 38
    operation                 aller à l'état 39
    variable                  aller à l'état 188
    cell                      aller à l'état 41
    matrix                    aller à l'état 42
    matrixOrCellLineBreak     aller à l'état 189
    matrixOrCellColumnsBreak  aller à l'état 190


état 193

  186 cell: "{" matrixOrCellLines "}" .

    $défaut  réduction par utilisation de la règle 186 (cell)


état 194

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  188     | "{" matrixOrCellLines matrixOrCellColumns . "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"
  202 matrixOrCellLineBreak: . ";"
  203                      | . "end of line"
  204                      | . ";" "end of line"
  205 matrixOrCellLine: matrixOrCellColumns . matrixOrCellLineBreak
  206                 | matrixOrCellColumns . "line comment" "end of line"
  207                 | matrixOrCellColumns . ";" "line comment" "end of line"
  208                 | matrixOrCellColumns . matrixOrCellColumnsBreak matrixOrCellLineBreak
  209                 | matrixOrCellColumns . matrixOrCellColumnsBreak "line comment" "end of line"
  210                 | matrixOrCellColumns . matrixOrCellColumnsBreak ";" "line comment" "end of line"
  211 matrixOrCellColumns: matrixOrCellColumns . matrixOrCellColumnsBreak variable
  212                    | matrixOrCellColumns . matrixOrCellColumnsBreak functionCall
  213                    | matrixOrCellColumns . variable
  214                    | matrixOrCellColumns . functionCall
  217 matrixOrCellColumnsBreak: . matrixOrCellColumnsBreak ","
  218                         | . ","

    "end of line"   décalage et aller à l'état 182
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    ","             décalage et aller à l'état 183
    ";"             décalage et aller à l'état 184
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 55
    "{"             décalage et aller à l'état 9
    "}"             décalage et aller à l'état 321
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 56
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 186

    functionCall              aller à l'état 187
    specificFunctionCall      aller à l'état 33
    simpleFunctionCall        aller à l'état 34
    recursiveFunctionCall     aller à l'état 35
    comparison                aller à l'état 38
    operation                 aller à l'état 39
    variable                  aller à l'état 188
    cell                      aller à l'état 41
    matrix                    aller à l'état 42
    matrixOrCellLineBreak     aller à l'état 189
    matrixOrCellColumnsBreak  aller à l'état 190


état 195

  190 cell: "{" matrixOrCellColumns "}" .

    $défaut  réduction par utilisation de la règle 190 (cell)


état 196

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  187     | "{" lineEnd matrixOrCellLines . "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  189     | "{" lineEnd matrixOrCellLines . matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"
  200 matrixOrCellLines: matrixOrCellLines . matrixOrCellLine
  205 matrixOrCellLine: . matrixOrCellColumns matrixOrCellLineBreak
  206                 | . matrixOrCellColumns "line comment" "end of line"
  207                 | . matrixOrCellColumns ";" "line comment" "end of line"
  208                 | . matrixOrCellColumns matrixOrCellColumnsBreak matrixOrCellLineBreak
  209                 | . matrixOrCellColumns matrixOrCellColumnsBreak "line comment" "end of line"
  210                 | . matrixOrCellColumns matrixOrCellColumnsBreak ";" "line comment" "end of line"
  211 matrixOrCellColumns: . matrixOrCellColumns matrixOrCellColumnsBreak variable
  212                    | . matrixOrCellColumns matrixOrCellColumnsBreak functionCall
  213                    | . matrixOrCellColumns variable
  214                    | . matrixOrCellColumns functionCall
  215                    | . variable
  216                    | . functionCall

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "}"           décalage et aller à l'état 322
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 65
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 66
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    matrixOrCellLine       aller à l'état 180
    matrixOrCellColumns    aller à l'état 323


état 197

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  191     | "{" lineEnd matrixOrCellColumns . "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"
  202 matrixOrCellLineBreak: . ";"
  203                      | . "end of line"
  204                      | . ";" "end of line"
  205 matrixOrCellLine: matrixOrCellColumns . matrixOrCellLineBreak
  206                 | matrixOrCellColumns . "line comment" "end of line"
  207                 | matrixOrCellColumns . ";" "line comment" "end of line"
  208                 | matrixOrCellColumns . matrixOrCellColumnsBreak matrixOrCellLineBreak
  209                 | matrixOrCellColumns . matrixOrCellColumnsBreak "line comment" "end of line"
  210                 | matrixOrCellColumns . matrixOrCellColumnsBreak ";" "line comment" "end of line"
  211 matrixOrCellColumns: matrixOrCellColumns . matrixOrCellColumnsBreak variable
  212                    | matrixOrCellColumns . matrixOrCellColumnsBreak functionCall
  213                    | matrixOrCellColumns . variable
  214                    | matrixOrCellColumns . functionCall
  217 matrixOrCellColumnsBreak: . matrixOrCellColumnsBreak ","
  218                         | . ","

    "end of line"   décalage et aller à l'état 182
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    ","             décalage et aller à l'état 183
    ";"             décalage et aller à l'état 184
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 55
    "{"             décalage et aller à l'état 9
    "}"             décalage et aller à l'état 324
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 56
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 186

    functionCall              aller à l'état 187
    specificFunctionCall      aller à l'état 33
    simpleFunctionCall        aller à l'état 34
    recursiveFunctionCall     aller à l'état 35
    comparison                aller à l'état 38
    operation                 aller à l'état 39
    variable                  aller à l'état 188
    cell                      aller à l'état 41
    matrix                    aller à l'état 42
    matrixOrCellLineBreak     aller à l'état 189
    matrixOrCellColumnsBreak  aller à l'état 190


état 198

  245 ifConditionBreak: "end of line" .

    $défaut  réduction par utilisation de la règle 245 (ifConditionBreak)


état 199

  243 ifConditionBreak: "," .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "then", "else", "elseif", "end", "select", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  244                 | "," . "end of line"

    "end of line"  décalage et aller à l'état 325

    $défaut  réduction par utilisation de la règle 243 (ifConditionBreak)


état 200

  241 ifConditionBreak: ";" .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "then", "else", "elseif", "end", "select", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  242                 | ";" . "end of line"

    "end of line"  décalage et aller à l'état 326

    $défaut  réduction par utilisation de la règle 241 (ifConditionBreak)


état 201

  241 ifConditionBreak: . ";"
  242                 | . ";" "end of line"
  243                 | . ","
  244                 | . "," "end of line"
  245                 | . "end of line"
  246 then: "then" .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "else", "elseif", "end", "select", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  249     | "then" . ifConditionBreak

    "end of line"  décalage et aller à l'état 198
    ","            décalage et aller à l'état 199
    ";"            décalage et aller à l'état 200

    $défaut  réduction par utilisation de la règle 246 (then)

    ifConditionBreak  aller à l'état 327


état 202

  247 then: ifConditionBreak . "then"
  248     | ifConditionBreak . "then" "end of line"
  250     | ifConditionBreak .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "else", "elseif", "end", "select", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]

    "then"  décalage et aller à l'état 328

    $défaut  réduction par utilisation de la règle 250 (then)


état 203

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"
  219 variableDeclaration: . assignable "=" variable
  220                    | . assignable "=" functionCall
  221                    | . functionCall "=" variable
  222                    | . functionCall "=" functionCall
  223                    | . assignable "=" ":"
  224                    | . functionCall "=" ":"
  225                    | . assignable "=" returnControl
  226                    | . functionCall "=" returnControl
  227 assignable: . variable "." "identifier"
  228           | . variable "." functionCall
  229           | . functionCall "." variable
  230           | . functionCall "." functionCall
  231           | . "identifier"
  232           | . multipleResults
  233 multipleResults: . "[" matrixOrCellColumns "]"
  234 ifControl: . "if" condition then thenBody "end"
  234          | "if" condition then . thenBody "end"
  235          | . "if" condition then thenBody else elseBody "end"
  235          | "if" condition then . thenBody else elseBody "end"
  236          | . "if" condition then thenBody elseIfControl "end"
  236          | "if" condition then . thenBody elseIfControl "end"
  237 thenBody: . expressions
  238         | .  ["else", "elseif", "end"]
  261 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  262              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  263              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  264              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  287 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  288           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  301 whileControl: . "while" condition whileConditionBreak whileBody "end"
  321 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  322           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  323           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  324           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  325 returnControl: . "return"
  326              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "else"    réduction par utilisation de la règle 238 (thenBody)
    "elseif"  réduction par utilisation de la règle 238 (thenBody)
    "end"     réduction par utilisation de la règle 238 (thenBody)

    expressions            aller à l'état 329
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    thenBody               aller à l'état 330
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 204

  267 selectConditionBreak: "end of line" .

    $défaut  réduction par utilisation de la règle 267 (selectConditionBreak)


état 205

  268 selectConditionBreak: "," . "end of line"

    "end of line"  décalage et aller à l'état 331


état 206

  269 selectConditionBreak: ";" . "end of line"

    "end of line"  décalage et aller à l'état 332


état 207

  263 selectControl: "select" selectable "line comment" . selectConditionBreak casesControl "end"
  264              | "select" selectable "line comment" . selectConditionBreak casesControl else elseBody "end"
  267 selectConditionBreak: . "end of line"
  268                     | . "," "end of line"
  269                     | . ";" "end of line"

    "end of line"  décalage et aller à l'état 204
    ","            décalage et aller à l'état 205
    ";"            décalage et aller à l'état 206

    selectConditionBreak  aller à l'état 333


état 208

  261 selectControl: "select" selectable selectConditionBreak . casesControl "end"
  262              | "select" selectable selectConditionBreak . casesControl else elseBody "end"
  270 casesControl: . "case" variable caseControlBreak caseBody
  271             | . comments "case" variable caseControlBreak caseBody
  272             | . "case" variable "line comment" "end of line" caseBody
  273             | . comments "case" variable "line comment" "end of line" caseBody
  274             | . casesControl "case" variable caseControlBreak caseBody
  275             | . casesControl "case" variable "line comment" "end of line" caseBody
  333 comments: . "line comment" "end of line"
  334         | . comments "line comment" "end of line"

    "case"          décalage et aller à l'état 334
    "line comment"  décalage et aller à l'état 335

    casesControl  aller à l'état 336
    comments      aller à l'état 337


état 209

   70 functionDeclaration: "function" "[" "]" . "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"

    "="  décalage et aller à l'état 338


état 210

   77 idList: "identifier" .

    $défaut  réduction par utilisation de la règle 77 (idList)


état 211

   69 functionDeclaration: "function" "[" functionDeclarationReturns . "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"

    "]"  décalage et aller à l'état 339


état 212

   72 functionDeclarationReturns: idList .  ["]"]
   76 idList: idList . "," "identifier"

    ","  décalage et aller à l'état 340

    $défaut  réduction par utilisation de la règle 72 (functionDeclarationReturns)


état 213

   73 functionDeclarationArguments: "(" . idList ")"
   74                             | "(" . ")"
   76 idList: . idList "," "identifier"
   77       | . "identifier"

    ")"           décalage et aller à l'état 341
    "identifier"  décalage et aller à l'état 210

    idList  aller à l'état 342


état 214

   68 functionDeclaration: "function" "identifier" "=" . "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"

    "identifier"  décalage et aller à l'état 343


état 215

   71 functionDeclaration: "function" "identifier" functionDeclarationArguments . functionDeclarationBreak functionBody "endfunction"
   78 functionDeclarationBreak: . lineEnd
   79                         | . ";"
   80                         | . ";" "end of line"
   81                         | . ","
   82                         | . "," "end of line"
  335 lineEnd: . "end of line"
  336        | . "line comment" "end of line"

    "end of line"   décalage et aller à l'état 62
    ","             décalage et aller à l'état 216
    ";"             décalage et aller à l'état 217
    "line comment"  décalage et aller à l'état 64

    functionDeclarationBreak  aller à l'état 344
    lineEnd                   aller à l'état 220


état 216

   81 functionDeclarationBreak: "," .  [error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "(", "[", "{", "+", "-", "if", "select", "function", "endfunction", "class", "endclass", "property", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
   82                         | "," . "end of line"

    "end of line"  décalage et aller à l'état 345

    "end of line"  [réduction par utilisation de la règle 81 (functionDeclarationBreak)]
    $défaut       réduction par utilisation de la règle 81 (functionDeclarationBreak)


état 217

   79 functionDeclarationBreak: ";" .  [error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "(", "[", "{", "+", "-", "if", "select", "function", "endfunction", "class", "endclass", "property", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
   80                         | ";" . "end of line"

    "end of line"  décalage et aller à l'état 346

    "end of line"  [réduction par utilisation de la règle 79 (functionDeclarationBreak)]
    $défaut       réduction par utilisation de la règle 79 (functionDeclarationBreak)


état 218

   85 classDeclaration: "class" "identifier" "<" . "identifier" functionDeclarationBreak slotsDeclaration "endclass"

    "identifier"  décalage et aller à l'état 347


état 219

   86 classDeclaration: "class" "identifier" functionDeclarationBreak . slotsDeclaration "endclass"
   87 slotsDeclaration: . slotsDeclaration slotDeclaration functionDeclarationBreak
   88                 | . slotsDeclaration functionDeclarationBreak
   89                 | .

    $défaut  réduction par utilisation de la règle 89 (slotsDeclaration)

    slotsDeclaration  aller à l'état 348


état 220

   78 functionDeclarationBreak: lineEnd .

    $défaut  réduction par utilisation de la règle 78 (functionDeclarationBreak)


état 221

  288 forControl: "for" "(" "identifier" . "=" forIterator ")" forConditionBreak forBody "end"

    "="  décalage et aller à l'état 349


état 222

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"
  287 forControl: "for" "identifier" "=" . forIterator forConditionBreak forBody "end"
  289 forIterator: . functionCall
  290            | . variable

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 350
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 351
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    forIterator            aller à l'état 352


état 223

  304 whileConditionBreak: "," .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "end", "select", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  313                    | "," . "end of line"

    "end of line"  décalage et aller à l'état 353

    $défaut  réduction par utilisation de la règle 304 (whileConditionBreak)


état 224

  305 whileConditionBreak: ";" .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "end", "select", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  314                    | ";" . "end of line"

    "end of line"  décalage et aller à l'état 354

    $défaut  réduction par utilisation de la règle 305 (whileConditionBreak)


état 225

  309 whileConditionBreak: "then" .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "end", "select", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  310                    | "then" . ","
  311                    | "then" . ";"
  318                    | "then" . "end of line"
  319                    | "then" . "," "end of line"
  320                    | "then" . ";" "end of line"

    "end of line"  décalage et aller à l'état 355
    ","            décalage et aller à l'état 356
    ";"            décalage et aller à l'état 357

    $défaut  réduction par utilisation de la règle 309 (whileConditionBreak)


état 226

  306 whileConditionBreak: "do" .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "end", "select", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  307                    | "do" . ","
  308                    | "do" . ";"
  315                    | "do" . "end of line"
  316                    | "do" . "," "end of line"
  317                    | "do" . ";" "end of line"

    "end of line"  décalage et aller à l'état 358
    ","            décalage et aller à l'état 359
    ";"            décalage et aller à l'état 360

    $défaut  réduction par utilisation de la règle 306 (whileConditionBreak)


état 227

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"
  219 variableDeclaration: . assignable "=" variable
  220                    | . assignable "=" functionCall
  221                    | . functionCall "=" variable
  222                    | . functionCall "=" functionCall
  223                    | . assignable "=" ":"
  224                    | . functionCall "=" ":"
  225                    | . assignable "=" returnControl
  226                    | . functionCall "=" returnControl
  227 assignable: . variable "." "identifier"
  228           | . variable "." functionCall
  229           | . functionCall "." variable
  230           | . functionCall "." functionCall
  231           | . "identifier"
  232           | . multipleResults
  233 multipleResults: . "[" matrixOrCellColumns "]"
  234 ifControl: . "if" condition then thenBody "end"
  235          | . "if" condition then thenBody else elseBody "end"
  236          | . "if" condition then thenBody elseIfControl "end"
  261 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  262              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  263              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  264              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  287 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  288           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  301 whileControl: . "while" condition whileConditionBreak whileBody "end"
  301             | "while" condition whileConditionBreak . whileBody "end"
  302 whileBody: . expressions
  303          | .  ["end"]
  321 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  322           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  323           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  324           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  325 returnControl: . "return"
  326              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "end"  réduction par utilisation de la règle 303 (whileBody)

    expressions            aller à l'état 361
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    whileBody              aller à l'état 362
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 228

  312 whileConditionBreak: lineEnd .

    $défaut  réduction par utilisation de la règle 312 (whileConditionBreak)


état 229

  321 tryControl: "try" "end of line" expressions . "catch" "end of line" expressions "end"
  323           | "try" "end of line" expressions . "catch" "line comment" "end of line" expressions "end"

    "catch"  décalage et aller à l'état 363


état 230

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"
  219 variableDeclaration: . assignable "=" variable
  220                    | . assignable "=" functionCall
  221                    | . functionCall "=" variable
  222                    | . functionCall "=" functionCall
  223                    | . assignable "=" ":"
  224                    | . functionCall "=" ":"
  225                    | . assignable "=" returnControl
  226                    | . functionCall "=" returnControl
  227 assignable: . variable "." "identifier"
  228           | . variable "." functionCall
  229           | . functionCall "." variable
  230           | . functionCall "." functionCall
  231           | . "identifier"
  232           | . multipleResults
  233 multipleResults: . "[" matrixOrCellColumns "]"
  234 ifControl: . "if" condition then thenBody "end"
  235          | . "if" condition then thenBody else elseBody "end"
  236          | . "if" condition then thenBody elseIfControl "end"
  261 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  262              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  263              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  264              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  287 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  288           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  301 whileControl: . "while" condition whileConditionBreak whileBody "end"
  321 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  322           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  322           | "try" "line comment" "end of line" . expressions "catch" "end of line" expressions "end"
  323           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  324           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  324           | "try" "line comment" "end of line" . expressions "catch" "line comment" "end of line" expressions "end"
  325 returnControl: . "return"
  326              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    expressions            aller à l'état 364
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 231

   43 implicitCallable: implicitCallable "." . "identifier"
   44                 | implicitCallable "." . functionCall
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 365
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 366
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 106
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 232

   46 implicitCallable: implicitCallable rightOperand .

    $défaut  réduction par utilisation de la règle 46 (implicitCallable)


état 233

    5 expressions: recursiveExpression expression "line comment" .  ["end of file", "else", "elseif", "end", "case", "endfunction", "catch"]
    9 recursiveExpression: recursiveExpression expression "line comment" . expressionLineBreak
   12 expressionLineBreak: . ";"
   13                    | . ","
   14                    | . "end of line"
   15                    | . expressionLineBreak ";"
   16                    | . expressionLineBreak ","
   17                    | . expressionLineBreak "end of line"

    "end of line"  décalage et aller à l'état 109
    ","            décalage et aller à l'état 110
    ";"            décalage et aller à l'état 111

    $défaut  réduction par utilisation de la règle 5 (expressions)

    expressionLineBreak  aller à l'état 367


état 234

    8 recursiveExpression: recursiveExpression expression expressionLineBreak .  ["end of file", error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "line comment"]
   15 expressionLineBreak: expressionLineBreak . ";"
   16                    | expressionLineBreak . ","
   17                    | expressionLineBreak . "end of line"

    "end of line"  décalage et aller à l'état 236
    ","            décalage et aller à l'état 237
    ";"            décalage et aller à l'état 238

    $défaut  réduction par utilisation de la règle 8 (recursiveExpression)


état 235

   10 recursiveExpression: expression "line comment" expressionLineBreak .  ["end of file", error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "line comment"]
   15 expressionLineBreak: expressionLineBreak . ";"
   16                    | expressionLineBreak . ","
   17                    | expressionLineBreak . "end of line"

    "end of line"  décalage et aller à l'état 236
    ","            décalage et aller à l'état 237
    ";"            décalage et aller à l'état 238

    $défaut  réduction par utilisation de la règle 10 (recursiveExpression)


état 236

   17 expressionLineBreak: expressionLineBreak "end of line" .

    $défaut  réduction par utilisation de la règle 17 (expressionLineBreak)


état 237

   16 expressionLineBreak: expressionLineBreak "," .

    $défaut  réduction par utilisation de la règle 16 (expressionLineBreak)


état 238

   15 expressionLineBreak: expressionLineBreak ";" .

    $défaut  réduction par utilisation de la règle 15 (expressionLineBreak)


état 239

  104 comparison: functionCall . comparators comparable
  106           | functionCall . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  115 operation: functionCall . rightOperand
  122          | functionCall . "** or ^" variable
  123          | functionCall . "** or ^" functionCall
  126          | functionCall . ".^" variable
  127          | functionCall . ".^" functionCall
  130          | functionCall . "'"
  131          | functionCall . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  157              | ":" functionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "&", "&&", "|", "||", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  163 variable: functionCall . "." variable
  165         | functionCall . listableEnd
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"         décalage et aller à l'état 115
    "."         décalage et aller à l'état 170
    ".'"        décalage et aller à l'état 118
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 131
    ".^"        décalage et aller à l'état 132
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138

    $défaut  réduction par utilisation de la règle 157 (listableBegin)

    logicalComparators  aller à l'état 144
    rightOperand        aller à l'état 145
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 147
    comparators         aller à l'état 148

Conflit entre la règle 157 et le jeton "'" résolu par décalage (COLON < "'").
Conflit entre la règle 157 et le jeton ":" résolu par réduction (%left ":").
Conflit entre la règle 157 et le jeton "." résolu par décalage (COLON < ".").
Conflit entre la règle 157 et le jeton ".'" résolu par décalage (COLON < ".'").
Conflit entre la règle 157 et le jeton "+" résolu par décalage (COLON < "+").
Conflit entre la règle 157 et le jeton "-" résolu par décalage (COLON < "-").
Conflit entre la règle 157 et le jeton "*" résolu par décalage (COLON < "*").
Conflit entre la règle 157 et le jeton ".*" résolu par décalage (COLON < ".*").
Conflit entre la règle 157 et le jeton ".*." résolu par décalage (COLON < ".*.").
Conflit entre la règle 157 et le jeton "/" résolu par décalage (COLON < "/").
Conflit entre la règle 157 et le jeton "./" résolu par décalage (COLON < "./").
Conflit entre la règle 157 et le jeton "/." résolu par décalage (COLON < "/.").
Conflit entre la règle 157 et le jeton "./." résolu par décalage (COLON < "./.").
Conflit entre la règle 157 et le jeton "\\" résolu par décalage (COLON < "\\").
Conflit entre la règle 157 et le jeton ".\\" résolu par décalage (COLON < ".\\").
Conflit entre la règle 157 et le jeton ".\\." résolu par décalage (COLON < ".\\.").
Conflit entre la règle 157 et le jeton "** or ^" résolu par décalage (COLON < "** or ^").
Conflit entre la règle 157 et le jeton ".^" résolu par décalage (COLON < ".^").
Conflit entre la règle 157 et le jeton "==" résolu par décalage (COLON < "==").
Conflit entre la règle 157 et le jeton "<> or ~=" résolu par décalage (COLON < "<> or ~=").
Conflit entre la règle 157 et le jeton "<" résolu par décalage (COLON < "<").
Conflit entre la règle 157 et le jeton "<=" résolu par décalage (COLON < "<=").
Conflit entre la règle 157 et le jeton ">" résolu par décalage (COLON < ">").
Conflit entre la règle 157 et le jeton ">=" résolu par décalage (COLON < ">=").
Conflit entre la règle 157 et le jeton "&" résolu par réduction ("&" < COLON).
Conflit entre la règle 157 et le jeton "&&" résolu par réduction ("&&" < COLON).
Conflit entre la règle 157 et le jeton "|" résolu par réduction ("|" < COLON).
Conflit entre la règle 157 et le jeton "||" résolu par réduction ("||" < COLON).


état 240

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  105           | variable . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  114 operation: variable . rightOperand
  120          | variable . "** or ^" variable
  121          | variable . "** or ^" functionCall
  124          | variable . ".^" variable
  125          | variable . ".^" functionCall
  128          | variable . "'"
  129          | variable . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  156              | ":" variable .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "&", "&&", "|", "||", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  162 variable: variable . "." "identifier"
  164         | variable . listableEnd
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"         décalage et aller à l'état 151
    "."         décalage et aller à l'état 171
    ".'"        décalage et aller à l'état 154
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 155
    ".^"        décalage et aller à l'état 156
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138

    $défaut  réduction par utilisation de la règle 156 (listableBegin)

    logicalComparators  aller à l'état 157
    rightOperand        aller à l'état 158
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 159
    comparators         aller à l'état 160

Conflit entre la règle 156 et le jeton "'" résolu par décalage (COLON < "'").
Conflit entre la règle 156 et le jeton ":" résolu par réduction (%left ":").
Conflit entre la règle 156 et le jeton "(" résolu par réduction ("(" < COLON).
Conflit entre la règle 156 et le jeton "." résolu par décalage (COLON < ".").
Conflit entre la règle 156 et le jeton ".'" résolu par décalage (COLON < ".'").
Conflit entre la règle 156 et le jeton "+" résolu par décalage (COLON < "+").
Conflit entre la règle 156 et le jeton "-" résolu par décalage (COLON < "-").
Conflit entre la règle 156 et le jeton "*" résolu par décalage (COLON < "*").
Conflit entre la règle 156 et le jeton ".*" résolu par décalage (COLON < ".*").
Conflit entre la règle 156 et le jeton ".*." résolu par décalage (COLON < ".*.").
Conflit entre la règle 156 et le jeton "/" résolu par décalage (COLON < "/").
Conflit entre la règle 156 et le jeton "./" résolu par décalage (COLON < "./").
Conflit entre la règle 156 et le jeton "/." résolu par décalage (COLON < "/.").
Conflit entre la règle 156 et le jeton "./." résolu par décalage (COLON < "./.").
Conflit entre la règle 156 et le jeton "\\" résolu par décalage (COLON < "\\").
Conflit entre la règle 156 et le jeton ".\\" résolu par décalage (COLON < ".\\").
Conflit entre la règle 156 et le jeton ".\\." résolu par décalage (COLON < ".\\.").
Conflit entre la règle 156 et le jeton "** or ^" résolu par décalage (COLON < "** or ^").
Conflit entre la règle 156 et le jeton ".^" résolu par décalage (COLON < ".^").
Conflit entre la règle 156 et le jeton "==" résolu par décalage (COLON < "==").
Conflit entre la règle 156 et le jeton "<> or ~=" résolu par décalage (COLON < "<> or ~=").
Conflit entre la règle 156 et le jeton "<" résolu par décalage (COLON < "<").
Conflit entre la règle 156 et le jeton "<=" résolu par décalage (COLON < "<=").
Conflit entre la règle 156 et le jeton ">" résolu par décalage (COLON < ">").
Conflit entre la règle 156 et le jeton ">=" résolu par décalage (COLON < ">=").
Conflit entre la règle 156 et le jeton "&" résolu par réduction ("&" < COLON).
Conflit entre la règle 156 et le jeton "&&" résolu par réduction ("&&" < COLON).
Conflit entre la règle 156 et le jeton "|" résolu par réduction ("|" < COLON).
Conflit entre la règle 156 et le jeton "||" résolu par réduction ("||" < COLON).


état 241

  104 comparison: functionCall . comparators comparable
  106           | functionCall . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  115 operation: functionCall . rightOperand
  122          | functionCall . "** or ^" variable
  123          | functionCall . "** or ^" functionCall
  126          | functionCall . ".^" variable
  127          | functionCall . ".^" functionCall
  130          | functionCall . "'"
  131          | functionCall . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  163 variable: functionCall . "." variable
  165         | functionCall . listableEnd
  230 assignable: functionCall "." functionCall .  ["="]
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"         décalage et aller à l'état 115
    ":"         décalage et aller à l'état 116
    "."         décalage et aller à l'état 170
    ".'"        décalage et aller à l'état 118
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 131
    ".^"        décalage et aller à l'état 132
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "&&"        décalage et aller à l'état 140
    "|"         décalage et aller à l'état 141
    "||"        décalage et aller à l'état 142

    $défaut  réduction par utilisation de la règle 230 (assignable)

    logicalComparators  aller à l'état 144
    rightOperand        aller à l'état 145
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 147
    comparators         aller à l'état 148


état 242

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  105           | variable . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  114 operation: variable . rightOperand
  120          | variable . "** or ^" variable
  121          | variable . "** or ^" functionCall
  124          | variable . ".^" variable
  125          | variable . ".^" functionCall
  128          | variable . "'"
  129          | variable . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  162 variable: variable . "." "identifier"
  163         | functionCall "." variable .  ["end of file", "end of line", "'", ",", ":", ";", "(", ")", ".", ".'", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "else", "elseif", "end", "case", "endfunction", "catch", "line comment"]
  164         | variable . listableEnd
  229 assignable: functionCall "." variable .  ["="]
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "="       réduction par utilisation de la règle 229 (assignable)
    $défaut  réduction par utilisation de la règle 163 (variable)

    logicalComparators  aller à l'état 157
    rightOperand        aller à l'état 158
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 159
    comparators         aller à l'état 160

Conflit entre la règle 163 et le jeton "'" résolu par réduction ("'" < DOT).
Conflit entre la règle 163 et le jeton ":" résolu par réduction (":" < DOT).
Conflit entre la règle 163 et le jeton "(" résolu par réduction ("(" < DOT).
Conflit entre la règle 163 et le jeton "." résolu par réduction (%left ".").
Conflit entre la règle 163 et le jeton ".'" résolu par réduction (".'" < DOT).
Conflit entre la règle 163 et le jeton "+" résolu par réduction ("+" < DOT).
Conflit entre la règle 163 et le jeton "-" résolu par réduction ("-" < DOT).
Conflit entre la règle 163 et le jeton "*" résolu par réduction ("*" < DOT).
Conflit entre la règle 163 et le jeton ".*" résolu par réduction (".*" < DOT).
Conflit entre la règle 163 et le jeton ".*." résolu par réduction (".*." < DOT).
Conflit entre la règle 163 et le jeton "/" résolu par réduction ("/" < DOT).
Conflit entre la règle 163 et le jeton "./" résolu par réduction ("./" < DOT).
Conflit entre la règle 163 et le jeton "/." résolu par réduction ("/." < DOT).
Conflit entre la règle 163 et le jeton "./." résolu par réduction ("./." < DOT).
Conflit entre la règle 163 et le jeton "\\" résolu par réduction ("\\" < DOT).
Conflit entre la règle 163 et le jeton ".\\" résolu par réduction (".\\" < DOT).
Conflit entre la règle 163 et le jeton ".\\." résolu par réduction (".\\." < DOT).
Conflit entre la règle 163 et le jeton "** or ^" résolu par réduction ("** or ^" < DOT).
Conflit entre la règle 163 et le jeton ".^" résolu par réduction (".^" < DOT).
Conflit entre la règle 163 et le jeton "==" résolu par réduction ("==" < DOT).
Conflit entre la règle 163 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < DOT).
Conflit entre la règle 163 et le jeton "<" résolu par réduction ("<" < DOT).
Conflit entre la règle 163 et le jeton "<=" résolu par réduction ("<=" < DOT).
Conflit entre la règle 163 et le jeton ">" résolu par réduction (">" < DOT).
Conflit entre la règle 163 et le jeton ">=" résolu par réduction (">=" < DOT).
Conflit entre la règle 163 et le jeton "&" résolu par réduction ("&" < DOT).
Conflit entre la règle 163 et le jeton "&&" résolu par réduction ("&&" < DOT).
Conflit entre la règle 163 et le jeton "|" résolu par réduction ("|" < DOT).
Conflit entre la règle 163 et le jeton "||" résolu par réduction ("||" < DOT).


état 243

  104 comparison: functionCall . comparators comparable
  106           | functionCall . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  115 operation: functionCall . rightOperand
  122          | functionCall . "** or ^" variable
  123          | functionCall . "** or ^" functionCall
  126          | functionCall . ".^" variable
  127          | functionCall . ".^" functionCall
  130          | functionCall . "'"
  131          | functionCall . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  133             | "+" functionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  163 variable: functionCall . "." variable
  165         | functionCall . listableEnd
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"        décalage et aller à l'état 115
    "."        décalage et aller à l'état 170
    ".'"       décalage et aller à l'état 118
    "*"        décalage et aller à l'état 121
    ".*"       décalage et aller à l'état 122
    ".*."      décalage et aller à l'état 123
    "/"        décalage et aller à l'état 124
    "./"       décalage et aller à l'état 125
    "/."       décalage et aller à l'état 126
    "./."      décalage et aller à l'état 127
    "\\"       décalage et aller à l'état 128
    ".\\"      décalage et aller à l'état 129
    ".\\."     décalage et aller à l'état 130
    "** or ^"  décalage et aller à l'état 131
    ".^"       décalage et aller à l'état 132

    $défaut  réduction par utilisation de la règle 133 (rightOperand)

    logicalComparators  aller à l'état 144
    rightOperand        aller à l'état 145
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 147
    comparators         aller à l'état 148

Conflit entre la règle 133 et le jeton "'" résolu par décalage (PLUS < "'").
Conflit entre la règle 133 et le jeton ":" résolu par réduction (":" < PLUS).
Conflit entre la règle 133 et le jeton "." résolu par décalage (PLUS < ".").
Conflit entre la règle 133 et le jeton ".'" résolu par décalage (PLUS < ".'").
Conflit entre la règle 133 et le jeton "+" résolu par réduction (%left "+").
Conflit entre la règle 133 et le jeton "-" résolu par réduction (%left "-").
Conflit entre la règle 133 et le jeton "*" résolu par décalage (PLUS < "*").
Conflit entre la règle 133 et le jeton ".*" résolu par décalage (PLUS < ".*").
Conflit entre la règle 133 et le jeton ".*." résolu par décalage (PLUS < ".*.").
Conflit entre la règle 133 et le jeton "/" résolu par décalage (PLUS < "/").
Conflit entre la règle 133 et le jeton "./" résolu par décalage (PLUS < "./").
Conflit entre la règle 133 et le jeton "/." résolu par décalage (PLUS < "/.").
Conflit entre la règle 133 et le jeton "./." résolu par décalage (PLUS < "./.").
Conflit entre la règle 133 et le jeton "\\" résolu par décalage (PLUS < "\\").
Conflit entre la règle 133 et le jeton ".\\" résolu par décalage (PLUS < ".\\").
Conflit entre la règle 133 et le jeton ".\\." résolu par décalage (PLUS < ".\\.").
Conflit entre la règle 133 et le jeton "** or ^" résolu par décalage (PLUS < "** or ^").
Conflit entre la règle 133 et le jeton ".^" résolu par décalage (PLUS < ".^").
Conflit entre la règle 133 et le jeton "==" résolu par réduction ("==" < PLUS).
Conflit entre la règle 133 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < PLUS).
Conflit entre la règle 133 et le jeton "<" résolu par réduction ("<" < PLUS).
Conflit entre la règle 133 et le jeton "<=" résolu par réduction ("<=" < PLUS).
Conflit entre la règle 133 et le jeton ">" résolu par réduction (">" < PLUS).
Conflit entre la règle 133 et le jeton ">=" résolu par réduction (">=" < PLUS).
Conflit entre la règle 133 et le jeton "&" résolu par réduction ("&" < PLUS).
Conflit entre la règle 133 et le jeton "&&" résolu par réduction ("&&" < PLUS).
Conflit entre la règle 133 et le jeton "|" résolu par réduction ("|" < PLUS).
Conflit entre la règle 133 et le jeton "||" résolu par réduction ("||" < PLUS).


état 244

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  105           | variable . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  114 operation: variable . rightOperand
  120          | variable . "** or ^" variable
  121          | variable . "** or ^" functionCall
  124          | variable . ".^" variable
  125          | variable . ".^" functionCall
  128          | variable . "'"
  129          | variable . ".'"
  132 rightOperand: . "+" variable
  132             | "+" variable .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  162 variable: variable . "." "identifier"
  164         | variable . listableEnd
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"        décalage et aller à l'état 151
    "."        décalage et aller à l'état 171
    ".'"       décalage et aller à l'état 154
    "*"        décalage et aller à l'état 121
    ".*"       décalage et aller à l'état 122
    ".*."      décalage et aller à l'état 123
    "/"        décalage et aller à l'état 124
    "./"       décalage et aller à l'état 125
    "/."       décalage et aller à l'état 126
    "./."      décalage et aller à l'état 127
    "\\"       décalage et aller à l'état 128
    ".\\"      décalage et aller à l'état 129
    ".\\."     décalage et aller à l'état 130
    "** or ^"  décalage et aller à l'état 155
    ".^"       décalage et aller à l'état 156

    $défaut  réduction par utilisation de la règle 132 (rightOperand)

    logicalComparators  aller à l'état 157
    rightOperand        aller à l'état 158
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 159
    comparators         aller à l'état 160

Conflit entre la règle 132 et le jeton "'" résolu par décalage (PLUS < "'").
Conflit entre la règle 132 et le jeton ":" résolu par réduction (":" < PLUS).
Conflit entre la règle 132 et le jeton "(" résolu par réduction ("(" < PLUS).
Conflit entre la règle 132 et le jeton "." résolu par décalage (PLUS < ".").
Conflit entre la règle 132 et le jeton ".'" résolu par décalage (PLUS < ".'").
Conflit entre la règle 132 et le jeton "+" résolu par réduction (%left "+").
Conflit entre la règle 132 et le jeton "-" résolu par réduction (%left "-").
Conflit entre la règle 132 et le jeton "*" résolu par décalage (PLUS < "*").
Conflit entre la règle 132 et le jeton ".*" résolu par décalage (PLUS < ".*").
Conflit entre la règle 132 et le jeton ".*." résolu par décalage (PLUS < ".*.").
Conflit entre la règle 132 et le jeton "/" résolu par décalage (PLUS < "/").
Conflit entre la règle 132 et le jeton "./" résolu par décalage (PLUS < "./").
Conflit entre la règle 132 et le jeton "/." résolu par décalage (PLUS < "/.").
Conflit entre la règle 132 et le jeton "./." résolu par décalage (PLUS < "./.").
Conflit entre la règle 132 et le jeton "\\" résolu par décalage (PLUS < "\\").
Conflit entre la règle 132 et le jeton ".\\" résolu par décalage (PLUS < ".\\").
Conflit entre la règle 132 et le jeton ".\\." résolu par décalage (PLUS < ".\\.").
Conflit entre la règle 132 et le jeton "** or ^" résolu par décalage (PLUS < "** or ^").
Conflit entre la règle 132 et le jeton ".^" résolu par décalage (PLUS < ".^").
Conflit entre la règle 132 et le jeton "==" résolu par réduction ("==" < PLUS).
Conflit entre la règle 132 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < PLUS).
Conflit entre la règle 132 et le jeton "<" résolu par réduction ("<" < PLUS).
Conflit entre la règle 132 et le jeton "<=" résolu par réduction ("<=" < PLUS).
Conflit entre la règle 132 et le jeton ">" résolu par réduction (">" < PLUS).
Conflit entre la règle 132 et le jeton ">=" résolu par réduction (">=" < PLUS).
Conflit entre la règle 132 et le jeton "&" résolu par réduction ("&" < PLUS).
Conflit entre la règle 132 et le jeton "&&" résolu par réduction ("&&" < PLUS).
Conflit entre la règle 132 et le jeton "|" résolu par réduction ("|" < PLUS).
Conflit entre la règle 132 et le jeton "||" résolu par réduction ("||" < PLUS).


état 245

  104 comparison: functionCall . comparators comparable
  106           | functionCall . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  115 operation: functionCall . rightOperand
  122          | functionCall . "** or ^" variable
  123          | functionCall . "** or ^" functionCall
  126          | functionCall . ".^" variable
  127          | functionCall . ".^" functionCall
  130          | functionCall . "'"
  131          | functionCall . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  135             | "-" functionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  163 variable: functionCall . "." variable
  165         | functionCall . listableEnd
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"        décalage et aller à l'état 115
    "."        décalage et aller à l'état 170
    ".'"       décalage et aller à l'état 118
    "*"        décalage et aller à l'état 121
    ".*"       décalage et aller à l'état 122
    ".*."      décalage et aller à l'état 123
    "/"        décalage et aller à l'état 124
    "./"       décalage et aller à l'état 125
    "/."       décalage et aller à l'état 126
    "./."      décalage et aller à l'état 127
    "\\"       décalage et aller à l'état 128
    ".\\"      décalage et aller à l'état 129
    ".\\."     décalage et aller à l'état 130
    "** or ^"  décalage et aller à l'état 131
    ".^"       décalage et aller à l'état 132

    $défaut  réduction par utilisation de la règle 135 (rightOperand)

    logicalComparators  aller à l'état 144
    rightOperand        aller à l'état 145
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 147
    comparators         aller à l'état 148

Conflit entre la règle 135 et le jeton "'" résolu par décalage (MINUS < "'").
Conflit entre la règle 135 et le jeton ":" résolu par réduction (":" < MINUS).
Conflit entre la règle 135 et le jeton "." résolu par décalage (MINUS < ".").
Conflit entre la règle 135 et le jeton ".'" résolu par décalage (MINUS < ".'").
Conflit entre la règle 135 et le jeton "+" résolu par réduction (%left "+").
Conflit entre la règle 135 et le jeton "-" résolu par réduction (%left "-").
Conflit entre la règle 135 et le jeton "*" résolu par décalage (MINUS < "*").
Conflit entre la règle 135 et le jeton ".*" résolu par décalage (MINUS < ".*").
Conflit entre la règle 135 et le jeton ".*." résolu par décalage (MINUS < ".*.").
Conflit entre la règle 135 et le jeton "/" résolu par décalage (MINUS < "/").
Conflit entre la règle 135 et le jeton "./" résolu par décalage (MINUS < "./").
Conflit entre la règle 135 et le jeton "/." résolu par décalage (MINUS < "/.").
Conflit entre la règle 135 et le jeton "./." résolu par décalage (MINUS < "./.").
Conflit entre la règle 135 et le jeton "\\" résolu par décalage (MINUS < "\\").
Conflit entre la règle 135 et le jeton ".\\" résolu par décalage (MINUS < ".\\").
Conflit entre la règle 135 et le jeton ".\\." résolu par décalage (MINUS < ".\\.").
Conflit entre la règle 135 et le jeton "** or ^" résolu par décalage (MINUS < "** or ^").
Conflit entre la règle 135 et le jeton ".^" résolu par décalage (MINUS < ".^").
Conflit entre la règle 135 et le jeton "==" résolu par réduction ("==" < MINUS).
Conflit entre la règle 135 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < MINUS).
Conflit entre la règle 135 et le jeton "<" résolu par réduction ("<" < MINUS).
Conflit entre la règle 135 et le jeton "<=" résolu par réduction ("<=" < MINUS).
Conflit entre la règle 135 et le jeton ">" résolu par réduction (">" < MINUS).
Conflit entre la règle 135 et le jeton ">=" résolu par réduction (">=" < MINUS).
Conflit entre la règle 135 et le jeton "&" résolu par réduction ("&" < MINUS).
Conflit entre la règle 135 et le jeton "&&" résolu par réduction ("&&" < MINUS).
Conflit entre la règle 135 et le jeton "|" résolu par réduction ("|" < MINUS).
Conflit entre la règle 135 et le jeton "||" résolu par réduction ("||" < MINUS).


état 246

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  105           | variable . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  114 operation: variable . rightOperand
  120          | variable . "** or ^" variable
  121          | variable . "** or ^" functionCall
  124          | variable . ".^" variable
  125          | variable . ".^" functionCall
  128          | variable . "'"
  129          | variable . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  134             | "-" variable .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  162 variable: variable . "." "identifier"
  164         | variable . listableEnd
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"        décalage et aller à l'état 151
    "."        décalage et aller à l'état 171
    ".'"       décalage et aller à l'état 154
    "*"        décalage et aller à l'état 121
    ".*"       décalage et aller à l'état 122
    ".*."      décalage et aller à l'état 123
    "/"        décalage et aller à l'état 124
    "./"       décalage et aller à l'état 125
    "/."       décalage et aller à l'état 126
    "./."      décalage et aller à l'état 127
    "\\"       décalage et aller à l'état 128
    ".\\"      décalage et aller à l'état 129
    ".\\."     décalage et aller à l'état 130
    "** or ^"  décalage et aller à l'état 155
    ".^"       décalage et aller à l'état 156

    $défaut  réduction par utilisation de la règle 134 (rightOperand)

    logicalComparators  aller à l'état 157
    rightOperand        aller à l'état 158
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 159
    comparators         aller à l'état 160

Conflit entre la règle 134 et le jeton "'" résolu par décalage (MINUS < "'").
Conflit entre la règle 134 et le jeton ":" résolu par réduction (":" < MINUS).
Conflit entre la règle 134 et le jeton "(" résolu par réduction ("(" < MINUS).
Conflit entre la règle 134 et le jeton "." résolu par décalage (MINUS < ".").
Conflit entre la règle 134 et le jeton ".'" résolu par décalage (MINUS < ".'").
Conflit entre la règle 134 et le jeton "+" résolu par réduction (%left "+").
Conflit entre la règle 134 et le jeton "-" résolu par réduction (%left "-").
Conflit entre la règle 134 et le jeton "*" résolu par décalage (MINUS < "*").
Conflit entre la règle 134 et le jeton ".*" résolu par décalage (MINUS < ".*").
Conflit entre la règle 134 et le jeton ".*." résolu par décalage (MINUS < ".*.").
Conflit entre la règle 134 et le jeton "/" résolu par décalage (MINUS < "/").
Conflit entre la règle 134 et le jeton "./" résolu par décalage (MINUS < "./").
Conflit entre la règle 134 et le jeton "/." résolu par décalage (MINUS < "/.").
Conflit entre la règle 134 et le jeton "./." résolu par décalage (MINUS < "./.").
Conflit entre la règle 134 et le jeton "\\" résolu par décalage (MINUS < "\\").
Conflit entre la règle 134 et le jeton ".\\" résolu par décalage (MINUS < ".\\").
Conflit entre la règle 134 et le jeton ".\\." résolu par décalage (MINUS < ".\\.").
Conflit entre la règle 134 et le jeton "** or ^" résolu par décalage (MINUS < "** or ^").
Conflit entre la règle 134 et le jeton ".^" résolu par décalage (MINUS < ".^").
Conflit entre la règle 134 et le jeton "==" résolu par réduction ("==" < MINUS).
Conflit entre la règle 134 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < MINUS).
Conflit entre la règle 134 et le jeton "<" résolu par réduction ("<" < MINUS).
Conflit entre la règle 134 et le jeton "<=" résolu par réduction ("<=" < MINUS).
Conflit entre la règle 134 et le jeton ">" résolu par réduction (">" < MINUS).
Conflit entre la règle 134 et le jeton ">=" résolu par réduction (">=" < MINUS).
Conflit entre la règle 134 et le jeton "&" résolu par réduction ("&" < MINUS).
Conflit entre la règle 134 et le jeton "&&" résolu par réduction ("&&" < MINUS).
Conflit entre la règle 134 et le jeton "|" résolu par réduction ("|" < MINUS).
Conflit entre la règle 134 et le jeton "||" résolu par réduction ("||" < MINUS).


état 247

  104 comparison: functionCall . comparators comparable
  106           | functionCall . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  115 operation: functionCall . rightOperand
  122          | functionCall . "** or ^" variable
  123          | functionCall . "** or ^" functionCall
  126          | functionCall . ".^" variable
  127          | functionCall . ".^" functionCall
  130          | functionCall . "'"
  131          | functionCall . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  137             | "*" functionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  163 variable: functionCall . "." variable
  165         | functionCall . listableEnd
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"        décalage et aller à l'état 115
    "."        décalage et aller à l'état 170
    ".'"       décalage et aller à l'état 118
    "** or ^"  décalage et aller à l'état 131
    ".^"       décalage et aller à l'état 132

    $défaut  réduction par utilisation de la règle 137 (rightOperand)

    logicalComparators  aller à l'état 144
    rightOperand        aller à l'état 145
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 147
    comparators         aller à l'état 148

Conflit entre la règle 137 et le jeton "'" résolu par décalage (TIMES < "'").
Conflit entre la règle 137 et le jeton ":" résolu par réduction (":" < TIMES).
Conflit entre la règle 137 et le jeton "." résolu par décalage (TIMES < ".").
Conflit entre la règle 137 et le jeton ".'" résolu par décalage (TIMES < ".'").
Conflit entre la règle 137 et le jeton "+" résolu par réduction ("+" < TIMES).
Conflit entre la règle 137 et le jeton "-" résolu par réduction ("-" < TIMES).
Conflit entre la règle 137 et le jeton "*" résolu par réduction (%left "*").
Conflit entre la règle 137 et le jeton ".*" résolu par réduction (%left ".*").
Conflit entre la règle 137 et le jeton ".*." résolu par réduction (%left ".*.").
Conflit entre la règle 137 et le jeton "/" résolu par réduction (%left "/").
Conflit entre la règle 137 et le jeton "./" résolu par réduction (%left "./").
Conflit entre la règle 137 et le jeton "/." résolu par réduction (%left "/.").
Conflit entre la règle 137 et le jeton "./." résolu par réduction (%left "./.").
Conflit entre la règle 137 et le jeton "\\" résolu par réduction (%left "\\").
Conflit entre la règle 137 et le jeton ".\\" résolu par réduction (%left ".\\").
Conflit entre la règle 137 et le jeton ".\\." résolu par réduction (%left ".\\.").
Conflit entre la règle 137 et le jeton "** or ^" résolu par décalage (TIMES < "** or ^").
Conflit entre la règle 137 et le jeton ".^" résolu par décalage (TIMES < ".^").
Conflit entre la règle 137 et le jeton "==" résolu par réduction ("==" < TIMES).
Conflit entre la règle 137 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < TIMES).
Conflit entre la règle 137 et le jeton "<" résolu par réduction ("<" < TIMES).
Conflit entre la règle 137 et le jeton "<=" résolu par réduction ("<=" < TIMES).
Conflit entre la règle 137 et le jeton ">" résolu par réduction (">" < TIMES).
Conflit entre la règle 137 et le jeton ">=" résolu par réduction (">=" < TIMES).
Conflit entre la règle 137 et le jeton "&" résolu par réduction ("&" < TIMES).
Conflit entre la règle 137 et le jeton "&&" résolu par réduction ("&&" < TIMES).
Conflit entre la règle 137 et le jeton "|" résolu par réduction ("|" < TIMES).
Conflit entre la règle 137 et le jeton "||" résolu par réduction ("||" < TIMES).


état 248

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  105           | variable . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  114 operation: variable . rightOperand
  120          | variable . "** or ^" variable
  121          | variable . "** or ^" functionCall
  124          | variable . ".^" variable
  125          | variable . ".^" functionCall
  128          | variable . "'"
  129          | variable . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  136             | "*" variable .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  162 variable: variable . "." "identifier"
  164         | variable . listableEnd
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"        décalage et aller à l'état 151
    "."        décalage et aller à l'état 171
    ".'"       décalage et aller à l'état 154
    "** or ^"  décalage et aller à l'état 155
    ".^"       décalage et aller à l'état 156

    $défaut  réduction par utilisation de la règle 136 (rightOperand)

    logicalComparators  aller à l'état 157
    rightOperand        aller à l'état 158
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 159
    comparators         aller à l'état 160

Conflit entre la règle 136 et le jeton "'" résolu par décalage (TIMES < "'").
Conflit entre la règle 136 et le jeton ":" résolu par réduction (":" < TIMES).
Conflit entre la règle 136 et le jeton "(" résolu par réduction ("(" < TIMES).
Conflit entre la règle 136 et le jeton "." résolu par décalage (TIMES < ".").
Conflit entre la règle 136 et le jeton ".'" résolu par décalage (TIMES < ".'").
Conflit entre la règle 136 et le jeton "+" résolu par réduction ("+" < TIMES).
Conflit entre la règle 136 et le jeton "-" résolu par réduction ("-" < TIMES).
Conflit entre la règle 136 et le jeton "*" résolu par réduction (%left "*").
Conflit entre la règle 136 et le jeton ".*" résolu par réduction (%left ".*").
Conflit entre la règle 136 et le jeton ".*." résolu par réduction (%left ".*.").
Conflit entre la règle 136 et le jeton "/" résolu par réduction (%left "/").
Conflit entre la règle 136 et le jeton "./" résolu par réduction (%left "./").
Conflit entre la règle 136 et le jeton "/." résolu par réduction (%left "/.").
Conflit entre la règle 136 et le jeton "./." résolu par réduction (%left "./.").
Conflit entre la règle 136 et le jeton "\\" résolu par réduction (%left "\\").
Conflit entre la règle 136 et le jeton ".\\" résolu par réduction (%left ".\\").
Conflit entre la règle 136 et le jeton ".\\." résolu par réduction (%left ".\\.").
Conflit entre la règle 136 et le jeton "** or ^" résolu par décalage (TIMES < "** or ^").
Conflit entre la règle 136 et le jeton ".^" résolu par décalage (TIMES < ".^").
Conflit entre la règle 136 et le jeton "==" résolu par réduction ("==" < TIMES).
Conflit entre la règle 136 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < TIMES).
Conflit entre la règle 136 et le jeton "<" résolu par réduction ("<" < TIMES).
Conflit entre la règle 136 et le jeton "<=" résolu par réduction ("<=" < TIMES).
Conflit entre la règle 136 et le jeton ">" résolu par réduction (">" < TIMES).
Conflit entre la règle 136 et le jeton ">=" résolu par réduction (">=" < TIMES).
Conflit entre la règle 136 et le jeton "&" résolu par réduction ("&" < TIMES).
Conflit entre la règle 136 et le jeton "&&" résolu par réduction ("&&" < TIMES).
Conflit entre la règle 136 et le jeton "|" résolu par réduction ("|" < TIMES).
Conflit entre la règle 136 et le jeton "||" résolu par réduction ("||" < TIMES).


état 249

  104 comparison: functionCall . comparators comparable
  106           | functionCall . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  115 operation: functionCall . rightOperand
  122          | functionCall . "** or ^" variable
  123          | functionCall . "** or ^" functionCall
  126          | functionCall . ".^" variable
  127          | functionCall . ".^" functionCall
  130          | functionCall . "'"
  131          | functionCall . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  139             | ".*" functionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  163 variable: functionCall . "." variable
  165         | functionCall . listableEnd
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"        décalage et aller à l'état 115
    "."        décalage et aller à l'état 170
    ".'"       décalage et aller à l'état 118
    "** or ^"  décalage et aller à l'état 131
    ".^"       décalage et aller à l'état 132

    $défaut  réduction par utilisation de la règle 139 (rightOperand)

    logicalComparators  aller à l'état 144
    rightOperand        aller à l'état 145
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 147
    comparators         aller à l'état 148

Conflit entre la règle 139 et le jeton "'" résolu par décalage (DOTTIMES < "'").
Conflit entre la règle 139 et le jeton ":" résolu par réduction (":" < DOTTIMES).
Conflit entre la règle 139 et le jeton "." résolu par décalage (DOTTIMES < ".").
Conflit entre la règle 139 et le jeton ".'" résolu par décalage (DOTTIMES < ".'").
Conflit entre la règle 139 et le jeton "+" résolu par réduction ("+" < DOTTIMES).
Conflit entre la règle 139 et le jeton "-" résolu par réduction ("-" < DOTTIMES).
Conflit entre la règle 139 et le jeton "*" résolu par réduction (%left "*").
Conflit entre la règle 139 et le jeton ".*" résolu par réduction (%left ".*").
Conflit entre la règle 139 et le jeton ".*." résolu par réduction (%left ".*.").
Conflit entre la règle 139 et le jeton "/" résolu par réduction (%left "/").
Conflit entre la règle 139 et le jeton "./" résolu par réduction (%left "./").
Conflit entre la règle 139 et le jeton "/." résolu par réduction (%left "/.").
Conflit entre la règle 139 et le jeton "./." résolu par réduction (%left "./.").
Conflit entre la règle 139 et le jeton "\\" résolu par réduction (%left "\\").
Conflit entre la règle 139 et le jeton ".\\" résolu par réduction (%left ".\\").
Conflit entre la règle 139 et le jeton ".\\." résolu par réduction (%left ".\\.").
Conflit entre la règle 139 et le jeton "** or ^" résolu par décalage (DOTTIMES < "** or ^").
Conflit entre la règle 139 et le jeton ".^" résolu par décalage (DOTTIMES < ".^").
Conflit entre la règle 139 et le jeton "==" résolu par réduction ("==" < DOTTIMES).
Conflit entre la règle 139 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < DOTTIMES).
Conflit entre la règle 139 et le jeton "<" résolu par réduction ("<" < DOTTIMES).
Conflit entre la règle 139 et le jeton "<=" résolu par réduction ("<=" < DOTTIMES).
Conflit entre la règle 139 et le jeton ">" résolu par réduction (">" < DOTTIMES).
Conflit entre la règle 139 et le jeton ">=" résolu par réduction (">=" < DOTTIMES).
Conflit entre la règle 139 et le jeton "&" résolu par réduction ("&" < DOTTIMES).
Conflit entre la règle 139 et le jeton "&&" résolu par réduction ("&&" < DOTTIMES).
Conflit entre la règle 139 et le jeton "|" résolu par réduction ("|" < DOTTIMES).
Conflit entre la règle 139 et le jeton "||" résolu par réduction ("||" < DOTTIMES).


état 250

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  105           | variable . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  114 operation: variable . rightOperand
  120          | variable . "** or ^" variable
  121          | variable . "** or ^" functionCall
  124          | variable . ".^" variable
  125          | variable . ".^" functionCall
  128          | variable . "'"
  129          | variable . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  138             | ".*" variable .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  162 variable: variable . "." "identifier"
  164         | variable . listableEnd
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"        décalage et aller à l'état 151
    "."        décalage et aller à l'état 171
    ".'"       décalage et aller à l'état 154
    "** or ^"  décalage et aller à l'état 155
    ".^"       décalage et aller à l'état 156

    $défaut  réduction par utilisation de la règle 138 (rightOperand)

    logicalComparators  aller à l'état 157
    rightOperand        aller à l'état 158
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 159
    comparators         aller à l'état 160

Conflit entre la règle 138 et le jeton "'" résolu par décalage (DOTTIMES < "'").
Conflit entre la règle 138 et le jeton ":" résolu par réduction (":" < DOTTIMES).
Conflit entre la règle 138 et le jeton "(" résolu par réduction ("(" < DOTTIMES).
Conflit entre la règle 138 et le jeton "." résolu par décalage (DOTTIMES < ".").
Conflit entre la règle 138 et le jeton ".'" résolu par décalage (DOTTIMES < ".'").
Conflit entre la règle 138 et le jeton "+" résolu par réduction ("+" < DOTTIMES).
Conflit entre la règle 138 et le jeton "-" résolu par réduction ("-" < DOTTIMES).
Conflit entre la règle 138 et le jeton "*" résolu par réduction (%left "*").
Conflit entre la règle 138 et le jeton ".*" résolu par réduction (%left ".*").
Conflit entre la règle 138 et le jeton ".*." résolu par réduction (%left ".*.").
Conflit entre la règle 138 et le jeton "/" résolu par réduction (%left "/").
Conflit entre la règle 138 et le jeton "./" résolu par réduction (%left "./").
Conflit entre la règle 138 et le jeton "/." résolu par réduction (%left "/.").
Conflit entre la règle 138 et le jeton "./." résolu par réduction (%left "./.").
Conflit entre la règle 138 et le jeton "\\" résolu par réduction (%left "\\").
Conflit entre la règle 138 et le jeton ".\\" résolu par réduction (%left ".\\").
Conflit entre la règle 138 et le jeton ".\\." résolu par réduction (%left ".\\.").
Conflit entre la règle 138 et le jeton "** or ^" résolu par décalage (DOTTIMES < "** or ^").
Conflit entre la règle 138 et le jeton ".^" résolu par décalage (DOTTIMES < ".^").
Conflit entre la règle 138 et le jeton "==" résolu par réduction ("==" < DOTTIMES).
Conflit entre la règle 138 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < DOTTIMES).
Conflit entre la règle 138 et le jeton "<" résolu par réduction ("<" < DOTTIMES).
Conflit entre la règle 138 et le jeton "<=" résolu par réduction ("<=" < DOTTIMES).
Conflit entre la règle 138 et le jeton ">" résolu par réduction (">" < DOTTIMES).
Conflit entre la règle 138 et le jeton ">=" résolu par réduction (">=" < DOTTIMES).
Conflit entre la règle 138 et le jeton "&" résolu par réduction ("&" < DOTTIMES).
Conflit entre la règle 138 et le jeton "&&" résolu par réduction ("&&" < DOTTIMES).
Conflit entre la règle 138 et le jeton "|" résolu par réduction ("|" < DOTTIMES).
Conflit entre la règle 138 et le jeton "||" résolu par réduction ("||" < DOTTIMES).


état 251

  104 comparison: functionCall . comparators comparable
  106           | functionCall . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  115 operation: functionCall . rightOperand
  122          | functionCall . "** or ^" variable
  123          | functionCall . "** or ^" functionCall
  126          | functionCall . ".^" variable
  127          | functionCall . ".^" functionCall
  130          | functionCall . "'"
  131          | functionCall . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  141             | ".*." functionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  163 variable: functionCall . "." variable
  165         | functionCall . listableEnd
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"        décalage et aller à l'état 115
    "."        décalage et aller à l'état 170
    ".'"       décalage et aller à l'état 118
    "** or ^"  décalage et aller à l'état 131
    ".^"       décalage et aller à l'état 132

    $défaut  réduction par utilisation de la règle 141 (rightOperand)

    logicalComparators  aller à l'état 144
    rightOperand        aller à l'état 145
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 147
    comparators         aller à l'état 148

Conflit entre la règle 141 et le jeton "'" résolu par décalage (KRONTIMES < "'").
Conflit entre la règle 141 et le jeton ":" résolu par réduction (":" < KRONTIMES).
Conflit entre la règle 141 et le jeton "." résolu par décalage (KRONTIMES < ".").
Conflit entre la règle 141 et le jeton ".'" résolu par décalage (KRONTIMES < ".'").
Conflit entre la règle 141 et le jeton "+" résolu par réduction ("+" < KRONTIMES).
Conflit entre la règle 141 et le jeton "-" résolu par réduction ("-" < KRONTIMES).
Conflit entre la règle 141 et le jeton "*" résolu par réduction (%left "*").
Conflit entre la règle 141 et le jeton ".*" résolu par réduction (%left ".*").
Conflit entre la règle 141 et le jeton ".*." résolu par réduction (%left ".*.").
Conflit entre la règle 141 et le jeton "/" résolu par réduction (%left "/").
Conflit entre la règle 141 et le jeton "./" résolu par réduction (%left "./").
Conflit entre la règle 141 et le jeton "/." résolu par réduction (%left "/.").
Conflit entre la règle 141 et le jeton "./." résolu par réduction (%left "./.").
Conflit entre la règle 141 et le jeton "\\" résolu par réduction (%left "\\").
Conflit entre la règle 141 et le jeton ".\\" résolu par réduction (%left ".\\").
Conflit entre la règle 141 et le jeton ".\\." résolu par réduction (%left ".\\.").
Conflit entre la règle 141 et le jeton "** or ^" résolu par décalage (KRONTIMES < "** or ^").
Conflit entre la règle 141 et le jeton ".^" résolu par décalage (KRONTIMES < ".^").
Conflit entre la règle 141 et le jeton "==" résolu par réduction ("==" < KRONTIMES).
Conflit entre la règle 141 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < KRONTIMES).
Conflit entre la règle 141 et le jeton "<" résolu par réduction ("<" < KRONTIMES).
Conflit entre la règle 141 et le jeton "<=" résolu par réduction ("<=" < KRONTIMES).
Conflit entre la règle 141 et le jeton ">" résolu par réduction (">" < KRONTIMES).
Conflit entre la règle 141 et le jeton ">=" résolu par réduction (">=" < KRONTIMES).
Conflit entre la règle 141 et le jeton "&" résolu par réduction ("&" < KRONTIMES).
Conflit entre la règle 141 et le jeton "&&" résolu par réduction ("&&" < KRONTIMES).
Conflit entre la règle 141 et le jeton "|" résolu par réduction ("|" < KRONTIMES).
Conflit entre la règle 141 et le jeton "||" résolu par réduction ("||" < KRONTIMES).


état 252

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  105           | variable . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  114 operation: variable . rightOperand
  120          | variable . "** or ^" variable
  121          | variable . "** or ^" functionCall
  124          | variable . ".^" variable
  125          | variable . ".^" functionCall
  128          | variable . "'"
  129          | variable . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  140             | ".*." variable .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  162 variable: variable . "." "identifier"
  164         | variable . listableEnd
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"        décalage et aller à l'état 151
    "."        décalage et aller à l'état 171
    ".'"       décalage et aller à l'état 154
    "** or ^"  décalage et aller à l'état 155
    ".^"       décalage et aller à l'état 156

    $défaut  réduction par utilisation de la règle 140 (rightOperand)

    logicalComparators  aller à l'état 157
    rightOperand        aller à l'état 158
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 159
    comparators         aller à l'état 160

Conflit entre la règle 140 et le jeton "'" résolu par décalage (KRONTIMES < "'").
Conflit entre la règle 140 et le jeton ":" résolu par réduction (":" < KRONTIMES).
Conflit entre la règle 140 et le jeton "(" résolu par réduction ("(" < KRONTIMES).
Conflit entre la règle 140 et le jeton "." résolu par décalage (KRONTIMES < ".").
Conflit entre la règle 140 et le jeton ".'" résolu par décalage (KRONTIMES < ".'").
Conflit entre la règle 140 et le jeton "+" résolu par réduction ("+" < KRONTIMES).
Conflit entre la règle 140 et le jeton "-" résolu par réduction ("-" < KRONTIMES).
Conflit entre la règle 140 et le jeton "*" résolu par réduction (%left "*").
Conflit entre la règle 140 et le jeton ".*" résolu par réduction (%left ".*").
Conflit entre la règle 140 et le jeton ".*." résolu par réduction (%left ".*.").
Conflit entre la règle 140 et le jeton "/" résolu par réduction (%left "/").
Conflit entre la règle 140 et le jeton "./" résolu par réduction (%left "./").
Conflit entre la règle 140 et le jeton "/." résolu par réduction (%left "/.").
Conflit entre la règle 140 et le jeton "./." résolu par réduction (%left "./.").
Conflit entre la règle 140 et le jeton "\\" résolu par réduction (%left "\\").
Conflit entre la règle 140 et le jeton ".\\" résolu par réduction (%left ".\\").
Conflit entre la règle 140 et le jeton ".\\." résolu par réduction (%left ".\\.").
Conflit entre la règle 140 et le jeton "** or ^" résolu par décalage (KRONTIMES < "** or ^").
Conflit entre la règle 140 et le jeton ".^" résolu par décalage (KRONTIMES < ".^").
Conflit entre la règle 140 et le jeton "==" résolu par réduction ("==" < KRONTIMES).
Conflit entre la règle 140 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < KRONTIMES).
Conflit entre la règle 140 et le jeton "<" résolu par réduction ("<" < KRONTIMES).
Conflit entre la règle 140 et le jeton "<=" résolu par réduction ("<=" < KRONTIMES).
Conflit entre la règle 140 et le jeton ">" résolu par réduction (">" < KRONTIMES).
Conflit entre la règle 140 et le jeton ">=" résolu par réduction (">=" < KRONTIMES).
Conflit entre la règle 140 et le jeton "&" résolu par réduction ("&" < KRONTIMES).
Conflit entre la règle 140 et le jeton "&&" résolu par réduction ("&&" < KRONTIMES).
Conflit entre la règle 140 et le jeton "|" résolu par réduction ("|" < KRONTIMES).
Conflit entre la règle 140 et le jeton "||" résolu par réduction ("||" < KRONTIMES).


état 253

  104 comparison: functionCall . comparators comparable
  106           | functionCall . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  115 operation: functionCall . rightOperand
  122          | functionCall . "** or ^" variable
  123          | functionCall . "** or ^" functionCall
  126          | functionCall . ".^" variable
  127          | functionCall . ".^" functionCall
  130          | functionCall . "'"
  131          | functionCall . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  143             | "/" functionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  163 variable: functionCall . "." variable
  165         | functionCall . listableEnd
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"        décalage et aller à l'état 115
    "."        décalage et aller à l'état 170
    ".'"       décalage et aller à l'état 118
    "** or ^"  décalage et aller à l'état 131
    ".^"       décalage et aller à l'état 132

    $défaut  réduction par utilisation de la règle 143 (rightOperand)

    logicalComparators  aller à l'état 144
    rightOperand        aller à l'état 145
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 147
    comparators         aller à l'état 148

Conflit entre la règle 143 et le jeton "'" résolu par décalage (DIVIDE < "'").
Conflit entre la règle 143 et le jeton ":" résolu par réduction (":" < DIVIDE).
Conflit entre la règle 143 et le jeton "." résolu par décalage (DIVIDE < ".").
Conflit entre la règle 143 et le jeton ".'" résolu par décalage (DIVIDE < ".'").
Conflit entre la règle 143 et le jeton "+" résolu par réduction ("+" < DIVIDE).
Conflit entre la règle 143 et le jeton "-" résolu par réduction ("-" < DIVIDE).
Conflit entre la règle 143 et le jeton "*" résolu par réduction (%left "*").
Conflit entre la règle 143 et le jeton ".*" résolu par réduction (%left ".*").
Conflit entre la règle 143 et le jeton ".*." résolu par réduction (%left ".*.").
Conflit entre la règle 143 et le jeton "/" résolu par réduction (%left "/").
Conflit entre la règle 143 et le jeton "./" résolu par réduction (%left "./").
Conflit entre la règle 143 et le jeton "/." résolu par réduction (%left "/.").
Conflit entre la règle 143 et le jeton "./." résolu par réduction (%left "./.").
Conflit entre la règle 143 et le jeton "\\" résolu par réduction (%left "\\").
Conflit entre la règle 143 et le jeton ".\\" résolu par réduction (%left ".\\").
Conflit entre la règle 143 et le jeton ".\\." résolu par réduction (%left ".\\.").
Conflit entre la règle 143 et le jeton "** or ^" résolu par décalage (DIVIDE < "** or ^").
Conflit entre la règle 143 et le jeton ".^" résolu par décalage (DIVIDE < ".^").
Conflit entre la règle 143 et le jeton "==" résolu par réduction ("==" < DIVIDE).
Conflit entre la règle 143 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < DIVIDE).
Conflit entre la règle 143 et le jeton "<" résolu par réduction ("<" < DIVIDE).
Conflit entre la règle 143 et le jeton "<=" résolu par réduction ("<=" < DIVIDE).
Conflit entre la règle 143 et le jeton ">" résolu par réduction (">" < DIVIDE).
Conflit entre la règle 143 et le jeton ">=" résolu par réduction (">=" < DIVIDE).
Conflit entre la règle 143 et le jeton "&" résolu par réduction ("&" < DIVIDE).
Conflit entre la règle 143 et le jeton "&&" résolu par réduction ("&&" < DIVIDE).
Conflit entre la règle 143 et le jeton "|" résolu par réduction ("|" < DIVIDE).
Conflit entre la règle 143 et le jeton "||" résolu par réduction ("||" < DIVIDE).


état 254

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  105           | variable . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  114 operation: variable . rightOperand
  120          | variable . "** or ^" variable
  121          | variable . "** or ^" functionCall
  124          | variable . ".^" variable
  125          | variable . ".^" functionCall
  128          | variable . "'"
  129          | variable . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  142             | "/" variable .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  162 variable: variable . "." "identifier"
  164         | variable . listableEnd
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"        décalage et aller à l'état 151
    "."        décalage et aller à l'état 171
    ".'"       décalage et aller à l'état 154
    "** or ^"  décalage et aller à l'état 155
    ".^"       décalage et aller à l'état 156

    $défaut  réduction par utilisation de la règle 142 (rightOperand)

    logicalComparators  aller à l'état 157
    rightOperand        aller à l'état 158
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 159
    comparators         aller à l'état 160

Conflit entre la règle 142 et le jeton "'" résolu par décalage (DIVIDE < "'").
Conflit entre la règle 142 et le jeton ":" résolu par réduction (":" < DIVIDE).
Conflit entre la règle 142 et le jeton "(" résolu par réduction ("(" < DIVIDE).
Conflit entre la règle 142 et le jeton "." résolu par décalage (DIVIDE < ".").
Conflit entre la règle 142 et le jeton ".'" résolu par décalage (DIVIDE < ".'").
Conflit entre la règle 142 et le jeton "+" résolu par réduction ("+" < DIVIDE).
Conflit entre la règle 142 et le jeton "-" résolu par réduction ("-" < DIVIDE).
Conflit entre la règle 142 et le jeton "*" résolu par réduction (%left "*").
Conflit entre la règle 142 et le jeton ".*" résolu par réduction (%left ".*").
Conflit entre la règle 142 et le jeton ".*." résolu par réduction (%left ".*.").
Conflit entre la règle 142 et le jeton "/" résolu par réduction (%left "/").
Conflit entre la règle 142 et le jeton "./" résolu par réduction (%left "./").
Conflit entre la règle 142 et le jeton "/." résolu par réduction (%left "/.").
Conflit entre la règle 142 et le jeton "./." résolu par réduction (%left "./.").
Conflit entre la règle 142 et le jeton "\\" résolu par réduction (%left "\\").
Conflit entre la règle 142 et le jeton ".\\" résolu par réduction (%left ".\\").
Conflit entre la règle 142 et le jeton ".\\." résolu par réduction (%left ".\\.").
Conflit entre la règle 142 et le jeton "** or ^" résolu par décalage (DIVIDE < "** or ^").
Conflit entre la règle 142 et le jeton ".^" résolu par décalage (DIVIDE < ".^").
Conflit entre la règle 142 et le jeton "==" résolu par réduction ("==" < DIVIDE).
Conflit entre la règle 142 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < DIVIDE).
Conflit entre la règle 142 et le jeton "<" résolu par réduction ("<" < DIVIDE).
Conflit entre la règle 142 et le jeton "<=" résolu par réduction ("<=" < DIVIDE).
Conflit entre la règle 142 et le jeton ">" résolu par réduction (">" < DIVIDE).
Conflit entre la règle 142 et le jeton ">=" résolu par réduction (">=" < DIVIDE).
Conflit entre la règle 142 et le jeton "&" résolu par réduction ("&" < DIVIDE).
Conflit entre la règle 142 et le jeton "&&" résolu par réduction ("&&" < DIVIDE).
Conflit entre la règle 142 et le jeton "|" résolu par réduction ("|" < DIVIDE).
Conflit entre la règle 142 et le jeton "||" résolu par réduction ("||" < DIVIDE).


état 255

  104 comparison: functionCall . comparators comparable
  106           | functionCall . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  115 operation: functionCall . rightOperand
  122          | functionCall . "** or ^" variable
  123          | functionCall . "** or ^" functionCall
  126          | functionCall . ".^" variable
  127          | functionCall . ".^" functionCall
  130          | functionCall . "'"
  131          | functionCall . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  145             | "./" functionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  163 variable: functionCall . "." variable
  165         | functionCall . listableEnd
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"        décalage et aller à l'état 115
    "."        décalage et aller à l'état 170
    ".'"       décalage et aller à l'état 118
    "** or ^"  décalage et aller à l'état 131
    ".^"       décalage et aller à l'état 132

    $défaut  réduction par utilisation de la règle 145 (rightOperand)

    logicalComparators  aller à l'état 144
    rightOperand        aller à l'état 145
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 147
    comparators         aller à l'état 148

Conflit entre la règle 145 et le jeton "'" résolu par décalage (DOTDIVIDE < "'").
Conflit entre la règle 145 et le jeton ":" résolu par réduction (":" < DOTDIVIDE).
Conflit entre la règle 145 et le jeton "." résolu par décalage (DOTDIVIDE < ".").
Conflit entre la règle 145 et le jeton ".'" résolu par décalage (DOTDIVIDE < ".'").
Conflit entre la règle 145 et le jeton "+" résolu par réduction ("+" < DOTDIVIDE).
Conflit entre la règle 145 et le jeton "-" résolu par réduction ("-" < DOTDIVIDE).
Conflit entre la règle 145 et le jeton "*" résolu par réduction (%left "*").
Conflit entre la règle 145 et le jeton ".*" résolu par réduction (%left ".*").
Conflit entre la règle 145 et le jeton ".*." résolu par réduction (%left ".*.").
Conflit entre la règle 145 et le jeton "/" résolu par réduction (%left "/").
Conflit entre la règle 145 et le jeton "./" résolu par réduction (%left "./").
Conflit entre la règle 145 et le jeton "/." résolu par réduction (%left "/.").
Conflit entre la règle 145 et le jeton "./." résolu par réduction (%left "./.").
Conflit entre la règle 145 et le jeton "\\" résolu par réduction (%left "\\").
Conflit entre la règle 145 et le jeton ".\\" résolu par réduction (%left ".\\").
Conflit entre la règle 145 et le jeton ".\\." résolu par réduction (%left ".\\.").
Conflit entre la règle 145 et le jeton "** or ^" résolu par décalage (DOTDIVIDE < "** or ^").
Conflit entre la règle 145 et le jeton ".^" résolu par décalage (DOTDIVIDE < ".^").
Conflit entre la règle 145 et le jeton "==" résolu par réduction ("==" < DOTDIVIDE).
Conflit entre la règle 145 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < DOTDIVIDE).
Conflit entre la règle 145 et le jeton "<" résolu par réduction ("<" < DOTDIVIDE).
Conflit entre la règle 145 et le jeton "<=" résolu par réduction ("<=" < DOTDIVIDE).
Conflit entre la règle 145 et le jeton ">" résolu par réduction (">" < DOTDIVIDE).
Conflit entre la règle 145 et le jeton ">=" résolu par réduction (">=" < DOTDIVIDE).
Conflit entre la règle 145 et le jeton "&" résolu par réduction ("&" < DOTDIVIDE).
Conflit entre la règle 145 et le jeton "&&" résolu par réduction ("&&" < DOTDIVIDE).
Conflit entre la règle 145 et le jeton "|" résolu par réduction ("|" < DOTDIVIDE).
Conflit entre la règle 145 et le jeton "||" résolu par réduction ("||" < DOTDIVIDE).


état 256

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  105           | variable . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  114 operation: variable . rightOperand
  120          | variable . "** or ^" variable
  121          | variable . "** or ^" functionCall
  124          | variable . ".^" variable
  125          | variable . ".^" functionCall
  128          | variable . "'"
  129          | variable . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  144             | "./" variable .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  162 variable: variable . "." "identifier"
  164         | variable . listableEnd
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"        décalage et aller à l'état 151
    "."        décalage et aller à l'état 171
    ".'"       décalage et aller à l'état 154
    "** or ^"  décalage et aller à l'état 155
    ".^"       décalage et aller à l'état 156

    $défaut  réduction par utilisation de la règle 144 (rightOperand)

    logicalComparators  aller à l'état 157
    rightOperand        aller à l'état 158
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 159
    comparators         aller à l'état 160

Conflit entre la règle 144 et le jeton "'" résolu par décalage (DOTDIVIDE < "'").
Conflit entre la règle 144 et le jeton ":" résolu par réduction (":" < DOTDIVIDE).
Conflit entre la règle 144 et le jeton "(" résolu par réduction ("(" < DOTDIVIDE).
Conflit entre la règle 144 et le jeton "." résolu par décalage (DOTDIVIDE < ".").
Conflit entre la règle 144 et le jeton ".'" résolu par décalage (DOTDIVIDE < ".'").
Conflit entre la règle 144 et le jeton "+" résolu par réduction ("+" < DOTDIVIDE).
Conflit entre la règle 144 et le jeton "-" résolu par réduction ("-" < DOTDIVIDE).
Conflit entre la règle 144 et le jeton "*" résolu par réduction (%left "*").
Conflit entre la règle 144 et le jeton ".*" résolu par réduction (%left ".*").
Conflit entre la règle 144 et le jeton ".*." résolu par réduction (%left ".*.").
Conflit entre la règle 144 et le jeton "/" résolu par réduction (%left "/").
Conflit entre la règle 144 et le jeton "./" résolu par réduction (%left "./").
Conflit entre la règle 144 et le jeton "/." résolu par réduction (%left "/.").
Conflit entre la règle 144 et le jeton "./." résolu par réduction (%left "./.").
Conflit entre la règle 144 et le jeton "\\" résolu par réduction (%left "\\").
Conflit entre la règle 144 et le jeton ".\\" résolu par réduction (%left ".\\").
Conflit entre la règle 144 et le jeton ".\\." résolu par réduction (%left ".\\.").
Conflit entre la règle 144 et le jeton "** or ^" résolu par décalage (DOTDIVIDE < "** or ^").
Conflit entre la règle 144 et le jeton ".^" résolu par décalage (DOTDIVIDE < ".^").
Conflit entre la règle 144 et le jeton "==" résolu par réduction ("==" < DOTDIVIDE).
Conflit entre la règle 144 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < DOTDIVIDE).
Conflit entre la règle 144 et le jeton "<" résolu par réduction ("<" < DOTDIVIDE).
Conflit entre la règle 144 et le jeton "<=" résolu par réduction ("<=" < DOTDIVIDE).
Conflit entre la règle 144 et le jeton ">" résolu par réduction (">" < DOTDIVIDE).
Conflit entre la règle 144 et le jeton ">=" résolu par réduction (">=" < DOTDIVIDE).
Conflit entre la règle 144 et le jeton "&" résolu par réduction ("&" < DOTDIVIDE).
Conflit entre la règle 144 et le jeton "&&" résolu par réduction ("&&" < DOTDIVIDE).
Conflit entre la règle 144 et le jeton "|" résolu par réduction ("|" < DOTDIVIDE).
Conflit entre la règle 144 et le jeton "||" résolu par réduction ("||" < DOTDIVIDE).


état 257

  104 comparison: functionCall . comparators comparable
  106           | functionCall . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  115 operation: functionCall . rightOperand
  122          | functionCall . "** or ^" variable
  123          | functionCall . "** or ^" functionCall
  126          | functionCall . ".^" variable
  127          | functionCall . ".^" functionCall
  130          | functionCall . "'"
  131          | functionCall . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  149             | "/." functionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  163 variable: functionCall . "." variable
  165         | functionCall . listableEnd
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"        décalage et aller à l'état 115
    "."        décalage et aller à l'état 170
    ".'"       décalage et aller à l'état 118
    "** or ^"  décalage et aller à l'état 131
    ".^"       décalage et aller à l'état 132

    $défaut  réduction par utilisation de la règle 149 (rightOperand)

    logicalComparators  aller à l'état 144
    rightOperand        aller à l'état 145
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 147
    comparators         aller à l'état 148

Conflit entre la règle 149 et le jeton "'" résolu par décalage (CONTROLDIVIDE < "'").
Conflit entre la règle 149 et le jeton ":" résolu par réduction (":" < CONTROLDIVIDE).
Conflit entre la règle 149 et le jeton "." résolu par décalage (CONTROLDIVIDE < ".").
Conflit entre la règle 149 et le jeton ".'" résolu par décalage (CONTROLDIVIDE < ".'").
Conflit entre la règle 149 et le jeton "+" résolu par réduction ("+" < CONTROLDIVIDE).
Conflit entre la règle 149 et le jeton "-" résolu par réduction ("-" < CONTROLDIVIDE).
Conflit entre la règle 149 et le jeton "*" résolu par réduction (%left "*").
Conflit entre la règle 149 et le jeton ".*" résolu par réduction (%left ".*").
Conflit entre la règle 149 et le jeton ".*." résolu par réduction (%left ".*.").
Conflit entre la règle 149 et le jeton "/" résolu par réduction (%left "/").
Conflit entre la règle 149 et le jeton "./" résolu par réduction (%left "./").
Conflit entre la règle 149 et le jeton "/." résolu par réduction (%left "/.").
Conflit entre la règle 149 et le jeton "./." résolu par réduction (%left "./.").
Conflit entre la règle 149 et le jeton "\\" résolu par réduction (%left "\\").
Conflit entre la règle 149 et le jeton ".\\" résolu par réduction (%left ".\\").
Conflit entre la règle 149 et le jeton ".\\." résolu par réduction (%left ".\\.").
Conflit entre la règle 149 et le jeton "** or ^" résolu par décalage (CONTROLDIVIDE < "** or ^").
Conflit entre la règle 149 et le jeton ".^" résolu par décalage (CONTROLDIVIDE < ".^").
Conflit entre la règle 149 et le jeton "==" résolu par réduction ("==" < CONTROLDIVIDE).
Conflit entre la règle 149 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < CONTROLDIVIDE).
Conflit entre la règle 149 et le jeton "<" résolu par réduction ("<" < CONTROLDIVIDE).
Conflit entre la règle 149 et le jeton "<=" résolu par réduction ("<=" < CONTROLDIVIDE).
Conflit entre la règle 149 et le jeton ">" résolu par réduction (">" < CONTROLDIVIDE).
Conflit entre la règle 149 et le jeton ">=" résolu par réduction (">=" < CONTROLDIVIDE).
Conflit entre la règle 149 et le jeton "&" résolu par réduction ("&" < CONTROLDIVIDE).
Conflit entre la règle 149 et le jeton "&&" résolu par réduction ("&&" < CONTROLDIVIDE).
Conflit entre la règle 149 et le jeton "|" résolu par réduction ("|" < CONTROLDIVIDE).
Conflit entre la règle 149 et le jeton "||" résolu par réduction ("||" < CONTROLDIVIDE).


état 258

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  105           | variable . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  114 operation: variable . rightOperand
  120          | variable . "** or ^" variable
  121          | variable . "** or ^" functionCall
  124          | variable . ".^" variable
  125          | variable . ".^" functionCall
  128          | variable . "'"
  129          | variable . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  148             | "/." variable .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  162 variable: variable . "." "identifier"
  164         | variable . listableEnd
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"        décalage et aller à l'état 151
    "."        décalage et aller à l'état 171
    ".'"       décalage et aller à l'état 154
    "** or ^"  décalage et aller à l'état 155
    ".^"       décalage et aller à l'état 156

    $défaut  réduction par utilisation de la règle 148 (rightOperand)

    logicalComparators  aller à l'état 157
    rightOperand        aller à l'état 158
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 159
    comparators         aller à l'état 160

Conflit entre la règle 148 et le jeton "'" résolu par décalage (CONTROLDIVIDE < "'").
Conflit entre la règle 148 et le jeton ":" résolu par réduction (":" < CONTROLDIVIDE).
Conflit entre la règle 148 et le jeton "(" résolu par réduction ("(" < CONTROLDIVIDE).
Conflit entre la règle 148 et le jeton "." résolu par décalage (CONTROLDIVIDE < ".").
Conflit entre la règle 148 et le jeton ".'" résolu par décalage (CONTROLDIVIDE < ".'").
Conflit entre la règle 148 et le jeton "+" résolu par réduction ("+" < CONTROLDIVIDE).
Conflit entre la règle 148 et le jeton "-" résolu par réduction ("-" < CONTROLDIVIDE).
Conflit entre la règle 148 et le jeton "*" résolu par réduction (%left "*").
Conflit entre la règle 148 et le jeton ".*" résolu par réduction (%left ".*").
Conflit entre la règle 148 et le jeton ".*." résolu par réduction (%left ".*.").
Conflit entre la règle 148 et le jeton "/" résolu par réduction (%left "/").
Conflit entre la règle 148 et le jeton "./" résolu par réduction (%left "./").
Conflit entre la règle 148 et le jeton "/." résolu par réduction (%left "/.").
Conflit entre la règle 148 et le jeton "./." résolu par réduction (%left "./.").
Conflit entre la règle 148 et le jeton "\\" résolu par réduction (%left "\\").
Conflit entre la règle 148 et le jeton ".\\" résolu par réduction (%left ".\\").
Conflit entre la règle 148 et le jeton ".\\." résolu par réduction (%left ".\\.").
Conflit entre la règle 148 et le jeton "** or ^" résolu par décalage (CONTROLDIVIDE < "** or ^").
Conflit entre la règle 148 et le jeton ".^" résolu par décalage (CONTROLDIVIDE < ".^").
Conflit entre la règle 148 et le jeton "==" résolu par réduction ("==" < CONTROLDIVIDE).
Conflit entre la règle 148 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < CONTROLDIVIDE).
Conflit entre la règle 148 et le jeton "<" résolu par réduction ("<" < CONTROLDIVIDE).
Conflit entre la règle 148 et le jeton "<=" résolu par réduction ("<=" < CONTROLDIVIDE).
Conflit entre la règle 148 et le jeton ">" résolu par réduction (">" < CONTROLDIVIDE).
Conflit entre la règle 148 et le jeton ">=" résolu par réduction (">=" < CONTROLDIVIDE).
Conflit entre la règle 148 et le jeton "&" résolu par réduction ("&" < CONTROLDIVIDE).
Conflit entre la règle 148 et le jeton "&&" résolu par réduction ("&&" < CONTROLDIVIDE).
Conflit entre la règle 148 et le jeton "|" résolu par réduction ("|" < CONTROLDIVIDE).
Conflit entre la règle 148 et le jeton "||" résolu par réduction ("||" < CONTROLDIVIDE).


état 259

  104 comparison: functionCall . comparators comparable
  106           | functionCall . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  115 operation: functionCall . rightOperand
  122          | functionCall . "** or ^" variable
  123          | functionCall . "** or ^" functionCall
  126          | functionCall . ".^" variable
  127          | functionCall . ".^" functionCall
  130          | functionCall . "'"
  131          | functionCall . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  147             | "./." functionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  163 variable: functionCall . "." variable
  165         | functionCall . listableEnd
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"        décalage et aller à l'état 115
    "."        décalage et aller à l'état 170
    ".'"       décalage et aller à l'état 118
    "** or ^"  décalage et aller à l'état 131
    ".^"       décalage et aller à l'état 132

    $défaut  réduction par utilisation de la règle 147 (rightOperand)

    logicalComparators  aller à l'état 144
    rightOperand        aller à l'état 145
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 147
    comparators         aller à l'état 148

Conflit entre la règle 147 et le jeton "'" résolu par décalage (KRONDIVIDE < "'").
Conflit entre la règle 147 et le jeton ":" résolu par réduction (":" < KRONDIVIDE).
Conflit entre la règle 147 et le jeton "." résolu par décalage (KRONDIVIDE < ".").
Conflit entre la règle 147 et le jeton ".'" résolu par décalage (KRONDIVIDE < ".'").
Conflit entre la règle 147 et le jeton "+" résolu par réduction ("+" < KRONDIVIDE).
Conflit entre la règle 147 et le jeton "-" résolu par réduction ("-" < KRONDIVIDE).
Conflit entre la règle 147 et le jeton "*" résolu par réduction (%left "*").
Conflit entre la règle 147 et le jeton ".*" résolu par réduction (%left ".*").
Conflit entre la règle 147 et le jeton ".*." résolu par réduction (%left ".*.").
Conflit entre la règle 147 et le jeton "/" résolu par réduction (%left "/").
Conflit entre la règle 147 et le jeton "./" résolu par réduction (%left "./").
Conflit entre la règle 147 et le jeton "/." résolu par réduction (%left "/.").
Conflit entre la règle 147 et le jeton "./." résolu par réduction (%left "./.").
Conflit entre la règle 147 et le jeton "\\" résolu par réduction (%left "\\").
Conflit entre la règle 147 et le jeton ".\\" résolu par réduction (%left ".\\").
Conflit entre la règle 147 et le jeton ".\\." résolu par réduction (%left ".\\.").
Conflit entre la règle 147 et le jeton "** or ^" résolu par décalage (KRONDIVIDE < "** or ^").
Conflit entre la règle 147 et le jeton ".^" résolu par décalage (KRONDIVIDE < ".^").
Conflit entre la règle 147 et le jeton "==" résolu par réduction ("==" < KRONDIVIDE).
Conflit entre la règle 147 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < KRONDIVIDE).
Conflit entre la règle 147 et le jeton "<" résolu par réduction ("<" < KRONDIVIDE).
Conflit entre la règle 147 et le jeton "<=" résolu par réduction ("<=" < KRONDIVIDE).
Conflit entre la règle 147 et le jeton ">" résolu par réduction (">" < KRONDIVIDE).
Conflit entre la règle 147 et le jeton ">=" résolu par réduction (">=" < KRONDIVIDE).
Conflit entre la règle 147 et le jeton "&" résolu par réduction ("&" < KRONDIVIDE).
Conflit entre la règle 147 et le jeton "&&" résolu par réduction ("&&" < KRONDIVIDE).
Conflit entre la règle 147 et le jeton "|" résolu par réduction ("|" < KRONDIVIDE).
Conflit entre la règle 147 et le jeton "||" résolu par réduction ("||" < KRONDIVIDE).


état 260

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  105           | variable . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  114 operation: variable . rightOperand
  120          | variable . "** or ^" variable
  121          | variable . "** or ^" functionCall
  124          | variable . ".^" variable
  125          | variable . ".^" functionCall
  128          | variable . "'"
  129          | variable . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  146             | "./." variable .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  162 variable: variable . "." "identifier"
  164         | variable . listableEnd
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"        décalage et aller à l'état 151
    "."        décalage et aller à l'état 171
    ".'"       décalage et aller à l'état 154
    "** or ^"  décalage et aller à l'état 155
    ".^"       décalage et aller à l'état 156

    $défaut  réduction par utilisation de la règle 146 (rightOperand)

    logicalComparators  aller à l'état 157
    rightOperand        aller à l'état 158
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 159
    comparators         aller à l'état 160

Conflit entre la règle 146 et le jeton "'" résolu par décalage (KRONDIVIDE < "'").
Conflit entre la règle 146 et le jeton ":" résolu par réduction (":" < KRONDIVIDE).
Conflit entre la règle 146 et le jeton "(" résolu par réduction ("(" < KRONDIVIDE).
Conflit entre la règle 146 et le jeton "." résolu par décalage (KRONDIVIDE < ".").
Conflit entre la règle 146 et le jeton ".'" résolu par décalage (KRONDIVIDE < ".'").
Conflit entre la règle 146 et le jeton "+" résolu par réduction ("+" < KRONDIVIDE).
Conflit entre la règle 146 et le jeton "-" résolu par réduction ("-" < KRONDIVIDE).
Conflit entre la règle 146 et le jeton "*" résolu par réduction (%left "*").
Conflit entre la règle 146 et le jeton ".*" résolu par réduction (%left ".*").
Conflit entre la règle 146 et le jeton ".*." résolu par réduction (%left ".*.").
Conflit entre la règle 146 et le jeton "/" résolu par réduction (%left "/").
Conflit entre la règle 146 et le jeton "./" résolu par réduction (%left "./").
Conflit entre la règle 146 et le jeton "/." résolu par réduction (%left "/.").
Conflit entre la règle 146 et le jeton "./." résolu par réduction (%left "./.").
Conflit entre la règle 146 et le jeton "\\" résolu par réduction (%left "\\").
Conflit entre la règle 146 et le jeton ".\\" résolu par réduction (%left ".\\").
Conflit entre la règle 146 et le jeton ".\\." résolu par réduction (%left ".\\.").
Conflit entre la règle 146 et le jeton "** or ^" résolu par décalage (KRONDIVIDE < "** or ^").
Conflit entre la règle 146 et le jeton ".^" résolu par décalage (KRONDIVIDE < ".^").
Conflit entre la règle 146 et le jeton "==" résolu par réduction ("==" < KRONDIVIDE).
Conflit entre la règle 146 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < KRONDIVIDE).
Conflit entre la règle 146 et le jeton "<" résolu par réduction ("<" < KRONDIVIDE).
Conflit entre la règle 146 et le jeton "<=" résolu par réduction ("<=" < KRONDIVIDE).
Conflit entre la règle 146 et le jeton ">" résolu par réduction (">" < KRONDIVIDE).
Conflit entre la règle 146 et le jeton ">=" résolu par réduction (">=" < KRONDIVIDE).
Conflit entre la règle 146 et le jeton "&" résolu par réduction ("&" < KRONDIVIDE).
Conflit entre la règle 146 et le jeton "&&" résolu par réduction ("&&" < KRONDIVIDE).
Conflit entre la règle 146 et le jeton "|" résolu par réduction ("|" < KRONDIVIDE).
Conflit entre la règle 146 et le jeton "||" résolu par réduction ("||" < KRONDIVIDE).


état 261

  104 comparison: functionCall . comparators comparable
  106           | functionCall . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  115 operation: functionCall . rightOperand
  122          | functionCall . "** or ^" variable
  123          | functionCall . "** or ^" functionCall
  126          | functionCall . ".^" variable
  127          | functionCall . ".^" functionCall
  130          | functionCall . "'"
  131          | functionCall . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  151             | "\\" functionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  163 variable: functionCall . "." variable
  165         | functionCall . listableEnd
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"        décalage et aller à l'état 115
    "."        décalage et aller à l'état 170
    ".'"       décalage et aller à l'état 118
    "** or ^"  décalage et aller à l'état 131
    ".^"       décalage et aller à l'état 132

    $défaut  réduction par utilisation de la règle 151 (rightOperand)

    logicalComparators  aller à l'état 144
    rightOperand        aller à l'état 145
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 147
    comparators         aller à l'état 148

Conflit entre la règle 151 et le jeton "'" résolu par décalage (RDIVIDE < "'").
Conflit entre la règle 151 et le jeton ":" résolu par réduction (":" < RDIVIDE).
Conflit entre la règle 151 et le jeton "." résolu par décalage (RDIVIDE < ".").
Conflit entre la règle 151 et le jeton ".'" résolu par décalage (RDIVIDE < ".'").
Conflit entre la règle 151 et le jeton "+" résolu par réduction ("+" < RDIVIDE).
Conflit entre la règle 151 et le jeton "-" résolu par réduction ("-" < RDIVIDE).
Conflit entre la règle 151 et le jeton "*" résolu par réduction (%left "*").
Conflit entre la règle 151 et le jeton ".*" résolu par réduction (%left ".*").
Conflit entre la règle 151 et le jeton ".*." résolu par réduction (%left ".*.").
Conflit entre la règle 151 et le jeton "/" résolu par réduction (%left "/").
Conflit entre la règle 151 et le jeton "./" résolu par réduction (%left "./").
Conflit entre la règle 151 et le jeton "/." résolu par réduction (%left "/.").
Conflit entre la règle 151 et le jeton "./." résolu par réduction (%left "./.").
Conflit entre la règle 151 et le jeton "\\" résolu par réduction (%left "\\").
Conflit entre la règle 151 et le jeton ".\\" résolu par réduction (%left ".\\").
Conflit entre la règle 151 et le jeton ".\\." résolu par réduction (%left ".\\.").
Conflit entre la règle 151 et le jeton "** or ^" résolu par décalage (RDIVIDE < "** or ^").
Conflit entre la règle 151 et le jeton ".^" résolu par décalage (RDIVIDE < ".^").
Conflit entre la règle 151 et le jeton "==" résolu par réduction ("==" < RDIVIDE).
Conflit entre la règle 151 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < RDIVIDE).
Conflit entre la règle 151 et le jeton "<" résolu par réduction ("<" < RDIVIDE).
Conflit entre la règle 151 et le jeton "<=" résolu par réduction ("<=" < RDIVIDE).
Conflit entre la règle 151 et le jeton ">" résolu par réduction (">" < RDIVIDE).
Conflit entre la règle 151 et le jeton ">=" résolu par réduction (">=" < RDIVIDE).
Conflit entre la règle 151 et le jeton "&" résolu par réduction ("&" < RDIVIDE).
Conflit entre la règle 151 et le jeton "&&" résolu par réduction ("&&" < RDIVIDE).
Conflit entre la règle 151 et le jeton "|" résolu par réduction ("|" < RDIVIDE).
Conflit entre la règle 151 et le jeton "||" résolu par réduction ("||" < RDIVIDE).


état 262

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  105           | variable . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  114 operation: variable . rightOperand
  120          | variable . "** or ^" variable
  121          | variable . "** or ^" functionCall
  124          | variable . ".^" variable
  125          | variable . ".^" functionCall
  128          | variable . "'"
  129          | variable . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  150             | "\\" variable .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  162 variable: variable . "." "identifier"
  164         | variable . listableEnd
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"        décalage et aller à l'état 151
    "."        décalage et aller à l'état 171
    ".'"       décalage et aller à l'état 154
    "** or ^"  décalage et aller à l'état 155
    ".^"       décalage et aller à l'état 156

    $défaut  réduction par utilisation de la règle 150 (rightOperand)

    logicalComparators  aller à l'état 157
    rightOperand        aller à l'état 158
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 159
    comparators         aller à l'état 160

Conflit entre la règle 150 et le jeton "'" résolu par décalage (RDIVIDE < "'").
Conflit entre la règle 150 et le jeton ":" résolu par réduction (":" < RDIVIDE).
Conflit entre la règle 150 et le jeton "(" résolu par réduction ("(" < RDIVIDE).
Conflit entre la règle 150 et le jeton "." résolu par décalage (RDIVIDE < ".").
Conflit entre la règle 150 et le jeton ".'" résolu par décalage (RDIVIDE < ".'").
Conflit entre la règle 150 et le jeton "+" résolu par réduction ("+" < RDIVIDE).
Conflit entre la règle 150 et le jeton "-" résolu par réduction ("-" < RDIVIDE).
Conflit entre la règle 150 et le jeton "*" résolu par réduction (%left "*").
Conflit entre la règle 150 et le jeton ".*" résolu par réduction (%left ".*").
Conflit entre la règle 150 et le jeton ".*." résolu par réduction (%left ".*.").
Conflit entre la règle 150 et le jeton "/" résolu par réduction (%left "/").
Conflit entre la règle 150 et le jeton "./" résolu par réduction (%left "./").
Conflit entre la règle 150 et le jeton "/." résolu par réduction (%left "/.").
Conflit entre la règle 150 et le jeton "./." résolu par réduction (%left "./.").
Conflit entre la règle 150 et le jeton "\\" résolu par réduction (%left "\\").
Conflit entre la règle 150 et le jeton ".\\" résolu par réduction (%left ".\\").
Conflit entre la règle 150 et le jeton ".\\." résolu par réduction (%left ".\\.").
Conflit entre la règle 150 et le jeton "** or ^" résolu par décalage (RDIVIDE < "** or ^").
Conflit entre la règle 150 et le jeton ".^" résolu par décalage (RDIVIDE < ".^").
Conflit entre la règle 150 et le jeton "==" résolu par réduction ("==" < RDIVIDE).
Conflit entre la règle 150 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < RDIVIDE).
Conflit entre la règle 150 et le jeton "<" résolu par réduction ("<" < RDIVIDE).
Conflit entre la règle 150 et le jeton "<=" résolu par réduction ("<=" < RDIVIDE).
Conflit entre la règle 150 et le jeton ">" résolu par réduction (">" < RDIVIDE).
Conflit entre la règle 150 et le jeton ">=" résolu par réduction (">=" < RDIVIDE).
Conflit entre la règle 150 et le jeton "&" résolu par réduction ("&" < RDIVIDE).
Conflit entre la règle 150 et le jeton "&&" résolu par réduction ("&&" < RDIVIDE).
Conflit entre la règle 150 et le jeton "|" résolu par réduction ("|" < RDIVIDE).
Conflit entre la règle 150 et le jeton "||" résolu par réduction ("||" < RDIVIDE).


état 263

  104 comparison: functionCall . comparators comparable
  106           | functionCall . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  115 operation: functionCall . rightOperand
  122          | functionCall . "** or ^" variable
  123          | functionCall . "** or ^" functionCall
  126          | functionCall . ".^" variable
  127          | functionCall . ".^" functionCall
  130          | functionCall . "'"
  131          | functionCall . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  153             | ".\\" functionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  163 variable: functionCall . "." variable
  165         | functionCall . listableEnd
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"        décalage et aller à l'état 115
    "."        décalage et aller à l'état 170
    ".'"       décalage et aller à l'état 118
    "** or ^"  décalage et aller à l'état 131
    ".^"       décalage et aller à l'état 132

    $défaut  réduction par utilisation de la règle 153 (rightOperand)

    logicalComparators  aller à l'état 144
    rightOperand        aller à l'état 145
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 147
    comparators         aller à l'état 148

Conflit entre la règle 153 et le jeton "'" résolu par décalage (DOTRDIVIDE < "'").
Conflit entre la règle 153 et le jeton ":" résolu par réduction (":" < DOTRDIVIDE).
Conflit entre la règle 153 et le jeton "." résolu par décalage (DOTRDIVIDE < ".").
Conflit entre la règle 153 et le jeton ".'" résolu par décalage (DOTRDIVIDE < ".'").
Conflit entre la règle 153 et le jeton "+" résolu par réduction ("+" < DOTRDIVIDE).
Conflit entre la règle 153 et le jeton "-" résolu par réduction ("-" < DOTRDIVIDE).
Conflit entre la règle 153 et le jeton "*" résolu par réduction (%left "*").
Conflit entre la règle 153 et le jeton ".*" résolu par réduction (%left ".*").
Conflit entre la règle 153 et le jeton ".*." résolu par réduction (%left ".*.").
Conflit entre la règle 153 et le jeton "/" résolu par réduction (%left "/").
Conflit entre la règle 153 et le jeton "./" résolu par réduction (%left "./").
Conflit entre la règle 153 et le jeton "/." résolu par réduction (%left "/.").
Conflit entre la règle 153 et le jeton "./." résolu par réduction (%left "./.").
Conflit entre la règle 153 et le jeton "\\" résolu par réduction (%left "\\").
Conflit entre la règle 153 et le jeton ".\\" résolu par réduction (%left ".\\").
Conflit entre la règle 153 et le jeton ".\\." résolu par réduction (%left ".\\.").
Conflit entre la règle 153 et le jeton "** or ^" résolu par décalage (DOTRDIVIDE < "** or ^").
Conflit entre la règle 153 et le jeton ".^" résolu par décalage (DOTRDIVIDE < ".^").
Conflit entre la règle 153 et le jeton "==" résolu par réduction ("==" < DOTRDIVIDE).
Conflit entre la règle 153 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < DOTRDIVIDE).
Conflit entre la règle 153 et le jeton "<" résolu par réduction ("<" < DOTRDIVIDE).
Conflit entre la règle 153 et le jeton "<=" résolu par réduction ("<=" < DOTRDIVIDE).
Conflit entre la règle 153 et le jeton ">" résolu par réduction (">" < DOTRDIVIDE).
Conflit entre la règle 153 et le jeton ">=" résolu par réduction (">=" < DOTRDIVIDE).
Conflit entre la règle 153 et le jeton "&" résolu par réduction ("&" < DOTRDIVIDE).
Conflit entre la règle 153 et le jeton "&&" résolu par réduction ("&&" < DOTRDIVIDE).
Conflit entre la règle 153 et le jeton "|" résolu par réduction ("|" < DOTRDIVIDE).
Conflit entre la règle 153 et le jeton "||" résolu par réduction ("||" < DOTRDIVIDE).


état 264

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  105           | variable . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  114 operation: variable . rightOperand
  120          | variable . "** or ^" variable
  121          | variable . "** or ^" functionCall
  124          | variable . ".^" variable
  125          | variable . ".^" functionCall
  128          | variable . "'"
  129          | variable . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  152             | ".\\" variable .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  162 variable: variable . "." "identifier"
  164         | variable . listableEnd
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"        décalage et aller à l'état 151
    "."        décalage et aller à l'état 171
    ".'"       décalage et aller à l'état 154
    "** or ^"  décalage et aller à l'état 155
    ".^"       décalage et aller à l'état 156

    $défaut  réduction par utilisation de la règle 152 (rightOperand)

    logicalComparators  aller à l'état 157
    rightOperand        aller à l'état 158
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 159
    comparators         aller à l'état 160

Conflit entre la règle 152 et le jeton "'" résolu par décalage (DOTRDIVIDE < "'").
Conflit entre la règle 152 et le jeton ":" résolu par réduction (":" < DOTRDIVIDE).
Conflit entre la règle 152 et le jeton "(" résolu par réduction ("(" < DOTRDIVIDE).
Conflit entre la règle 152 et le jeton "." résolu par décalage (DOTRDIVIDE < ".").
Conflit entre la règle 152 et le jeton ".'" résolu par décalage (DOTRDIVIDE < ".'").
Conflit entre la règle 152 et le jeton "+" résolu par réduction ("+" < DOTRDIVIDE).
Conflit entre la règle 152 et le jeton "-" résolu par réduction ("-" < DOTRDIVIDE).
Conflit entre la règle 152 et le jeton "*" résolu par réduction (%left "*").
Conflit entre la règle 152 et le jeton ".*" résolu par réduction (%left ".*").
Conflit entre la règle 152 et le jeton ".*." résolu par réduction (%left ".*.").
Conflit entre la règle 152 et le jeton "/" résolu par réduction (%left "/").
Conflit entre la règle 152 et le jeton "./" résolu par réduction (%left "./").
Conflit entre la règle 152 et le jeton "/." résolu par réduction (%left "/.").
Conflit entre la règle 152 et le jeton "./." résolu par réduction (%left "./.").
Conflit entre la règle 152 et le jeton "\\" résolu par réduction (%left "\\").
Conflit entre la règle 152 et le jeton ".\\" résolu par réduction (%left ".\\").
Conflit entre la règle 152 et le jeton ".\\." résolu par réduction (%left ".\\.").
Conflit entre la règle 152 et le jeton "** or ^" résolu par décalage (DOTRDIVIDE < "** or ^").
Conflit entre la règle 152 et le jeton ".^" résolu par décalage (DOTRDIVIDE < ".^").
Conflit entre la règle 152 et le jeton "==" résolu par réduction ("==" < DOTRDIVIDE).
Conflit entre la règle 152 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < DOTRDIVIDE).
Conflit entre la règle 152 et le jeton "<" résolu par réduction ("<" < DOTRDIVIDE).
Conflit entre la règle 152 et le jeton "<=" résolu par réduction ("<=" < DOTRDIVIDE).
Conflit entre la règle 152 et le jeton ">" résolu par réduction (">" < DOTRDIVIDE).
Conflit entre la règle 152 et le jeton ">=" résolu par réduction (">=" < DOTRDIVIDE).
Conflit entre la règle 152 et le jeton "&" résolu par réduction ("&" < DOTRDIVIDE).
Conflit entre la règle 152 et le jeton "&&" résolu par réduction ("&&" < DOTRDIVIDE).
Conflit entre la règle 152 et le jeton "|" résolu par réduction ("|" < DOTRDIVIDE).
Conflit entre la règle 152 et le jeton "||" résolu par réduction ("||" < DOTRDIVIDE).


état 265

  104 comparison: functionCall . comparators comparable
  106           | functionCall . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  115 operation: functionCall . rightOperand
  122          | functionCall . "** or ^" variable
  123          | functionCall . "** or ^" functionCall
  126          | functionCall . ".^" variable
  127          | functionCall . ".^" functionCall
  130          | functionCall . "'"
  131          | functionCall . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  155             | ".\\." functionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  163 variable: functionCall . "." variable
  165         | functionCall . listableEnd
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"        décalage et aller à l'état 115
    "."        décalage et aller à l'état 170
    ".'"       décalage et aller à l'état 118
    "** or ^"  décalage et aller à l'état 131
    ".^"       décalage et aller à l'état 132

    $défaut  réduction par utilisation de la règle 155 (rightOperand)

    logicalComparators  aller à l'état 144
    rightOperand        aller à l'état 145
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 147
    comparators         aller à l'état 148

Conflit entre la règle 155 et le jeton "'" résolu par décalage (KRONRDIVIDE < "'").
Conflit entre la règle 155 et le jeton ":" résolu par réduction (":" < KRONRDIVIDE).
Conflit entre la règle 155 et le jeton "." résolu par décalage (KRONRDIVIDE < ".").
Conflit entre la règle 155 et le jeton ".'" résolu par décalage (KRONRDIVIDE < ".'").
Conflit entre la règle 155 et le jeton "+" résolu par réduction ("+" < KRONRDIVIDE).
Conflit entre la règle 155 et le jeton "-" résolu par réduction ("-" < KRONRDIVIDE).
Conflit entre la règle 155 et le jeton "*" résolu par réduction (%left "*").
Conflit entre la règle 155 et le jeton ".*" résolu par réduction (%left ".*").
Conflit entre la règle 155 et le jeton ".*." résolu par réduction (%left ".*.").
Conflit entre la règle 155 et le jeton "/" résolu par réduction (%left "/").
Conflit entre la règle 155 et le jeton "./" résolu par réduction (%left "./").
Conflit entre la règle 155 et le jeton "/." résolu par réduction (%left "/.").
Conflit entre la règle 155 et le jeton "./." résolu par réduction (%left "./.").
Conflit entre la règle 155 et le jeton "\\" résolu par réduction (%left "\\").
Conflit entre la règle 155 et le jeton ".\\" résolu par réduction (%left ".\\").
Conflit entre la règle 155 et le jeton ".\\." résolu par réduction (%left ".\\.").
Conflit entre la règle 155 et le jeton "** or ^" résolu par décalage (KRONRDIVIDE < "** or ^").
Conflit entre la règle 155 et le jeton ".^" résolu par décalage (KRONRDIVIDE < ".^").
Conflit entre la règle 155 et le jeton "==" résolu par réduction ("==" < KRONRDIVIDE).
Conflit entre la règle 155 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < KRONRDIVIDE).
Conflit entre la règle 155 et le jeton "<" résolu par réduction ("<" < KRONRDIVIDE).
Conflit entre la règle 155 et le jeton "<=" résolu par réduction ("<=" < KRONRDIVIDE).
Conflit entre la règle 155 et le jeton ">" résolu par réduction (">" < KRONRDIVIDE).
Conflit entre la règle 155 et le jeton ">=" résolu par réduction (">=" < KRONRDIVIDE).
Conflit entre la règle 155 et le jeton "&" résolu par réduction ("&" < KRONRDIVIDE).
Conflit entre la règle 155 et le jeton "&&" résolu par réduction ("&&" < KRONRDIVIDE).
Conflit entre la règle 155 et le jeton "|" résolu par réduction ("|" < KRONRDIVIDE).
Conflit entre la règle 155 et le jeton "||" résolu par réduction ("||" < KRONRDIVIDE).


état 266

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  105           | variable . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  114 operation: variable . rightOperand
  120          | variable . "** or ^" variable
  121          | variable . "** or ^" functionCall
  124          | variable . ".^" variable
  125          | variable . ".^" functionCall
  128          | variable . "'"
  129          | variable . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  154             | ".\\." variable .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  162 variable: variable . "." "identifier"
  164         | variable . listableEnd
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"        décalage et aller à l'état 151
    "."        décalage et aller à l'état 171
    ".'"       décalage et aller à l'état 154
    "** or ^"  décalage et aller à l'état 155
    ".^"       décalage et aller à l'état 156

    $défaut  réduction par utilisation de la règle 154 (rightOperand)

    logicalComparators  aller à l'état 157
    rightOperand        aller à l'état 158
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 159
    comparators         aller à l'état 160

Conflit entre la règle 154 et le jeton "'" résolu par décalage (KRONRDIVIDE < "'").
Conflit entre la règle 154 et le jeton ":" résolu par réduction (":" < KRONRDIVIDE).
Conflit entre la règle 154 et le jeton "(" résolu par réduction ("(" < KRONRDIVIDE).
Conflit entre la règle 154 et le jeton "." résolu par décalage (KRONRDIVIDE < ".").
Conflit entre la règle 154 et le jeton ".'" résolu par décalage (KRONRDIVIDE < ".'").
Conflit entre la règle 154 et le jeton "+" résolu par réduction ("+" < KRONRDIVIDE).
Conflit entre la règle 154 et le jeton "-" résolu par réduction ("-" < KRONRDIVIDE).
Conflit entre la règle 154 et le jeton "*" résolu par réduction (%left "*").
Conflit entre la règle 154 et le jeton ".*" résolu par réduction (%left ".*").
Conflit entre la règle 154 et le jeton ".*." résolu par réduction (%left ".*.").
Conflit entre la règle 154 et le jeton "/" résolu par réduction (%left "/").
Conflit entre la règle 154 et le jeton "./" résolu par réduction (%left "./").
Conflit entre la règle 154 et le jeton "/." résolu par réduction (%left "/.").
Conflit entre la règle 154 et le jeton "./." résolu par réduction (%left "./.").
Conflit entre la règle 154 et le jeton "\\" résolu par réduction (%left "\\").
Conflit entre la règle 154 et le jeton ".\\" résolu par réduction (%left ".\\").
Conflit entre la règle 154 et le jeton ".\\." résolu par réduction (%left ".\\.").
Conflit entre la règle 154 et le jeton "** or ^" résolu par décalage (KRONRDIVIDE < "** or ^").
Conflit entre la règle 154 et le jeton ".^" résolu par décalage (KRONRDIVIDE < ".^").
Conflit entre la règle 154 et le jeton "==" résolu par réduction ("==" < KRONRDIVIDE).
Conflit entre la règle 154 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < KRONRDIVIDE).
Conflit entre la règle 154 et le jeton "<" résolu par réduction ("<" < KRONRDIVIDE).
Conflit entre la règle 154 et le jeton "<=" résolu par réduction ("<=" < KRONRDIVIDE).
Conflit entre la règle 154 et le jeton ">" résolu par réduction (">" < KRONRDIVIDE).
Conflit entre la règle 154 et le jeton ">=" résolu par réduction (">=" < KRONRDIVIDE).
Conflit entre la règle 154 et le jeton "&" résolu par réduction ("&" < KRONRDIVIDE).
Conflit entre la règle 154 et le jeton "&&" résolu par réduction ("&&" < KRONRDIVIDE).
Conflit entre la règle 154 et le jeton "|" résolu par réduction ("|" < KRONRDIVIDE).
Conflit entre la règle 154 et le jeton "||" résolu par réduction ("||" < KRONRDIVIDE).


état 267

  104 comparison: functionCall . comparators comparable
  106           | functionCall . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  115 operation: functionCall . rightOperand
  122          | functionCall . "** or ^" variable
  123          | functionCall . "** or ^" functionCall
  123          | functionCall "** or ^" functionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  126          | functionCall . ".^" variable
  127          | functionCall . ".^" functionCall
  130          | functionCall . "'"
  131          | functionCall . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  163 variable: functionCall . "." variable
  165         | functionCall . listableEnd
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"   décalage et aller à l'état 115
    "."   décalage et aller à l'état 170
    ".'"  décalage et aller à l'état 118

    $défaut  réduction par utilisation de la règle 123 (operation)

    logicalComparators  aller à l'état 144
    rightOperand        aller à l'état 145
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 147
    comparators         aller à l'état 148

Conflit entre la règle 123 et le jeton "'" résolu par décalage (POWER < "'").
Conflit entre la règle 123 et le jeton ":" résolu par réduction (":" < POWER).
Conflit entre la règle 123 et le jeton "." résolu par décalage (POWER < ".").
Conflit entre la règle 123 et le jeton ".'" résolu par décalage (POWER < ".'").
Conflit entre la règle 123 et le jeton "+" résolu par réduction ("+" < POWER).
Conflit entre la règle 123 et le jeton "-" résolu par réduction ("-" < POWER).
Conflit entre la règle 123 et le jeton "*" résolu par réduction ("*" < POWER).
Conflit entre la règle 123 et le jeton ".*" résolu par réduction (".*" < POWER).
Conflit entre la règle 123 et le jeton ".*." résolu par réduction (".*." < POWER).
Conflit entre la règle 123 et le jeton "/" résolu par réduction ("/" < POWER).
Conflit entre la règle 123 et le jeton "./" résolu par réduction ("./" < POWER).
Conflit entre la règle 123 et le jeton "/." résolu par réduction ("/." < POWER).
Conflit entre la règle 123 et le jeton "./." résolu par réduction ("./." < POWER).
Conflit entre la règle 123 et le jeton "\\" résolu par réduction ("\\" < POWER).
Conflit entre la règle 123 et le jeton ".\\" résolu par réduction (".\\" < POWER).
Conflit entre la règle 123 et le jeton ".\\." résolu par réduction (".\\." < POWER).
Conflit entre la règle 123 et le jeton "** or ^" résolu par réduction (%left "** or ^").
Conflit entre la règle 123 et le jeton ".^" résolu par réduction (%left ".^").
Conflit entre la règle 123 et le jeton "==" résolu par réduction ("==" < POWER).
Conflit entre la règle 123 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < POWER).
Conflit entre la règle 123 et le jeton "<" résolu par réduction ("<" < POWER).
Conflit entre la règle 123 et le jeton "<=" résolu par réduction ("<=" < POWER).
Conflit entre la règle 123 et le jeton ">" résolu par réduction (">" < POWER).
Conflit entre la règle 123 et le jeton ">=" résolu par réduction (">=" < POWER).
Conflit entre la règle 123 et le jeton "&" résolu par réduction ("&" < POWER).
Conflit entre la règle 123 et le jeton "&&" résolu par réduction ("&&" < POWER).
Conflit entre la règle 123 et le jeton "|" résolu par réduction ("|" < POWER).
Conflit entre la règle 123 et le jeton "||" résolu par réduction ("||" < POWER).


état 268

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  105           | variable . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  114 operation: variable . rightOperand
  120          | variable . "** or ^" variable
  121          | variable . "** or ^" functionCall
  122          | functionCall "** or ^" variable .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  124          | variable . ".^" variable
  125          | variable . ".^" functionCall
  128          | variable . "'"
  129          | variable . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  162 variable: variable . "." "identifier"
  164         | variable . listableEnd
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"   décalage et aller à l'état 151
    "."   décalage et aller à l'état 171
    ".'"  décalage et aller à l'état 154

    $défaut  réduction par utilisation de la règle 122 (operation)

    logicalComparators  aller à l'état 157
    rightOperand        aller à l'état 158
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 159
    comparators         aller à l'état 160

Conflit entre la règle 122 et le jeton "'" résolu par décalage (POWER < "'").
Conflit entre la règle 122 et le jeton ":" résolu par réduction (":" < POWER).
Conflit entre la règle 122 et le jeton "(" résolu par réduction ("(" < POWER).
Conflit entre la règle 122 et le jeton "." résolu par décalage (POWER < ".").
Conflit entre la règle 122 et le jeton ".'" résolu par décalage (POWER < ".'").
Conflit entre la règle 122 et le jeton "+" résolu par réduction ("+" < POWER).
Conflit entre la règle 122 et le jeton "-" résolu par réduction ("-" < POWER).
Conflit entre la règle 122 et le jeton "*" résolu par réduction ("*" < POWER).
Conflit entre la règle 122 et le jeton ".*" résolu par réduction (".*" < POWER).
Conflit entre la règle 122 et le jeton ".*." résolu par réduction (".*." < POWER).
Conflit entre la règle 122 et le jeton "/" résolu par réduction ("/" < POWER).
Conflit entre la règle 122 et le jeton "./" résolu par réduction ("./" < POWER).
Conflit entre la règle 122 et le jeton "/." résolu par réduction ("/." < POWER).
Conflit entre la règle 122 et le jeton "./." résolu par réduction ("./." < POWER).
Conflit entre la règle 122 et le jeton "\\" résolu par réduction ("\\" < POWER).
Conflit entre la règle 122 et le jeton ".\\" résolu par réduction (".\\" < POWER).
Conflit entre la règle 122 et le jeton ".\\." résolu par réduction (".\\." < POWER).
Conflit entre la règle 122 et le jeton "** or ^" résolu par réduction (%left "** or ^").
Conflit entre la règle 122 et le jeton ".^" résolu par réduction (%left ".^").
Conflit entre la règle 122 et le jeton "==" résolu par réduction ("==" < POWER).
Conflit entre la règle 122 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < POWER).
Conflit entre la règle 122 et le jeton "<" résolu par réduction ("<" < POWER).
Conflit entre la règle 122 et le jeton "<=" résolu par réduction ("<=" < POWER).
Conflit entre la règle 122 et le jeton ">" résolu par réduction (">" < POWER).
Conflit entre la règle 122 et le jeton ">=" résolu par réduction (">=" < POWER).
Conflit entre la règle 122 et le jeton "&" résolu par réduction ("&" < POWER).
Conflit entre la règle 122 et le jeton "&&" résolu par réduction ("&&" < POWER).
Conflit entre la règle 122 et le jeton "|" résolu par réduction ("|" < POWER).
Conflit entre la règle 122 et le jeton "||" résolu par réduction ("||" < POWER).


état 269

  104 comparison: functionCall . comparators comparable
  106           | functionCall . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  115 operation: functionCall . rightOperand
  122          | functionCall . "** or ^" variable
  123          | functionCall . "** or ^" functionCall
  126          | functionCall . ".^" variable
  127          | functionCall . ".^" functionCall
  127          | functionCall ".^" functionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  130          | functionCall . "'"
  131          | functionCall . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  163 variable: functionCall . "." variable
  165         | functionCall . listableEnd
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"   décalage et aller à l'état 115
    "."   décalage et aller à l'état 170
    ".'"  décalage et aller à l'état 118

    $défaut  réduction par utilisation de la règle 127 (operation)

    logicalComparators  aller à l'état 144
    rightOperand        aller à l'état 145
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 147
    comparators         aller à l'état 148

Conflit entre la règle 127 et le jeton "'" résolu par décalage (DOTPOWER < "'").
Conflit entre la règle 127 et le jeton ":" résolu par réduction (":" < DOTPOWER).
Conflit entre la règle 127 et le jeton "." résolu par décalage (DOTPOWER < ".").
Conflit entre la règle 127 et le jeton ".'" résolu par décalage (DOTPOWER < ".'").
Conflit entre la règle 127 et le jeton "+" résolu par réduction ("+" < DOTPOWER).
Conflit entre la règle 127 et le jeton "-" résolu par réduction ("-" < DOTPOWER).
Conflit entre la règle 127 et le jeton "*" résolu par réduction ("*" < DOTPOWER).
Conflit entre la règle 127 et le jeton ".*" résolu par réduction (".*" < DOTPOWER).
Conflit entre la règle 127 et le jeton ".*." résolu par réduction (".*." < DOTPOWER).
Conflit entre la règle 127 et le jeton "/" résolu par réduction ("/" < DOTPOWER).
Conflit entre la règle 127 et le jeton "./" résolu par réduction ("./" < DOTPOWER).
Conflit entre la règle 127 et le jeton "/." résolu par réduction ("/." < DOTPOWER).
Conflit entre la règle 127 et le jeton "./." résolu par réduction ("./." < DOTPOWER).
Conflit entre la règle 127 et le jeton "\\" résolu par réduction ("\\" < DOTPOWER).
Conflit entre la règle 127 et le jeton ".\\" résolu par réduction (".\\" < DOTPOWER).
Conflit entre la règle 127 et le jeton ".\\." résolu par réduction (".\\." < DOTPOWER).
Conflit entre la règle 127 et le jeton "** or ^" résolu par réduction (%left "** or ^").
Conflit entre la règle 127 et le jeton ".^" résolu par réduction (%left ".^").
Conflit entre la règle 127 et le jeton "==" résolu par réduction ("==" < DOTPOWER).
Conflit entre la règle 127 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < DOTPOWER).
Conflit entre la règle 127 et le jeton "<" résolu par réduction ("<" < DOTPOWER).
Conflit entre la règle 127 et le jeton "<=" résolu par réduction ("<=" < DOTPOWER).
Conflit entre la règle 127 et le jeton ">" résolu par réduction (">" < DOTPOWER).
Conflit entre la règle 127 et le jeton ">=" résolu par réduction (">=" < DOTPOWER).
Conflit entre la règle 127 et le jeton "&" résolu par réduction ("&" < DOTPOWER).
Conflit entre la règle 127 et le jeton "&&" résolu par réduction ("&&" < DOTPOWER).
Conflit entre la règle 127 et le jeton "|" résolu par réduction ("|" < DOTPOWER).
Conflit entre la règle 127 et le jeton "||" résolu par réduction ("||" < DOTPOWER).


état 270

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  105           | variable . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  114 operation: variable . rightOperand
  120          | variable . "** or ^" variable
  121          | variable . "** or ^" functionCall
  124          | variable . ".^" variable
  125          | variable . ".^" functionCall
  126          | functionCall ".^" variable .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  128          | variable . "'"
  129          | variable . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  162 variable: variable . "." "identifier"
  164         | variable . listableEnd
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"   décalage et aller à l'état 151
    "."   décalage et aller à l'état 171
    ".'"  décalage et aller à l'état 154

    $défaut  réduction par utilisation de la règle 126 (operation)

    logicalComparators  aller à l'état 157
    rightOperand        aller à l'état 158
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 159
    comparators         aller à l'état 160

Conflit entre la règle 126 et le jeton "'" résolu par décalage (DOTPOWER < "'").
Conflit entre la règle 126 et le jeton ":" résolu par réduction (":" < DOTPOWER).
Conflit entre la règle 126 et le jeton "(" résolu par réduction ("(" < DOTPOWER).
Conflit entre la règle 126 et le jeton "." résolu par décalage (DOTPOWER < ".").
Conflit entre la règle 126 et le jeton ".'" résolu par décalage (DOTPOWER < ".'").
Conflit entre la règle 126 et le jeton "+" résolu par réduction ("+" < DOTPOWER).
Conflit entre la règle 126 et le jeton "-" résolu par réduction ("-" < DOTPOWER).
Conflit entre la règle 126 et le jeton "*" résolu par réduction ("*" < DOTPOWER).
Conflit entre la règle 126 et le jeton ".*" résolu par réduction (".*" < DOTPOWER).
Conflit entre la règle 126 et le jeton ".*." résolu par réduction (".*." < DOTPOWER).
Conflit entre la règle 126 et le jeton "/" résolu par réduction ("/" < DOTPOWER).
Conflit entre la règle 126 et le jeton "./" résolu par réduction ("./" < DOTPOWER).
Conflit entre la règle 126 et le jeton "/." résolu par réduction ("/." < DOTPOWER).
Conflit entre la règle 126 et le jeton "./." résolu par réduction ("./." < DOTPOWER).
Conflit entre la règle 126 et le jeton "\\" résolu par réduction ("\\" < DOTPOWER).
Conflit entre la règle 126 et le jeton ".\\" résolu par réduction (".\\" < DOTPOWER).
Conflit entre la règle 126 et le jeton ".\\." résolu par réduction (".\\." < DOTPOWER).
Conflit entre la règle 126 et le jeton "** or ^" résolu par réduction (%left "** or ^").
Conflit entre la règle 126 et le jeton ".^" résolu par réduction (%left ".^").
Conflit entre la règle 126 et le jeton "==" résolu par réduction ("==" < DOTPOWER).
Conflit entre la règle 126 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < DOTPOWER).
Conflit entre la règle 126 et le jeton "<" résolu par réduction ("<" < DOTPOWER).
Conflit entre la règle 126 et le jeton "<=" résolu par réduction ("<=" < DOTPOWER).
Conflit entre la règle 126 et le jeton ">" résolu par réduction (">" < DOTPOWER).
Conflit entre la règle 126 et le jeton ">=" résolu par réduction (">=" < DOTPOWER).
Conflit entre la règle 126 et le jeton "&" résolu par réduction ("&" < DOTPOWER).
Conflit entre la règle 126 et le jeton "&&" résolu par réduction ("&&" < DOTPOWER).
Conflit entre la règle 126 et le jeton "|" résolu par réduction ("|" < DOTPOWER).
Conflit entre la règle 126 et le jeton "||" résolu par réduction ("||" < DOTPOWER).


état 271

  224 variableDeclaration: functionCall "=" ":" .

    $défaut  réduction par utilisation de la règle 224 (variableDeclaration)


état 272

  104 comparison: functionCall . comparators comparable
  106           | functionCall . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  115 operation: functionCall . rightOperand
  122          | functionCall . "** or ^" variable
  123          | functionCall . "** or ^" functionCall
  126          | functionCall . ".^" variable
  127          | functionCall . ".^" functionCall
  130          | functionCall . "'"
  131          | functionCall . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  163 variable: functionCall . "." variable
  165         | functionCall . listableEnd
  222 variableDeclaration: functionCall "=" functionCall .  ["end of file", "end of line", ",", ";", ")", "else", "elseif", "end", "case", "endfunction", "catch", "line comment"]
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"         décalage et aller à l'état 115
    ":"         décalage et aller à l'état 116
    "."         décalage et aller à l'état 170
    ".'"        décalage et aller à l'état 118
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 131
    ".^"        décalage et aller à l'état 132
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "&&"        décalage et aller à l'état 140
    "|"         décalage et aller à l'état 141
    "||"        décalage et aller à l'état 142

    $défaut  réduction par utilisation de la règle 222 (variableDeclaration)

    logicalComparators  aller à l'état 144
    rightOperand        aller à l'état 145
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 147
    comparators         aller à l'état 148


état 273

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  105           | variable . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  114 operation: variable . rightOperand
  120          | variable . "** or ^" variable
  121          | variable . "** or ^" functionCall
  124          | variable . ".^" variable
  125          | variable . ".^" functionCall
  128          | variable . "'"
  129          | variable . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  162 variable: variable . "." "identifier"
  164         | variable . listableEnd
  221 variableDeclaration: functionCall "=" variable .  ["end of file", "end of line", ",", ";", ")", "else", "elseif", "end", "case", "endfunction", "catch", "line comment"]
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"         décalage et aller à l'état 151
    ":"         décalage et aller à l'état 116
    "("         décalage et aller à l'état 152
    "."         décalage et aller à l'état 171
    ".'"        décalage et aller à l'état 154
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 155
    ".^"        décalage et aller à l'état 156
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "&&"        décalage et aller à l'état 140
    "|"         décalage et aller à l'état 141
    "||"        décalage et aller à l'état 142

    $défaut  réduction par utilisation de la règle 221 (variableDeclaration)

    logicalComparators  aller à l'état 157
    rightOperand        aller à l'état 158
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 159
    comparators         aller à l'état 160


état 274

  226 variableDeclaration: functionCall "=" returnControl .

    $défaut  réduction par utilisation de la règle 226 (variableDeclaration)


état 275

  113 comparable: ":" .

    $défaut  réduction par utilisation de la règle 113 (comparable)


état 276

  104 comparison: functionCall . comparators comparable
  106           | functionCall . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  112 comparable: functionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "(", ")", "[", "]", "{", "}", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  115 operation: functionCall . rightOperand
  122          | functionCall . "** or ^" variable
  123          | functionCall . "** or ^" functionCall
  126          | functionCall . ".^" variable
  127          | functionCall . ".^" functionCall
  130          | functionCall . "'"
  131          | functionCall . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  163 variable: functionCall . "." variable
  165         | functionCall . listableEnd
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"         décalage et aller à l'état 115
    ":"         décalage et aller à l'état 116
    "."         décalage et aller à l'état 170
    ".'"        décalage et aller à l'état 118
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 131
    ".^"        décalage et aller à l'état 132
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "&&"        décalage et aller à l'état 140
    "|"         décalage et aller à l'état 141
    "||"        décalage et aller à l'état 142

    $défaut  réduction par utilisation de la règle 112 (comparable)

    logicalComparators  aller à l'état 144
    rightOperand        aller à l'état 145
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 147
    comparators         aller à l'état 148

Conflit entre la règle 112 et le jeton "'" résolu par décalage (HIGHLEVEL < "'").
Conflit entre la règle 112 et le jeton ":" résolu par décalage (HIGHLEVEL < ":").
Conflit entre la règle 112 et le jeton "." résolu par décalage (HIGHLEVEL < ".").
Conflit entre la règle 112 et le jeton ".'" résolu par décalage (HIGHLEVEL < ".'").
Conflit entre la règle 112 et le jeton "+" résolu par décalage (HIGHLEVEL < "+").
Conflit entre la règle 112 et le jeton "-" résolu par décalage (HIGHLEVEL < "-").
Conflit entre la règle 112 et le jeton "*" résolu par décalage (HIGHLEVEL < "*").
Conflit entre la règle 112 et le jeton ".*" résolu par décalage (HIGHLEVEL < ".*").
Conflit entre la règle 112 et le jeton ".*." résolu par décalage (HIGHLEVEL < ".*.").
Conflit entre la règle 112 et le jeton "/" résolu par décalage (HIGHLEVEL < "/").
Conflit entre la règle 112 et le jeton "./" résolu par décalage (HIGHLEVEL < "./").
Conflit entre la règle 112 et le jeton "/." résolu par décalage (HIGHLEVEL < "/.").
Conflit entre la règle 112 et le jeton "./." résolu par décalage (HIGHLEVEL < "./.").
Conflit entre la règle 112 et le jeton "\\" résolu par décalage (HIGHLEVEL < "\\").
Conflit entre la règle 112 et le jeton ".\\" résolu par décalage (HIGHLEVEL < ".\\").
Conflit entre la règle 112 et le jeton ".\\." résolu par décalage (HIGHLEVEL < ".\\.").
Conflit entre la règle 112 et le jeton "** or ^" résolu par décalage (HIGHLEVEL < "** or ^").
Conflit entre la règle 112 et le jeton ".^" résolu par décalage (HIGHLEVEL < ".^").
Conflit entre la règle 112 et le jeton "==" résolu par décalage (HIGHLEVEL < "==").
Conflit entre la règle 112 et le jeton "<> or ~=" résolu par décalage (HIGHLEVEL < "<> or ~=").
Conflit entre la règle 112 et le jeton "<" résolu par décalage (HIGHLEVEL < "<").
Conflit entre la règle 112 et le jeton "<=" résolu par décalage (HIGHLEVEL < "<=").
Conflit entre la règle 112 et le jeton ">" résolu par décalage (HIGHLEVEL < ">").
Conflit entre la règle 112 et le jeton ">=" résolu par décalage (HIGHLEVEL < ">=").
Conflit entre la règle 112 et le jeton "&" résolu par décalage (HIGHLEVEL < "&").
Conflit entre la règle 112 et le jeton "&&" résolu par décalage (HIGHLEVEL < "&&").
Conflit entre la règle 112 et le jeton "|" résolu par décalage (HIGHLEVEL < "|").
Conflit entre la règle 112 et le jeton "||" résolu par décalage (HIGHLEVEL < "||").


état 277

  106 comparison: functionCall logicalComparators comparable .

    $défaut  réduction par utilisation de la règle 106 (comparison)


état 278

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  105           | variable . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  111 comparable: variable .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", ")", "[", "]", "{", "}", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  114 operation: variable . rightOperand
  120          | variable . "** or ^" variable
  121          | variable . "** or ^" functionCall
  124          | variable . ".^" variable
  125          | variable . ".^" functionCall
  128          | variable . "'"
  129          | variable . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  162 variable: variable . "." "identifier"
  164         | variable . listableEnd
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"         décalage et aller à l'état 151
    ":"         décalage et aller à l'état 116
    "("         décalage et aller à l'état 152
    "."         décalage et aller à l'état 171
    ".'"        décalage et aller à l'état 154
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 155
    ".^"        décalage et aller à l'état 156
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "&&"        décalage et aller à l'état 140
    "|"         décalage et aller à l'état 141
    "||"        décalage et aller à l'état 142

    $défaut  réduction par utilisation de la règle 111 (comparable)

    logicalComparators  aller à l'état 157
    rightOperand        aller à l'état 158
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 159
    comparators         aller à l'état 160

Conflit entre la règle 111 et le jeton "'" résolu par décalage (HIGHLEVEL < "'").
Conflit entre la règle 111 et le jeton ":" résolu par décalage (HIGHLEVEL < ":").
Conflit entre la règle 111 et le jeton "(" résolu par décalage (HIGHLEVEL < "(").
Conflit entre la règle 111 et le jeton "." résolu par décalage (HIGHLEVEL < ".").
Conflit entre la règle 111 et le jeton ".'" résolu par décalage (HIGHLEVEL < ".'").
Conflit entre la règle 111 et le jeton "+" résolu par décalage (HIGHLEVEL < "+").
Conflit entre la règle 111 et le jeton "-" résolu par décalage (HIGHLEVEL < "-").
Conflit entre la règle 111 et le jeton "*" résolu par décalage (HIGHLEVEL < "*").
Conflit entre la règle 111 et le jeton ".*" résolu par décalage (HIGHLEVEL < ".*").
Conflit entre la règle 111 et le jeton ".*." résolu par décalage (HIGHLEVEL < ".*.").
Conflit entre la règle 111 et le jeton "/" résolu par décalage (HIGHLEVEL < "/").
Conflit entre la règle 111 et le jeton "./" résolu par décalage (HIGHLEVEL < "./").
Conflit entre la règle 111 et le jeton "/." résolu par décalage (HIGHLEVEL < "/.").
Conflit entre la règle 111 et le jeton "./." résolu par décalage (HIGHLEVEL < "./.").
Conflit entre la règle 111 et le jeton "\\" résolu par décalage (HIGHLEVEL < "\\").
Conflit entre la règle 111 et le jeton ".\\" résolu par décalage (HIGHLEVEL < ".\\").
Conflit entre la règle 111 et le jeton ".\\." résolu par décalage (HIGHLEVEL < ".\\.").
Conflit entre la règle 111 et le jeton "** or ^" résolu par décalage (HIGHLEVEL < "** or ^").
Conflit entre la règle 111 et le jeton ".^" résolu par décalage (HIGHLEVEL < ".^").
Conflit entre la règle 111 et le jeton "==" résolu par décalage (HIGHLEVEL < "==").
Conflit entre la règle 111 et le jeton "<> or ~=" résolu par décalage (HIGHLEVEL < "<> or ~=").
Conflit entre la règle 111 et le jeton "<" résolu par décalage (HIGHLEVEL < "<").
Conflit entre la règle 111 et le jeton "<=" résolu par décalage (HIGHLEVEL < "<=").
Conflit entre la règle 111 et le jeton ">" résolu par décalage (HIGHLEVEL < ">").
Conflit entre la règle 111 et le jeton ">=" résolu par décalage (HIGHLEVEL < ">=").
Conflit entre la règle 111 et le jeton "&" résolu par décalage (HIGHLEVEL < "&").
Conflit entre la règle 111 et le jeton "&&" résolu par décalage (HIGHLEVEL < "&&").
Conflit entre la règle 111 et le jeton "|" résolu par décalage (HIGHLEVEL < "|").
Conflit entre la règle 111 et le jeton "||" résolu par décalage (HIGHLEVEL < "||").


état 279

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  158 listableEnd: listableBegin ":" . variable
  159            | listableBegin ":" . functionCall
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 368
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 369
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 280

  104 comparison: functionCall comparators comparable .

    $défaut  réduction par utilisation de la règle 104 (comparison)


état 281

   56 recursiveFunctionCall: simpleFunctionCall "(" functionArgs . ")"
   63 functionArgs: functionArgs . "," variable
   64             | functionArgs . "," functionCall
   65             | functionArgs . "," ":"
   66             | functionArgs . "," variableDeclaration
   67             | functionArgs . ","

    ","  décalage et aller à l'état 296
    ")"  décalage et aller à l'état 370


état 282

   57 recursiveFunctionCall: recursiveFunctionCall "(" functionArgs . ")"
   63 functionArgs: functionArgs . "," variable
   64             | functionArgs . "," functionCall
   65             | functionArgs . "," ":"
   66             | functionArgs . "," variableDeclaration
   67             | functionArgs . ","

    ","  décalage et aller à l'état 296
    ")"  décalage et aller à l'état 371


état 283

   55 simpleFunctionCall: variable "(" functionArgs . ")"
   63 functionArgs: functionArgs . "," variable
   64             | functionArgs . "," functionCall
   65             | functionArgs . "," ":"
   66             | functionArgs . "," variableDeclaration
   67             | functionArgs . ","

    ","  décalage et aller à l'état 296
    ")"  décalage et aller à l'état 372


état 284

  162 variable: variable "." "identifier" .  ["end of file", "end of line", "'", ",", ":", ";", "(", ")", ".", ".'", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "else", "elseif", "end", "case", "endfunction", "catch", "line comment"]
  169         | "identifier" .  ["'", ":", "(", ".", ".'", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||"]
  227 assignable: variable "." "identifier" .  ["="]

    "'"         réduction par utilisation de la règle 162 (variable)
    "'"         [réduction par utilisation de la règle 169 (variable)]
    ":"         réduction par utilisation de la règle 162 (variable)
    ":"         [réduction par utilisation de la règle 169 (variable)]
    "("         réduction par utilisation de la règle 162 (variable)
    "("         [réduction par utilisation de la règle 169 (variable)]
    "."         réduction par utilisation de la règle 162 (variable)
    "."         [réduction par utilisation de la règle 169 (variable)]
    ".'"        réduction par utilisation de la règle 162 (variable)
    ".'"        [réduction par utilisation de la règle 169 (variable)]
    "+"         réduction par utilisation de la règle 162 (variable)
    "+"         [réduction par utilisation de la règle 169 (variable)]
    "-"         réduction par utilisation de la règle 162 (variable)
    "-"         [réduction par utilisation de la règle 169 (variable)]
    "*"         réduction par utilisation de la règle 162 (variable)
    "*"         [réduction par utilisation de la règle 169 (variable)]
    ".*"        réduction par utilisation de la règle 162 (variable)
    ".*"        [réduction par utilisation de la règle 169 (variable)]
    ".*."       réduction par utilisation de la règle 162 (variable)
    ".*."       [réduction par utilisation de la règle 169 (variable)]
    "/"         réduction par utilisation de la règle 162 (variable)
    "/"         [réduction par utilisation de la règle 169 (variable)]
    "./"        réduction par utilisation de la règle 162 (variable)
    "./"        [réduction par utilisation de la règle 169 (variable)]
    "/."        réduction par utilisation de la règle 162 (variable)
    "/."        [réduction par utilisation de la règle 169 (variable)]
    "./."       réduction par utilisation de la règle 162 (variable)
    "./."       [réduction par utilisation de la règle 169 (variable)]
    "\\"        réduction par utilisation de la règle 162 (variable)
    "\\"        [réduction par utilisation de la règle 169 (variable)]
    ".\\"       réduction par utilisation de la règle 162 (variable)
    ".\\"       [réduction par utilisation de la règle 169 (variable)]
    ".\\."      réduction par utilisation de la règle 162 (variable)
    ".\\."      [réduction par utilisation de la règle 169 (variable)]
    "** or ^"   réduction par utilisation de la règle 162 (variable)
    "** or ^"   [réduction par utilisation de la règle 169 (variable)]
    ".^"        réduction par utilisation de la règle 162 (variable)
    ".^"        [réduction par utilisation de la règle 169 (variable)]
    "=="        réduction par utilisation de la règle 162 (variable)
    "=="        [réduction par utilisation de la règle 169 (variable)]
    "<> or ~="  réduction par utilisation de la règle 162 (variable)
    "<> or ~="  [réduction par utilisation de la règle 169 (variable)]
    "<"         réduction par utilisation de la règle 162 (variable)
    "<"         [réduction par utilisation de la règle 169 (variable)]
    "<="        réduction par utilisation de la règle 162 (variable)
    "<="        [réduction par utilisation de la règle 169 (variable)]
    ">"         réduction par utilisation de la règle 162 (variable)
    ">"         [réduction par utilisation de la règle 169 (variable)]
    ">="        réduction par utilisation de la règle 162 (variable)
    ">="        [réduction par utilisation de la règle 169 (variable)]
    "&"         réduction par utilisation de la règle 162 (variable)
    "&"         [réduction par utilisation de la règle 169 (variable)]
    "&&"        réduction par utilisation de la règle 162 (variable)
    "&&"        [réduction par utilisation de la règle 169 (variable)]
    "|"         réduction par utilisation de la règle 162 (variable)
    "|"         [réduction par utilisation de la règle 169 (variable)]
    "||"        réduction par utilisation de la règle 162 (variable)
    "||"        [réduction par utilisation de la règle 169 (variable)]
    "="         réduction par utilisation de la règle 227 (assignable)
    $défaut    réduction par utilisation de la règle 162 (variable)


état 285

  104 comparison: functionCall . comparators comparable
  106           | functionCall . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  115 operation: functionCall . rightOperand
  122          | functionCall . "** or ^" variable
  123          | functionCall . "** or ^" functionCall
  126          | functionCall . ".^" variable
  127          | functionCall . ".^" functionCall
  130          | functionCall . "'"
  131          | functionCall . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  163 variable: functionCall . "." variable
  165         | functionCall . listableEnd
  228 assignable: variable "." functionCall .  ["="]
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"         décalage et aller à l'état 115
    ":"         décalage et aller à l'état 116
    "."         décalage et aller à l'état 170
    ".'"        décalage et aller à l'état 118
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 131
    ".^"        décalage et aller à l'état 132
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "&&"        décalage et aller à l'état 140
    "|"         décalage et aller à l'état 141
    "||"        décalage et aller à l'état 142

    $défaut  réduction par utilisation de la règle 228 (assignable)

    logicalComparators  aller à l'état 144
    rightOperand        aller à l'état 145
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 147
    comparators         aller à l'état 148


état 286

  104 comparison: functionCall . comparators comparable
  106           | functionCall . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  115 operation: functionCall . rightOperand
  121          | variable "** or ^" functionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  122          | functionCall . "** or ^" variable
  123          | functionCall . "** or ^" functionCall
  126          | functionCall . ".^" variable
  127          | functionCall . ".^" functionCall
  130          | functionCall . "'"
  131          | functionCall . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  163 variable: functionCall . "." variable
  165         | functionCall . listableEnd
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"   décalage et aller à l'état 115
    "."   décalage et aller à l'état 170
    ".'"  décalage et aller à l'état 118

    $défaut  réduction par utilisation de la règle 121 (operation)

    logicalComparators  aller à l'état 144
    rightOperand        aller à l'état 145
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 147
    comparators         aller à l'état 148

Conflit entre la règle 121 et le jeton "'" résolu par décalage (POWER < "'").
Conflit entre la règle 121 et le jeton ":" résolu par réduction (":" < POWER).
Conflit entre la règle 121 et le jeton "." résolu par décalage (POWER < ".").
Conflit entre la règle 121 et le jeton ".'" résolu par décalage (POWER < ".'").
Conflit entre la règle 121 et le jeton "+" résolu par réduction ("+" < POWER).
Conflit entre la règle 121 et le jeton "-" résolu par réduction ("-" < POWER).
Conflit entre la règle 121 et le jeton "*" résolu par réduction ("*" < POWER).
Conflit entre la règle 121 et le jeton ".*" résolu par réduction (".*" < POWER).
Conflit entre la règle 121 et le jeton ".*." résolu par réduction (".*." < POWER).
Conflit entre la règle 121 et le jeton "/" résolu par réduction ("/" < POWER).
Conflit entre la règle 121 et le jeton "./" résolu par réduction ("./" < POWER).
Conflit entre la règle 121 et le jeton "/." résolu par réduction ("/." < POWER).
Conflit entre la règle 121 et le jeton "./." résolu par réduction ("./." < POWER).
Conflit entre la règle 121 et le jeton "\\" résolu par réduction ("\\" < POWER).
Conflit entre la règle 121 et le jeton ".\\" résolu par réduction (".\\" < POWER).
Conflit entre la règle 121 et le jeton ".\\." résolu par réduction (".\\." < POWER).
Conflit entre la règle 121 et le jeton "** or ^" résolu par réduction (%left "** or ^").
Conflit entre la règle 121 et le jeton ".^" résolu par réduction (%left ".^").
Conflit entre la règle 121 et le jeton "==" résolu par réduction ("==" < POWER).
Conflit entre la règle 121 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < POWER).
Conflit entre la règle 121 et le jeton "<" résolu par réduction ("<" < POWER).
Conflit entre la règle 121 et le jeton "<=" résolu par réduction ("<=" < POWER).
Conflit entre la règle 121 et le jeton ">" résolu par réduction (">" < POWER).
Conflit entre la règle 121 et le jeton ">=" résolu par réduction (">=" < POWER).
Conflit entre la règle 121 et le jeton "&" résolu par réduction ("&" < POWER).
Conflit entre la règle 121 et le jeton "&&" résolu par réduction ("&&" < POWER).
Conflit entre la règle 121 et le jeton "|" résolu par réduction ("|" < POWER).
Conflit entre la règle 121 et le jeton "||" résolu par réduction ("||" < POWER).


état 287

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  105           | variable . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  114 operation: variable . rightOperand
  120          | variable . "** or ^" variable
  120          | variable "** or ^" variable .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  121          | variable . "** or ^" functionCall
  124          | variable . ".^" variable
  125          | variable . ".^" functionCall
  128          | variable . "'"
  129          | variable . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  162 variable: variable . "." "identifier"
  164         | variable . listableEnd
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"   décalage et aller à l'état 151
    "."   décalage et aller à l'état 171
    ".'"  décalage et aller à l'état 154

    $défaut  réduction par utilisation de la règle 120 (operation)

    logicalComparators  aller à l'état 157
    rightOperand        aller à l'état 158
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 159
    comparators         aller à l'état 160

Conflit entre la règle 120 et le jeton "'" résolu par décalage (POWER < "'").
Conflit entre la règle 120 et le jeton ":" résolu par réduction (":" < POWER).
Conflit entre la règle 120 et le jeton "(" résolu par réduction ("(" < POWER).
Conflit entre la règle 120 et le jeton "." résolu par décalage (POWER < ".").
Conflit entre la règle 120 et le jeton ".'" résolu par décalage (POWER < ".'").
Conflit entre la règle 120 et le jeton "+" résolu par réduction ("+" < POWER).
Conflit entre la règle 120 et le jeton "-" résolu par réduction ("-" < POWER).
Conflit entre la règle 120 et le jeton "*" résolu par réduction ("*" < POWER).
Conflit entre la règle 120 et le jeton ".*" résolu par réduction (".*" < POWER).
Conflit entre la règle 120 et le jeton ".*." résolu par réduction (".*." < POWER).
Conflit entre la règle 120 et le jeton "/" résolu par réduction ("/" < POWER).
Conflit entre la règle 120 et le jeton "./" résolu par réduction ("./" < POWER).
Conflit entre la règle 120 et le jeton "/." résolu par réduction ("/." < POWER).
Conflit entre la règle 120 et le jeton "./." résolu par réduction ("./." < POWER).
Conflit entre la règle 120 et le jeton "\\" résolu par réduction ("\\" < POWER).
Conflit entre la règle 120 et le jeton ".\\" résolu par réduction (".\\" < POWER).
Conflit entre la règle 120 et le jeton ".\\." résolu par réduction (".\\." < POWER).
Conflit entre la règle 120 et le jeton "** or ^" résolu par réduction (%left "** or ^").
Conflit entre la règle 120 et le jeton ".^" résolu par réduction (%left ".^").
Conflit entre la règle 120 et le jeton "==" résolu par réduction ("==" < POWER).
Conflit entre la règle 120 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < POWER).
Conflit entre la règle 120 et le jeton "<" résolu par réduction ("<" < POWER).
Conflit entre la règle 120 et le jeton "<=" résolu par réduction ("<=" < POWER).
Conflit entre la règle 120 et le jeton ">" résolu par réduction (">" < POWER).
Conflit entre la règle 120 et le jeton ">=" résolu par réduction (">=" < POWER).
Conflit entre la règle 120 et le jeton "&" résolu par réduction ("&" < POWER).
Conflit entre la règle 120 et le jeton "&&" résolu par réduction ("&&" < POWER).
Conflit entre la règle 120 et le jeton "|" résolu par réduction ("|" < POWER).
Conflit entre la règle 120 et le jeton "||" résolu par réduction ("||" < POWER).


état 288

  104 comparison: functionCall . comparators comparable
  106           | functionCall . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  115 operation: functionCall . rightOperand
  122          | functionCall . "** or ^" variable
  123          | functionCall . "** or ^" functionCall
  125          | variable ".^" functionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  126          | functionCall . ".^" variable
  127          | functionCall . ".^" functionCall
  130          | functionCall . "'"
  131          | functionCall . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  163 variable: functionCall . "." variable
  165         | functionCall . listableEnd
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"   décalage et aller à l'état 115
    "."   décalage et aller à l'état 170
    ".'"  décalage et aller à l'état 118

    $défaut  réduction par utilisation de la règle 125 (operation)

    logicalComparators  aller à l'état 144
    rightOperand        aller à l'état 145
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 147
    comparators         aller à l'état 148

Conflit entre la règle 125 et le jeton "'" résolu par décalage (DOTPOWER < "'").
Conflit entre la règle 125 et le jeton ":" résolu par réduction (":" < DOTPOWER).
Conflit entre la règle 125 et le jeton "." résolu par décalage (DOTPOWER < ".").
Conflit entre la règle 125 et le jeton ".'" résolu par décalage (DOTPOWER < ".'").
Conflit entre la règle 125 et le jeton "+" résolu par réduction ("+" < DOTPOWER).
Conflit entre la règle 125 et le jeton "-" résolu par réduction ("-" < DOTPOWER).
Conflit entre la règle 125 et le jeton "*" résolu par réduction ("*" < DOTPOWER).
Conflit entre la règle 125 et le jeton ".*" résolu par réduction (".*" < DOTPOWER).
Conflit entre la règle 125 et le jeton ".*." résolu par réduction (".*." < DOTPOWER).
Conflit entre la règle 125 et le jeton "/" résolu par réduction ("/" < DOTPOWER).
Conflit entre la règle 125 et le jeton "./" résolu par réduction ("./" < DOTPOWER).
Conflit entre la règle 125 et le jeton "/." résolu par réduction ("/." < DOTPOWER).
Conflit entre la règle 125 et le jeton "./." résolu par réduction ("./." < DOTPOWER).
Conflit entre la règle 125 et le jeton "\\" résolu par réduction ("\\" < DOTPOWER).
Conflit entre la règle 125 et le jeton ".\\" résolu par réduction (".\\" < DOTPOWER).
Conflit entre la règle 125 et le jeton ".\\." résolu par réduction (".\\." < DOTPOWER).
Conflit entre la règle 125 et le jeton "** or ^" résolu par réduction (%left "** or ^").
Conflit entre la règle 125 et le jeton ".^" résolu par réduction (%left ".^").
Conflit entre la règle 125 et le jeton "==" résolu par réduction ("==" < DOTPOWER).
Conflit entre la règle 125 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < DOTPOWER).
Conflit entre la règle 125 et le jeton "<" résolu par réduction ("<" < DOTPOWER).
Conflit entre la règle 125 et le jeton "<=" résolu par réduction ("<=" < DOTPOWER).
Conflit entre la règle 125 et le jeton ">" résolu par réduction (">" < DOTPOWER).
Conflit entre la règle 125 et le jeton ">=" résolu par réduction (">=" < DOTPOWER).
Conflit entre la règle 125 et le jeton "&" résolu par réduction ("&" < DOTPOWER).
Conflit entre la règle 125 et le jeton "&&" résolu par réduction ("&&" < DOTPOWER).
Conflit entre la règle 125 et le jeton "|" résolu par réduction ("|" < DOTPOWER).
Conflit entre la règle 125 et le jeton "||" résolu par réduction ("||" < DOTPOWER).


état 289

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  105           | variable . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  114 operation: variable . rightOperand
  120          | variable . "** or ^" variable
  121          | variable . "** or ^" functionCall
  124          | variable . ".^" variable
  124          | variable ".^" variable .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  125          | variable . ".^" functionCall
  128          | variable . "'"
  129          | variable . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  162 variable: variable . "." "identifier"
  164         | variable . listableEnd
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"   décalage et aller à l'état 151
    "."   décalage et aller à l'état 171
    ".'"  décalage et aller à l'état 154

    $défaut  réduction par utilisation de la règle 124 (operation)

    logicalComparators  aller à l'état 157
    rightOperand        aller à l'état 158
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 159
    comparators         aller à l'état 160

Conflit entre la règle 124 et le jeton "'" résolu par décalage (DOTPOWER < "'").
Conflit entre la règle 124 et le jeton ":" résolu par réduction (":" < DOTPOWER).
Conflit entre la règle 124 et le jeton "(" résolu par réduction ("(" < DOTPOWER).
Conflit entre la règle 124 et le jeton "." résolu par décalage (DOTPOWER < ".").
Conflit entre la règle 124 et le jeton ".'" résolu par décalage (DOTPOWER < ".'").
Conflit entre la règle 124 et le jeton "+" résolu par réduction ("+" < DOTPOWER).
Conflit entre la règle 124 et le jeton "-" résolu par réduction ("-" < DOTPOWER).
Conflit entre la règle 124 et le jeton "*" résolu par réduction ("*" < DOTPOWER).
Conflit entre la règle 124 et le jeton ".*" résolu par réduction (".*" < DOTPOWER).
Conflit entre la règle 124 et le jeton ".*." résolu par réduction (".*." < DOTPOWER).
Conflit entre la règle 124 et le jeton "/" résolu par réduction ("/" < DOTPOWER).
Conflit entre la règle 124 et le jeton "./" résolu par réduction ("./" < DOTPOWER).
Conflit entre la règle 124 et le jeton "/." résolu par réduction ("/." < DOTPOWER).
Conflit entre la règle 124 et le jeton "./." résolu par réduction ("./." < DOTPOWER).
Conflit entre la règle 124 et le jeton "\\" résolu par réduction ("\\" < DOTPOWER).
Conflit entre la règle 124 et le jeton ".\\" résolu par réduction (".\\" < DOTPOWER).
Conflit entre la règle 124 et le jeton ".\\." résolu par réduction (".\\." < DOTPOWER).
Conflit entre la règle 124 et le jeton "** or ^" résolu par réduction (%left "** or ^").
Conflit entre la règle 124 et le jeton ".^" résolu par réduction (%left ".^").
Conflit entre la règle 124 et le jeton "==" résolu par réduction ("==" < DOTPOWER).
Conflit entre la règle 124 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < DOTPOWER).
Conflit entre la règle 124 et le jeton "<" résolu par réduction ("<" < DOTPOWER).
Conflit entre la règle 124 et le jeton "<=" résolu par réduction ("<=" < DOTPOWER).
Conflit entre la règle 124 et le jeton ">" résolu par réduction (">" < DOTPOWER).
Conflit entre la règle 124 et le jeton ">=" résolu par réduction (">=" < DOTPOWER).
Conflit entre la règle 124 et le jeton "&" résolu par réduction ("&" < DOTPOWER).
Conflit entre la règle 124 et le jeton "&&" résolu par réduction ("&&" < DOTPOWER).
Conflit entre la règle 124 et le jeton "|" résolu par réduction ("|" < DOTPOWER).
Conflit entre la règle 124 et le jeton "||" résolu par réduction ("||" < DOTPOWER).


état 290

  105 comparison: variable logicalComparators comparable .

    $défaut  réduction par utilisation de la règle 105 (comparison)


état 291

  103 comparison: variable comparators comparable .

    $défaut  réduction par utilisation de la règle 103 (comparison)


état 292

  223 variableDeclaration: assignable "=" ":" .

    $défaut  réduction par utilisation de la règle 223 (variableDeclaration)


état 293

  104 comparison: functionCall . comparators comparable
  106           | functionCall . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  115 operation: functionCall . rightOperand
  122          | functionCall . "** or ^" variable
  123          | functionCall . "** or ^" functionCall
  126          | functionCall . ".^" variable
  127          | functionCall . ".^" functionCall
  130          | functionCall . "'"
  131          | functionCall . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  163 variable: functionCall . "." variable
  165         | functionCall . listableEnd
  220 variableDeclaration: assignable "=" functionCall .  ["end of file", "end of line", ",", ";", ")", "else", "elseif", "end", "case", "endfunction", "catch", "line comment"]
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"         décalage et aller à l'état 115
    ":"         décalage et aller à l'état 116
    "."         décalage et aller à l'état 170
    ".'"        décalage et aller à l'état 118
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 131
    ".^"        décalage et aller à l'état 132
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "&&"        décalage et aller à l'état 140
    "|"         décalage et aller à l'état 141
    "||"        décalage et aller à l'état 142

    $défaut  réduction par utilisation de la règle 220 (variableDeclaration)

    logicalComparators  aller à l'état 144
    rightOperand        aller à l'état 145
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 147
    comparators         aller à l'état 148


état 294

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  105           | variable . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  114 operation: variable . rightOperand
  120          | variable . "** or ^" variable
  121          | variable . "** or ^" functionCall
  124          | variable . ".^" variable
  125          | variable . ".^" functionCall
  128          | variable . "'"
  129          | variable . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  162 variable: variable . "." "identifier"
  164         | variable . listableEnd
  219 variableDeclaration: assignable "=" variable .  ["end of file", "end of line", ",", ";", ")", "else", "elseif", "end", "case", "endfunction", "catch", "line comment"]
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"         décalage et aller à l'état 151
    ":"         décalage et aller à l'état 116
    "("         décalage et aller à l'état 152
    "."         décalage et aller à l'état 171
    ".'"        décalage et aller à l'état 154
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 155
    ".^"        décalage et aller à l'état 156
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "&&"        décalage et aller à l'état 140
    "|"         décalage et aller à l'état 141
    "||"        décalage et aller à l'état 142

    $défaut  réduction par utilisation de la règle 219 (variableDeclaration)

    logicalComparators  aller à l'état 157
    rightOperand        aller à l'état 158
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 159
    comparators         aller à l'état 160


état 295

  225 variableDeclaration: assignable "=" returnControl .

    $défaut  réduction par utilisation de la règle 225 (variableDeclaration)


état 296

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   63 functionArgs: functionArgs "," . variable
   64             | functionArgs "," . functionCall
   65             | functionArgs "," . ":"
   66             | functionArgs "," . variableDeclaration
   67             | functionArgs "," .  [",", ")"]
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"
  219 variableDeclaration: . assignable "=" variable
  220                    | . assignable "=" functionCall
  221                    | . functionCall "=" variable
  222                    | . functionCall "=" functionCall
  223                    | . assignable "=" ":"
  224                    | . functionCall "=" ":"
  225                    | . assignable "=" returnControl
  226                    | . functionCall "=" returnControl
  227 assignable: . variable "." "identifier"
  228           | . variable "." functionCall
  229           | . functionCall "." variable
  230           | . functionCall "." functionCall
  231           | . "identifier"
  232           | . multipleResults
  233 multipleResults: . "[" matrixOrCellColumns "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    ":"           décalage et aller à l'état 373
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 8
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 163
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    $défaut  réduction par utilisation de la règle 67 (functionArgs)

    functionCall           aller à l'état 374
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 375
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 376
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45


état 297

   53 specificFunctionCall: "%t or %T" "(" functionArgs ")" .

    $défaut  réduction par utilisation de la règle 53 (specificFunctionCall)


état 298

   54 specificFunctionCall: "%f or %F" "(" functionArgs ")" .

    $défaut  réduction par utilisation de la règle 54 (specificFunctionCall)


état 299

  197 matrix: "[" matrixOrCellColumns "]" .

    $défaut  réduction par utilisation de la règle 197 (matrix)


état 300

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  105           | variable . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  114 operation: variable . rightOperand
  120          | variable . "** or ^" variable
  121          | variable . "** or ^" functionCall
  124          | variable . ".^" variable
  125          | variable . ".^" functionCall
  128          | variable . "'"
  129          | variable . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  162 variable: variable . "." "identifier"
  163         | functionCall "." variable .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "'", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", ".", ".'", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  164         | variable . listableEnd
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    $défaut  réduction par utilisation de la règle 163 (variable)

    logicalComparators  aller à l'état 157
    rightOperand        aller à l'état 158
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 159
    comparators         aller à l'état 160

Conflit entre la règle 163 et le jeton "'" résolu par réduction ("'" < DOT).
Conflit entre la règle 163 et le jeton ":" résolu par réduction (":" < DOT).
Conflit entre la règle 163 et le jeton "(" résolu par réduction ("(" < DOT).
Conflit entre la règle 163 et le jeton "." résolu par réduction (%left ".").
Conflit entre la règle 163 et le jeton ".'" résolu par réduction (".'" < DOT).
Conflit entre la règle 163 et le jeton "+" résolu par réduction ("+" < DOT).
Conflit entre la règle 163 et le jeton "-" résolu par réduction ("-" < DOT).
Conflit entre la règle 163 et le jeton "*" résolu par réduction ("*" < DOT).
Conflit entre la règle 163 et le jeton ".*" résolu par réduction (".*" < DOT).
Conflit entre la règle 163 et le jeton ".*." résolu par réduction (".*." < DOT).
Conflit entre la règle 163 et le jeton "/" résolu par réduction ("/" < DOT).
Conflit entre la règle 163 et le jeton "./" résolu par réduction ("./" < DOT).
Conflit entre la règle 163 et le jeton "/." résolu par réduction ("/." < DOT).
Conflit entre la règle 163 et le jeton "./." résolu par réduction ("./." < DOT).
Conflit entre la règle 163 et le jeton "\\" résolu par réduction ("\\" < DOT).
Conflit entre la règle 163 et le jeton ".\\" résolu par réduction (".\\" < DOT).
Conflit entre la règle 163 et le jeton ".\\." résolu par réduction (".\\." < DOT).
Conflit entre la règle 163 et le jeton "** or ^" résolu par réduction ("** or ^" < DOT).
Conflit entre la règle 163 et le jeton ".^" résolu par réduction (".^" < DOT).
Conflit entre la règle 163 et le jeton "==" résolu par réduction ("==" < DOT).
Conflit entre la règle 163 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < DOT).
Conflit entre la règle 163 et le jeton "<" résolu par réduction ("<" < DOT).
Conflit entre la règle 163 et le jeton "<=" résolu par réduction ("<=" < DOT).
Conflit entre la règle 163 et le jeton ">" résolu par réduction (">" < DOT).
Conflit entre la règle 163 et le jeton ">=" résolu par réduction (">=" < DOT).
Conflit entre la règle 163 et le jeton "&" résolu par réduction ("&" < DOT).
Conflit entre la règle 163 et le jeton "&&" résolu par réduction ("&&" < DOT).
Conflit entre la règle 163 et le jeton "|" résolu par réduction ("|" < DOT).
Conflit entre la règle 163 et le jeton "||" résolu par réduction ("||" < DOT).


état 301

  162 variable: variable "." "identifier" .

    $défaut  réduction par utilisation de la règle 162 (variable)


état 302

  104 comparison: functionCall . comparators comparable
  106           | functionCall . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  115 operation: functionCall . rightOperand
  122          | functionCall . "** or ^" variable
  123          | functionCall . "** or ^" functionCall
  126          | functionCall . ".^" variable
  127          | functionCall . ".^" functionCall
  130          | functionCall . "'"
  131          | functionCall . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  163 variable: functionCall . "." variable
  165         | functionCall . listableEnd
  183 variableFields: functionCall "," functionCall .  [",", ")"]
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"         décalage et aller à l'état 115
    ":"         décalage et aller à l'état 116
    "."         décalage et aller à l'état 170
    ".'"        décalage et aller à l'état 118
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 131
    ".^"        décalage et aller à l'état 132
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "&&"        décalage et aller à l'état 140
    "|"         décalage et aller à l'état 141
    "||"        décalage et aller à l'état 142

    $défaut  réduction par utilisation de la règle 183 (variableFields)

    logicalComparators  aller à l'état 144
    rightOperand        aller à l'état 145
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 147
    comparators         aller à l'état 148


état 303

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  105           | variable . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  114 operation: variable . rightOperand
  120          | variable . "** or ^" variable
  121          | variable . "** or ^" functionCall
  124          | variable . ".^" variable
  125          | variable . ".^" functionCall
  128          | variable . "'"
  129          | variable . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  162 variable: variable . "." "identifier"
  164         | variable . listableEnd
  184 variableFields: functionCall "," variable .  [",", ")"]
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"         décalage et aller à l'état 151
    ":"         décalage et aller à l'état 116
    "("         décalage et aller à l'état 152
    "."         décalage et aller à l'état 171
    ".'"        décalage et aller à l'état 154
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 155
    ".^"        décalage et aller à l'état 156
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "&&"        décalage et aller à l'état 140
    "|"         décalage et aller à l'état 141
    "||"        décalage et aller à l'état 142

    $défaut  réduction par utilisation de la règle 184 (variableFields)

    logicalComparators  aller à l'état 157
    rightOperand        aller à l'état 158
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 159
    comparators         aller à l'état 160


état 304

  104 comparison: functionCall . comparators comparable
  106           | functionCall . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  115 operation: functionCall . rightOperand
  122          | functionCall . "** or ^" variable
  123          | functionCall . "** or ^" functionCall
  126          | functionCall . ".^" variable
  127          | functionCall . ".^" functionCall
  130          | functionCall . "'"
  131          | functionCall . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  163 variable: functionCall . "." variable
  165         | functionCall . listableEnd
  185 variableFields: variable "," functionCall .  [",", ")"]
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"         décalage et aller à l'état 115
    ":"         décalage et aller à l'état 116
    "."         décalage et aller à l'état 170
    ".'"        décalage et aller à l'état 118
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 131
    ".^"        décalage et aller à l'état 132
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "&&"        décalage et aller à l'état 140
    "|"         décalage et aller à l'état 141
    "||"        décalage et aller à l'état 142

    $défaut  réduction par utilisation de la règle 185 (variableFields)

    logicalComparators  aller à l'état 144
    rightOperand        aller à l'état 145
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 147
    comparators         aller à l'état 148


état 305

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  105           | variable . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  114 operation: variable . rightOperand
  120          | variable . "** or ^" variable
  121          | variable . "** or ^" functionCall
  124          | variable . ".^" variable
  125          | variable . ".^" functionCall
  128          | variable . "'"
  129          | variable . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  162 variable: variable . "." "identifier"
  164         | variable . listableEnd
  182 variableFields: variable "," variable .  [",", ")"]
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"         décalage et aller à l'état 151
    ":"         décalage et aller à l'état 116
    "("         décalage et aller à l'état 152
    "."         décalage et aller à l'état 171
    ".'"        décalage et aller à l'état 154
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 155
    ".^"        décalage et aller à l'état 156
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "&&"        décalage et aller à l'état 140
    "|"         décalage et aller à l'état 141
    "||"        décalage et aller à l'état 142

    $défaut  réduction par utilisation de la règle 182 (variableFields)

    logicalComparators  aller à l'état 157
    rightOperand        aller à l'état 158
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 159
    comparators         aller à l'état 160


état 306

  104 comparison: functionCall . comparators comparable
  106           | functionCall . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  115 operation: functionCall . rightOperand
  122          | functionCall . "** or ^" variable
  123          | functionCall . "** or ^" functionCall
  126          | functionCall . ".^" variable
  127          | functionCall . ".^" functionCall
  130          | functionCall . "'"
  131          | functionCall . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  163 variable: functionCall . "." variable
  165         | functionCall . listableEnd
  181 variableFields: variableFields "," functionCall .  [",", ")"]
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"         décalage et aller à l'état 115
    ":"         décalage et aller à l'état 116
    "."         décalage et aller à l'état 170
    ".'"        décalage et aller à l'état 118
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 131
    ".^"        décalage et aller à l'état 132
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "&&"        décalage et aller à l'état 140
    "|"         décalage et aller à l'état 141
    "||"        décalage et aller à l'état 142

    $défaut  réduction par utilisation de la règle 181 (variableFields)

    logicalComparators  aller à l'état 144
    rightOperand        aller à l'état 145
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 147
    comparators         aller à l'état 148


état 307

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  105           | variable . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  114 operation: variable . rightOperand
  120          | variable . "** or ^" variable
  121          | variable . "** or ^" functionCall
  124          | variable . ".^" variable
  125          | variable . ".^" functionCall
  128          | variable . "'"
  129          | variable . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  162 variable: variable . "." "identifier"
  164         | variable . listableEnd
  180 variableFields: variableFields "," variable .  [",", ")"]
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"         décalage et aller à l'état 151
    ":"         décalage et aller à l'état 116
    "("         décalage et aller à l'état 152
    "."         décalage et aller à l'état 171
    ".'"        décalage et aller à l'état 154
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 155
    ".^"        décalage et aller à l'état 156
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "&&"        décalage et aller à l'état 140
    "|"         décalage et aller à l'état 141
    "||"        décalage et aller à l'état 142

    $défaut  réduction par utilisation de la règle 180 (variableFields)

    logicalComparators  aller à l'état 157
    rightOperand        aller à l'état 158
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 159
    comparators         aller à l'état 160


état 308

  195 matrix: "[" matrixOrCellLines matrixOrCellColumns "]" .

    $défaut  réduction par utilisation de la règle 195 (matrix)


état 309

  204 matrixOrCellLineBreak: ";" "end of line" .

    $défaut  réduction par utilisation de la règle 204 (matrixOrCellLineBreak)


état 310

  207 matrixOrCellLine: matrixOrCellColumns ";" "line comment" . "end of line"

    "end of line"  décalage et aller à l'état 377


état 311

  206 matrixOrCellLine: matrixOrCellColumns "line comment" "end of line" .

    $défaut  réduction par utilisation de la règle 206 (matrixOrCellLine)


état 312

  217 matrixOrCellColumnsBreak: matrixOrCellColumnsBreak "," .

    $défaut  réduction par utilisation de la règle 217 (matrixOrCellColumnsBreak)


état 313

  202 matrixOrCellLineBreak: ";" .  ["%t or %T", "%f or %F", "~ or @", "$", "(", "[", "]", "{", "}", "+", "-", "string", "identifier", "integer", "float", "number"]
  204                      | ";" . "end of line"
  210 matrixOrCellLine: matrixOrCellColumns matrixOrCellColumnsBreak ";" . "line comment" "end of line"

    "end of line"   décalage et aller à l'état 309
    "line comment"  décalage et aller à l'état 378

    $défaut  réduction par utilisation de la règle 202 (matrixOrCellLineBreak)


état 314

  209 matrixOrCellLine: matrixOrCellColumns matrixOrCellColumnsBreak "line comment" . "end of line"

    "end of line"  décalage et aller à l'état 379


état 315

  104 comparison: functionCall . comparators comparable
  106           | functionCall . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  115 operation: functionCall . rightOperand
  122          | functionCall . "** or ^" variable
  123          | functionCall . "** or ^" functionCall
  126          | functionCall . ".^" variable
  127          | functionCall . ".^" functionCall
  130          | functionCall . "'"
  131          | functionCall . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  163 variable: functionCall . "." variable
  165         | functionCall . listableEnd
  212 matrixOrCellColumns: matrixOrCellColumns matrixOrCellColumnsBreak functionCall .  ["end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "(", "[", "]", "{", "}", "string", "identifier", "integer", "float", "number", "line comment"]
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"         décalage et aller à l'état 115
    ":"         décalage et aller à l'état 116
    "."         décalage et aller à l'état 170
    ".'"        décalage et aller à l'état 118
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 131
    ".^"        décalage et aller à l'état 132
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "&&"        décalage et aller à l'état 140
    "|"         décalage et aller à l'état 141
    "||"        décalage et aller à l'état 142

    $défaut  réduction par utilisation de la règle 212 (matrixOrCellColumns)

    logicalComparators  aller à l'état 144
    rightOperand        aller à l'état 145
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 147
    comparators         aller à l'état 148

Conflit entre la règle 212 et le jeton "+" résolu par décalage (HIGHLEVEL < "+").
Conflit entre la règle 212 et le jeton "-" résolu par décalage (HIGHLEVEL < "-").


état 316

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  105           | variable . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  114 operation: variable . rightOperand
  120          | variable . "** or ^" variable
  121          | variable . "** or ^" functionCall
  124          | variable . ".^" variable
  125          | variable . ".^" functionCall
  128          | variable . "'"
  129          | variable . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  162 variable: variable . "." "identifier"
  164         | variable . listableEnd
  211 matrixOrCellColumns: matrixOrCellColumns matrixOrCellColumnsBreak variable .  ["end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "[", "]", "{", "}", "string", "identifier", "integer", "float", "number", "line comment"]
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"         décalage et aller à l'état 151
    ":"         décalage et aller à l'état 116
    "("         décalage et aller à l'état 152
    "."         décalage et aller à l'état 171
    ".'"        décalage et aller à l'état 154
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 155
    ".^"        décalage et aller à l'état 156
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "&&"        décalage et aller à l'état 140
    "|"         décalage et aller à l'état 141
    "||"        décalage et aller à l'état 142

    $défaut  réduction par utilisation de la règle 211 (matrixOrCellColumns)

    logicalComparators  aller à l'état 157
    rightOperand        aller à l'état 158
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 159
    comparators         aller à l'état 160

Conflit entre la règle 211 et le jeton "(" résolu par décalage (HIGHLEVEL < "(").
Conflit entre la règle 211 et le jeton "+" résolu par décalage (HIGHLEVEL < "+").
Conflit entre la règle 211 et le jeton "-" résolu par décalage (HIGHLEVEL < "-").


état 317

  208 matrixOrCellLine: matrixOrCellColumns matrixOrCellColumnsBreak matrixOrCellLineBreak .

    $défaut  réduction par utilisation de la règle 208 (matrixOrCellLine)


état 318

  194 matrix: "[" lineEnd matrixOrCellLines "]" .

    $défaut  réduction par utilisation de la règle 194 (matrix)


état 319

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  196       | "[" lineEnd matrixOrCellLines matrixOrCellColumns . "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"
  202 matrixOrCellLineBreak: . ";"
  203                      | . "end of line"
  204                      | . ";" "end of line"
  205 matrixOrCellLine: matrixOrCellColumns . matrixOrCellLineBreak
  206                 | matrixOrCellColumns . "line comment" "end of line"
  207                 | matrixOrCellColumns . ";" "line comment" "end of line"
  208                 | matrixOrCellColumns . matrixOrCellColumnsBreak matrixOrCellLineBreak
  209                 | matrixOrCellColumns . matrixOrCellColumnsBreak "line comment" "end of line"
  210                 | matrixOrCellColumns . matrixOrCellColumnsBreak ";" "line comment" "end of line"
  211 matrixOrCellColumns: matrixOrCellColumns . matrixOrCellColumnsBreak variable
  212                    | matrixOrCellColumns . matrixOrCellColumnsBreak functionCall
  213                    | matrixOrCellColumns . variable
  214                    | matrixOrCellColumns . functionCall
  217 matrixOrCellColumnsBreak: . matrixOrCellColumnsBreak ","
  218                         | . ","

    "end of line"   décalage et aller à l'état 182
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    ","             décalage et aller à l'état 183
    ";"             décalage et aller à l'état 184
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 55
    "]"             décalage et aller à l'état 380
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 56
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 186

    functionCall              aller à l'état 187
    specificFunctionCall      aller à l'état 33
    simpleFunctionCall        aller à l'état 34
    recursiveFunctionCall     aller à l'état 35
    comparison                aller à l'état 38
    operation                 aller à l'état 39
    variable                  aller à l'état 188
    cell                      aller à l'état 41
    matrix                    aller à l'état 42
    matrixOrCellLineBreak     aller à l'état 189
    matrixOrCellColumnsBreak  aller à l'état 190


état 320

  198 matrix: "[" lineEnd matrixOrCellColumns "]" .

    $défaut  réduction par utilisation de la règle 198 (matrix)


état 321

  188 cell: "{" matrixOrCellLines matrixOrCellColumns "}" .

    $défaut  réduction par utilisation de la règle 188 (cell)


état 322

  187 cell: "{" lineEnd matrixOrCellLines "}" .

    $défaut  réduction par utilisation de la règle 187 (cell)


état 323

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  189     | "{" lineEnd matrixOrCellLines matrixOrCellColumns . "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"
  202 matrixOrCellLineBreak: . ";"
  203                      | . "end of line"
  204                      | . ";" "end of line"
  205 matrixOrCellLine: matrixOrCellColumns . matrixOrCellLineBreak
  206                 | matrixOrCellColumns . "line comment" "end of line"
  207                 | matrixOrCellColumns . ";" "line comment" "end of line"
  208                 | matrixOrCellColumns . matrixOrCellColumnsBreak matrixOrCellLineBreak
  209                 | matrixOrCellColumns . matrixOrCellColumnsBreak "line comment" "end of line"
  210                 | matrixOrCellColumns . matrixOrCellColumnsBreak ";" "line comment" "end of line"
  211 matrixOrCellColumns: matrixOrCellColumns . matrixOrCellColumnsBreak variable
  212                    | matrixOrCellColumns . matrixOrCellColumnsBreak functionCall
  213                    | matrixOrCellColumns . variable
  214                    | matrixOrCellColumns . functionCall
  217 matrixOrCellColumnsBreak: . matrixOrCellColumnsBreak ","
  218                         | . ","

    "end of line"   décalage et aller à l'état 182
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    ","             décalage et aller à l'état 183
    ";"             décalage et aller à l'état 184
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 55
    "{"             décalage et aller à l'état 9
    "}"             décalage et aller à l'état 381
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 56
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 186

    functionCall              aller à l'état 187
    specificFunctionCall      aller à l'état 33
    simpleFunctionCall        aller à l'état 34
    recursiveFunctionCall     aller à l'état 35
    comparison                aller à l'état 38
    operation                 aller à l'état 39
    variable                  aller à l'état 188
    cell                      aller à l'état 41
    matrix                    aller à l'état 42
    matrixOrCellLineBreak     aller à l'état 189
    matrixOrCellColumnsBreak  aller à l'état 190


état 324

  191 cell: "{" lineEnd matrixOrCellColumns "}" .

    $défaut  réduction par utilisation de la règle 191 (cell)


état 325

  244 ifConditionBreak: "," "end of line" .

    $défaut  réduction par utilisation de la règle 244 (ifConditionBreak)


état 326

  242 ifConditionBreak: ";" "end of line" .

    $défaut  réduction par utilisation de la règle 242 (ifConditionBreak)


état 327

  249 then: "then" ifConditionBreak .

    $défaut  réduction par utilisation de la règle 249 (then)


état 328

  247 then: ifConditionBreak "then" .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "else", "elseif", "end", "select", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  248     | ifConditionBreak "then" . "end of line"

    "end of line"  décalage et aller à l'état 382

    $défaut  réduction par utilisation de la règle 247 (then)


état 329

  237 thenBody: expressions .

    $défaut  réduction par utilisation de la règle 237 (thenBody)


état 330

  234 ifControl: "if" condition then thenBody . "end"
  235          | "if" condition then thenBody . else elseBody "end"
  236          | "if" condition then thenBody . elseIfControl "end"
  252 else: . "else"
  253     | . "else" ","
  254     | . "else" ";"
  255     | . "else" "end of line"
  256     | . "else" "," "end of line"
  257     | . "else" ";" "end of line"
  258 elseIfControl: . "elseif" condition then thenBody
  259              | . "elseif" condition then thenBody else elseBody
  260              | . "elseif" condition then thenBody elseIfControl

    "else"    décalage et aller à l'état 383
    "elseif"  décalage et aller à l'état 384
    "end"     décalage et aller à l'état 385

    else           aller à l'état 386
    elseIfControl  aller à l'état 387


état 331

  268 selectConditionBreak: "," "end of line" .

    $défaut  réduction par utilisation de la règle 268 (selectConditionBreak)


état 332

  269 selectConditionBreak: ";" "end of line" .

    $défaut  réduction par utilisation de la règle 269 (selectConditionBreak)


état 333

  263 selectControl: "select" selectable "line comment" selectConditionBreak . casesControl "end"
  264              | "select" selectable "line comment" selectConditionBreak . casesControl else elseBody "end"
  270 casesControl: . "case" variable caseControlBreak caseBody
  271             | . comments "case" variable caseControlBreak caseBody
  272             | . "case" variable "line comment" "end of line" caseBody
  273             | . comments "case" variable "line comment" "end of line" caseBody
  274             | . casesControl "case" variable caseControlBreak caseBody
  275             | . casesControl "case" variable "line comment" "end of line" caseBody
  333 comments: . "line comment" "end of line"
  334         | . comments "line comment" "end of line"

    "case"          décalage et aller à l'état 334
    "line comment"  décalage et aller à l'état 335

    casesControl  aller à l'état 388
    comments      aller à l'état 337


état 334

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"
  270 casesControl: "case" . variable caseControlBreak caseBody
  272             | "case" . variable "line comment" "end of line" caseBody

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 93
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 389
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 335

  333 comments: "line comment" . "end of line"

    "end of line"  décalage et aller à l'état 390


état 336

  252 else: . "else"
  253     | . "else" ","
  254     | . "else" ";"
  255     | . "else" "end of line"
  256     | . "else" "," "end of line"
  257     | . "else" ";" "end of line"
  261 selectControl: "select" selectable selectConditionBreak casesControl . "end"
  262              | "select" selectable selectConditionBreak casesControl . else elseBody "end"
  274 casesControl: casesControl . "case" variable caseControlBreak caseBody
  275             | casesControl . "case" variable "line comment" "end of line" caseBody

    "else"  décalage et aller à l'état 383
    "end"   décalage et aller à l'état 391
    "case"  décalage et aller à l'état 392

    else  aller à l'état 393


état 337

  271 casesControl: comments . "case" variable caseControlBreak caseBody
  273             | comments . "case" variable "line comment" "end of line" caseBody
  334 comments: comments . "line comment" "end of line"

    "case"          décalage et aller à l'état 394
    "line comment"  décalage et aller à l'état 395


état 338

   70 functionDeclaration: "function" "[" "]" "=" . "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"

    "identifier"  décalage et aller à l'état 396


état 339

   69 functionDeclaration: "function" "[" functionDeclarationReturns "]" . "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"

    "="  décalage et aller à l'état 397


état 340

   76 idList: idList "," . "identifier"

    "identifier"  décalage et aller à l'état 398


état 341

   74 functionDeclarationArguments: "(" ")" .

    $défaut  réduction par utilisation de la règle 74 (functionDeclarationArguments)


état 342

   73 functionDeclarationArguments: "(" idList . ")"
   76 idList: idList . "," "identifier"

    ","  décalage et aller à l'état 340
    ")"  décalage et aller à l'état 399


état 343

   68 functionDeclaration: "function" "identifier" "=" "identifier" . functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   73 functionDeclarationArguments: . "(" idList ")"
   74                             | . "(" ")"
   75                             | .  ["end of line", ",", ";", "line comment"]

    "("  décalage et aller à l'état 213

    $défaut  réduction par utilisation de la règle 75 (functionDeclarationArguments)

    functionDeclarationArguments  aller à l'état 400


état 344

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | "function" "identifier" functionDeclarationArguments functionDeclarationBreak . functionBody "endfunction"
   83 functionBody: . expressions
   84             | .  ["endfunction"]
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"
  219 variableDeclaration: . assignable "=" variable
  220                    | . assignable "=" functionCall
  221                    | . functionCall "=" variable
  222                    | . functionCall "=" functionCall
  223                    | . assignable "=" ":"
  224                    | . functionCall "=" ":"
  225                    | . assignable "=" returnControl
  226                    | . functionCall "=" returnControl
  227 assignable: . variable "." "identifier"
  228           | . variable "." functionCall
  229           | . functionCall "." variable
  230           | . functionCall "." functionCall
  231           | . "identifier"
  232           | . multipleResults
  233 multipleResults: . "[" matrixOrCellColumns "]"
  234 ifControl: . "if" condition then thenBody "end"
  235          | . "if" condition then thenBody else elseBody "end"
  236          | . "if" condition then thenBody elseIfControl "end"
  261 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  262              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  263              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  264              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  287 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  288           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  301 whileControl: . "while" condition whileConditionBreak whileBody "end"
  321 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  322           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  323           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  324           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  325 returnControl: . "return"
  326              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "endfunction"  réduction par utilisation de la règle 84 (functionBody)

    expressions            aller à l'état 401
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    functionBody           aller à l'état 402
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 345

   82 functionDeclarationBreak: "," "end of line" .

    $défaut  réduction par utilisation de la règle 82 (functionDeclarationBreak)


état 346

   80 functionDeclarationBreak: ";" "end of line" .

    $défaut  réduction par utilisation de la règle 80 (functionDeclarationBreak)


état 347

   78 functionDeclarationBreak: . lineEnd
   79                         | . ";"
   80                         | . ";" "end of line"
   81                         | . ","
   82                         | . "," "end of line"
   85 classDeclaration: "class" "identifier" "<" "identifier" . functionDeclarationBreak slotsDeclaration "endclass"
  335 lineEnd: . "end of line"
  336        | . "line comment" "end of line"

    "end of line"   décalage et aller à l'état 62
    ","             décalage et aller à l'état 216
    ";"             décalage et aller à l'état 217
    "line comment"  décalage et aller à l'état 64

    functionDeclarationBreak  aller à l'état 403
    lineEnd                   aller à l'état 220


état 348

   78 functionDeclarationBreak: . lineEnd
   79                         | . ";"
   80                         | . ";" "end of line"
   81                         | . ","
   82                         | . "," "end of line"
   86 classDeclaration: "class" "identifier" functionDeclarationBreak slotsDeclaration . "endclass"
   87 slotsDeclaration: slotsDeclaration . slotDeclaration functionDeclarationBreak
   88                 | slotsDeclaration . functionDeclarationBreak
   90 slotDeclaration: . methodDeclaration
   91                | . propertyDeclaration
   92 methodDeclaration: . "function" slotAttributes "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   93                  | . "function" slotAttributes "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   94                  | . "function" slotAttributes "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   95                  | . "function" slotAttributes "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   96 propertyDeclaration: . "property" slotAttributes "identifier" "=" variable
   97                    | . "property" slotAttributes "identifier"
  335 lineEnd: . "end of line"
  336        | . "line comment" "end of line"

    "end of line"   décalage et aller à l'état 62
    ","             décalage et aller à l'état 216
    ";"             décalage et aller à l'état 217
    "function"      décalage et aller à l'état 404
    "endclass"      décalage et aller à l'état 405
    "property"      décalage et aller à l'état 406
    "line comment"  décalage et aller à l'état 64

    functionDeclarationBreak  aller à l'état 407
    slotDeclaration           aller à l'état 408
    methodDeclaration         aller à l'état 409
    propertyDeclaration       aller à l'état 410
    lineEnd                   aller à l'état 220


état 349

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"
  288 forControl: "for" "(" "identifier" "=" . forIterator ")" forConditionBreak forBody "end"
  289 forIterator: . functionCall
  290            | . variable

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 350
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 351
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    forIterator            aller à l'état 411


état 350

  104 comparison: functionCall . comparators comparable
  106           | functionCall . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  115 operation: functionCall . rightOperand
  122          | functionCall . "** or ^" variable
  123          | functionCall . "** or ^" functionCall
  126          | functionCall . ".^" variable
  127          | functionCall . ".^" functionCall
  130          | functionCall . "'"
  131          | functionCall . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  163 variable: functionCall . "." variable
  165         | functionCall . listableEnd
  289 forIterator: functionCall .  [error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "(", ")", "[", "{", "if", "end", "select", "function", "class", "for", "while", "do", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"         décalage et aller à l'état 115
    ":"         décalage et aller à l'état 116
    "."         décalage et aller à l'état 170
    ".'"        décalage et aller à l'état 118
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 131
    ".^"        décalage et aller à l'état 132
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "&&"        décalage et aller à l'état 140
    "|"         décalage et aller à l'état 141
    "||"        décalage et aller à l'état 142

    $défaut  réduction par utilisation de la règle 289 (forIterator)

    logicalComparators  aller à l'état 144
    rightOperand        aller à l'état 145
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 147
    comparators         aller à l'état 148

Conflit entre la règle 289 et le jeton "+" résolu par décalage (UPLEVEL < "+").
Conflit entre la règle 289 et le jeton "-" résolu par décalage (UPLEVEL < "-").


état 351

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  105           | variable . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  114 operation: variable . rightOperand
  120          | variable . "** or ^" variable
  121          | variable . "** or ^" functionCall
  124          | variable . ".^" variable
  125          | variable . ".^" functionCall
  128          | variable . "'"
  129          | variable . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  162 variable: variable . "." "identifier"
  164         | variable . listableEnd
  290 forIterator: variable .  [error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", ")", "[", "{", "if", "end", "select", "function", "class", "for", "while", "do", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"         décalage et aller à l'état 151
    ":"         décalage et aller à l'état 116
    "("         décalage et aller à l'état 152
    "."         décalage et aller à l'état 171
    ".'"        décalage et aller à l'état 154
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 155
    ".^"        décalage et aller à l'état 156
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "&&"        décalage et aller à l'état 140
    "|"         décalage et aller à l'état 141
    "||"        décalage et aller à l'état 142

    $défaut  réduction par utilisation de la règle 290 (forIterator)

    logicalComparators  aller à l'état 157
    rightOperand        aller à l'état 158
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 159
    comparators         aller à l'état 160

Conflit entre la règle 290 et le jeton "(" résolu par décalage (UPLEVEL < "(").
Conflit entre la règle 290 et le jeton "+" résolu par décalage (UPLEVEL < "+").
Conflit entre la règle 290 et le jeton "-" résolu par décalage (UPLEVEL < "-").


état 352

  287 forControl: "for" "identifier" "=" forIterator . forConditionBreak forBody "end"
  291 forConditionBreak: . "end of line"
  292                  | . ";"
  293                  | . ";" "end of line"
  294                  | . ","
  295                  | . "," "end of line"
  296                  | . "do"
  297                  | . "do" "end of line"
  298                  | .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "end", "select", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]

    "end of line"  décalage et aller à l'état 412
    ","            décalage et aller à l'état 413
    ";"            décalage et aller à l'état 414
    "do"           décalage et aller à l'état 415

    $défaut  réduction par utilisation de la règle 298 (forConditionBreak)

    forConditionBreak  aller à l'état 416


état 353

  313 whileConditionBreak: "," "end of line" .

    $défaut  réduction par utilisation de la règle 313 (whileConditionBreak)


état 354

  314 whileConditionBreak: ";" "end of line" .

    $défaut  réduction par utilisation de la règle 314 (whileConditionBreak)


état 355

  318 whileConditionBreak: "then" "end of line" .

    $défaut  réduction par utilisation de la règle 318 (whileConditionBreak)


état 356

  310 whileConditionBreak: "then" "," .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "end", "select", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  319                    | "then" "," . "end of line"

    "end of line"  décalage et aller à l'état 417

    $défaut  réduction par utilisation de la règle 310 (whileConditionBreak)


état 357

  311 whileConditionBreak: "then" ";" .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "end", "select", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  320                    | "then" ";" . "end of line"

    "end of line"  décalage et aller à l'état 418

    $défaut  réduction par utilisation de la règle 311 (whileConditionBreak)


état 358

  315 whileConditionBreak: "do" "end of line" .

    $défaut  réduction par utilisation de la règle 315 (whileConditionBreak)


état 359

  307 whileConditionBreak: "do" "," .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "end", "select", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  316                    | "do" "," . "end of line"

    "end of line"  décalage et aller à l'état 419

    $défaut  réduction par utilisation de la règle 307 (whileConditionBreak)


état 360

  308 whileConditionBreak: "do" ";" .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "end", "select", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  317                    | "do" ";" . "end of line"

    "end of line"  décalage et aller à l'état 420

    $défaut  réduction par utilisation de la règle 308 (whileConditionBreak)


état 361

  302 whileBody: expressions .

    $défaut  réduction par utilisation de la règle 302 (whileBody)


état 362

  301 whileControl: "while" condition whileConditionBreak whileBody . "end"

    "end"  décalage et aller à l'état 421


état 363

  321 tryControl: "try" "end of line" expressions "catch" . "end of line" expressions "end"
  323           | "try" "end of line" expressions "catch" . "line comment" "end of line" expressions "end"

    "end of line"   décalage et aller à l'état 422
    "line comment"  décalage et aller à l'état 423


état 364

  322 tryControl: "try" "line comment" "end of line" expressions . "catch" "end of line" expressions "end"
  324           | "try" "line comment" "end of line" expressions . "catch" "line comment" "end of line" expressions "end"

    "catch"  décalage et aller à l'état 424


état 365

   43 implicitCallable: implicitCallable "." "identifier" .  ["end of file", "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "(", "[", "{", ".", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "else", "elseif", "end", "case", "endfunction", "catch", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  169 variable: "identifier" .  ["'", ":", "(", ".", ".'", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||"]

    "'"         réduction par utilisation de la règle 169 (variable)
    ":"         réduction par utilisation de la règle 169 (variable)
    "("         réduction par utilisation de la règle 43 (implicitCallable)
    "("         [réduction par utilisation de la règle 169 (variable)]
    "."         réduction par utilisation de la règle 43 (implicitCallable)
    "."         [réduction par utilisation de la règle 169 (variable)]
    ".'"        réduction par utilisation de la règle 169 (variable)
    "+"         réduction par utilisation de la règle 43 (implicitCallable)
    "+"         [réduction par utilisation de la règle 169 (variable)]
    "-"         réduction par utilisation de la règle 43 (implicitCallable)
    "-"         [réduction par utilisation de la règle 169 (variable)]
    "*"         réduction par utilisation de la règle 43 (implicitCallable)
    "*"         [réduction par utilisation de la règle 169 (variable)]
    ".*"        réduction par utilisation de la règle 43 (implicitCallable)
    ".*"        [réduction par utilisation de la règle 169 (variable)]
    ".*."       réduction par utilisation de la règle 43 (implicitCallable)
    ".*."       [réduction par utilisation de la règle 169 (variable)]
    "/"         réduction par utilisation de la règle 43 (implicitCallable)
    "/"         [réduction par utilisation de la règle 169 (variable)]
    "./"        réduction par utilisation de la règle 43 (implicitCallable)
    "./"        [réduction par utilisation de la règle 169 (variable)]
    "/."        réduction par utilisation de la règle 43 (implicitCallable)
    "/."        [réduction par utilisation de la règle 169 (variable)]
    "./."       réduction par utilisation de la règle 43 (implicitCallable)
    "./."       [réduction par utilisation de la règle 169 (variable)]
    "\\"        réduction par utilisation de la règle 43 (implicitCallable)
    "\\"        [réduction par utilisation de la règle 169 (variable)]
    ".\\"       réduction par utilisation de la règle 43 (implicitCallable)
    ".\\"       [réduction par utilisation de la règle 169 (variable)]
    ".\\."      réduction par utilisation de la règle 43 (implicitCallable)
    ".\\."      [réduction par utilisation de la règle 169 (variable)]
    "** or ^"   réduction par utilisation de la règle 169 (variable)
    ".^"        réduction par utilisation de la règle 169 (variable)
    "=="        réduction par utilisation de la règle 169 (variable)
    "<> or ~="  réduction par utilisation de la règle 169 (variable)
    "<"         réduction par utilisation de la règle 169 (variable)
    "<="        réduction par utilisation de la règle 169 (variable)
    ">"         réduction par utilisation de la règle 169 (variable)
    ">="        réduction par utilisation de la règle 169 (variable)
    "&"         réduction par utilisation de la règle 169 (variable)
    "&&"        réduction par utilisation de la règle 169 (variable)
    "|"         réduction par utilisation de la règle 169 (variable)
    "||"        réduction par utilisation de la règle 169 (variable)
    $défaut    réduction par utilisation de la règle 43 (implicitCallable)


état 366

   44 implicitCallable: implicitCallable "." functionCall .  ["end of file", "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "(", "[", "{", ".", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "else", "elseif", "end", "case", "endfunction", "catch", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  104 comparison: functionCall . comparators comparable
  106           | functionCall . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  115 operation: functionCall . rightOperand
  122          | functionCall . "** or ^" variable
  123          | functionCall . "** or ^" functionCall
  126          | functionCall . ".^" variable
  127          | functionCall . ".^" functionCall
  130          | functionCall . "'"
  131          | functionCall . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  163 variable: functionCall . "." variable
  165         | functionCall . listableEnd
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"         décalage et aller à l'état 115
    ":"         décalage et aller à l'état 116
    ".'"        décalage et aller à l'état 118
    "** or ^"   décalage et aller à l'état 131
    ".^"        décalage et aller à l'état 132
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "&&"        décalage et aller à l'état 140
    "|"         décalage et aller à l'état 141
    "||"        décalage et aller à l'état 142

    $défaut  réduction par utilisation de la règle 44 (implicitCallable)

    logicalComparators  aller à l'état 144
    rightOperand        aller à l'état 145
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 147
    comparators         aller à l'état 148

Conflit entre la règle 44 et le jeton "." résolu par réduction (%left ".").
Conflit entre la règle 44 et le jeton "+" résolu par réduction ("+" < DOT).
Conflit entre la règle 44 et le jeton "-" résolu par réduction ("-" < DOT).
Conflit entre la règle 44 et le jeton "*" résolu par réduction ("*" < DOT).
Conflit entre la règle 44 et le jeton ".*" résolu par réduction (".*" < DOT).
Conflit entre la règle 44 et le jeton ".*." résolu par réduction (".*." < DOT).
Conflit entre la règle 44 et le jeton "/" résolu par réduction ("/" < DOT).
Conflit entre la règle 44 et le jeton "./" résolu par réduction ("./" < DOT).
Conflit entre la règle 44 et le jeton "/." résolu par réduction ("/." < DOT).
Conflit entre la règle 44 et le jeton "./." résolu par réduction ("./." < DOT).
Conflit entre la règle 44 et le jeton "\\" résolu par réduction ("\\" < DOT).
Conflit entre la règle 44 et le jeton ".\\" résolu par réduction (".\\" < DOT).
Conflit entre la règle 44 et le jeton ".\\." résolu par réduction (".\\." < DOT).


état 367

    9 recursiveExpression: recursiveExpression expression "line comment" expressionLineBreak .  ["end of file", error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "line comment"]
   15 expressionLineBreak: expressionLineBreak . ";"
   16                    | expressionLineBreak . ","
   17                    | expressionLineBreak . "end of line"

    "end of line"  décalage et aller à l'état 236
    ","            décalage et aller à l'état 237
    ";"            décalage et aller à l'état 238

    $défaut  réduction par utilisation de la règle 9 (recursiveExpression)


état 368

  104 comparison: functionCall . comparators comparable
  106           | functionCall . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  115 operation: functionCall . rightOperand
  122          | functionCall . "** or ^" variable
  123          | functionCall . "** or ^" functionCall
  126          | functionCall . ".^" variable
  127          | functionCall . ".^" functionCall
  130          | functionCall . "'"
  131          | functionCall . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  159            | listableBegin ":" functionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "&", "&&", "|", "||", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  160            | . listableBegin
  163 variable: functionCall . "." variable
  165         | functionCall . listableEnd
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"         décalage et aller à l'état 115
    "."         décalage et aller à l'état 170
    ".'"        décalage et aller à l'état 118
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 131
    ".^"        décalage et aller à l'état 132
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138

    $défaut  réduction par utilisation de la règle 159 (listableEnd)

    logicalComparators  aller à l'état 144
    rightOperand        aller à l'état 145
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 147
    comparators         aller à l'état 148

Conflit entre la règle 159 et le jeton "'" résolu par décalage (COLON < "'").
Conflit entre la règle 159 et le jeton ":" résolu par réduction (%left ":").
Conflit entre la règle 159 et le jeton "." résolu par décalage (COLON < ".").
Conflit entre la règle 159 et le jeton ".'" résolu par décalage (COLON < ".'").
Conflit entre la règle 159 et le jeton "+" résolu par décalage (COLON < "+").
Conflit entre la règle 159 et le jeton "-" résolu par décalage (COLON < "-").
Conflit entre la règle 159 et le jeton "*" résolu par décalage (COLON < "*").
Conflit entre la règle 159 et le jeton ".*" résolu par décalage (COLON < ".*").
Conflit entre la règle 159 et le jeton ".*." résolu par décalage (COLON < ".*.").
Conflit entre la règle 159 et le jeton "/" résolu par décalage (COLON < "/").
Conflit entre la règle 159 et le jeton "./" résolu par décalage (COLON < "./").
Conflit entre la règle 159 et le jeton "/." résolu par décalage (COLON < "/.").
Conflit entre la règle 159 et le jeton "./." résolu par décalage (COLON < "./.").
Conflit entre la règle 159 et le jeton "\\" résolu par décalage (COLON < "\\").
Conflit entre la règle 159 et le jeton ".\\" résolu par décalage (COLON < ".\\").
Conflit entre la règle 159 et le jeton ".\\." résolu par décalage (COLON < ".\\.").
Conflit entre la règle 159 et le jeton "** or ^" résolu par décalage (COLON < "** or ^").
Conflit entre la règle 159 et le jeton ".^" résolu par décalage (COLON < ".^").
Conflit entre la règle 159 et le jeton "==" résolu par décalage (COLON < "==").
Conflit entre la règle 159 et le jeton "<> or ~=" résolu par décalage (COLON < "<> or ~=").
Conflit entre la règle 159 et le jeton "<" résolu par décalage (COLON < "<").
Conflit entre la règle 159 et le jeton "<=" résolu par décalage (COLON < "<=").
Conflit entre la règle 159 et le jeton ">" résolu par décalage (COLON < ">").
Conflit entre la règle 159 et le jeton ">=" résolu par décalage (COLON < ">=").
Conflit entre la règle 159 et le jeton "&" résolu par réduction ("&" < COLON).
Conflit entre la règle 159 et le jeton "&&" résolu par réduction ("&&" < COLON).
Conflit entre la règle 159 et le jeton "|" résolu par réduction ("|" < COLON).
Conflit entre la règle 159 et le jeton "||" résolu par réduction ("||" < COLON).


état 369

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  105           | variable . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  114 operation: variable . rightOperand
  120          | variable . "** or ^" variable
  121          | variable . "** or ^" functionCall
  124          | variable . ".^" variable
  125          | variable . ".^" functionCall
  128          | variable . "'"
  129          | variable . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  158            | listableBegin ":" variable .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "&", "&&", "|", "||", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  162 variable: variable . "." "identifier"
  164         | variable . listableEnd
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"         décalage et aller à l'état 151
    "."         décalage et aller à l'état 171
    ".'"        décalage et aller à l'état 154
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 155
    ".^"        décalage et aller à l'état 156
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138

    $défaut  réduction par utilisation de la règle 158 (listableEnd)

    logicalComparators  aller à l'état 157
    rightOperand        aller à l'état 158
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 159
    comparators         aller à l'état 160

Conflit entre la règle 158 et le jeton "'" résolu par décalage (COLON < "'").
Conflit entre la règle 158 et le jeton ":" résolu par réduction (%left ":").
Conflit entre la règle 158 et le jeton "(" résolu par réduction ("(" < COLON).
Conflit entre la règle 158 et le jeton "." résolu par décalage (COLON < ".").
Conflit entre la règle 158 et le jeton ".'" résolu par décalage (COLON < ".'").
Conflit entre la règle 158 et le jeton "+" résolu par décalage (COLON < "+").
Conflit entre la règle 158 et le jeton "-" résolu par décalage (COLON < "-").
Conflit entre la règle 158 et le jeton "*" résolu par décalage (COLON < "*").
Conflit entre la règle 158 et le jeton ".*" résolu par décalage (COLON < ".*").
Conflit entre la règle 158 et le jeton ".*." résolu par décalage (COLON < ".*.").
Conflit entre la règle 158 et le jeton "/" résolu par décalage (COLON < "/").
Conflit entre la règle 158 et le jeton "./" résolu par décalage (COLON < "./").
Conflit entre la règle 158 et le jeton "/." résolu par décalage (COLON < "/.").
Conflit entre la règle 158 et le jeton "./." résolu par décalage (COLON < "./.").
Conflit entre la règle 158 et le jeton "\\" résolu par décalage (COLON < "\\").
Conflit entre la règle 158 et le jeton ".\\" résolu par décalage (COLON < ".\\").
Conflit entre la règle 158 et le jeton ".\\." résolu par décalage (COLON < ".\\.").
Conflit entre la règle 158 et le jeton "** or ^" résolu par décalage (COLON < "** or ^").
Conflit entre la règle 158 et le jeton ".^" résolu par décalage (COLON < ".^").
Conflit entre la règle 158 et le jeton "==" résolu par décalage (COLON < "==").
Conflit entre la règle 158 et le jeton "<> or ~=" résolu par décalage (COLON < "<> or ~=").
Conflit entre la règle 158 et le jeton "<" résolu par décalage (COLON < "<").
Conflit entre la règle 158 et le jeton "<=" résolu par décalage (COLON < "<=").
Conflit entre la règle 158 et le jeton ">" résolu par décalage (COLON < ">").
Conflit entre la règle 158 et le jeton ">=" résolu par décalage (COLON < ">=").
Conflit entre la règle 158 et le jeton "&" résolu par réduction ("&" < COLON).
Conflit entre la règle 158 et le jeton "&&" résolu par réduction ("&&" < COLON).
Conflit entre la règle 158 et le jeton "|" résolu par réduction ("|" < COLON).
Conflit entre la règle 158 et le jeton "||" résolu par réduction ("||" < COLON).


état 370

   56 recursiveFunctionCall: simpleFunctionCall "(" functionArgs ")" .

    $défaut  réduction par utilisation de la règle 56 (recursiveFunctionCall)


état 371

   57 recursiveFunctionCall: recursiveFunctionCall "(" functionArgs ")" .

    $défaut  réduction par utilisation de la règle 57 (recursiveFunctionCall)


état 372

   55 simpleFunctionCall: variable "(" functionArgs ")" .

    $défaut  réduction par utilisation de la règle 55 (simpleFunctionCall)


état 373

   65 functionArgs: functionArgs "," ":" .

    $défaut  réduction par utilisation de la règle 65 (functionArgs)


état 374

   64 functionArgs: functionArgs "," functionCall .  [",", ")"]
  104 comparison: functionCall . comparators comparable
  106           | functionCall . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  115 operation: functionCall . rightOperand
  122          | functionCall . "** or ^" variable
  123          | functionCall . "** or ^" functionCall
  126          | functionCall . ".^" variable
  127          | functionCall . ".^" functionCall
  130          | functionCall . "'"
  131          | functionCall . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  163 variable: functionCall . "." variable
  165         | functionCall . listableEnd
  221 variableDeclaration: functionCall . "=" variable
  222                    | functionCall . "=" functionCall
  224                    | functionCall . "=" ":"
  226                    | functionCall . "=" returnControl
  229 assignable: functionCall . "." variable
  230           | functionCall . "." functionCall
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"         décalage et aller à l'état 115
    ":"         décalage et aller à l'état 116
    "."         décalage et aller à l'état 117
    ".'"        décalage et aller à l'état 118
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 131
    ".^"        décalage et aller à l'état 132
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "&&"        décalage et aller à l'état 140
    "|"         décalage et aller à l'état 141
    "||"        décalage et aller à l'état 142
    "="         décalage et aller à l'état 143

    $défaut  réduction par utilisation de la règle 64 (functionArgs)

    logicalComparators  aller à l'état 144
    rightOperand        aller à l'état 145
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 147
    comparators         aller à l'état 148


état 375

   55 simpleFunctionCall: variable . "(" functionArgs ")"
   63 functionArgs: functionArgs "," variable .  [",", ")"]
  103 comparison: variable . comparators comparable
  105           | variable . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  114 operation: variable . rightOperand
  120          | variable . "** or ^" variable
  121          | variable . "** or ^" functionCall
  124          | variable . ".^" variable
  125          | variable . ".^" functionCall
  128          | variable . "'"
  129          | variable . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  162 variable: variable . "." "identifier"
  164         | variable . listableEnd
  227 assignable: variable . "." "identifier"
  228           | variable . "." functionCall
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"         décalage et aller à l'état 151
    ":"         décalage et aller à l'état 116
    "("         décalage et aller à l'état 152
    "."         décalage et aller à l'état 153
    ".'"        décalage et aller à l'état 154
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 155
    ".^"        décalage et aller à l'état 156
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "&&"        décalage et aller à l'état 140
    "|"         décalage et aller à l'état 141
    "||"        décalage et aller à l'état 142

    $défaut  réduction par utilisation de la règle 63 (functionArgs)

    logicalComparators  aller à l'état 157
    rightOperand        aller à l'état 158
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 159
    comparators         aller à l'état 160


état 376

   66 functionArgs: functionArgs "," variableDeclaration .

    $défaut  réduction par utilisation de la règle 66 (functionArgs)


état 377

  207 matrixOrCellLine: matrixOrCellColumns ";" "line comment" "end of line" .

    $défaut  réduction par utilisation de la règle 207 (matrixOrCellLine)


état 378

  210 matrixOrCellLine: matrixOrCellColumns matrixOrCellColumnsBreak ";" "line comment" . "end of line"

    "end of line"  décalage et aller à l'état 425


état 379

  209 matrixOrCellLine: matrixOrCellColumns matrixOrCellColumnsBreak "line comment" "end of line" .

    $défaut  réduction par utilisation de la règle 209 (matrixOrCellLine)


état 380

  196 matrix: "[" lineEnd matrixOrCellLines matrixOrCellColumns "]" .

    $défaut  réduction par utilisation de la règle 196 (matrix)


état 381

  189 cell: "{" lineEnd matrixOrCellLines matrixOrCellColumns "}" .

    $défaut  réduction par utilisation de la règle 189 (cell)


état 382

  248 then: ifConditionBreak "then" "end of line" .

    $défaut  réduction par utilisation de la règle 248 (then)


état 383

  252 else: "else" .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "end", "select", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  253     | "else" . ","
  254     | "else" . ";"
  255     | "else" . "end of line"
  256     | "else" . "," "end of line"
  257     | "else" . ";" "end of line"

    "end of line"  décalage et aller à l'état 426
    ","            décalage et aller à l'état 427
    ";"            décalage et aller à l'état 428

    $défaut  réduction par utilisation de la règle 252 (else)


état 384

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  101 condition: . functionCall
  102          | . variable
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"
  258 elseIfControl: "elseif" . condition then thenBody
  259              | "elseif" . condition then thenBody else elseBody
  260              | "elseif" . condition then thenBody elseIfControl

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 79
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    condition              aller à l'état 429
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 81
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 385

  234 ifControl: "if" condition then thenBody "end" .

    $défaut  réduction par utilisation de la règle 234 (ifControl)


état 386

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"
  219 variableDeclaration: . assignable "=" variable
  220                    | . assignable "=" functionCall
  221                    | . functionCall "=" variable
  222                    | . functionCall "=" functionCall
  223                    | . assignable "=" ":"
  224                    | . functionCall "=" ":"
  225                    | . assignable "=" returnControl
  226                    | . functionCall "=" returnControl
  227 assignable: . variable "." "identifier"
  228           | . variable "." functionCall
  229           | . functionCall "." variable
  230           | . functionCall "." functionCall
  231           | . "identifier"
  232           | . multipleResults
  233 multipleResults: . "[" matrixOrCellColumns "]"
  234 ifControl: . "if" condition then thenBody "end"
  235          | . "if" condition then thenBody else elseBody "end"
  235          | "if" condition then thenBody else . elseBody "end"
  236          | . "if" condition then thenBody elseIfControl "end"
  239 elseBody: . expressions
  240         | .  ["end"]
  261 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  262              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  263              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  264              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  287 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  288           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  301 whileControl: . "while" condition whileConditionBreak whileBody "end"
  321 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  322           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  323           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  324           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  325 returnControl: . "return"
  326              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "end"  réduction par utilisation de la règle 240 (elseBody)

    expressions            aller à l'état 430
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    elseBody               aller à l'état 431
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 387

  236 ifControl: "if" condition then thenBody elseIfControl . "end"

    "end"  décalage et aller à l'état 432


état 388

  252 else: . "else"
  253     | . "else" ","
  254     | . "else" ";"
  255     | . "else" "end of line"
  256     | . "else" "," "end of line"
  257     | . "else" ";" "end of line"
  263 selectControl: "select" selectable "line comment" selectConditionBreak casesControl . "end"
  264              | "select" selectable "line comment" selectConditionBreak casesControl . else elseBody "end"
  274 casesControl: casesControl . "case" variable caseControlBreak caseBody
  275             | casesControl . "case" variable "line comment" "end of line" caseBody

    "else"  décalage et aller à l'état 383
    "end"   décalage et aller à l'état 433
    "case"  décalage et aller à l'état 392

    else  aller à l'état 434


état 389

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  105           | variable . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  114 operation: variable . rightOperand
  120          | variable . "** or ^" variable
  121          | variable . "** or ^" functionCall
  124          | variable . ".^" variable
  125          | variable . ".^" functionCall
  128          | variable . "'"
  129          | variable . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  162 variable: variable . "." "identifier"
  164         | variable . listableEnd
  270 casesControl: "case" variable . caseControlBreak caseBody
  272             | "case" variable . "line comment" "end of line" caseBody
  278 caseControlBreak: . "then"
  279                 | . ","
  280                 | . ";"
  281                 | . "end of line"
  282                 | . "then" "end of line"
  283                 | . "," "end of line"
  284                 | . ";" "end of line"
  285                 | . "then" ","
  286                 | . "then" "," "end of line"
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "end of line"   décalage et aller à l'état 435
    "'"             décalage et aller à l'état 151
    ","             décalage et aller à l'état 436
    ":"             décalage et aller à l'état 116
    ";"             décalage et aller à l'état 437
    "("             décalage et aller à l'état 152
    "."             décalage et aller à l'état 171
    ".'"            décalage et aller à l'état 154
    "+"             décalage et aller à l'état 119
    "-"             décalage et aller à l'état 120
    "*"             décalage et aller à l'état 121
    ".*"            décalage et aller à l'état 122
    ".*."           décalage et aller à l'état 123
    "/"             décalage et aller à l'état 124
    "./"            décalage et aller à l'état 125
    "/."            décalage et aller à l'état 126
    "./."           décalage et aller à l'état 127
    "\\"            décalage et aller à l'état 128
    ".\\"           décalage et aller à l'état 129
    ".\\."          décalage et aller à l'état 130
    "** or ^"       décalage et aller à l'état 155
    ".^"            décalage et aller à l'état 156
    "=="            décalage et aller à l'état 133
    "<> or ~="      décalage et aller à l'état 134
    "<"             décalage et aller à l'état 135
    "<="            décalage et aller à l'état 136
    ">"             décalage et aller à l'état 137
    ">="            décalage et aller à l'état 138
    "&"             décalage et aller à l'état 139
    "&&"            décalage et aller à l'état 140
    "|"             décalage et aller à l'état 141
    "||"            décalage et aller à l'état 142
    "then"          décalage et aller à l'état 438
    "line comment"  décalage et aller à l'état 439

    logicalComparators  aller à l'état 157
    rightOperand        aller à l'état 158
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 159
    caseControlBreak    aller à l'état 440
    comparators         aller à l'état 160


état 390

  333 comments: "line comment" "end of line" .

    $défaut  réduction par utilisation de la règle 333 (comments)


état 391

  261 selectControl: "select" selectable selectConditionBreak casesControl "end" .

    $défaut  réduction par utilisation de la règle 261 (selectControl)


état 392

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"
  274 casesControl: casesControl "case" . variable caseControlBreak caseBody
  275             | casesControl "case" . variable "line comment" "end of line" caseBody

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 93
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 441
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 393

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"
  219 variableDeclaration: . assignable "=" variable
  220                    | . assignable "=" functionCall
  221                    | . functionCall "=" variable
  222                    | . functionCall "=" functionCall
  223                    | . assignable "=" ":"
  224                    | . functionCall "=" ":"
  225                    | . assignable "=" returnControl
  226                    | . functionCall "=" returnControl
  227 assignable: . variable "." "identifier"
  228           | . variable "." functionCall
  229           | . functionCall "." variable
  230           | . functionCall "." functionCall
  231           | . "identifier"
  232           | . multipleResults
  233 multipleResults: . "[" matrixOrCellColumns "]"
  234 ifControl: . "if" condition then thenBody "end"
  235          | . "if" condition then thenBody else elseBody "end"
  236          | . "if" condition then thenBody elseIfControl "end"
  239 elseBody: . expressions
  240         | .  ["end"]
  261 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  262              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  262              | "select" selectable selectConditionBreak casesControl else . elseBody "end"
  263              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  264              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  287 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  288           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  301 whileControl: . "while" condition whileConditionBreak whileBody "end"
  321 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  322           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  323           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  324           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  325 returnControl: . "return"
  326              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "end"  réduction par utilisation de la règle 240 (elseBody)

    expressions            aller à l'état 430
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    elseBody               aller à l'état 442
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 394

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"
  271 casesControl: comments "case" . variable caseControlBreak caseBody
  273             | comments "case" . variable "line comment" "end of line" caseBody

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 93
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 443
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 395

  334 comments: comments "line comment" . "end of line"

    "end of line"  décalage et aller à l'état 444


état 396

   70 functionDeclaration: "function" "[" "]" "=" "identifier" . functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   73 functionDeclarationArguments: . "(" idList ")"
   74                             | . "(" ")"
   75                             | .  ["end of line", ",", ";", "line comment"]

    "("  décalage et aller à l'état 213

    $défaut  réduction par utilisation de la règle 75 (functionDeclarationArguments)

    functionDeclarationArguments  aller à l'état 445


état 397

   69 functionDeclaration: "function" "[" functionDeclarationReturns "]" "=" . "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"

    "identifier"  décalage et aller à l'état 446


état 398

   76 idList: idList "," "identifier" .

    $défaut  réduction par utilisation de la règle 76 (idList)


état 399

   73 functionDeclarationArguments: "(" idList ")" .

    $défaut  réduction par utilisation de la règle 73 (functionDeclarationArguments)


état 400

   68 functionDeclaration: "function" "identifier" "=" "identifier" functionDeclarationArguments . functionDeclarationBreak functionBody "endfunction"
   78 functionDeclarationBreak: . lineEnd
   79                         | . ";"
   80                         | . ";" "end of line"
   81                         | . ","
   82                         | . "," "end of line"
  335 lineEnd: . "end of line"
  336        | . "line comment" "end of line"

    "end of line"   décalage et aller à l'état 62
    ","             décalage et aller à l'état 216
    ";"             décalage et aller à l'état 217
    "line comment"  décalage et aller à l'état 64

    functionDeclarationBreak  aller à l'état 447
    lineEnd                   aller à l'état 220


état 401

   83 functionBody: expressions .

    $défaut  réduction par utilisation de la règle 83 (functionBody)


état 402

   71 functionDeclaration: "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody . "endfunction"

    "endfunction"  décalage et aller à l'état 448


état 403

   85 classDeclaration: "class" "identifier" "<" "identifier" functionDeclarationBreak . slotsDeclaration "endclass"
   87 slotsDeclaration: . slotsDeclaration slotDeclaration functionDeclarationBreak
   88                 | . slotsDeclaration functionDeclarationBreak
   89                 | .

    $défaut  réduction par utilisation de la règle 89 (slotsDeclaration)

    slotsDeclaration  aller à l'état 449


état 404

   92 methodDeclaration: "function" . slotAttributes "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   93                  | "function" . slotAttributes "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   94                  | "function" . slotAttributes "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   95                  | "function" . slotAttributes "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   98 slotAttributes: . "(" idList ")"
   99               | . "(" ")"
  100               | .  ["[", "identifier"]

    "("  décalage et aller à l'état 450

    $défaut  réduction par utilisation de la règle 100 (slotAttributes)

    slotAttributes  aller à l'état 451


état 405

   86 classDeclaration: "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass" .

    $défaut  réduction par utilisation de la règle 86 (classDeclaration)


état 406

   96 propertyDeclaration: "property" . slotAttributes "identifier" "=" variable
   97                    | "property" . slotAttributes "identifier"
   98 slotAttributes: . "(" idList ")"
   99               | . "(" ")"
  100               | .  ["identifier"]

    "("  décalage et aller à l'état 450

    $défaut  réduction par utilisation de la règle 100 (slotAttributes)

    slotAttributes  aller à l'état 452


état 407

   88 slotsDeclaration: slotsDeclaration functionDeclarationBreak .

    $défaut  réduction par utilisation de la règle 88 (slotsDeclaration)


état 408

   78 functionDeclarationBreak: . lineEnd
   79                         | . ";"
   80                         | . ";" "end of line"
   81                         | . ","
   82                         | . "," "end of line"
   87 slotsDeclaration: slotsDeclaration slotDeclaration . functionDeclarationBreak
  335 lineEnd: . "end of line"
  336        | . "line comment" "end of line"

    "end of line"   décalage et aller à l'état 62
    ","             décalage et aller à l'état 216
    ";"             décalage et aller à l'état 217
    "line comment"  décalage et aller à l'état 64

    functionDeclarationBreak  aller à l'état 453
    lineEnd                   aller à l'état 220


état 409

   90 slotDeclaration: methodDeclaration .

    $défaut  réduction par utilisation de la règle 90 (slotDeclaration)


état 410

   91 slotDeclaration: propertyDeclaration .

    $défaut  réduction par utilisation de la règle 91 (slotDeclaration)


état 411

  288 forControl: "for" "(" "identifier" "=" forIterator . ")" forConditionBreak forBody "end"

    ")"  décalage et aller à l'état 454


état 412

  291 forConditionBreak: "end of line" .

    $défaut  réduction par utilisation de la règle 291 (forConditionBreak)


état 413

  294 forConditionBreak: "," .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "end", "select", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  295                  | "," . "end of line"

    "end of line"  décalage et aller à l'état 455

    $défaut  réduction par utilisation de la règle 294 (forConditionBreak)


état 414

  292 forConditionBreak: ";" .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "end", "select", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  293                  | ";" . "end of line"

    "end of line"  décalage et aller à l'état 456

    $défaut  réduction par utilisation de la règle 292 (forConditionBreak)


état 415

  296 forConditionBreak: "do" .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "end", "select", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  297                  | "do" . "end of line"

    "end of line"  décalage et aller à l'état 457

    $défaut  réduction par utilisation de la règle 296 (forConditionBreak)


état 416

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"
  219 variableDeclaration: . assignable "=" variable
  220                    | . assignable "=" functionCall
  221                    | . functionCall "=" variable
  222                    | . functionCall "=" functionCall
  223                    | . assignable "=" ":"
  224                    | . functionCall "=" ":"
  225                    | . assignable "=" returnControl
  226                    | . functionCall "=" returnControl
  227 assignable: . variable "." "identifier"
  228           | . variable "." functionCall
  229           | . functionCall "." variable
  230           | . functionCall "." functionCall
  231           | . "identifier"
  232           | . multipleResults
  233 multipleResults: . "[" matrixOrCellColumns "]"
  234 ifControl: . "if" condition then thenBody "end"
  235          | . "if" condition then thenBody else elseBody "end"
  236          | . "if" condition then thenBody elseIfControl "end"
  261 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  262              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  263              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  264              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  287 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  287           | "for" "identifier" "=" forIterator forConditionBreak . forBody "end"
  288           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  299 forBody: . expressions
  300        | .  ["end"]
  301 whileControl: . "while" condition whileConditionBreak whileBody "end"
  321 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  322           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  323           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  324           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  325 returnControl: . "return"
  326              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "end"  réduction par utilisation de la règle 300 (forBody)

    expressions            aller à l'état 458
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    forBody                aller à l'état 459
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 417

  319 whileConditionBreak: "then" "," "end of line" .

    $défaut  réduction par utilisation de la règle 319 (whileConditionBreak)


état 418

  320 whileConditionBreak: "then" ";" "end of line" .

    $défaut  réduction par utilisation de la règle 320 (whileConditionBreak)


état 419

  316 whileConditionBreak: "do" "," "end of line" .

    $défaut  réduction par utilisation de la règle 316 (whileConditionBreak)


état 420

  317 whileConditionBreak: "do" ";" "end of line" .

    $défaut  réduction par utilisation de la règle 317 (whileConditionBreak)


état 421

  301 whileControl: "while" condition whileConditionBreak whileBody "end" .

    $défaut  réduction par utilisation de la règle 301 (whileControl)


état 422

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"
  219 variableDeclaration: . assignable "=" variable
  220                    | . assignable "=" functionCall
  221                    | . functionCall "=" variable
  222                    | . functionCall "=" functionCall
  223                    | . assignable "=" ":"
  224                    | . functionCall "=" ":"
  225                    | . assignable "=" returnControl
  226                    | . functionCall "=" returnControl
  227 assignable: . variable "." "identifier"
  228           | . variable "." functionCall
  229           | . functionCall "." variable
  230           | . functionCall "." functionCall
  231           | . "identifier"
  232           | . multipleResults
  233 multipleResults: . "[" matrixOrCellColumns "]"
  234 ifControl: . "if" condition then thenBody "end"
  235          | . "if" condition then thenBody else elseBody "end"
  236          | . "if" condition then thenBody elseIfControl "end"
  261 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  262              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  263              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  264              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  287 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  288           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  301 whileControl: . "while" condition whileConditionBreak whileBody "end"
  321 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  321           | "try" "end of line" expressions "catch" "end of line" . expressions "end"
  322           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  323           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  324           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  325 returnControl: . "return"
  326              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    expressions            aller à l'état 460
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 423

  323 tryControl: "try" "end of line" expressions "catch" "line comment" . "end of line" expressions "end"

    "end of line"  décalage et aller à l'état 461


état 424

  322 tryControl: "try" "line comment" "end of line" expressions "catch" . "end of line" expressions "end"
  324           | "try" "line comment" "end of line" expressions "catch" . "line comment" "end of line" expressions "end"

    "end of line"   décalage et aller à l'état 462
    "line comment"  décalage et aller à l'état 463


état 425

  210 matrixOrCellLine: matrixOrCellColumns matrixOrCellColumnsBreak ";" "line comment" "end of line" .

    $défaut  réduction par utilisation de la règle 210 (matrixOrCellLine)


état 426

  255 else: "else" "end of line" .

    $défaut  réduction par utilisation de la règle 255 (else)


état 427

  253 else: "else" "," .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "end", "select", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  256     | "else" "," . "end of line"

    "end of line"  décalage et aller à l'état 464

    $défaut  réduction par utilisation de la règle 253 (else)


état 428

  254 else: "else" ";" .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "end", "select", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  257     | "else" ";" . "end of line"

    "end of line"  décalage et aller à l'état 465

    $défaut  réduction par utilisation de la règle 254 (else)


état 429

  241 ifConditionBreak: . ";"
  242                 | . ";" "end of line"
  243                 | . ","
  244                 | . "," "end of line"
  245                 | . "end of line"
  246 then: . "then"
  247     | . ifConditionBreak "then"
  248     | . ifConditionBreak "then" "end of line"
  249     | . "then" ifConditionBreak
  250     | . ifConditionBreak
  251     | .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "else", "elseif", "end", "select", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  258 elseIfControl: "elseif" condition . then thenBody
  259              | "elseif" condition . then thenBody else elseBody
  260              | "elseif" condition . then thenBody elseIfControl

    "end of line"  décalage et aller à l'état 198
    ","            décalage et aller à l'état 199
    ";"            décalage et aller à l'état 200
    "then"         décalage et aller à l'état 201

    $défaut  réduction par utilisation de la règle 251 (then)

    ifConditionBreak  aller à l'état 202
    then              aller à l'état 466


état 430

  239 elseBody: expressions .

    $défaut  réduction par utilisation de la règle 239 (elseBody)


état 431

  235 ifControl: "if" condition then thenBody else elseBody . "end"

    "end"  décalage et aller à l'état 467


état 432

  236 ifControl: "if" condition then thenBody elseIfControl "end" .

    $défaut  réduction par utilisation de la règle 236 (ifControl)


état 433

  263 selectControl: "select" selectable "line comment" selectConditionBreak casesControl "end" .

    $défaut  réduction par utilisation de la règle 263 (selectControl)


état 434

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"
  219 variableDeclaration: . assignable "=" variable
  220                    | . assignable "=" functionCall
  221                    | . functionCall "=" variable
  222                    | . functionCall "=" functionCall
  223                    | . assignable "=" ":"
  224                    | . functionCall "=" ":"
  225                    | . assignable "=" returnControl
  226                    | . functionCall "=" returnControl
  227 assignable: . variable "." "identifier"
  228           | . variable "." functionCall
  229           | . functionCall "." variable
  230           | . functionCall "." functionCall
  231           | . "identifier"
  232           | . multipleResults
  233 multipleResults: . "[" matrixOrCellColumns "]"
  234 ifControl: . "if" condition then thenBody "end"
  235          | . "if" condition then thenBody else elseBody "end"
  236          | . "if" condition then thenBody elseIfControl "end"
  239 elseBody: . expressions
  240         | .  ["end"]
  261 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  262              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  263              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  264              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  264              | "select" selectable "line comment" selectConditionBreak casesControl else . elseBody "end"
  287 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  288           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  301 whileControl: . "while" condition whileConditionBreak whileBody "end"
  321 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  322           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  323           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  324           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  325 returnControl: . "return"
  326              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "end"  réduction par utilisation de la règle 240 (elseBody)

    expressions            aller à l'état 430
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    elseBody               aller à l'état 468
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 435

  281 caseControlBreak: "end of line" .

    $défaut  réduction par utilisation de la règle 281 (caseControlBreak)


état 436

  279 caseControlBreak: "," .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "else", "end", "select", "case", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  283                 | "," . "end of line"

    "end of line"  décalage et aller à l'état 469

    $défaut  réduction par utilisation de la règle 279 (caseControlBreak)


état 437

  280 caseControlBreak: ";" .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "else", "end", "select", "case", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  284                 | ";" . "end of line"

    "end of line"  décalage et aller à l'état 470

    $défaut  réduction par utilisation de la règle 280 (caseControlBreak)


état 438

  278 caseControlBreak: "then" .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "else", "end", "select", "case", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  282                 | "then" . "end of line"
  285                 | "then" . ","
  286                 | "then" . "," "end of line"

    "end of line"  décalage et aller à l'état 471
    ","            décalage et aller à l'état 472

    $défaut  réduction par utilisation de la règle 278 (caseControlBreak)


état 439

  272 casesControl: "case" variable "line comment" . "end of line" caseBody

    "end of line"  décalage et aller à l'état 473


état 440

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"
  219 variableDeclaration: . assignable "=" variable
  220                    | . assignable "=" functionCall
  221                    | . functionCall "=" variable
  222                    | . functionCall "=" functionCall
  223                    | . assignable "=" ":"
  224                    | . functionCall "=" ":"
  225                    | . assignable "=" returnControl
  226                    | . functionCall "=" returnControl
  227 assignable: . variable "." "identifier"
  228           | . variable "." functionCall
  229           | . functionCall "." variable
  230           | . functionCall "." functionCall
  231           | . "identifier"
  232           | . multipleResults
  233 multipleResults: . "[" matrixOrCellColumns "]"
  234 ifControl: . "if" condition then thenBody "end"
  235          | . "if" condition then thenBody else elseBody "end"
  236          | . "if" condition then thenBody elseIfControl "end"
  261 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  262              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  263              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  264              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  270 casesControl: "case" variable caseControlBreak . caseBody
  276 caseBody: . expressions
  277         | .  ["else", "end", "case"]
  287 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  288           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  301 whileControl: . "while" condition whileConditionBreak whileBody "end"
  321 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  322           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  323           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  324           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  325 returnControl: . "return"
  326              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "else"  réduction par utilisation de la règle 277 (caseBody)
    "end"   réduction par utilisation de la règle 277 (caseBody)
    "case"  réduction par utilisation de la règle 277 (caseBody)

    expressions            aller à l'état 474
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    caseBody               aller à l'état 475
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 441

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  105           | variable . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  114 operation: variable . rightOperand
  120          | variable . "** or ^" variable
  121          | variable . "** or ^" functionCall
  124          | variable . ".^" variable
  125          | variable . ".^" functionCall
  128          | variable . "'"
  129          | variable . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  162 variable: variable . "." "identifier"
  164         | variable . listableEnd
  274 casesControl: casesControl "case" variable . caseControlBreak caseBody
  275             | casesControl "case" variable . "line comment" "end of line" caseBody
  278 caseControlBreak: . "then"
  279                 | . ","
  280                 | . ";"
  281                 | . "end of line"
  282                 | . "then" "end of line"
  283                 | . "," "end of line"
  284                 | . ";" "end of line"
  285                 | . "then" ","
  286                 | . "then" "," "end of line"
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "end of line"   décalage et aller à l'état 435
    "'"             décalage et aller à l'état 151
    ","             décalage et aller à l'état 436
    ":"             décalage et aller à l'état 116
    ";"             décalage et aller à l'état 437
    "("             décalage et aller à l'état 152
    "."             décalage et aller à l'état 171
    ".'"            décalage et aller à l'état 154
    "+"             décalage et aller à l'état 119
    "-"             décalage et aller à l'état 120
    "*"             décalage et aller à l'état 121
    ".*"            décalage et aller à l'état 122
    ".*."           décalage et aller à l'état 123
    "/"             décalage et aller à l'état 124
    "./"            décalage et aller à l'état 125
    "/."            décalage et aller à l'état 126
    "./."           décalage et aller à l'état 127
    "\\"            décalage et aller à l'état 128
    ".\\"           décalage et aller à l'état 129
    ".\\."          décalage et aller à l'état 130
    "** or ^"       décalage et aller à l'état 155
    ".^"            décalage et aller à l'état 156
    "=="            décalage et aller à l'état 133
    "<> or ~="      décalage et aller à l'état 134
    "<"             décalage et aller à l'état 135
    "<="            décalage et aller à l'état 136
    ">"             décalage et aller à l'état 137
    ">="            décalage et aller à l'état 138
    "&"             décalage et aller à l'état 139
    "&&"            décalage et aller à l'état 140
    "|"             décalage et aller à l'état 141
    "||"            décalage et aller à l'état 142
    "then"          décalage et aller à l'état 438
    "line comment"  décalage et aller à l'état 476

    logicalComparators  aller à l'état 157
    rightOperand        aller à l'état 158
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 159
    caseControlBreak    aller à l'état 477
    comparators         aller à l'état 160


état 442

  262 selectControl: "select" selectable selectConditionBreak casesControl else elseBody . "end"

    "end"  décalage et aller à l'état 478


état 443

   55 simpleFunctionCall: variable . "(" functionArgs ")"
  103 comparison: variable . comparators comparable
  105           | variable . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  114 operation: variable . rightOperand
  120          | variable . "** or ^" variable
  121          | variable . "** or ^" functionCall
  124          | variable . ".^" variable
  125          | variable . ".^" functionCall
  128          | variable . "'"
  129          | variable . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  162 variable: variable . "." "identifier"
  164         | variable . listableEnd
  271 casesControl: comments "case" variable . caseControlBreak caseBody
  273             | comments "case" variable . "line comment" "end of line" caseBody
  278 caseControlBreak: . "then"
  279                 | . ","
  280                 | . ";"
  281                 | . "end of line"
  282                 | . "then" "end of line"
  283                 | . "," "end of line"
  284                 | . ";" "end of line"
  285                 | . "then" ","
  286                 | . "then" "," "end of line"
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "end of line"   décalage et aller à l'état 435
    "'"             décalage et aller à l'état 151
    ","             décalage et aller à l'état 436
    ":"             décalage et aller à l'état 116
    ";"             décalage et aller à l'état 437
    "("             décalage et aller à l'état 152
    "."             décalage et aller à l'état 171
    ".'"            décalage et aller à l'état 154
    "+"             décalage et aller à l'état 119
    "-"             décalage et aller à l'état 120
    "*"             décalage et aller à l'état 121
    ".*"            décalage et aller à l'état 122
    ".*."           décalage et aller à l'état 123
    "/"             décalage et aller à l'état 124
    "./"            décalage et aller à l'état 125
    "/."            décalage et aller à l'état 126
    "./."           décalage et aller à l'état 127
    "\\"            décalage et aller à l'état 128
    ".\\"           décalage et aller à l'état 129
    ".\\."          décalage et aller à l'état 130
    "** or ^"       décalage et aller à l'état 155
    ".^"            décalage et aller à l'état 156
    "=="            décalage et aller à l'état 133
    "<> or ~="      décalage et aller à l'état 134
    "<"             décalage et aller à l'état 135
    "<="            décalage et aller à l'état 136
    ">"             décalage et aller à l'état 137
    ">="            décalage et aller à l'état 138
    "&"             décalage et aller à l'état 139
    "&&"            décalage et aller à l'état 140
    "|"             décalage et aller à l'état 141
    "||"            décalage et aller à l'état 142
    "then"          décalage et aller à l'état 438
    "line comment"  décalage et aller à l'état 479

    logicalComparators  aller à l'état 157
    rightOperand        aller à l'état 158
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 159
    caseControlBreak    aller à l'état 480
    comparators         aller à l'état 160


état 444

  334 comments: comments "line comment" "end of line" .

    $défaut  réduction par utilisation de la règle 334 (comments)


état 445

   70 functionDeclaration: "function" "[" "]" "=" "identifier" functionDeclarationArguments . functionDeclarationBreak functionBody "endfunction"
   78 functionDeclarationBreak: . lineEnd
   79                         | . ";"
   80                         | . ";" "end of line"
   81                         | . ","
   82                         | . "," "end of line"
  335 lineEnd: . "end of line"
  336        | . "line comment" "end of line"

    "end of line"   décalage et aller à l'état 62
    ","             décalage et aller à l'état 216
    ";"             décalage et aller à l'état 217
    "line comment"  décalage et aller à l'état 64

    functionDeclarationBreak  aller à l'état 481
    lineEnd                   aller à l'état 220


état 446

   69 functionDeclaration: "function" "[" functionDeclarationReturns "]" "=" "identifier" . functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   73 functionDeclarationArguments: . "(" idList ")"
   74                             | . "(" ")"
   75                             | .  ["end of line", ",", ";", "line comment"]

    "("  décalage et aller à l'état 213

    $défaut  réduction par utilisation de la règle 75 (functionDeclarationArguments)

    functionDeclarationArguments  aller à l'état 482


état 447

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   68                    | "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak . functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   83 functionBody: . expressions
   84             | .  ["endfunction"]
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"
  219 variableDeclaration: . assignable "=" variable
  220                    | . assignable "=" functionCall
  221                    | . functionCall "=" variable
  222                    | . functionCall "=" functionCall
  223                    | . assignable "=" ":"
  224                    | . functionCall "=" ":"
  225                    | . assignable "=" returnControl
  226                    | . functionCall "=" returnControl
  227 assignable: . variable "." "identifier"
  228           | . variable "." functionCall
  229           | . functionCall "." variable
  230           | . functionCall "." functionCall
  231           | . "identifier"
  232           | . multipleResults
  233 multipleResults: . "[" matrixOrCellColumns "]"
  234 ifControl: . "if" condition then thenBody "end"
  235          | . "if" condition then thenBody else elseBody "end"
  236          | . "if" condition then thenBody elseIfControl "end"
  261 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  262              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  263              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  264              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  287 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  288           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  301 whileControl: . "while" condition whileConditionBreak whileBody "end"
  321 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  322           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  323           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  324           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  325 returnControl: . "return"
  326              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "endfunction"  réduction par utilisation de la règle 84 (functionBody)

    expressions            aller à l'état 401
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    functionBody           aller à l'état 483
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 448

   71 functionDeclaration: "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction" .

    $défaut  réduction par utilisation de la règle 71 (functionDeclaration)


état 449

   78 functionDeclarationBreak: . lineEnd
   79                         | . ";"
   80                         | . ";" "end of line"
   81                         | . ","
   82                         | . "," "end of line"
   85 classDeclaration: "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration . "endclass"
   87 slotsDeclaration: slotsDeclaration . slotDeclaration functionDeclarationBreak
   88                 | slotsDeclaration . functionDeclarationBreak
   90 slotDeclaration: . methodDeclaration
   91                | . propertyDeclaration
   92 methodDeclaration: . "function" slotAttributes "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   93                  | . "function" slotAttributes "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   94                  | . "function" slotAttributes "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   95                  | . "function" slotAttributes "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   96 propertyDeclaration: . "property" slotAttributes "identifier" "=" variable
   97                    | . "property" slotAttributes "identifier"
  335 lineEnd: . "end of line"
  336        | . "line comment" "end of line"

    "end of line"   décalage et aller à l'état 62
    ","             décalage et aller à l'état 216
    ";"             décalage et aller à l'état 217
    "function"      décalage et aller à l'état 404
    "endclass"      décalage et aller à l'état 484
    "property"      décalage et aller à l'état 406
    "line comment"  décalage et aller à l'état 64

    functionDeclarationBreak  aller à l'état 407
    slotDeclaration           aller à l'état 408
    methodDeclaration         aller à l'état 409
    propertyDeclaration       aller à l'état 410
    lineEnd                   aller à l'état 220


état 450

   76 idList: . idList "," "identifier"
   77       | . "identifier"
   98 slotAttributes: "(" . idList ")"
   99               | "(" . ")"

    ")"           décalage et aller à l'état 485
    "identifier"  décalage et aller à l'état 210

    idList  aller à l'état 486


état 451

   92 methodDeclaration: "function" slotAttributes . "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   93                  | "function" slotAttributes . "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   94                  | "function" slotAttributes . "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   95                  | "function" slotAttributes . "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"

    "["           décalage et aller à l'état 487
    "identifier"  décalage et aller à l'état 488


état 452

   96 propertyDeclaration: "property" slotAttributes . "identifier" "=" variable
   97                    | "property" slotAttributes . "identifier"

    "identifier"  décalage et aller à l'état 489


état 453

   87 slotsDeclaration: slotsDeclaration slotDeclaration functionDeclarationBreak .

    $défaut  réduction par utilisation de la règle 87 (slotsDeclaration)


état 454

  288 forControl: "for" "(" "identifier" "=" forIterator ")" . forConditionBreak forBody "end"
  291 forConditionBreak: . "end of line"
  292                  | . ";"
  293                  | . ";" "end of line"
  294                  | . ","
  295                  | . "," "end of line"
  296                  | . "do"
  297                  | . "do" "end of line"
  298                  | .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "end", "select", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]

    "end of line"  décalage et aller à l'état 412
    ","            décalage et aller à l'état 413
    ";"            décalage et aller à l'état 414
    "do"           décalage et aller à l'état 415

    $défaut  réduction par utilisation de la règle 298 (forConditionBreak)

    forConditionBreak  aller à l'état 490


état 455

  295 forConditionBreak: "," "end of line" .

    $défaut  réduction par utilisation de la règle 295 (forConditionBreak)


état 456

  293 forConditionBreak: ";" "end of line" .

    $défaut  réduction par utilisation de la règle 293 (forConditionBreak)


état 457

  297 forConditionBreak: "do" "end of line" .

    $défaut  réduction par utilisation de la règle 297 (forConditionBreak)


état 458

  299 forBody: expressions .

    $défaut  réduction par utilisation de la règle 299 (forBody)


état 459

  287 forControl: "for" "identifier" "=" forIterator forConditionBreak forBody . "end"

    "end"  décalage et aller à l'état 491


état 460

  321 tryControl: "try" "end of line" expressions "catch" "end of line" expressions . "end"

    "end"  décalage et aller à l'état 492


état 461

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"
  219 variableDeclaration: . assignable "=" variable
  220                    | . assignable "=" functionCall
  221                    | . functionCall "=" variable
  222                    | . functionCall "=" functionCall
  223                    | . assignable "=" ":"
  224                    | . functionCall "=" ":"
  225                    | . assignable "=" returnControl
  226                    | . functionCall "=" returnControl
  227 assignable: . variable "." "identifier"
  228           | . variable "." functionCall
  229           | . functionCall "." variable
  230           | . functionCall "." functionCall
  231           | . "identifier"
  232           | . multipleResults
  233 multipleResults: . "[" matrixOrCellColumns "]"
  234 ifControl: . "if" condition then thenBody "end"
  235          | . "if" condition then thenBody else elseBody "end"
  236          | . "if" condition then thenBody elseIfControl "end"
  261 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  262              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  263              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  264              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  287 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  288           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  301 whileControl: . "while" condition whileConditionBreak whileBody "end"
  321 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  322           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  323           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  323           | "try" "end of line" expressions "catch" "line comment" "end of line" . expressions "end"
  324           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  325 returnControl: . "return"
  326              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    expressions            aller à l'état 493
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 462

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"
  219 variableDeclaration: . assignable "=" variable
  220                    | . assignable "=" functionCall
  221                    | . functionCall "=" variable
  222                    | . functionCall "=" functionCall
  223                    | . assignable "=" ":"
  224                    | . functionCall "=" ":"
  225                    | . assignable "=" returnControl
  226                    | . functionCall "=" returnControl
  227 assignable: . variable "." "identifier"
  228           | . variable "." functionCall
  229           | . functionCall "." variable
  230           | . functionCall "." functionCall
  231           | . "identifier"
  232           | . multipleResults
  233 multipleResults: . "[" matrixOrCellColumns "]"
  234 ifControl: . "if" condition then thenBody "end"
  235          | . "if" condition then thenBody else elseBody "end"
  236          | . "if" condition then thenBody elseIfControl "end"
  261 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  262              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  263              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  264              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  287 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  288           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  301 whileControl: . "while" condition whileConditionBreak whileBody "end"
  321 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  322           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  322           | "try" "line comment" "end of line" expressions "catch" "end of line" . expressions "end"
  323           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  324           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  325 returnControl: . "return"
  326              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    expressions            aller à l'état 494
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 463

  324 tryControl: "try" "line comment" "end of line" expressions "catch" "line comment" . "end of line" expressions "end"

    "end of line"  décalage et aller à l'état 495


état 464

  256 else: "else" "," "end of line" .

    $défaut  réduction par utilisation de la règle 256 (else)


état 465

  257 else: "else" ";" "end of line" .

    $défaut  réduction par utilisation de la règle 257 (else)


état 466

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"
  219 variableDeclaration: . assignable "=" variable
  220                    | . assignable "=" functionCall
  221                    | . functionCall "=" variable
  222                    | . functionCall "=" functionCall
  223                    | . assignable "=" ":"
  224                    | . functionCall "=" ":"
  225                    | . assignable "=" returnControl
  226                    | . functionCall "=" returnControl
  227 assignable: . variable "." "identifier"
  228           | . variable "." functionCall
  229           | . functionCall "." variable
  230           | . functionCall "." functionCall
  231           | . "identifier"
  232           | . multipleResults
  233 multipleResults: . "[" matrixOrCellColumns "]"
  234 ifControl: . "if" condition then thenBody "end"
  235          | . "if" condition then thenBody else elseBody "end"
  236          | . "if" condition then thenBody elseIfControl "end"
  237 thenBody: . expressions
  238         | .  ["else", "elseif", "end"]
  258 elseIfControl: "elseif" condition then . thenBody
  259              | "elseif" condition then . thenBody else elseBody
  260              | "elseif" condition then . thenBody elseIfControl
  261 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  262              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  263              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  264              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  287 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  288           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  301 whileControl: . "while" condition whileConditionBreak whileBody "end"
  321 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  322           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  323           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  324           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  325 returnControl: . "return"
  326              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "else"    réduction par utilisation de la règle 238 (thenBody)
    "elseif"  réduction par utilisation de la règle 238 (thenBody)
    "end"     réduction par utilisation de la règle 238 (thenBody)

    expressions            aller à l'état 329
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    thenBody               aller à l'état 496
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 467

  235 ifControl: "if" condition then thenBody else elseBody "end" .

    $défaut  réduction par utilisation de la règle 235 (ifControl)


état 468

  264 selectControl: "select" selectable "line comment" selectConditionBreak casesControl else elseBody . "end"

    "end"  décalage et aller à l'état 497


état 469

  283 caseControlBreak: "," "end of line" .

    $défaut  réduction par utilisation de la règle 283 (caseControlBreak)


état 470

  284 caseControlBreak: ";" "end of line" .

    $défaut  réduction par utilisation de la règle 284 (caseControlBreak)


état 471

  282 caseControlBreak: "then" "end of line" .

    $défaut  réduction par utilisation de la règle 282 (caseControlBreak)


état 472

  285 caseControlBreak: "then" "," .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "else", "end", "select", "case", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  286                 | "then" "," . "end of line"

    "end of line"  décalage et aller à l'état 498

    $défaut  réduction par utilisation de la règle 285 (caseControlBreak)


état 473

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"
  219 variableDeclaration: . assignable "=" variable
  220                    | . assignable "=" functionCall
  221                    | . functionCall "=" variable
  222                    | . functionCall "=" functionCall
  223                    | . assignable "=" ":"
  224                    | . functionCall "=" ":"
  225                    | . assignable "=" returnControl
  226                    | . functionCall "=" returnControl
  227 assignable: . variable "." "identifier"
  228           | . variable "." functionCall
  229           | . functionCall "." variable
  230           | . functionCall "." functionCall
  231           | . "identifier"
  232           | . multipleResults
  233 multipleResults: . "[" matrixOrCellColumns "]"
  234 ifControl: . "if" condition then thenBody "end"
  235          | . "if" condition then thenBody else elseBody "end"
  236          | . "if" condition then thenBody elseIfControl "end"
  261 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  262              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  263              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  264              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  272 casesControl: "case" variable "line comment" "end of line" . caseBody
  276 caseBody: . expressions
  277         | .  ["else", "end", "case"]
  287 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  288           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  301 whileControl: . "while" condition whileConditionBreak whileBody "end"
  321 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  322           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  323           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  324           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  325 returnControl: . "return"
  326              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "else"  réduction par utilisation de la règle 277 (caseBody)
    "end"   réduction par utilisation de la règle 277 (caseBody)
    "case"  réduction par utilisation de la règle 277 (caseBody)

    expressions            aller à l'état 474
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    caseBody               aller à l'état 499
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 474

  276 caseBody: expressions .

    $défaut  réduction par utilisation de la règle 276 (caseBody)


état 475

  270 casesControl: "case" variable caseControlBreak caseBody .

    $défaut  réduction par utilisation de la règle 270 (casesControl)


état 476

  275 casesControl: casesControl "case" variable "line comment" . "end of line" caseBody

    "end of line"  décalage et aller à l'état 500


état 477

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"
  219 variableDeclaration: . assignable "=" variable
  220                    | . assignable "=" functionCall
  221                    | . functionCall "=" variable
  222                    | . functionCall "=" functionCall
  223                    | . assignable "=" ":"
  224                    | . functionCall "=" ":"
  225                    | . assignable "=" returnControl
  226                    | . functionCall "=" returnControl
  227 assignable: . variable "." "identifier"
  228           | . variable "." functionCall
  229           | . functionCall "." variable
  230           | . functionCall "." functionCall
  231           | . "identifier"
  232           | . multipleResults
  233 multipleResults: . "[" matrixOrCellColumns "]"
  234 ifControl: . "if" condition then thenBody "end"
  235          | . "if" condition then thenBody else elseBody "end"
  236          | . "if" condition then thenBody elseIfControl "end"
  261 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  262              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  263              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  264              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  274 casesControl: casesControl "case" variable caseControlBreak . caseBody
  276 caseBody: . expressions
  277         | .  ["else", "end", "case"]
  287 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  288           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  301 whileControl: . "while" condition whileConditionBreak whileBody "end"
  321 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  322           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  323           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  324           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  325 returnControl: . "return"
  326              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "else"  réduction par utilisation de la règle 277 (caseBody)
    "end"   réduction par utilisation de la règle 277 (caseBody)
    "case"  réduction par utilisation de la règle 277 (caseBody)

    expressions            aller à l'état 474
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    caseBody               aller à l'état 501
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 478

  262 selectControl: "select" selectable selectConditionBreak casesControl else elseBody "end" .

    $défaut  réduction par utilisation de la règle 262 (selectControl)


état 479

  273 casesControl: comments "case" variable "line comment" . "end of line" caseBody

    "end of line"  décalage et aller à l'état 502


état 480

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"
  219 variableDeclaration: . assignable "=" variable
  220                    | . assignable "=" functionCall
  221                    | . functionCall "=" variable
  222                    | . functionCall "=" functionCall
  223                    | . assignable "=" ":"
  224                    | . functionCall "=" ":"
  225                    | . assignable "=" returnControl
  226                    | . functionCall "=" returnControl
  227 assignable: . variable "." "identifier"
  228           | . variable "." functionCall
  229           | . functionCall "." variable
  230           | . functionCall "." functionCall
  231           | . "identifier"
  232           | . multipleResults
  233 multipleResults: . "[" matrixOrCellColumns "]"
  234 ifControl: . "if" condition then thenBody "end"
  235          | . "if" condition then thenBody else elseBody "end"
  236          | . "if" condition then thenBody elseIfControl "end"
  261 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  262              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  263              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  264              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  271 casesControl: comments "case" variable caseControlBreak . caseBody
  276 caseBody: . expressions
  277         | .  ["else", "end", "case"]
  287 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  288           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  301 whileControl: . "while" condition whileConditionBreak whileBody "end"
  321 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  322           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  323           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  324           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  325 returnControl: . "return"
  326              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "else"  réduction par utilisation de la règle 277 (caseBody)
    "end"   réduction par utilisation de la règle 277 (caseBody)
    "case"  réduction par utilisation de la règle 277 (caseBody)

    expressions            aller à l'état 474
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    caseBody               aller à l'état 503
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 481

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak . functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   83 functionBody: . expressions
   84             | .  ["endfunction"]
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"
  219 variableDeclaration: . assignable "=" variable
  220                    | . assignable "=" functionCall
  221                    | . functionCall "=" variable
  222                    | . functionCall "=" functionCall
  223                    | . assignable "=" ":"
  224                    | . functionCall "=" ":"
  225                    | . assignable "=" returnControl
  226                    | . functionCall "=" returnControl
  227 assignable: . variable "." "identifier"
  228           | . variable "." functionCall
  229           | . functionCall "." variable
  230           | . functionCall "." functionCall
  231           | . "identifier"
  232           | . multipleResults
  233 multipleResults: . "[" matrixOrCellColumns "]"
  234 ifControl: . "if" condition then thenBody "end"
  235          | . "if" condition then thenBody else elseBody "end"
  236          | . "if" condition then thenBody elseIfControl "end"
  261 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  262              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  263              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  264              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  287 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  288           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  301 whileControl: . "while" condition whileConditionBreak whileBody "end"
  321 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  322           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  323           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  324           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  325 returnControl: . "return"
  326              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "endfunction"  réduction par utilisation de la règle 84 (functionBody)

    expressions            aller à l'état 401
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    functionBody           aller à l'état 504
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 482

   69 functionDeclaration: "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments . functionDeclarationBreak functionBody "endfunction"
   78 functionDeclarationBreak: . lineEnd
   79                         | . ";"
   80                         | . ";" "end of line"
   81                         | . ","
   82                         | . "," "end of line"
  335 lineEnd: . "end of line"
  336        | . "line comment" "end of line"

    "end of line"   décalage et aller à l'état 62
    ","             décalage et aller à l'état 216
    ";"             décalage et aller à l'état 217
    "line comment"  décalage et aller à l'état 64

    functionDeclarationBreak  aller à l'état 505
    lineEnd                   aller à l'état 220


état 483

   68 functionDeclaration: "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody . "endfunction"

    "endfunction"  décalage et aller à l'état 506


état 484

   85 classDeclaration: "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass" .

    $défaut  réduction par utilisation de la règle 85 (classDeclaration)


état 485

   99 slotAttributes: "(" ")" .

    $défaut  réduction par utilisation de la règle 99 (slotAttributes)


état 486

   76 idList: idList . "," "identifier"
   98 slotAttributes: "(" idList . ")"

    ","  décalage et aller à l'état 340
    ")"  décalage et aller à l'état 507


état 487

   72 functionDeclarationReturns: . idList
   76 idList: . idList "," "identifier"
   77       | . "identifier"
   93 methodDeclaration: "function" slotAttributes "[" . functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   94                  | "function" slotAttributes "[" . "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"

    "]"           décalage et aller à l'état 508
    "identifier"  décalage et aller à l'état 210

    functionDeclarationReturns  aller à l'état 509
    idList                      aller à l'état 212


état 488

   73 functionDeclarationArguments: . "(" idList ")"
   74                             | . "(" ")"
   75                             | .  ["end of line", ",", ";", "line comment"]
   92 methodDeclaration: "function" slotAttributes "identifier" . "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   95                  | "function" slotAttributes "identifier" . functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"

    "("  décalage et aller à l'état 213
    "="  décalage et aller à l'état 510

    $défaut  réduction par utilisation de la règle 75 (functionDeclarationArguments)

    functionDeclarationArguments  aller à l'état 511


état 489

   96 propertyDeclaration: "property" slotAttributes "identifier" . "=" variable
   97                    | "property" slotAttributes "identifier" .  ["end of line", ",", ";", "line comment"]

    "="  décalage et aller à l'état 512

    $défaut  réduction par utilisation de la règle 97 (propertyDeclaration)


état 490

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"
  219 variableDeclaration: . assignable "=" variable
  220                    | . assignable "=" functionCall
  221                    | . functionCall "=" variable
  222                    | . functionCall "=" functionCall
  223                    | . assignable "=" ":"
  224                    | . functionCall "=" ":"
  225                    | . assignable "=" returnControl
  226                    | . functionCall "=" returnControl
  227 assignable: . variable "." "identifier"
  228           | . variable "." functionCall
  229           | . functionCall "." variable
  230           | . functionCall "." functionCall
  231           | . "identifier"
  232           | . multipleResults
  233 multipleResults: . "[" matrixOrCellColumns "]"
  234 ifControl: . "if" condition then thenBody "end"
  235          | . "if" condition then thenBody else elseBody "end"
  236          | . "if" condition then thenBody elseIfControl "end"
  261 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  262              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  263              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  264              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  287 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  288           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  288           | "for" "(" "identifier" "=" forIterator ")" forConditionBreak . forBody "end"
  299 forBody: . expressions
  300        | .  ["end"]
  301 whileControl: . "while" condition whileConditionBreak whileBody "end"
  321 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  322           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  323           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  324           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  325 returnControl: . "return"
  326              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "end"  réduction par utilisation de la règle 300 (forBody)

    expressions            aller à l'état 458
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    forBody                aller à l'état 513
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 491

  287 forControl: "for" "identifier" "=" forIterator forConditionBreak forBody "end" .

    $défaut  réduction par utilisation de la règle 287 (forControl)


état 492

  321 tryControl: "try" "end of line" expressions "catch" "end of line" expressions "end" .

    $défaut  réduction par utilisation de la règle 321 (tryControl)


état 493

  323 tryControl: "try" "end of line" expressions "catch" "line comment" "end of line" expressions . "end"

    "end"  décalage et aller à l'état 514


état 494

  322 tryControl: "try" "line comment" "end of line" expressions "catch" "end of line" expressions . "end"

    "end"  décalage et aller à l'état 515


état 495

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"
  219 variableDeclaration: . assignable "=" variable
  220                    | . assignable "=" functionCall
  221                    | . functionCall "=" variable
  222                    | . functionCall "=" functionCall
  223                    | . assignable "=" ":"
  224                    | . functionCall "=" ":"
  225                    | . assignable "=" returnControl
  226                    | . functionCall "=" returnControl
  227 assignable: . variable "." "identifier"
  228           | . variable "." functionCall
  229           | . functionCall "." variable
  230           | . functionCall "." functionCall
  231           | . "identifier"
  232           | . multipleResults
  233 multipleResults: . "[" matrixOrCellColumns "]"
  234 ifControl: . "if" condition then thenBody "end"
  235          | . "if" condition then thenBody else elseBody "end"
  236          | . "if" condition then thenBody elseIfControl "end"
  261 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  262              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  263              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  264              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  287 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  288           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  301 whileControl: . "while" condition whileConditionBreak whileBody "end"
  321 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  322           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  323           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  324           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  324           | "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" . expressions "end"
  325 returnControl: . "return"
  326              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    expressions            aller à l'état 516
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 496

  252 else: . "else"
  253     | . "else" ","
  254     | . "else" ";"
  255     | . "else" "end of line"
  256     | . "else" "," "end of line"
  257     | . "else" ";" "end of line"
  258 elseIfControl: . "elseif" condition then thenBody
  258              | "elseif" condition then thenBody .  ["end"]
  259              | . "elseif" condition then thenBody else elseBody
  259              | "elseif" condition then thenBody . else elseBody
  260              | . "elseif" condition then thenBody elseIfControl
  260              | "elseif" condition then thenBody . elseIfControl

    "else"    décalage et aller à l'état 383
    "elseif"  décalage et aller à l'état 384

    $défaut  réduction par utilisation de la règle 258 (elseIfControl)

    else           aller à l'état 517
    elseIfControl  aller à l'état 518


état 497

  264 selectControl: "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end" .

    $défaut  réduction par utilisation de la règle 264 (selectControl)


état 498

  286 caseControlBreak: "then" "," "end of line" .

    $défaut  réduction par utilisation de la règle 286 (caseControlBreak)


état 499

  272 casesControl: "case" variable "line comment" "end of line" caseBody .

    $défaut  réduction par utilisation de la règle 272 (casesControl)


état 500

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"
  219 variableDeclaration: . assignable "=" variable
  220                    | . assignable "=" functionCall
  221                    | . functionCall "=" variable
  222                    | . functionCall "=" functionCall
  223                    | . assignable "=" ":"
  224                    | . functionCall "=" ":"
  225                    | . assignable "=" returnControl
  226                    | . functionCall "=" returnControl
  227 assignable: . variable "." "identifier"
  228           | . variable "." functionCall
  229           | . functionCall "." variable
  230           | . functionCall "." functionCall
  231           | . "identifier"
  232           | . multipleResults
  233 multipleResults: . "[" matrixOrCellColumns "]"
  234 ifControl: . "if" condition then thenBody "end"
  235          | . "if" condition then thenBody else elseBody "end"
  236          | . "if" condition then thenBody elseIfControl "end"
  261 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  262              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  263              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  264              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  275 casesControl: casesControl "case" variable "line comment" "end of line" . caseBody
  276 caseBody: . expressions
  277         | .  ["else", "end", "case"]
  287 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  288           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  301 whileControl: . "while" condition whileConditionBreak whileBody "end"
  321 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  322           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  323           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  324           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  325 returnControl: . "return"
  326              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "else"  réduction par utilisation de la règle 277 (caseBody)
    "end"   réduction par utilisation de la règle 277 (caseBody)
    "case"  réduction par utilisation de la règle 277 (caseBody)

    expressions            aller à l'état 474
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    caseBody               aller à l'état 519
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 501

  274 casesControl: casesControl "case" variable caseControlBreak caseBody .

    $défaut  réduction par utilisation de la règle 274 (casesControl)


état 502

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"
  219 variableDeclaration: . assignable "=" variable
  220                    | . assignable "=" functionCall
  221                    | . functionCall "=" variable
  222                    | . functionCall "=" functionCall
  223                    | . assignable "=" ":"
  224                    | . functionCall "=" ":"
  225                    | . assignable "=" returnControl
  226                    | . functionCall "=" returnControl
  227 assignable: . variable "." "identifier"
  228           | . variable "." functionCall
  229           | . functionCall "." variable
  230           | . functionCall "." functionCall
  231           | . "identifier"
  232           | . multipleResults
  233 multipleResults: . "[" matrixOrCellColumns "]"
  234 ifControl: . "if" condition then thenBody "end"
  235          | . "if" condition then thenBody else elseBody "end"
  236          | . "if" condition then thenBody elseIfControl "end"
  261 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  262              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  263              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  264              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  273 casesControl: comments "case" variable "line comment" "end of line" . caseBody
  276 caseBody: . expressions
  277         | .  ["else", "end", "case"]
  287 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  288           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  301 whileControl: . "while" condition whileConditionBreak whileBody "end"
  321 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  322           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  323           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  324           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  325 returnControl: . "return"
  326              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "else"  réduction par utilisation de la règle 277 (caseBody)
    "end"   réduction par utilisation de la règle 277 (caseBody)
    "case"  réduction par utilisation de la règle 277 (caseBody)

    expressions            aller à l'état 474
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    caseBody               aller à l'état 520
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 503

  271 casesControl: comments "case" variable caseControlBreak caseBody .

    $défaut  réduction par utilisation de la règle 271 (casesControl)


état 504

   70 functionDeclaration: "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody . "endfunction"

    "endfunction"  décalage et aller à l'état 521


état 505

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak . functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   83 functionBody: . expressions
   84             | .  ["endfunction"]
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"
  219 variableDeclaration: . assignable "=" variable
  220                    | . assignable "=" functionCall
  221                    | . functionCall "=" variable
  222                    | . functionCall "=" functionCall
  223                    | . assignable "=" ":"
  224                    | . functionCall "=" ":"
  225                    | . assignable "=" returnControl
  226                    | . functionCall "=" returnControl
  227 assignable: . variable "." "identifier"
  228           | . variable "." functionCall
  229           | . functionCall "." variable
  230           | . functionCall "." functionCall
  231           | . "identifier"
  232           | . multipleResults
  233 multipleResults: . "[" matrixOrCellColumns "]"
  234 ifControl: . "if" condition then thenBody "end"
  235          | . "if" condition then thenBody else elseBody "end"
  236          | . "if" condition then thenBody elseIfControl "end"
  261 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  262              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  263              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  264              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  287 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  288           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  301 whileControl: . "while" condition whileConditionBreak whileBody "end"
  321 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  322           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  323           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  324           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  325 returnControl: . "return"
  326              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "endfunction"  réduction par utilisation de la règle 84 (functionBody)

    expressions            aller à l'état 401
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    functionBody           aller à l'état 522
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 506

   68 functionDeclaration: "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction" .

    $défaut  réduction par utilisation de la règle 68 (functionDeclaration)


état 507

   98 slotAttributes: "(" idList ")" .

    $défaut  réduction par utilisation de la règle 98 (slotAttributes)


état 508

   94 methodDeclaration: "function" slotAttributes "[" "]" . "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"

    "="  décalage et aller à l'état 523


état 509

   93 methodDeclaration: "function" slotAttributes "[" functionDeclarationReturns . "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"

    "]"  décalage et aller à l'état 524


état 510

   92 methodDeclaration: "function" slotAttributes "identifier" "=" . "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"

    "identifier"  décalage et aller à l'état 525


état 511

   78 functionDeclarationBreak: . lineEnd
   79                         | . ";"
   80                         | . ";" "end of line"
   81                         | . ","
   82                         | . "," "end of line"
   95 methodDeclaration: "function" slotAttributes "identifier" functionDeclarationArguments . functionDeclarationBreak functionBody "endfunction"
  335 lineEnd: . "end of line"
  336        | . "line comment" "end of line"

    "end of line"   décalage et aller à l'état 62
    ","             décalage et aller à l'état 216
    ";"             décalage et aller à l'état 217
    "line comment"  décalage et aller à l'état 64

    functionDeclarationBreak  aller à l'état 526
    lineEnd                   aller à l'état 220


état 512

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   96 propertyDeclaration: "property" slotAttributes "identifier" "=" . variable
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 93
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 527
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 513

  288 forControl: "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody . "end"

    "end"  décalage et aller à l'état 528


état 514

  323 tryControl: "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end" .

    $défaut  réduction par utilisation de la règle 323 (tryControl)


état 515

  322 tryControl: "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end" .

    $défaut  réduction par utilisation de la règle 322 (tryControl)


état 516

  324 tryControl: "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions . "end"

    "end"  décalage et aller à l'état 529


état 517

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"
  219 variableDeclaration: . assignable "=" variable
  220                    | . assignable "=" functionCall
  221                    | . functionCall "=" variable
  222                    | . functionCall "=" functionCall
  223                    | . assignable "=" ":"
  224                    | . functionCall "=" ":"
  225                    | . assignable "=" returnControl
  226                    | . functionCall "=" returnControl
  227 assignable: . variable "." "identifier"
  228           | . variable "." functionCall
  229           | . functionCall "." variable
  230           | . functionCall "." functionCall
  231           | . "identifier"
  232           | . multipleResults
  233 multipleResults: . "[" matrixOrCellColumns "]"
  234 ifControl: . "if" condition then thenBody "end"
  235          | . "if" condition then thenBody else elseBody "end"
  236          | . "if" condition then thenBody elseIfControl "end"
  239 elseBody: . expressions
  240         | .  ["end"]
  259 elseIfControl: "elseif" condition then thenBody else . elseBody
  261 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  262              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  263              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  264              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  287 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  288           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  301 whileControl: . "while" condition whileConditionBreak whileBody "end"
  321 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  322           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  323           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  324           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  325 returnControl: . "return"
  326              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "end"  réduction par utilisation de la règle 240 (elseBody)

    expressions            aller à l'état 430
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    elseBody               aller à l'état 530
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 518

  260 elseIfControl: "elseif" condition then thenBody elseIfControl .

    $défaut  réduction par utilisation de la règle 260 (elseIfControl)


état 519

  275 casesControl: casesControl "case" variable "line comment" "end of line" caseBody .

    $défaut  réduction par utilisation de la règle 275 (casesControl)


état 520

  273 casesControl: comments "case" variable "line comment" "end of line" caseBody .

    $défaut  réduction par utilisation de la règle 273 (casesControl)


état 521

   70 functionDeclaration: "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction" .

    $défaut  réduction par utilisation de la règle 70 (functionDeclaration)


état 522

   69 functionDeclaration: "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody . "endfunction"

    "endfunction"  décalage et aller à l'état 531


état 523

   94 methodDeclaration: "function" slotAttributes "[" "]" "=" . "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"

    "identifier"  décalage et aller à l'état 532


état 524

   93 methodDeclaration: "function" slotAttributes "[" functionDeclarationReturns "]" . "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"

    "="  décalage et aller à l'état 533


état 525

   73 functionDeclarationArguments: . "(" idList ")"
   74                             | . "(" ")"
   75                             | .  ["end of line", ",", ";", "line comment"]
   92 methodDeclaration: "function" slotAttributes "identifier" "=" "identifier" . functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"

    "("  décalage et aller à l'état 213

    $défaut  réduction par utilisation de la règle 75 (functionDeclarationArguments)

    functionDeclarationArguments  aller à l'état 534


état 526

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   83 functionBody: . expressions
   84             | .  ["endfunction"]
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   95 methodDeclaration: "function" slotAttributes "identifier" functionDeclarationArguments functionDeclarationBreak . functionBody "endfunction"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"
  219 variableDeclaration: . assignable "=" variable
  220                    | . assignable "=" functionCall
  221                    | . functionCall "=" variable
  222                    | . functionCall "=" functionCall
  223                    | . assignable "=" ":"
  224                    | . functionCall "=" ":"
  225                    | . assignable "=" returnControl
  226                    | . functionCall "=" returnControl
  227 assignable: . variable "." "identifier"
  228           | . variable "." functionCall
  229           | . functionCall "." variable
  230           | . functionCall "." functionCall
  231           | . "identifier"
  232           | . multipleResults
  233 multipleResults: . "[" matrixOrCellColumns "]"
  234 ifControl: . "if" condition then thenBody "end"
  235          | . "if" condition then thenBody else elseBody "end"
  236          | . "if" condition then thenBody elseIfControl "end"
  261 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  262              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  263              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  264              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  287 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  288           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  301 whileControl: . "while" condition whileConditionBreak whileBody "end"
  321 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  322           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  323           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  324           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  325 returnControl: . "return"
  326              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "endfunction"  réduction par utilisation de la règle 84 (functionBody)

    expressions            aller à l'état 401
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    functionBody           aller à l'état 535
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 527

   55 simpleFunctionCall: variable . "(" functionArgs ")"
   96 propertyDeclaration: "property" slotAttributes "identifier" "=" variable .  ["end of line", ",", ";", "line comment"]
  103 comparison: variable . comparators comparable
  105           | variable . logicalComparators comparable
  107 logicalComparators: . "&"
  108                   | . "&&"
  109                   | . "|"
  110                   | . "||"
  114 operation: variable . rightOperand
  120          | variable . "** or ^" variable
  121          | variable . "** or ^" functionCall
  124          | variable . ".^" variable
  125          | variable . ".^" functionCall
  128          | variable . "'"
  129          | variable . ".'"
  132 rightOperand: . "+" variable
  133             | . "+" functionCall
  134             | . "-" variable
  135             | . "-" functionCall
  136             | . "*" variable
  137             | . "*" functionCall
  138             | . ".*" variable
  139             | . ".*" functionCall
  140             | . ".*." variable
  141             | . ".*." functionCall
  142             | . "/" variable
  143             | . "/" functionCall
  144             | . "./" variable
  145             | . "./" functionCall
  146             | . "./." variable
  147             | . "./." functionCall
  148             | . "/." variable
  149             | . "/." functionCall
  150             | . "\\" variable
  151             | . "\\" functionCall
  152             | . ".\\" variable
  153             | . ".\\" functionCall
  154             | . ".\\." variable
  155             | . ".\\." functionCall
  156 listableBegin: . ":" variable
  157              | . ":" functionCall
  158 listableEnd: . listableBegin ":" variable
  159            | . listableBegin ":" functionCall
  160            | . listableBegin
  162 variable: variable . "." "identifier"
  164         | variable . listableEnd
  327 comparators: . "=="
  328            | . "<> or ~="
  329            | . "<"
  330            | . "<="
  331            | . ">"
  332            | . ">="

    "'"         décalage et aller à l'état 151
    ":"         décalage et aller à l'état 116
    "("         décalage et aller à l'état 152
    "."         décalage et aller à l'état 171
    ".'"        décalage et aller à l'état 154
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 155
    ".^"        décalage et aller à l'état 156
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "&&"        décalage et aller à l'état 140
    "|"         décalage et aller à l'état 141
    "||"        décalage et aller à l'état 142

    $défaut  réduction par utilisation de la règle 96 (propertyDeclaration)

    logicalComparators  aller à l'état 157
    rightOperand        aller à l'état 158
    listableBegin       aller à l'état 146
    listableEnd         aller à l'état 159
    comparators         aller à l'état 160


état 528

  288 forControl: "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end" .

    $défaut  réduction par utilisation de la règle 288 (forControl)


état 529

  324 tryControl: "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end" .

    $défaut  réduction par utilisation de la règle 324 (tryControl)


état 530

  259 elseIfControl: "elseif" condition then thenBody else elseBody .

    $défaut  réduction par utilisation de la règle 259 (elseIfControl)


état 531

   69 functionDeclaration: "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction" .

    $défaut  réduction par utilisation de la règle 69 (functionDeclaration)


état 532

   73 functionDeclarationArguments: . "(" idList ")"
   74                             | . "(" ")"
   75                             | .  ["end of line", ",", ";", "line comment"]
   94 methodDeclaration: "function" slotAttributes "[" "]" "=" "identifier" . functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"

    "("  décalage et aller à l'état 213

    $défaut  réduction par utilisation de la règle 75 (functionDeclarationArguments)

    functionDeclarationArguments  aller à l'état 536


état 533

   93 methodDeclaration: "function" slotAttributes "[" functionDeclarationReturns "]" "=" . "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"

    "identifier"  décalage et aller à l'état 537


état 534

   78 functionDeclarationBreak: . lineEnd
   79                         | . ";"
   80                         | . ";" "end of line"
   81                         | . ","
   82                         | . "," "end of line"
   92 methodDeclaration: "function" slotAttributes "identifier" "=" "identifier" functionDeclarationArguments . functionDeclarationBreak functionBody "endfunction"
  335 lineEnd: . "end of line"
  336        | . "line comment" "end of line"

    "end of line"   décalage et aller à l'état 62
    ","             décalage et aller à l'état 216
    ";"             décalage et aller à l'état 217
    "line comment"  décalage et aller à l'état 64

    functionDeclarationBreak  aller à l'état 538
    lineEnd                   aller à l'état 220


état 535

   95 methodDeclaration: "function" slotAttributes "identifier" functionDeclarationArguments functionDeclarationBreak functionBody . "endfunction"

    "endfunction"  décalage et aller à l'état 539


état 536

   78 functionDeclarationBreak: . lineEnd
   79                         | . ";"
   80                         | . ";" "end of line"
   81                         | . ","
   82                         | . "," "end of line"
   94 methodDeclaration: "function" slotAttributes "[" "]" "=" "identifier" functionDeclarationArguments . functionDeclarationBreak functionBody "endfunction"
  335 lineEnd: . "end of line"
  336        | . "line comment" "end of line"

    "end of line"   décalage et aller à l'état 62
    ","             décalage et aller à l'état 216
    ";"             décalage et aller à l'état 217
    "line comment"  décalage et aller à l'état 64

    functionDeclarationBreak  aller à l'état 540
    lineEnd                   aller à l'état 220


état 537

   73 functionDeclarationArguments: . "(" idList ")"
   74                             | . "(" ")"
   75                             | .  ["end of line", ",", ";", "line comment"]
   93 methodDeclaration: "function" slotAttributes "[" functionDeclarationReturns "]" "=" "identifier" . functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"

    "("  décalage et aller à l'état 213

    $défaut  réduction par utilisation de la règle 75 (functionDeclarationArguments)

    functionDeclarationArguments  aller à l'état 541


état 538

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   83 functionBody: . expressions
   84             | .  ["endfunction"]
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   92 methodDeclaration: "function" slotAttributes "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak . functionBody "endfunction"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"
  219 variableDeclaration: . assignable "=" variable
  220                    | . assignable "=" functionCall
  221                    | . functionCall "=" variable
  222                    | . functionCall "=" functionCall
  223                    | . assignable "=" ":"
  224                    | . functionCall "=" ":"
  225                    | . assignable "=" returnControl
  226                    | . functionCall "=" returnControl
  227 assignable: . variable "." "identifier"
  228           | . variable "." functionCall
  229           | . functionCall "." variable
  230           | . functionCall "." functionCall
  231           | . "identifier"
  232           | . multipleResults
  233 multipleResults: . "[" matrixOrCellColumns "]"
  234 ifControl: . "if" condition then thenBody "end"
  235          | . "if" condition then thenBody else elseBody "end"
  236          | . "if" condition then thenBody elseIfControl "end"
  261 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  262              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  263              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  264              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  287 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  288           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  301 whileControl: . "while" condition whileConditionBreak whileBody "end"
  321 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  322           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  323           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  324           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  325 returnControl: . "return"
  326              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "endfunction"  réduction par utilisation de la règle 84 (functionBody)

    expressions            aller à l'état 401
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    functionBody           aller à l'état 542
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 539

   95 methodDeclaration: "function" slotAttributes "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction" .

    $défaut  réduction par utilisation de la règle 95 (methodDeclaration)


état 540

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   83 functionBody: . expressions
   84             | .  ["endfunction"]
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   94 methodDeclaration: "function" slotAttributes "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak . functionBody "endfunction"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"
  219 variableDeclaration: . assignable "=" variable
  220                    | . assignable "=" functionCall
  221                    | . functionCall "=" variable
  222                    | . functionCall "=" functionCall
  223                    | . assignable "=" ":"
  224                    | . functionCall "=" ":"
  225                    | . assignable "=" returnControl
  226                    | . functionCall "=" returnControl
  227 assignable: . variable "." "identifier"
  228           | . variable "." functionCall
  229           | . functionCall "." variable
  230           | . functionCall "." functionCall
  231           | . "identifier"
  232           | . multipleResults
  233 multipleResults: . "[" matrixOrCellColumns "]"
  234 ifControl: . "if" condition then thenBody "end"
  235          | . "if" condition then thenBody else elseBody "end"
  236          | . "if" condition then thenBody elseIfControl "end"
  261 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  262              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  263              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  264              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  287 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  288           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  301 whileControl: . "while" condition whileConditionBreak whileBody "end"
  321 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  322           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  323           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  324           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  325 returnControl: . "return"
  326              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "endfunction"  réduction par utilisation de la règle 84 (functionBody)

    expressions            aller à l'état 401
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    functionBody           aller à l'état 543
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 541

   78 functionDeclarationBreak: . lineEnd
   79                         | . ";"
   80                         | . ";" "end of line"
   81                         | . ","
   82                         | . "," "end of line"
   93 methodDeclaration: "function" slotAttributes "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments . functionDeclarationBreak functionBody "endfunction"
  335 lineEnd: . "end of line"
  336        | . "line comment" "end of line"

    "end of line"   décalage et aller à l'état 62
    ","             décalage et aller à l'état 216
    ";"             décalage et aller à l'état 217
    "line comment"  décalage et aller à l'état 64

    functionDeclarationBreak  aller à l'état 544
    lineEnd                   aller à l'état 220


état 542

   92 methodDeclaration: "function" slotAttributes "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody . "endfunction"

    "endfunction"  décalage et aller à l'état 545


état 543

   94 methodDeclaration: "function" slotAttributes "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody . "endfunction"

    "endfunction"  décalage et aller à l'état 546


état 544

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . variable "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   83 functionBody: . expressions
   84             | .  ["endfunction"]
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   93 methodDeclaration: "function" slotAttributes "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak . functionBody "endfunction"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  105           | . variable logicalComparators comparable
  106           | . functionCall logicalComparators comparable
  114 operation: . variable rightOperand
  115          | . functionCall rightOperand
  116          | . "-" variable
  117          | . "-" functionCall
  118          | . "+" variable
  119          | . "+" functionCall
  120          | . variable "** or ^" variable
  121          | . variable "** or ^" functionCall
  122          | . functionCall "** or ^" variable
  123          | . functionCall "** or ^" functionCall
  124          | . variable ".^" variable
  125          | . variable ".^" functionCall
  126          | . functionCall ".^" variable
  127          | . functionCall ".^" functionCall
  128          | . variable "'"
  129          | . variable ".'"
  130          | . functionCall "'"
  131          | . functionCall ".'"
  161 variable: . "~ or @" variable
  162         | . variable "." "identifier"
  163         | . functionCall "." variable
  164         | . variable listableEnd
  165         | . functionCall listableEnd
  166         | . matrix
  167         | . cell
  168         | . operation
  169         | . "identifier"
  170         | . "integer"
  171         | . "number"
  172         | . "float"
  173         | . "string"
  174         | . "$"
  175         | . "%t or %T"
  176         | . "%f or %F"
  177         | . "(" variable ")"
  178         | . "(" variableFields ")"
  179         | . comparison
  186 cell: . "{" matrixOrCellLines "}"
  187     | . "{" lineEnd matrixOrCellLines "}"
  188     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  189     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  190     | . "{" matrixOrCellColumns "}"
  191     | . "{" lineEnd matrixOrCellColumns "}"
  192     | . "{" "}"
  193 matrix: . "[" matrixOrCellLines "]"
  194       | . "[" lineEnd matrixOrCellLines "]"
  195       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  196       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  197       | . "[" matrixOrCellColumns "]"
  198       | . "[" lineEnd matrixOrCellColumns "]"
  199       | . "[" "]"
  219 variableDeclaration: . assignable "=" variable
  220                    | . assignable "=" functionCall
  221                    | . functionCall "=" variable
  222                    | . functionCall "=" functionCall
  223                    | . assignable "=" ":"
  224                    | . functionCall "=" ":"
  225                    | . assignable "=" returnControl
  226                    | . functionCall "=" returnControl
  227 assignable: . variable "." "identifier"
  228           | . variable "." functionCall
  229           | . functionCall "." variable
  230           | . functionCall "." functionCall
  231           | . "identifier"
  232           | . multipleResults
  233 multipleResults: . "[" matrixOrCellColumns "]"
  234 ifControl: . "if" condition then thenBody "end"
  235          | . "if" condition then thenBody else elseBody "end"
  236          | . "if" condition then thenBody elseIfControl "end"
  261 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  262              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  263              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  264              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  287 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  288           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  301 whileControl: . "while" condition whileConditionBreak whileBody "end"
  321 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  322           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  323           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  324           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  325 returnControl: . "return"
  326              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "endfunction"  réduction par utilisation de la règle 84 (functionBody)

    expressions            aller à l'état 401
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    functionBody           aller à l'état 547
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 545

   92 methodDeclaration: "function" slotAttributes "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction" .

    $défaut  réduction par utilisation de la règle 92 (methodDeclaration)


état 546

   94 methodDeclaration: "function" slotAttributes "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction" .

    $défaut  réduction par utilisation de la règle 94 (methodDeclaration)


état 547

   93 methodDeclaration: "function" slotAttributes "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody . "endfunction"

    "endfunction"  décalage et aller à l'état 548


état 548

   93 methodDeclaration: "function" slotAttributes "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction" .

    $défaut  réduction par utilisation de la règle 93 (methodDeclaration)
