Terminals unused in grammar

   "line break"
   "spaces"
   "block comment"


État 211conflits: 1 décalage/réduction
État 212conflits: 1 décalage/réduction


Grammaire

    0 $accept: program "end of file"

    1 program: expressions
    2        | "end of line" expressions

    3 expressions: recursiveExpression
    4            | recursiveExpression expression
    5            | recursiveExpression expression "line comment"
    6            | expression
    7            | expression "line comment"

    8 recursiveExpression: recursiveExpression expression expressionLineBreak
    9                    | recursiveExpression expression "line comment" expressionLineBreak
   10                    | expression "line comment" expressionLineBreak
   11                    | expression expressionLineBreak

   12 expressionLineBreak: ";"
   13                    | ","
   14                    | "end of line"
   15                    | expressionLineBreak ";"
   16                    | expressionLineBreak ","
   17                    | expressionLineBreak "end of line"

   18 expression: functionDeclaration
   19           | classDeclaration
   20           | functionCall
   21           | variableDeclaration
   22           | ifControl
   23           | selectControl
   24           | forControl
   25           | whileControl
   26           | tryControl
   27           | variable
   28           | implicitFunctionCall
   29           | "break"
   30           | returnControl
   31           | "line comment"
   32           | error

   33 implicitFunctionCall: implicitFunctionCall implicitCallable
   34                     | "identifier" implicitCallable

   35 implicitCallable: "identifier"
   36                 | "integer"
   37                 | "number"
   38                 | "float"
   39                 | "string"
   40                 | "$"
   41                 | "%t or %T"
   42                 | "%f or %F"
   43                 | implicitCallable "." "identifier"
   44                 | implicitCallable "." functionCall
   45                 | simpleFunctionCall
   46                 | implicitCallable rightOperand
   47                 | "path"

   48 functionCall: simpleFunctionCall
   49             | specificFunctionCall
   50             | recursiveFunctionCall
   51             | "(" functionCall ")"
   52             | "~ or @" functionCall

   53 specificFunctionCall: "%t or %T" "(" functionArgs ")"
   54                     | "%f or %F" "(" functionArgs ")"

   55 simpleFunctionCall: "identifier" "(" functionArgs ")"

   56 recursiveFunctionCall: simpleFunctionCall "(" functionArgs ")"
   57                      | recursiveFunctionCall "(" functionArgs ")"

   58 functionArgs: variable
   59             | functionCall
   60             | ":"
   61             | variableDeclaration
   62             | /* vide */
   63             | functionArgs "," variable
   64             | functionArgs "," functionCall
   65             | functionArgs "," ":"
   66             | functionArgs "," variableDeclaration
   67             | functionArgs ","

   68 functionDeclaration: "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"

   72 functionDeclarationReturns: idList

   73 functionDeclarationArguments: "(" idList ")"
   74                             | "(" ")"
   75                             | /* vide */

   76 idList: idList "," "identifier"
   77       | "identifier"

   78 functionDeclarationBreak: lineEnd
   79                         | ";"
   80                         | ";" "end of line"
   81                         | ","
   82                         | "," "end of line"

   83 functionBody: expressions
   84             | /* vide */

   85 classDeclaration: "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"

   87 slotsDeclaration: slotsDeclaration slotDeclaration functionDeclarationBreak
   88                 | slotsDeclaration functionDeclarationBreak
   89                 | /* vide */

   90 slotDeclaration: methodDeclaration
   91                | propertyDeclaration

   92 methodDeclaration: "function" slotAttributes "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   93                  | "function" slotAttributes "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   94                  | "function" slotAttributes "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   95                  | "function" slotAttributes "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"

   96 propertyDeclaration: "property" slotAttributes "identifier" "=" variable
   97                    | "property" slotAttributes "identifier"

   98 slotAttributes: "(" idList ")"
   99               | "(" ")"
  100               | /* vide */

  101 condition: functionCall
  102          | variable

  103 comparison: variable comparators comparable
  104           | functionCall comparators comparable

  105 comparable: variable
  106           | functionCall
  107           | ":"

  108 operation: variable rightOperand
  109          | functionCall rightOperand
  110          | "-" variable
  111          | "-" functionCall
  112          | "+" variable
  113          | "+" functionCall
  114          | variable "** or ^" variable
  115          | variable "** or ^" functionCall
  116          | functionCall "** or ^" variable
  117          | functionCall "** or ^" functionCall
  118          | variable ".^" variable
  119          | variable ".^" functionCall
  120          | functionCall ".^" variable
  121          | functionCall ".^" functionCall
  122          | variable "'"
  123          | variable ".'"
  124          | functionCall "'"
  125          | functionCall ".'"

  126 rightOperand: "+" variable
  127             | "+" functionCall
  128             | "-" variable
  129             | "-" functionCall
  130             | "*" variable
  131             | "*" functionCall
  132             | ".*" variable
  133             | ".*" functionCall
  134             | ".*." variable
  135             | ".*." functionCall
  136             | "/" variable
  137             | "/" functionCall
  138             | "./" variable
  139             | "./" functionCall
  140             | "./." variable
  141             | "./." functionCall
  142             | "/." variable
  143             | "/." functionCall
  144             | "\\" variable
  145             | "\\" functionCall
  146             | ".\\" variable
  147             | ".\\" functionCall
  148             | ".\\." variable
  149             | ".\\." functionCall

  150 listableBegin: ":" variable
  151              | ":" functionCall

  152 listableEnd: listableBegin ":" variable
  153            | listableBegin ":" functionCall
  154            | listableBegin

  155 variable: "~ or @" variable
  156         | variable "." "identifier"
  157         | variable "." functionCall
  158         | functionCall "." variable
  159         | functionCall "." functionCall
  160         | variable listableEnd
  161         | functionCall listableEnd
  162         | matrix
  163         | cell
  164         | operation
  165         | "identifier"
  166         | "integer"
  167         | "number"
  168         | "float"
  169         | "string"
  170         | "$"
  171         | "%t or %T"
  172         | "%f or %F"
  173         | "(" variable ")"
  174         | "(" variableFields ")"
  175         | comparison

  176 variableFields: variableFields "," variable
  177               | variableFields "," functionCall
  178               | variable "," variable
  179               | functionCall "," functionCall
  180               | functionCall "," variable
  181               | variable "," functionCall

  182 cell: "{" matrixOrCellLines "}"
  183     | "{" lineEnd matrixOrCellLines "}"
  184     | "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | "{" matrixOrCellColumns "}"
  187     | "{" lineEnd matrixOrCellColumns "}"
  188     | "{" "}"

  189 matrix: "[" matrixOrCellLines "]"
  190       | "[" lineEnd matrixOrCellLines "]"
  191       | "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | "[" matrixOrCellColumns "]"
  194       | "[" lineEnd matrixOrCellColumns "]"
  195       | "[" "]"

  196 matrixOrCellLines: matrixOrCellLines matrixOrCellLine
  197                  | matrixOrCellLine

  198 matrixOrCellLineBreak: ";"
  199                      | "end of line"
  200                      | ";" "end of line"

  201 matrixOrCellLine: matrixOrCellColumns matrixOrCellLineBreak
  202                 | matrixOrCellColumns "line comment" "end of line"
  203                 | matrixOrCellColumns ";" "line comment" "end of line"
  204                 | matrixOrCellColumns matrixOrCellColumnsBreak matrixOrCellLineBreak
  205                 | matrixOrCellColumns matrixOrCellColumnsBreak "line comment" "end of line"
  206                 | matrixOrCellColumns matrixOrCellColumnsBreak ";" "line comment" "end of line"

  207 matrixOrCellColumns: matrixOrCellColumns matrixOrCellColumnsBreak variable
  208                    | matrixOrCellColumns matrixOrCellColumnsBreak functionCall
  209                    | matrixOrCellColumns variable
  210                    | matrixOrCellColumns functionCall
  211                    | variable
  212                    | functionCall

  213 matrixOrCellColumnsBreak: matrixOrCellColumnsBreak ","
  214                         | ","

  215 variableDeclaration: assignable "=" variable
  216                    | assignable "=" functionCall
  217                    | functionCall "=" variable
  218                    | functionCall "=" functionCall
  219                    | assignable "=" ":"
  220                    | functionCall "=" ":"
  221                    | assignable "=" returnControl
  222                    | functionCall "=" returnControl

  223 assignable: variable "." "identifier"
  224           | variable "." functionCall
  225           | functionCall "." variable
  226           | functionCall "." functionCall
  227           | "identifier"
  228           | multipleResults

  229 multipleResults: "[" matrixOrCellColumns "]"

  230 ifControl: "if" condition then thenBody "end"
  231          | "if" condition then thenBody else elseBody "end"
  232          | "if" condition then thenBody elseIfControl "end"

  233 thenBody: expressions
  234         | /* vide */

  235 elseBody: expressions
  236         | /* vide */

  237 ifConditionBreak: ";"
  238                 | ";" "end of line"
  239                 | ","
  240                 | "," "end of line"
  241                 | "end of line"

  242 then: "then"
  243     | ifConditionBreak "then"
  244     | ifConditionBreak "then" "end of line"
  245     | "then" ifConditionBreak
  246     | ifConditionBreak
  247     | /* vide */

  248 else: "else"
  249     | "else" ","
  250     | "else" ";"
  251     | "else" "end of line"
  252     | "else" "," "end of line"
  253     | "else" ";" "end of line"

  254 elseIfControl: "elseif" condition then thenBody
  255              | "elseif" condition then thenBody else elseBody
  256              | "elseif" condition then thenBody elseIfControl

  257 selectControl: "select" selectable selectConditionBreak casesControl "end"
  258              | "select" selectable selectConditionBreak casesControl else elseBody "end"
  259              | "select" selectable "line comment" selectConditionBreak casesControl "end"
  260              | "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"

  261 selectable: variable
  262           | functionCall

  263 selectConditionBreak: "end of line"
  264                     | "," "end of line"
  265                     | ";" "end of line"

  266 casesControl: "case" variable caseControlBreak caseBody
  267             | comments "case" variable caseControlBreak caseBody
  268             | "case" variable "line comment" "end of line" caseBody
  269             | comments "case" variable "line comment" "end of line" caseBody
  270             | casesControl "case" variable caseControlBreak caseBody
  271             | casesControl "case" variable "line comment" "end of line" caseBody

  272 caseBody: expressions
  273         | /* vide */

  274 caseControlBreak: "then"
  275                 | ","
  276                 | ";"
  277                 | "end of line"
  278                 | "then" "end of line"
  279                 | "," "end of line"
  280                 | ";" "end of line"
  281                 | "then" ","
  282                 | "then" "," "end of line"

  283 forControl: "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  284           | "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"

  285 forIterator: functionCall
  286            | variable

  287 forConditionBreak: "end of line"
  288                  | ";"
  289                  | ";" "end of line"
  290                  | ","
  291                  | "," "end of line"
  292                  | "do"
  293                  | "do" "end of line"
  294                  | /* vide */

  295 forBody: expressions
  296        | /* vide */

  297 whileControl: "while" condition whileConditionBreak whileBody "end"

  298 whileBody: expressions
  299          | /* vide */

  300 whileConditionBreak: ","
  301                    | ";"
  302                    | "do"
  303                    | "do" ","
  304                    | "do" ";"
  305                    | "then"
  306                    | "then" ","
  307                    | "then" ";"
  308                    | lineEnd
  309                    | "," "end of line"
  310                    | ";" "end of line"
  311                    | "do" "end of line"
  312                    | "do" "," "end of line"
  313                    | "do" ";" "end of line"
  314                    | "then" "end of line"
  315                    | "then" "," "end of line"
  316                    | "then" ";" "end of line"

  317 tryControl: "try" "end of line" expressions "catch" "end of line" expressions "end"
  318           | "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  319           | "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  320           | "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"

  321 returnControl: "return"
  322              | "return" variable

  323 comparators: "=="
  324            | "<> or ~="
  325            | "<"
  326            | "<="
  327            | ">"
  328            | ">="
  329            | "&"
  330            | "|"

  331 comments: "line comment" "end of line"
  332         | comments "line comment" "end of line"

  333 lineEnd: "end of line"
  334        | "line comment" "end of line"


Terminaux, suivis des règles où ils apparaissent

"end of file" (0) 0
error (256) 32
"line break" (258)
"end of line" (259) 2 14 17 80 82 199 200 202 203 205 206 238 240 241
    244 251 252 253 263 264 265 268 269 271 277 278 279 280 282 287
    289 291 293 309 310 311 312 313 314 315 316 317 318 319 320 331
    332 333 334
"spaces" (260)
"%t or %T" (261) 41 53 171
"%f or %F" (262) 42 54 172
"'" (263) 122 124
"~ or @" (264) 52 155
"$" (265) 40 170
"," (266) 13 16 63 64 65 66 67 76 81 82 176 177 178 179 180 181 213
    214 239 240 249 252 264 275 279 281 282 290 291 300 303 306 309
    312 315
":" (267) 60 65 107 150 151 152 153 219 220
";" (268) 12 15 79 80 198 200 203 206 237 238 250 253 265 276 280 288
    289 301 304 307 310 313 316
"(" (269) 51 53 54 55 56 57 73 74 98 99 173 174 284
")" (270) 51 53 54 55 56 57 73 74 98 99 173 174 284
"[" (271) 69 70 93 94 189 190 191 192 193 194 195 229
"]" (272) 69 70 93 94 189 190 191 192 193 194 195 229
"{" (273) 182 183 184 185 186 187 188
"}" (274) 182 183 184 185 186 187 188
"." (275) 43 44 156 157 158 159 223 224 225 226
".'" (276) 123 125
"+" (277) 112 113 126 127
"-" (278) 110 111 128 129
"*" (279) 130 131
".*" (280) 132 133
".*." (281) 134 135
"/" (282) 136 137
"./" (283) 138 139
"/." (284) 142 143
"./." (285) 140 141
"\\" (286) 144 145
".\\" (287) 146 147
".\\." (288) 148 149
"** or ^" (289) 114 115 116 117
".^" (290) 118 119 120 121
"==" (291) 323
"<> or ~=" (292) 324
"<" (293) 85 325
"<=" (294) 326
">" (295) 327
">=" (296) 328
"&" (297) 329
"|" (298) 330
"=" (299) 68 69 70 92 93 94 96 215 216 217 218 219 220 221 222 283
    284
"if" (300) 230 231 232
"then" (301) 242 243 244 245 274 278 281 282 305 306 307 314 315 316
"else" (302) 248 249 250 251 252 253
"elseif" (303) 254 255 256
"end" (304) 230 231 232 257 258 259 260 283 284 297 317 318 319 320
"select" (305) 257 258 259 260
"case" (306) 266 267 268 269 270 271
"function" (307) 68 69 70 71 92 93 94 95
"endfunction" (308) 68 69 70 71 92 93 94 95
"class" (309) 85 86
"endclass" (310) 85 86
"property" (311) 96 97
"for" (312) 283 284
"while" (313) 297
"do" (314) 292 293 302 303 304 311 312 313
"break" (315) 29
"try" (316) 317 318 319 320
"catch" (317) 317 318 319 320
"return" (318) 321 322
"string" (319) 39 169
"identifier" (320) 34 35 43 55 68 69 70 71 76 77 85 86 92 93 94 95
    96 97 156 165 223 227 283 284
"integer" (321) 36 166
"float" (322) 38 168
"number" (323) 37 167
"path" (324) 47
"line comment" (325) 5 7 9 10 31 202 203 205 206 259 260 268 269 271
    318 319 320 331 332 334
"block comment" (326)
TOPLEVEL (327)
HIGHLEVEL (328)
UPLEVEL (329)
LISTABLE (330)
FUNCTIONCALL (331)


Non-terminaux, suivis des règles où ils apparaissent

$accept (77)
    à gauche: 0
program (78)
    à gauche: 1 2, à droite: 0
expressions (79)
    à gauche: 3 4 5 6 7, à droite: 1 2 83 233 235 272 295 298 317
    318 319 320
recursiveExpression (80)
    à gauche: 8 9 10 11, à droite: 3 4 5 8 9
expressionLineBreak (81)
    à gauche: 12 13 14 15 16 17, à droite: 8 9 10 11 15 16 17
expression (82)
    à gauche: 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32, à droite:
    4 5 6 7 8 9 10 11
implicitFunctionCall (83)
    à gauche: 33 34, à droite: 28 33
implicitCallable (84)
    à gauche: 35 36 37 38 39 40 41 42 43 44 45 46 47, à droite: 33
    34 43 44 46
functionCall (85)
    à gauche: 48 49 50 51 52, à droite: 20 44 51 52 59 64 101 104
    106 109 111 113 115 116 117 119 120 121 124 125 127 129 131 133
    135 137 139 141 143 145 147 149 151 153 157 158 159 161 177 179
    180 181 208 210 212 216 217 218 220 222 224 225 226 262 285
specificFunctionCall (86)
    à gauche: 53 54, à droite: 49
simpleFunctionCall (87)
    à gauche: 55, à droite: 45 48 56
recursiveFunctionCall (88)
    à gauche: 56 57, à droite: 50 57
functionArgs (89)
    à gauche: 58 59 60 61 62 63 64 65 66 67, à droite: 53 54 55 56
    57 63 64 65 66 67
functionDeclaration (90)
    à gauche: 68 69 70 71, à droite: 18
functionDeclarationReturns (91)
    à gauche: 72, à droite: 69 93
functionDeclarationArguments (92)
    à gauche: 73 74 75, à droite: 68 69 70 71 92 93 94 95
idList (93)
    à gauche: 76 77, à droite: 72 73 76 98
functionDeclarationBreak (94)
    à gauche: 78 79 80 81 82, à droite: 68 69 70 71 85 86 87 88 92
    93 94 95
functionBody (95)
    à gauche: 83 84, à droite: 68 69 70 71 92 93 94 95
classDeclaration (96)
    à gauche: 85 86, à droite: 19
slotsDeclaration (97)
    à gauche: 87 88 89, à droite: 85 86 87 88
slotDeclaration (98)
    à gauche: 90 91, à droite: 87
methodDeclaration (99)
    à gauche: 92 93 94 95, à droite: 90
propertyDeclaration (100)
    à gauche: 96 97, à droite: 91
slotAttributes (101)
    à gauche: 98 99 100, à droite: 92 93 94 95 96 97
condition (102)
    à gauche: 101 102, à droite: 230 231 232 254 255 256 297
comparison (103)
    à gauche: 103 104, à droite: 175
comparable (104)
    à gauche: 105 106 107, à droite: 103 104
operation (105)
    à gauche: 108 109 110 111 112 113 114 115 116 117 118 119 120
    121 122 123 124 125, à droite: 164
rightOperand (106)
    à gauche: 126 127 128 129 130 131 132 133 134 135 136 137 138
    139 140 141 142 143 144 145 146 147 148 149, à droite: 46 108
    109
listableBegin (107)
    à gauche: 150 151, à droite: 152 153 154
listableEnd (108)
    à gauche: 152 153 154, à droite: 160 161
variable (109)
    à gauche: 155 156 157 158 159 160 161 162 163 164 165 166 167
    168 169 170 171 172 173 174 175, à droite: 27 58 63 96 102 103
    105 108 110 112 114 115 116 118 119 120 122 123 126 128 130 132
    134 136 138 140 142 144 146 148 150 152 155 156 157 158 160 173
    176 178 180 181 207 209 211 215 217 223 224 225 261 266 267 268
    269 270 271 286 322
variableFields (110)
    à gauche: 176 177 178 179 180 181, à droite: 174 176 177
cell (111)
    à gauche: 182 183 184 185 186 187 188, à droite: 163
matrix (112)
    à gauche: 189 190 191 192 193 194 195, à droite: 162
matrixOrCellLines (113)
    à gauche: 196 197, à droite: 182 183 184 185 189 190 191 192
    196
matrixOrCellLineBreak (114)
    à gauche: 198 199 200, à droite: 201 204
matrixOrCellLine (115)
    à gauche: 201 202 203 204 205 206, à droite: 196 197
matrixOrCellColumns (116)
    à gauche: 207 208 209 210 211 212, à droite: 184 185 186 187
    191 192 193 194 201 202 203 204 205 206 207 208 209 210 229
matrixOrCellColumnsBreak (117)
    à gauche: 213 214, à droite: 204 205 206 207 208 213
variableDeclaration (118)
    à gauche: 215 216 217 218 219 220 221 222, à droite: 21 61 66
assignable (119)
    à gauche: 223 224 225 226 227 228, à droite: 215 216 219 221
multipleResults (120)
    à gauche: 229, à droite: 228
ifControl (121)
    à gauche: 230 231 232, à droite: 22
thenBody (122)
    à gauche: 233 234, à droite: 230 231 232 254 255 256
elseBody (123)
    à gauche: 235 236, à droite: 231 255 258 260
ifConditionBreak (124)
    à gauche: 237 238 239 240 241, à droite: 243 244 245 246
then (125)
    à gauche: 242 243 244 245 246 247, à droite: 230 231 232 254
    255 256
else (126)
    à gauche: 248 249 250 251 252 253, à droite: 231 255 258 260
elseIfControl (127)
    à gauche: 254 255 256, à droite: 232 256
selectControl (128)
    à gauche: 257 258 259 260, à droite: 23
selectable (129)
    à gauche: 261 262, à droite: 257 258 259 260
selectConditionBreak (130)
    à gauche: 263 264 265, à droite: 257 258 259 260
casesControl (131)
    à gauche: 266 267 268 269 270 271, à droite: 257 258 259 260
    270 271
caseBody (132)
    à gauche: 272 273, à droite: 266 267 268 269 270 271
caseControlBreak (133)
    à gauche: 274 275 276 277 278 279 280 281 282, à droite: 266
    267 270
forControl (134)
    à gauche: 283 284, à droite: 24
forIterator (135)
    à gauche: 285 286, à droite: 283 284
forConditionBreak (136)
    à gauche: 287 288 289 290 291 292 293 294, à droite: 283 284
forBody (137)
    à gauche: 295 296, à droite: 283 284
whileControl (138)
    à gauche: 297, à droite: 25
whileBody (139)
    à gauche: 298 299, à droite: 297
whileConditionBreak (140)
    à gauche: 300 301 302 303 304 305 306 307 308 309 310 311 312
    313 314 315 316, à droite: 297
tryControl (141)
    à gauche: 317 318 319 320, à droite: 26
returnControl (142)
    à gauche: 321 322, à droite: 30 221 222
comparators (143)
    à gauche: 323 324 325 326 327 328 329 330, à droite: 103 104
comments (144)
    à gauche: 331 332, à droite: 267 269 332
lineEnd (145)
    à gauche: 333 334, à droite: 78 183 185 187 190 192 194 308


état 0

    0 $accept: . program "end of file"
    1 program: . expressions
    2        | . "end of line" expressions
    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"
  215 variableDeclaration: . assignable "=" variable
  216                    | . assignable "=" functionCall
  217                    | . functionCall "=" variable
  218                    | . functionCall "=" functionCall
  219                    | . assignable "=" ":"
  220                    | . functionCall "=" ":"
  221                    | . assignable "=" returnControl
  222                    | . functionCall "=" returnControl
  223 assignable: . variable "." "identifier"
  224           | . variable "." functionCall
  225           | . functionCall "." variable
  226           | . functionCall "." functionCall
  227           | . "identifier"
  228           | . multipleResults
  229 multipleResults: . "[" matrixOrCellColumns "]"
  230 ifControl: . "if" condition then thenBody "end"
  231          | . "if" condition then thenBody else elseBody "end"
  232          | . "if" condition then thenBody elseIfControl "end"
  257 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  258              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  259              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  260              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  283 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  284           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  297 whileControl: . "while" condition whileConditionBreak whileBody "end"
  317 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  318           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  319           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  320           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  321 returnControl: . "return"
  322              | . "return" variable

    error           décalage et aller à l'état 1
    "end of line"   décalage et aller à l'état 2
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    program                aller à l'état 27
    expressions            aller à l'état 28
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 1

   32 expression: error .

    $défaut  réduction par utilisation de la règle 32 (expression)


état 2

    2 program: "end of line" . expressions
    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"
  215 variableDeclaration: . assignable "=" variable
  216                    | . assignable "=" functionCall
  217                    | . functionCall "=" variable
  218                    | . functionCall "=" functionCall
  219                    | . assignable "=" ":"
  220                    | . functionCall "=" ":"
  221                    | . assignable "=" returnControl
  222                    | . functionCall "=" returnControl
  223 assignable: . variable "." "identifier"
  224           | . variable "." functionCall
  225           | . functionCall "." variable
  226           | . functionCall "." functionCall
  227           | . "identifier"
  228           | . multipleResults
  229 multipleResults: . "[" matrixOrCellColumns "]"
  230 ifControl: . "if" condition then thenBody "end"
  231          | . "if" condition then thenBody else elseBody "end"
  232          | . "if" condition then thenBody elseIfControl "end"
  257 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  258              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  259              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  260              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  283 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  284           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  297 whileControl: . "while" condition whileConditionBreak whileBody "end"
  317 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  318           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  319           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  320           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  321 returnControl: . "return"
  322              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    expressions            aller à l'état 52
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 3

   53 specificFunctionCall: "%t or %T" . "(" functionArgs ")"
  171 variable: "%t or %T" .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "'", "~ or @", "$", ",", ":", ";", ")", "[", "]", "{", "}", ".", ".'", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]

    "("  décalage et aller à l'état 53

    $défaut  réduction par utilisation de la règle 171 (variable)

Conflit entre la règle 171 et le jeton "(" résolu par décalage (BOOLTRUE < "(").


état 4

   54 specificFunctionCall: "%f or %F" . "(" functionArgs ")"
  172 variable: "%f or %F" .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "'", "~ or @", "$", ",", ":", ";", ")", "[", "]", "{", "}", ".", ".'", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]

    "("  décalage et aller à l'état 54

    $défaut  réduction par utilisation de la règle 172 (variable)

Conflit entre la règle 172 et le jeton "(" résolu par décalage (BOOLFALSE < "(").


état 5

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   52             | "~ or @" . functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  155         | "~ or @" . variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 57
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 58
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 6

  170 variable: "$" .

    $défaut  réduction par utilisation de la règle 170 (variable)


état 7

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   51             | "(" . functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  173         | "(" . variable ")"
  174         | . "(" variableFields ")"
  174         | "(" . variableFields ")"
  175         | . comparison
  176 variableFields: . variableFields "," variable
  177               | . variableFields "," functionCall
  178               | . variable "," variable
  179               | . functionCall "," functionCall
  180               | . functionCall "," variable
  181               | . variable "," functionCall
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 59
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 60
    variableFields         aller à l'état 61
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 8

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  189       | "[" . matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  190       | "[" . lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  191       | "[" . matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  192       | "[" . lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  193       | "[" . matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  194       | "[" . lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"
  195       | "[" . "]"
  196 matrixOrCellLines: . matrixOrCellLines matrixOrCellLine
  197                  | . matrixOrCellLine
  201 matrixOrCellLine: . matrixOrCellColumns matrixOrCellLineBreak
  202                 | . matrixOrCellColumns "line comment" "end of line"
  203                 | . matrixOrCellColumns ";" "line comment" "end of line"
  204                 | . matrixOrCellColumns matrixOrCellColumnsBreak matrixOrCellLineBreak
  205                 | . matrixOrCellColumns matrixOrCellColumnsBreak "line comment" "end of line"
  206                 | . matrixOrCellColumns matrixOrCellColumnsBreak ";" "line comment" "end of line"
  207 matrixOrCellColumns: . matrixOrCellColumns matrixOrCellColumnsBreak variable
  208                    | . matrixOrCellColumns matrixOrCellColumnsBreak functionCall
  209                    | . matrixOrCellColumns variable
  210                    | . matrixOrCellColumns functionCall
  211                    | . variable
  212                    | . functionCall
  229 multipleResults: "[" . matrixOrCellColumns "]"
  333 lineEnd: . "end of line"
  334        | . "line comment" "end of line"

    "end of line"   décalage et aller à l'état 62
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 55
    "]"             décalage et aller à l'état 63
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 56
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 64

    functionCall           aller à l'état 65
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 66
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    matrixOrCellLines      aller à l'état 67
    matrixOrCellLine       aller à l'état 68
    matrixOrCellColumns    aller à l'état 69
    lineEnd                aller à l'état 70


état 9

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  182     | "{" . matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  183     | "{" . lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  184     | "{" . matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  185     | "{" . lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  186     | "{" . matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  187     | "{" . lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  188     | "{" . "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"
  196 matrixOrCellLines: . matrixOrCellLines matrixOrCellLine
  197                  | . matrixOrCellLine
  201 matrixOrCellLine: . matrixOrCellColumns matrixOrCellLineBreak
  202                 | . matrixOrCellColumns "line comment" "end of line"
  203                 | . matrixOrCellColumns ";" "line comment" "end of line"
  204                 | . matrixOrCellColumns matrixOrCellColumnsBreak matrixOrCellLineBreak
  205                 | . matrixOrCellColumns matrixOrCellColumnsBreak "line comment" "end of line"
  206                 | . matrixOrCellColumns matrixOrCellColumnsBreak ";" "line comment" "end of line"
  207 matrixOrCellColumns: . matrixOrCellColumns matrixOrCellColumnsBreak variable
  208                    | . matrixOrCellColumns matrixOrCellColumnsBreak functionCall
  209                    | . matrixOrCellColumns variable
  210                    | . matrixOrCellColumns functionCall
  211                    | . variable
  212                    | . functionCall
  333 lineEnd: . "end of line"
  334        | . "line comment" "end of line"

    "end of line"   décalage et aller à l'état 62
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 55
    "{"             décalage et aller à l'état 9
    "}"             décalage et aller à l'état 71
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 56
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 64

    functionCall           aller à l'état 65
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 66
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    matrixOrCellLines      aller à l'état 72
    matrixOrCellLine       aller à l'état 68
    matrixOrCellColumns    aller à l'état 73
    lineEnd                aller à l'état 74


état 10

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  112          | "+" . variable
  113          | . "+" functionCall
  113          | "+" . functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 75
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 76
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 11

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  110          | "-" . variable
  111          | . "-" functionCall
  111          | "-" . functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 77
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 78
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 12

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  101 condition: . functionCall
  102          | . variable
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"
  230 ifControl: "if" . condition then thenBody "end"
  231          | "if" . condition then thenBody else elseBody "end"
  232          | "if" . condition then thenBody elseIfControl "end"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 79
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    condition              aller à l'état 80
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 81
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 13

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"
  257 selectControl: "select" . selectable selectConditionBreak casesControl "end"
  258              | "select" . selectable selectConditionBreak casesControl else elseBody "end"
  259              | "select" . selectable "line comment" selectConditionBreak casesControl "end"
  260              | "select" . selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  261 selectable: . variable
  262           | . functionCall

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 82
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 83
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    selectable             aller à l'état 84


état 14

   68 functionDeclaration: "function" . "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | "function" . "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | "function" . "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | "function" . "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"

    "["           décalage et aller à l'état 85
    "identifier"  décalage et aller à l'état 86


état 15

   85 classDeclaration: "class" . "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | "class" . "identifier" functionDeclarationBreak slotsDeclaration "endclass"

    "identifier"  décalage et aller à l'état 87


état 16

  283 forControl: "for" . "identifier" "=" forIterator forConditionBreak forBody "end"
  284           | "for" . "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"

    "("           décalage et aller à l'état 88
    "identifier"  décalage et aller à l'état 89


état 17

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  101 condition: . functionCall
  102          | . variable
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"
  297 whileControl: "while" . condition whileConditionBreak whileBody "end"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 79
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    condition              aller à l'état 90
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 81
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 18

   29 expression: "break" .

    $défaut  réduction par utilisation de la règle 29 (expression)


état 19

  317 tryControl: "try" . "end of line" expressions "catch" "end of line" expressions "end"
  318           | "try" . "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  319           | "try" . "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  320           | "try" . "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"

    "end of line"   décalage et aller à l'état 91
    "line comment"  décalage et aller à l'état 92


état 20

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"
  321 returnControl: "return" .  ["end of file", "end of line", ",", ";", ")", "else", "elseif", "end", "case", "endfunction", "catch", "line comment"]
  322              | "return" . variable

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    $défaut  réduction par utilisation de la règle 321 (returnControl)

    functionCall           aller à l'état 93
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 94
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 21

  169 variable: "string" .

    $défaut  réduction par utilisation de la règle 169 (variable)


état 22

   34 implicitFunctionCall: "identifier" . implicitCallable
   35 implicitCallable: . "identifier"
   36                 | . "integer"
   37                 | . "number"
   38                 | . "float"
   39                 | . "string"
   40                 | . "$"
   41                 | . "%t or %T"
   42                 | . "%f or %F"
   43                 | . implicitCallable "." "identifier"
   44                 | . implicitCallable "." functionCall
   45                 | . simpleFunctionCall
   46                 | . implicitCallable rightOperand
   47                 | . "path"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   55                   | "identifier" . "(" functionArgs ")"
  165 variable: "identifier" .  ["end of file", "end of line", "'", ",", ":", ";", ".", ".'", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "else", "elseif", "end", "case", "endfunction", "catch", "line comment"]
  227 assignable: "identifier" .  ["="]

    "%t or %T"    décalage et aller à l'état 95
    "%f or %F"    décalage et aller à l'état 96
    "$"           décalage et aller à l'état 97
    "("           décalage et aller à l'état 98
    "string"      décalage et aller à l'état 99
    "identifier"  décalage et aller à l'état 100
    "integer"     décalage et aller à l'état 101
    "float"       décalage et aller à l'état 102
    "number"      décalage et aller à l'état 103
    "path"        décalage et aller à l'état 104

    "="       réduction par utilisation de la règle 227 (assignable)
    $défaut  réduction par utilisation de la règle 165 (variable)

    implicitCallable    aller à l'état 105
    simpleFunctionCall  aller à l'état 106


état 23

  166 variable: "integer" .

    $défaut  réduction par utilisation de la règle 166 (variable)


état 24

  168 variable: "float" .

    $défaut  réduction par utilisation de la règle 168 (variable)


état 25

  167 variable: "number" .

    $défaut  réduction par utilisation de la règle 167 (variable)


état 26

   31 expression: "line comment" .

    $défaut  réduction par utilisation de la règle 31 (expression)


état 27

    0 $accept: program . "end of file"

    "end of file"  décalage et aller à l'état 107


état 28

    1 program: expressions .

    $défaut  réduction par utilisation de la règle 1 (program)


état 29

    3 expressions: recursiveExpression .  ["end of file", "else", "elseif", "end", "case", "endfunction", "catch"]
    4            | recursiveExpression . expression
    5            | recursiveExpression . expression "line comment"
    8 recursiveExpression: recursiveExpression . expression expressionLineBreak
    9                    | recursiveExpression . expression "line comment" expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"
  215 variableDeclaration: . assignable "=" variable
  216                    | . assignable "=" functionCall
  217                    | . functionCall "=" variable
  218                    | . functionCall "=" functionCall
  219                    | . assignable "=" ":"
  220                    | . functionCall "=" ":"
  221                    | . assignable "=" returnControl
  222                    | . functionCall "=" returnControl
  223 assignable: . variable "." "identifier"
  224           | . variable "." functionCall
  225           | . functionCall "." variable
  226           | . functionCall "." functionCall
  227           | . "identifier"
  228           | . multipleResults
  229 multipleResults: . "[" matrixOrCellColumns "]"
  230 ifControl: . "if" condition then thenBody "end"
  231          | . "if" condition then thenBody else elseBody "end"
  232          | . "if" condition then thenBody elseIfControl "end"
  257 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  258              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  259              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  260              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  283 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  284           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  297 whileControl: . "while" condition whileConditionBreak whileBody "end"
  317 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  318           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  319           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  320           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  321 returnControl: . "return"
  322              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "end of file"  réduction par utilisation de la règle 3 (expressions)
    "else"         réduction par utilisation de la règle 3 (expressions)
    "elseif"       réduction par utilisation de la règle 3 (expressions)
    "end"          réduction par utilisation de la règle 3 (expressions)
    "case"         réduction par utilisation de la règle 3 (expressions)
    "endfunction"  réduction par utilisation de la règle 3 (expressions)
    "catch"        réduction par utilisation de la règle 3 (expressions)

    expression             aller à l'état 108
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 30

    6 expressions: expression .  ["end of file", "else", "elseif", "end", "case", "endfunction", "catch"]
    7            | expression . "line comment"
   10 recursiveExpression: expression . "line comment" expressionLineBreak
   11                    | expression . expressionLineBreak
   12 expressionLineBreak: . ";"
   13                    | . ","
   14                    | . "end of line"
   15                    | . expressionLineBreak ";"
   16                    | . expressionLineBreak ","
   17                    | . expressionLineBreak "end of line"

    "end of line"   décalage et aller à l'état 109
    ","             décalage et aller à l'état 110
    ";"             décalage et aller à l'état 111
    "line comment"  décalage et aller à l'état 112

    $défaut  réduction par utilisation de la règle 6 (expressions)

    expressionLineBreak  aller à l'état 113


état 31

   28 expression: implicitFunctionCall .  ["end of file", "end of line", ",", ";", "else", "elseif", "end", "case", "endfunction", "catch", "line comment"]
   33 implicitFunctionCall: implicitFunctionCall . implicitCallable
   35 implicitCallable: . "identifier"
   36                 | . "integer"
   37                 | . "number"
   38                 | . "float"
   39                 | . "string"
   40                 | . "$"
   41                 | . "%t or %T"
   42                 | . "%f or %F"
   43                 | . implicitCallable "." "identifier"
   44                 | . implicitCallable "." functionCall
   45                 | . simpleFunctionCall
   46                 | . implicitCallable rightOperand
   47                 | . "path"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"

    "%t or %T"    décalage et aller à l'état 95
    "%f or %F"    décalage et aller à l'état 96
    "$"           décalage et aller à l'état 97
    "string"      décalage et aller à l'état 99
    "identifier"  décalage et aller à l'état 100
    "integer"     décalage et aller à l'état 101
    "float"       décalage et aller à l'état 102
    "number"      décalage et aller à l'état 103
    "path"        décalage et aller à l'état 104

    $défaut  réduction par utilisation de la règle 28 (expression)

    implicitCallable    aller à l'état 114
    simpleFunctionCall  aller à l'état 106


état 32

   20 expression: functionCall .  ["end of file", "end of line", ",", ";", "else", "elseif", "end", "case", "endfunction", "catch", "line comment"]
  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  158 variable: functionCall . "." variable
  159         | functionCall . "." functionCall
  161         | functionCall . listableEnd
  217 variableDeclaration: functionCall . "=" variable
  218                    | functionCall . "=" functionCall
  220                    | functionCall . "=" ":"
  222                    | functionCall . "=" returnControl
  225 assignable: functionCall . "." variable
  226           | functionCall . "." functionCall
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"         décalage et aller à l'état 115
    ":"         décalage et aller à l'état 116
    "."         décalage et aller à l'état 117
    ".'"        décalage et aller à l'état 118
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 131
    ".^"        décalage et aller à l'état 132
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140
    "="         décalage et aller à l'état 141

    $défaut  réduction par utilisation de la règle 20 (expression)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145


état 33

   49 functionCall: specificFunctionCall .

    $défaut  réduction par utilisation de la règle 49 (functionCall)


état 34

   48 functionCall: simpleFunctionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "'", "~ or @", "$", ",", ":", ";", ")", "[", "]", "{", "}", ".", ".'", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
   56 recursiveFunctionCall: simpleFunctionCall . "(" functionArgs ")"

    "("  décalage et aller à l'état 146

    $défaut  réduction par utilisation de la règle 48 (functionCall)

Conflit entre la règle 48 et le jeton "(" résolu par décalage (FUNCTIONCALL < "(").


état 35

   50 functionCall: recursiveFunctionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "'", "~ or @", "$", ",", ":", ";", ")", "[", "]", "{", "}", ".", ".'", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
   57 recursiveFunctionCall: recursiveFunctionCall . "(" functionArgs ")"

    "("  décalage et aller à l'état 147

    $défaut  réduction par utilisation de la règle 50 (functionCall)

Conflit entre la règle 50 et le jeton "(" résolu par décalage (FUNCTIONCALL < "(").


état 36

   18 expression: functionDeclaration .

    $défaut  réduction par utilisation de la règle 18 (expression)


état 37

   19 expression: classDeclaration .

    $défaut  réduction par utilisation de la règle 19 (expression)


état 38

  175 variable: comparison .

    $défaut  réduction par utilisation de la règle 175 (variable)


état 39

  164 variable: operation .

    $défaut  réduction par utilisation de la règle 164 (variable)


état 40

   27 expression: variable .  ["end of file", "end of line", ",", ";", "else", "elseif", "end", "case", "endfunction", "catch", "line comment"]
  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  157         | variable . "." functionCall
  160         | variable . listableEnd
  223 assignable: variable . "." "identifier"
  224           | variable . "." functionCall
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"         décalage et aller à l'état 148
    ":"         décalage et aller à l'état 116
    "."         décalage et aller à l'état 149
    ".'"        décalage et aller à l'état 150
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 151
    ".^"        décalage et aller à l'état 152
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140

    $défaut  réduction par utilisation de la règle 27 (expression)

    rightOperand   aller à l'état 153
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 154
    comparators    aller à l'état 155


état 41

  163 variable: cell .

    $défaut  réduction par utilisation de la règle 163 (variable)


état 42

  162 variable: matrix .

    $défaut  réduction par utilisation de la règle 162 (variable)


état 43

   21 expression: variableDeclaration .

    $défaut  réduction par utilisation de la règle 21 (expression)


état 44

  215 variableDeclaration: assignable . "=" variable
  216                    | assignable . "=" functionCall
  219                    | assignable . "=" ":"
  221                    | assignable . "=" returnControl

    "="  décalage et aller à l'état 156


état 45

  228 assignable: multipleResults .

    $défaut  réduction par utilisation de la règle 228 (assignable)


état 46

   22 expression: ifControl .

    $défaut  réduction par utilisation de la règle 22 (expression)


état 47

   23 expression: selectControl .

    $défaut  réduction par utilisation de la règle 23 (expression)


état 48

   24 expression: forControl .

    $défaut  réduction par utilisation de la règle 24 (expression)


état 49

   25 expression: whileControl .

    $défaut  réduction par utilisation de la règle 25 (expression)


état 50

   26 expression: tryControl .

    $défaut  réduction par utilisation de la règle 26 (expression)


état 51

   30 expression: returnControl .

    $défaut  réduction par utilisation de la règle 30 (expression)


état 52

    2 program: "end of line" expressions .

    $défaut  réduction par utilisation de la règle 2 (program)


état 53

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   53                     | "%t or %T" "(" . functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   58 functionArgs: . variable
   59             | . functionCall
   60             | . ":"
   61             | . variableDeclaration
   62             | .  [",", ")"]
   63             | . functionArgs "," variable
   64             | . functionArgs "," functionCall
   65             | . functionArgs "," ":"
   66             | . functionArgs "," variableDeclaration
   67             | . functionArgs ","
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"
  215 variableDeclaration: . assignable "=" variable
  216                    | . assignable "=" functionCall
  217                    | . functionCall "=" variable
  218                    | . functionCall "=" functionCall
  219                    | . assignable "=" ":"
  220                    | . functionCall "=" ":"
  221                    | . assignable "=" returnControl
  222                    | . functionCall "=" returnControl
  223 assignable: . variable "." "identifier"
  224           | . variable "." functionCall
  225           | . functionCall "." variable
  226           | . functionCall "." functionCall
  227           | . "identifier"
  228           | . multipleResults
  229 multipleResults: . "[" matrixOrCellColumns "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    ":"           décalage et aller à l'état 157
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 8
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 158
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    $défaut  réduction par utilisation de la règle 62 (functionArgs)

    functionCall           aller à l'état 159
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionArgs           aller à l'état 160
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 161
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 162
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45


état 54

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   54                     | "%f or %F" "(" . functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   58 functionArgs: . variable
   59             | . functionCall
   60             | . ":"
   61             | . variableDeclaration
   62             | .  [",", ")"]
   63             | . functionArgs "," variable
   64             | . functionArgs "," functionCall
   65             | . functionArgs "," ":"
   66             | . functionArgs "," variableDeclaration
   67             | . functionArgs ","
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"
  215 variableDeclaration: . assignable "=" variable
  216                    | . assignable "=" functionCall
  217                    | . functionCall "=" variable
  218                    | . functionCall "=" functionCall
  219                    | . assignable "=" ":"
  220                    | . functionCall "=" ":"
  221                    | . assignable "=" returnControl
  222                    | . functionCall "=" returnControl
  223 assignable: . variable "." "identifier"
  224           | . variable "." functionCall
  225           | . functionCall "." variable
  226           | . functionCall "." functionCall
  227           | . "identifier"
  228           | . multipleResults
  229 multipleResults: . "[" matrixOrCellColumns "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    ":"           décalage et aller à l'état 157
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 8
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 158
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    $défaut  réduction par utilisation de la règle 62 (functionArgs)

    functionCall           aller à l'état 159
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionArgs           aller à l'état 163
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 161
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 162
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45


état 55

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  189       | "[" . matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  190       | "[" . lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  191       | "[" . matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  192       | "[" . lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  193       | "[" . matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  194       | "[" . lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"
  195       | "[" . "]"
  196 matrixOrCellLines: . matrixOrCellLines matrixOrCellLine
  197                  | . matrixOrCellLine
  201 matrixOrCellLine: . matrixOrCellColumns matrixOrCellLineBreak
  202                 | . matrixOrCellColumns "line comment" "end of line"
  203                 | . matrixOrCellColumns ";" "line comment" "end of line"
  204                 | . matrixOrCellColumns matrixOrCellColumnsBreak matrixOrCellLineBreak
  205                 | . matrixOrCellColumns matrixOrCellColumnsBreak "line comment" "end of line"
  206                 | . matrixOrCellColumns matrixOrCellColumnsBreak ";" "line comment" "end of line"
  207 matrixOrCellColumns: . matrixOrCellColumns matrixOrCellColumnsBreak variable
  208                    | . matrixOrCellColumns matrixOrCellColumnsBreak functionCall
  209                    | . matrixOrCellColumns variable
  210                    | . matrixOrCellColumns functionCall
  211                    | . variable
  212                    | . functionCall
  333 lineEnd: . "end of line"
  334        | . "line comment" "end of line"

    "end of line"   décalage et aller à l'état 62
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 55
    "]"             décalage et aller à l'état 63
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 56
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 64

    functionCall           aller à l'état 65
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 66
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    matrixOrCellLines      aller à l'état 67
    matrixOrCellLine       aller à l'état 68
    matrixOrCellColumns    aller à l'état 164
    lineEnd                aller à l'état 70


état 56

   55 simpleFunctionCall: "identifier" . "(" functionArgs ")"
  165 variable: "identifier" .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "'", "~ or @", "$", ",", ":", ";", ")", "[", "]", "{", "}", ".", ".'", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]

    "("  décalage et aller à l'état 98

    $défaut  réduction par utilisation de la règle 165 (variable)

Conflit entre la règle 165 et le jeton "(" résolu par décalage (LISTABLE < "(").


état 57

   52 functionCall: "~ or @" functionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "'", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", ".", ".'", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  158 variable: functionCall . "." variable
  159         | functionCall . "." functionCall
  161         | functionCall . listableEnd
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    $défaut  réduction par utilisation de la règle 52 (functionCall)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145

Conflit entre la règle 52 et le jeton "'" résolu par réduction ("'" < NOT).
Conflit entre la règle 52 et le jeton ":" résolu par réduction (":" < NOT).
Conflit entre la règle 52 et le jeton "." résolu par réduction ("." < NOT).
Conflit entre la règle 52 et le jeton ".'" résolu par réduction (".'" < NOT).
Conflit entre la règle 52 et le jeton "+" résolu par réduction ("+" < NOT).
Conflit entre la règle 52 et le jeton "-" résolu par réduction ("-" < NOT).
Conflit entre la règle 52 et le jeton "*" résolu par réduction ("*" < NOT).
Conflit entre la règle 52 et le jeton ".*" résolu par réduction (".*" < NOT).
Conflit entre la règle 52 et le jeton ".*." résolu par réduction (".*." < NOT).
Conflit entre la règle 52 et le jeton "/" résolu par réduction ("/" < NOT).
Conflit entre la règle 52 et le jeton "./" résolu par réduction ("./" < NOT).
Conflit entre la règle 52 et le jeton "/." résolu par réduction ("/." < NOT).
Conflit entre la règle 52 et le jeton "./." résolu par réduction ("./." < NOT).
Conflit entre la règle 52 et le jeton "\\" résolu par réduction ("\\" < NOT).
Conflit entre la règle 52 et le jeton ".\\" résolu par réduction (".\\" < NOT).
Conflit entre la règle 52 et le jeton ".\\." résolu par réduction (".\\." < NOT).
Conflit entre la règle 52 et le jeton "** or ^" résolu par réduction ("** or ^" < NOT).
Conflit entre la règle 52 et le jeton ".^" résolu par réduction (".^" < NOT).
Conflit entre la règle 52 et le jeton "==" résolu par réduction ("==" < NOT).
Conflit entre la règle 52 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < NOT).
Conflit entre la règle 52 et le jeton "<" résolu par réduction ("<" < NOT).
Conflit entre la règle 52 et le jeton "<=" résolu par réduction ("<=" < NOT).
Conflit entre la règle 52 et le jeton ">" résolu par réduction (">" < NOT).
Conflit entre la règle 52 et le jeton ">=" résolu par réduction (">=" < NOT).
Conflit entre la règle 52 et le jeton "&" résolu par réduction ("&" < NOT).
Conflit entre la règle 52 et le jeton "|" résolu par réduction ("|" < NOT).


état 58

  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  155 variable: "~ or @" variable .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "'", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", ".", ".'", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  156         | variable . "." "identifier"
  157         | variable . "." functionCall
  160         | variable . listableEnd
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    $défaut  réduction par utilisation de la règle 155 (variable)

    rightOperand   aller à l'état 153
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 154
    comparators    aller à l'état 155

Conflit entre la règle 155 et le jeton "'" résolu par réduction ("'" < NOT).
Conflit entre la règle 155 et le jeton ":" résolu par réduction (":" < NOT).
Conflit entre la règle 155 et le jeton "." résolu par réduction ("." < NOT).
Conflit entre la règle 155 et le jeton ".'" résolu par réduction (".'" < NOT).
Conflit entre la règle 155 et le jeton "+" résolu par réduction ("+" < NOT).
Conflit entre la règle 155 et le jeton "-" résolu par réduction ("-" < NOT).
Conflit entre la règle 155 et le jeton "*" résolu par réduction ("*" < NOT).
Conflit entre la règle 155 et le jeton ".*" résolu par réduction (".*" < NOT).
Conflit entre la règle 155 et le jeton ".*." résolu par réduction (".*." < NOT).
Conflit entre la règle 155 et le jeton "/" résolu par réduction ("/" < NOT).
Conflit entre la règle 155 et le jeton "./" résolu par réduction ("./" < NOT).
Conflit entre la règle 155 et le jeton "/." résolu par réduction ("/." < NOT).
Conflit entre la règle 155 et le jeton "./." résolu par réduction ("./." < NOT).
Conflit entre la règle 155 et le jeton "\\" résolu par réduction ("\\" < NOT).
Conflit entre la règle 155 et le jeton ".\\" résolu par réduction (".\\" < NOT).
Conflit entre la règle 155 et le jeton ".\\." résolu par réduction (".\\." < NOT).
Conflit entre la règle 155 et le jeton "** or ^" résolu par réduction ("** or ^" < NOT).
Conflit entre la règle 155 et le jeton ".^" résolu par réduction (".^" < NOT).
Conflit entre la règle 155 et le jeton "==" résolu par réduction ("==" < NOT).
Conflit entre la règle 155 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < NOT).
Conflit entre la règle 155 et le jeton "<" résolu par réduction ("<" < NOT).
Conflit entre la règle 155 et le jeton "<=" résolu par réduction ("<=" < NOT).
Conflit entre la règle 155 et le jeton ">" résolu par réduction (">" < NOT).
Conflit entre la règle 155 et le jeton ">=" résolu par réduction (">=" < NOT).
Conflit entre la règle 155 et le jeton "&" résolu par réduction ("&" < NOT).
Conflit entre la règle 155 et le jeton "|" résolu par réduction ("|" < NOT).


état 59

   51 functionCall: "(" functionCall . ")"
  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  158 variable: functionCall . "." variable
  159         | functionCall . "." functionCall
  161         | functionCall . listableEnd
  179 variableFields: functionCall . "," functionCall
  180               | functionCall . "," variable
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"         décalage et aller à l'état 115
    ","         décalage et aller à l'état 167
    ":"         décalage et aller à l'état 116
    ")"         décalage et aller à l'état 168
    "."         décalage et aller à l'état 165
    ".'"        décalage et aller à l'état 118
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 131
    ".^"        décalage et aller à l'état 132
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145


état 60

  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  157         | variable . "." functionCall
  160         | variable . listableEnd
  173         | "(" variable . ")"
  178 variableFields: variable . "," variable
  181               | variable . "," functionCall
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"         décalage et aller à l'état 148
    ","         décalage et aller à l'état 169
    ":"         décalage et aller à l'état 116
    ")"         décalage et aller à l'état 170
    "."         décalage et aller à l'état 166
    ".'"        décalage et aller à l'état 150
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 151
    ".^"        décalage et aller à l'état 152
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140

    rightOperand   aller à l'état 153
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 154
    comparators    aller à l'état 155


état 61

  174 variable: "(" variableFields . ")"
  176 variableFields: variableFields . "," variable
  177               | variableFields . "," functionCall

    ","  décalage et aller à l'état 171
    ")"  décalage et aller à l'état 172


état 62

  333 lineEnd: "end of line" .

    $défaut  réduction par utilisation de la règle 333 (lineEnd)


état 63

  195 matrix: "[" "]" .

    $défaut  réduction par utilisation de la règle 195 (matrix)


état 64

  334 lineEnd: "line comment" . "end of line"

    "end of line"  décalage et aller à l'état 173


état 65

  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  158 variable: functionCall . "." variable
  159         | functionCall . "." functionCall
  161         | functionCall . listableEnd
  212 matrixOrCellColumns: functionCall .  ["end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "(", "[", "]", "{", "}", "string", "identifier", "integer", "float", "number", "line comment"]
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"         décalage et aller à l'état 115
    ":"         décalage et aller à l'état 116
    "."         décalage et aller à l'état 165
    ".'"        décalage et aller à l'état 118
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 131
    ".^"        décalage et aller à l'état 132
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140

    $défaut  réduction par utilisation de la règle 212 (matrixOrCellColumns)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145

Conflit entre la règle 212 et le jeton "+" résolu par décalage (HIGHLEVEL < "+").
Conflit entre la règle 212 et le jeton "-" résolu par décalage (HIGHLEVEL < "-").


état 66

  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  157         | variable . "." functionCall
  160         | variable . listableEnd
  211 matrixOrCellColumns: variable .  ["end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "(", "[", "]", "{", "}", "string", "identifier", "integer", "float", "number", "line comment"]
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"         décalage et aller à l'état 148
    ":"         décalage et aller à l'état 116
    "."         décalage et aller à l'état 166
    ".'"        décalage et aller à l'état 150
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 151
    ".^"        décalage et aller à l'état 152
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140

    $défaut  réduction par utilisation de la règle 211 (matrixOrCellColumns)

    rightOperand   aller à l'état 153
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 154
    comparators    aller à l'état 155

Conflit entre la règle 211 et le jeton "+" résolu par décalage (HIGHLEVEL < "+").
Conflit entre la règle 211 et le jeton "-" résolu par décalage (HIGHLEVEL < "-").


état 67

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  189       | "[" matrixOrCellLines . "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  191       | "[" matrixOrCellLines . matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"
  196 matrixOrCellLines: matrixOrCellLines . matrixOrCellLine
  201 matrixOrCellLine: . matrixOrCellColumns matrixOrCellLineBreak
  202                 | . matrixOrCellColumns "line comment" "end of line"
  203                 | . matrixOrCellColumns ";" "line comment" "end of line"
  204                 | . matrixOrCellColumns matrixOrCellColumnsBreak matrixOrCellLineBreak
  205                 | . matrixOrCellColumns matrixOrCellColumnsBreak "line comment" "end of line"
  206                 | . matrixOrCellColumns matrixOrCellColumnsBreak ";" "line comment" "end of line"
  207 matrixOrCellColumns: . matrixOrCellColumns matrixOrCellColumnsBreak variable
  208                    | . matrixOrCellColumns matrixOrCellColumnsBreak functionCall
  209                    | . matrixOrCellColumns variable
  210                    | . matrixOrCellColumns functionCall
  211                    | . variable
  212                    | . functionCall

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "]"           décalage et aller à l'état 174
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 65
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 66
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    matrixOrCellLine       aller à l'état 175
    matrixOrCellColumns    aller à l'état 176


état 68

  197 matrixOrCellLines: matrixOrCellLine .

    $défaut  réduction par utilisation de la règle 197 (matrixOrCellLines)


état 69

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  193       | "[" matrixOrCellColumns . "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"
  198 matrixOrCellLineBreak: . ";"
  199                      | . "end of line"
  200                      | . ";" "end of line"
  201 matrixOrCellLine: matrixOrCellColumns . matrixOrCellLineBreak
  202                 | matrixOrCellColumns . "line comment" "end of line"
  203                 | matrixOrCellColumns . ";" "line comment" "end of line"
  204                 | matrixOrCellColumns . matrixOrCellColumnsBreak matrixOrCellLineBreak
  205                 | matrixOrCellColumns . matrixOrCellColumnsBreak "line comment" "end of line"
  206                 | matrixOrCellColumns . matrixOrCellColumnsBreak ";" "line comment" "end of line"
  207 matrixOrCellColumns: matrixOrCellColumns . matrixOrCellColumnsBreak variable
  208                    | matrixOrCellColumns . matrixOrCellColumnsBreak functionCall
  209                    | matrixOrCellColumns . variable
  210                    | matrixOrCellColumns . functionCall
  213 matrixOrCellColumnsBreak: . matrixOrCellColumnsBreak ","
  214                         | . ","
  229 multipleResults: "[" matrixOrCellColumns . "]"

    "end of line"   décalage et aller à l'état 177
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    ","             décalage et aller à l'état 178
    ";"             décalage et aller à l'état 179
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 55
    "]"             décalage et aller à l'état 180
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 56
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 181

    functionCall              aller à l'état 182
    specificFunctionCall      aller à l'état 33
    simpleFunctionCall        aller à l'état 34
    recursiveFunctionCall     aller à l'état 35
    comparison                aller à l'état 38
    operation                 aller à l'état 39
    variable                  aller à l'état 183
    cell                      aller à l'état 41
    matrix                    aller à l'état 42
    matrixOrCellLineBreak     aller à l'état 184
    matrixOrCellColumnsBreak  aller à l'état 185


état 70

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  190       | "[" lineEnd . matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  192       | "[" lineEnd . matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  194       | "[" lineEnd . matrixOrCellColumns "]"
  195       | . "[" "]"
  196 matrixOrCellLines: . matrixOrCellLines matrixOrCellLine
  197                  | . matrixOrCellLine
  201 matrixOrCellLine: . matrixOrCellColumns matrixOrCellLineBreak
  202                 | . matrixOrCellColumns "line comment" "end of line"
  203                 | . matrixOrCellColumns ";" "line comment" "end of line"
  204                 | . matrixOrCellColumns matrixOrCellColumnsBreak matrixOrCellLineBreak
  205                 | . matrixOrCellColumns matrixOrCellColumnsBreak "line comment" "end of line"
  206                 | . matrixOrCellColumns matrixOrCellColumnsBreak ";" "line comment" "end of line"
  207 matrixOrCellColumns: . matrixOrCellColumns matrixOrCellColumnsBreak variable
  208                    | . matrixOrCellColumns matrixOrCellColumnsBreak functionCall
  209                    | . matrixOrCellColumns variable
  210                    | . matrixOrCellColumns functionCall
  211                    | . variable
  212                    | . functionCall

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 65
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 66
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    matrixOrCellLines      aller à l'état 186
    matrixOrCellLine       aller à l'état 68
    matrixOrCellColumns    aller à l'état 187


état 71

  188 cell: "{" "}" .

    $défaut  réduction par utilisation de la règle 188 (cell)


état 72

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  182     | "{" matrixOrCellLines . "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  184     | "{" matrixOrCellLines . matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"
  196 matrixOrCellLines: matrixOrCellLines . matrixOrCellLine
  201 matrixOrCellLine: . matrixOrCellColumns matrixOrCellLineBreak
  202                 | . matrixOrCellColumns "line comment" "end of line"
  203                 | . matrixOrCellColumns ";" "line comment" "end of line"
  204                 | . matrixOrCellColumns matrixOrCellColumnsBreak matrixOrCellLineBreak
  205                 | . matrixOrCellColumns matrixOrCellColumnsBreak "line comment" "end of line"
  206                 | . matrixOrCellColumns matrixOrCellColumnsBreak ";" "line comment" "end of line"
  207 matrixOrCellColumns: . matrixOrCellColumns matrixOrCellColumnsBreak variable
  208                    | . matrixOrCellColumns matrixOrCellColumnsBreak functionCall
  209                    | . matrixOrCellColumns variable
  210                    | . matrixOrCellColumns functionCall
  211                    | . variable
  212                    | . functionCall

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "}"           décalage et aller à l'état 188
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 65
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 66
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    matrixOrCellLine       aller à l'état 175
    matrixOrCellColumns    aller à l'état 189


état 73

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  186     | "{" matrixOrCellColumns . "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"
  198 matrixOrCellLineBreak: . ";"
  199                      | . "end of line"
  200                      | . ";" "end of line"
  201 matrixOrCellLine: matrixOrCellColumns . matrixOrCellLineBreak
  202                 | matrixOrCellColumns . "line comment" "end of line"
  203                 | matrixOrCellColumns . ";" "line comment" "end of line"
  204                 | matrixOrCellColumns . matrixOrCellColumnsBreak matrixOrCellLineBreak
  205                 | matrixOrCellColumns . matrixOrCellColumnsBreak "line comment" "end of line"
  206                 | matrixOrCellColumns . matrixOrCellColumnsBreak ";" "line comment" "end of line"
  207 matrixOrCellColumns: matrixOrCellColumns . matrixOrCellColumnsBreak variable
  208                    | matrixOrCellColumns . matrixOrCellColumnsBreak functionCall
  209                    | matrixOrCellColumns . variable
  210                    | matrixOrCellColumns . functionCall
  213 matrixOrCellColumnsBreak: . matrixOrCellColumnsBreak ","
  214                         | . ","

    "end of line"   décalage et aller à l'état 177
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    ","             décalage et aller à l'état 178
    ";"             décalage et aller à l'état 179
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 55
    "{"             décalage et aller à l'état 9
    "}"             décalage et aller à l'état 190
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 56
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 181

    functionCall              aller à l'état 182
    specificFunctionCall      aller à l'état 33
    simpleFunctionCall        aller à l'état 34
    recursiveFunctionCall     aller à l'état 35
    comparison                aller à l'état 38
    operation                 aller à l'état 39
    variable                  aller à l'état 183
    cell                      aller à l'état 41
    matrix                    aller à l'état 42
    matrixOrCellLineBreak     aller à l'état 184
    matrixOrCellColumnsBreak  aller à l'état 185


état 74

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  183     | "{" lineEnd . matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  185     | "{" lineEnd . matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  187     | "{" lineEnd . matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"
  196 matrixOrCellLines: . matrixOrCellLines matrixOrCellLine
  197                  | . matrixOrCellLine
  201 matrixOrCellLine: . matrixOrCellColumns matrixOrCellLineBreak
  202                 | . matrixOrCellColumns "line comment" "end of line"
  203                 | . matrixOrCellColumns ";" "line comment" "end of line"
  204                 | . matrixOrCellColumns matrixOrCellColumnsBreak matrixOrCellLineBreak
  205                 | . matrixOrCellColumns matrixOrCellColumnsBreak "line comment" "end of line"
  206                 | . matrixOrCellColumns matrixOrCellColumnsBreak ";" "line comment" "end of line"
  207 matrixOrCellColumns: . matrixOrCellColumns matrixOrCellColumnsBreak variable
  208                    | . matrixOrCellColumns matrixOrCellColumnsBreak functionCall
  209                    | . matrixOrCellColumns variable
  210                    | . matrixOrCellColumns functionCall
  211                    | . variable
  212                    | . functionCall

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 65
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 66
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    matrixOrCellLines      aller à l'état 191
    matrixOrCellLine       aller à l'état 68
    matrixOrCellColumns    aller à l'état 192


état 75

  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  113          | "+" functionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  158 variable: functionCall . "." variable
  159         | functionCall . "." functionCall
  161         | functionCall . listableEnd
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"        décalage et aller à l'état 115
    "."        décalage et aller à l'état 165
    ".'"       décalage et aller à l'état 118
    "*"        décalage et aller à l'état 121
    ".*"       décalage et aller à l'état 122
    ".*."      décalage et aller à l'état 123
    "/"        décalage et aller à l'état 124
    "./"       décalage et aller à l'état 125
    "/."       décalage et aller à l'état 126
    "./."      décalage et aller à l'état 127
    "\\"       décalage et aller à l'état 128
    ".\\"      décalage et aller à l'état 129
    ".\\."     décalage et aller à l'état 130
    "** or ^"  décalage et aller à l'état 131
    ".^"       décalage et aller à l'état 132

    $défaut  réduction par utilisation de la règle 113 (operation)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145

Conflit entre la règle 113 et le jeton "'" résolu par décalage (PLUS < "'").
Conflit entre la règle 113 et le jeton ":" résolu par réduction (":" < PLUS).
Conflit entre la règle 113 et le jeton "." résolu par décalage (PLUS < ".").
Conflit entre la règle 113 et le jeton ".'" résolu par décalage (PLUS < ".'").
Conflit entre la règle 113 et le jeton "+" résolu par réduction (%left "+").
Conflit entre la règle 113 et le jeton "-" résolu par réduction (%left "-").
Conflit entre la règle 113 et le jeton "*" résolu par décalage (PLUS < "*").
Conflit entre la règle 113 et le jeton ".*" résolu par décalage (PLUS < ".*").
Conflit entre la règle 113 et le jeton ".*." résolu par décalage (PLUS < ".*.").
Conflit entre la règle 113 et le jeton "/" résolu par décalage (PLUS < "/").
Conflit entre la règle 113 et le jeton "./" résolu par décalage (PLUS < "./").
Conflit entre la règle 113 et le jeton "/." résolu par décalage (PLUS < "/.").
Conflit entre la règle 113 et le jeton "./." résolu par décalage (PLUS < "./.").
Conflit entre la règle 113 et le jeton "\\" résolu par décalage (PLUS < "\\").
Conflit entre la règle 113 et le jeton ".\\" résolu par décalage (PLUS < ".\\").
Conflit entre la règle 113 et le jeton ".\\." résolu par décalage (PLUS < ".\\.").
Conflit entre la règle 113 et le jeton "** or ^" résolu par décalage (PLUS < "** or ^").
Conflit entre la règle 113 et le jeton ".^" résolu par décalage (PLUS < ".^").
Conflit entre la règle 113 et le jeton "==" résolu par réduction ("==" < PLUS).
Conflit entre la règle 113 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < PLUS).
Conflit entre la règle 113 et le jeton "<" résolu par réduction ("<" < PLUS).
Conflit entre la règle 113 et le jeton "<=" résolu par réduction ("<=" < PLUS).
Conflit entre la règle 113 et le jeton ">" résolu par réduction (">" < PLUS).
Conflit entre la règle 113 et le jeton ">=" résolu par réduction (">=" < PLUS).
Conflit entre la règle 113 et le jeton "&" résolu par réduction ("&" < PLUS).
Conflit entre la règle 113 et le jeton "|" résolu par réduction ("|" < PLUS).


état 76

  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  112          | "+" variable .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  157         | variable . "." functionCall
  160         | variable . listableEnd
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"        décalage et aller à l'état 148
    "."        décalage et aller à l'état 166
    ".'"       décalage et aller à l'état 150
    "*"        décalage et aller à l'état 121
    ".*"       décalage et aller à l'état 122
    ".*."      décalage et aller à l'état 123
    "/"        décalage et aller à l'état 124
    "./"       décalage et aller à l'état 125
    "/."       décalage et aller à l'état 126
    "./."      décalage et aller à l'état 127
    "\\"       décalage et aller à l'état 128
    ".\\"      décalage et aller à l'état 129
    ".\\."     décalage et aller à l'état 130
    "** or ^"  décalage et aller à l'état 151
    ".^"       décalage et aller à l'état 152

    $défaut  réduction par utilisation de la règle 112 (operation)

    rightOperand   aller à l'état 153
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 154
    comparators    aller à l'état 155

Conflit entre la règle 112 et le jeton "'" résolu par décalage (PLUS < "'").
Conflit entre la règle 112 et le jeton ":" résolu par réduction (":" < PLUS).
Conflit entre la règle 112 et le jeton "." résolu par décalage (PLUS < ".").
Conflit entre la règle 112 et le jeton ".'" résolu par décalage (PLUS < ".'").
Conflit entre la règle 112 et le jeton "+" résolu par réduction (%left "+").
Conflit entre la règle 112 et le jeton "-" résolu par réduction (%left "-").
Conflit entre la règle 112 et le jeton "*" résolu par décalage (PLUS < "*").
Conflit entre la règle 112 et le jeton ".*" résolu par décalage (PLUS < ".*").
Conflit entre la règle 112 et le jeton ".*." résolu par décalage (PLUS < ".*.").
Conflit entre la règle 112 et le jeton "/" résolu par décalage (PLUS < "/").
Conflit entre la règle 112 et le jeton "./" résolu par décalage (PLUS < "./").
Conflit entre la règle 112 et le jeton "/." résolu par décalage (PLUS < "/.").
Conflit entre la règle 112 et le jeton "./." résolu par décalage (PLUS < "./.").
Conflit entre la règle 112 et le jeton "\\" résolu par décalage (PLUS < "\\").
Conflit entre la règle 112 et le jeton ".\\" résolu par décalage (PLUS < ".\\").
Conflit entre la règle 112 et le jeton ".\\." résolu par décalage (PLUS < ".\\.").
Conflit entre la règle 112 et le jeton "** or ^" résolu par décalage (PLUS < "** or ^").
Conflit entre la règle 112 et le jeton ".^" résolu par décalage (PLUS < ".^").
Conflit entre la règle 112 et le jeton "==" résolu par réduction ("==" < PLUS).
Conflit entre la règle 112 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < PLUS).
Conflit entre la règle 112 et le jeton "<" résolu par réduction ("<" < PLUS).
Conflit entre la règle 112 et le jeton "<=" résolu par réduction ("<=" < PLUS).
Conflit entre la règle 112 et le jeton ">" résolu par réduction (">" < PLUS).
Conflit entre la règle 112 et le jeton ">=" résolu par réduction (">=" < PLUS).
Conflit entre la règle 112 et le jeton "&" résolu par réduction ("&" < PLUS).
Conflit entre la règle 112 et le jeton "|" résolu par réduction ("|" < PLUS).


état 77

  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  111          | "-" functionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  158 variable: functionCall . "." variable
  159         | functionCall . "." functionCall
  161         | functionCall . listableEnd
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"        décalage et aller à l'état 115
    "."        décalage et aller à l'état 165
    ".'"       décalage et aller à l'état 118
    "*"        décalage et aller à l'état 121
    ".*"       décalage et aller à l'état 122
    ".*."      décalage et aller à l'état 123
    "/"        décalage et aller à l'état 124
    "./"       décalage et aller à l'état 125
    "/."       décalage et aller à l'état 126
    "./."      décalage et aller à l'état 127
    "\\"       décalage et aller à l'état 128
    ".\\"      décalage et aller à l'état 129
    ".\\."     décalage et aller à l'état 130
    "** or ^"  décalage et aller à l'état 131
    ".^"       décalage et aller à l'état 132

    $défaut  réduction par utilisation de la règle 111 (operation)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145

Conflit entre la règle 111 et le jeton "'" résolu par décalage (MINUS < "'").
Conflit entre la règle 111 et le jeton ":" résolu par réduction (":" < MINUS).
Conflit entre la règle 111 et le jeton "." résolu par décalage (MINUS < ".").
Conflit entre la règle 111 et le jeton ".'" résolu par décalage (MINUS < ".'").
Conflit entre la règle 111 et le jeton "+" résolu par réduction (%left "+").
Conflit entre la règle 111 et le jeton "-" résolu par réduction (%left "-").
Conflit entre la règle 111 et le jeton "*" résolu par décalage (MINUS < "*").
Conflit entre la règle 111 et le jeton ".*" résolu par décalage (MINUS < ".*").
Conflit entre la règle 111 et le jeton ".*." résolu par décalage (MINUS < ".*.").
Conflit entre la règle 111 et le jeton "/" résolu par décalage (MINUS < "/").
Conflit entre la règle 111 et le jeton "./" résolu par décalage (MINUS < "./").
Conflit entre la règle 111 et le jeton "/." résolu par décalage (MINUS < "/.").
Conflit entre la règle 111 et le jeton "./." résolu par décalage (MINUS < "./.").
Conflit entre la règle 111 et le jeton "\\" résolu par décalage (MINUS < "\\").
Conflit entre la règle 111 et le jeton ".\\" résolu par décalage (MINUS < ".\\").
Conflit entre la règle 111 et le jeton ".\\." résolu par décalage (MINUS < ".\\.").
Conflit entre la règle 111 et le jeton "** or ^" résolu par décalage (MINUS < "** or ^").
Conflit entre la règle 111 et le jeton ".^" résolu par décalage (MINUS < ".^").
Conflit entre la règle 111 et le jeton "==" résolu par réduction ("==" < MINUS).
Conflit entre la règle 111 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < MINUS).
Conflit entre la règle 111 et le jeton "<" résolu par réduction ("<" < MINUS).
Conflit entre la règle 111 et le jeton "<=" résolu par réduction ("<=" < MINUS).
Conflit entre la règle 111 et le jeton ">" résolu par réduction (">" < MINUS).
Conflit entre la règle 111 et le jeton ">=" résolu par réduction (">=" < MINUS).
Conflit entre la règle 111 et le jeton "&" résolu par réduction ("&" < MINUS).
Conflit entre la règle 111 et le jeton "|" résolu par réduction ("|" < MINUS).


état 78

  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  110          | "-" variable .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  157         | variable . "." functionCall
  160         | variable . listableEnd
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"        décalage et aller à l'état 148
    "."        décalage et aller à l'état 166
    ".'"       décalage et aller à l'état 150
    "*"        décalage et aller à l'état 121
    ".*"       décalage et aller à l'état 122
    ".*."      décalage et aller à l'état 123
    "/"        décalage et aller à l'état 124
    "./"       décalage et aller à l'état 125
    "/."       décalage et aller à l'état 126
    "./."      décalage et aller à l'état 127
    "\\"       décalage et aller à l'état 128
    ".\\"      décalage et aller à l'état 129
    ".\\."     décalage et aller à l'état 130
    "** or ^"  décalage et aller à l'état 151
    ".^"       décalage et aller à l'état 152

    $défaut  réduction par utilisation de la règle 110 (operation)

    rightOperand   aller à l'état 153
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 154
    comparators    aller à l'état 155

Conflit entre la règle 110 et le jeton "'" résolu par décalage (MINUS < "'").
Conflit entre la règle 110 et le jeton ":" résolu par réduction (":" < MINUS).
Conflit entre la règle 110 et le jeton "." résolu par décalage (MINUS < ".").
Conflit entre la règle 110 et le jeton ".'" résolu par décalage (MINUS < ".'").
Conflit entre la règle 110 et le jeton "+" résolu par réduction (%left "+").
Conflit entre la règle 110 et le jeton "-" résolu par réduction (%left "-").
Conflit entre la règle 110 et le jeton "*" résolu par décalage (MINUS < "*").
Conflit entre la règle 110 et le jeton ".*" résolu par décalage (MINUS < ".*").
Conflit entre la règle 110 et le jeton ".*." résolu par décalage (MINUS < ".*.").
Conflit entre la règle 110 et le jeton "/" résolu par décalage (MINUS < "/").
Conflit entre la règle 110 et le jeton "./" résolu par décalage (MINUS < "./").
Conflit entre la règle 110 et le jeton "/." résolu par décalage (MINUS < "/.").
Conflit entre la règle 110 et le jeton "./." résolu par décalage (MINUS < "./.").
Conflit entre la règle 110 et le jeton "\\" résolu par décalage (MINUS < "\\").
Conflit entre la règle 110 et le jeton ".\\" résolu par décalage (MINUS < ".\\").
Conflit entre la règle 110 et le jeton ".\\." résolu par décalage (MINUS < ".\\.").
Conflit entre la règle 110 et le jeton "** or ^" résolu par décalage (MINUS < "** or ^").
Conflit entre la règle 110 et le jeton ".^" résolu par décalage (MINUS < ".^").
Conflit entre la règle 110 et le jeton "==" résolu par réduction ("==" < MINUS).
Conflit entre la règle 110 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < MINUS).
Conflit entre la règle 110 et le jeton "<" résolu par réduction ("<" < MINUS).
Conflit entre la règle 110 et le jeton "<=" résolu par réduction ("<=" < MINUS).
Conflit entre la règle 110 et le jeton ">" résolu par réduction (">" < MINUS).
Conflit entre la règle 110 et le jeton ">=" résolu par réduction (">=" < MINUS).
Conflit entre la règle 110 et le jeton "&" résolu par réduction ("&" < MINUS).
Conflit entre la règle 110 et le jeton "|" résolu par réduction ("|" < MINUS).


état 79

  101 condition: functionCall .  [error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "(", "[", "{", "if", "then", "else", "elseif", "end", "select", "function", "class", "for", "while", "do", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  158 variable: functionCall . "." variable
  159         | functionCall . "." functionCall
  161         | functionCall . listableEnd
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"         décalage et aller à l'état 115
    ":"         décalage et aller à l'état 116
    "."         décalage et aller à l'état 165
    ".'"        décalage et aller à l'état 118
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 131
    ".^"        décalage et aller à l'état 132
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140

    $défaut  réduction par utilisation de la règle 101 (condition)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145

Conflit entre la règle 101 et le jeton "+" résolu par décalage (HIGHLEVEL < "+").
Conflit entre la règle 101 et le jeton "-" résolu par décalage (HIGHLEVEL < "-").


état 80

  230 ifControl: "if" condition . then thenBody "end"
  231          | "if" condition . then thenBody else elseBody "end"
  232          | "if" condition . then thenBody elseIfControl "end"
  237 ifConditionBreak: . ";"
  238                 | . ";" "end of line"
  239                 | . ","
  240                 | . "," "end of line"
  241                 | . "end of line"
  242 then: . "then"
  243     | . ifConditionBreak "then"
  244     | . ifConditionBreak "then" "end of line"
  245     | . "then" ifConditionBreak
  246     | . ifConditionBreak
  247     | .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "else", "elseif", "end", "select", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]

    "end of line"  décalage et aller à l'état 193
    ","            décalage et aller à l'état 194
    ";"            décalage et aller à l'état 195
    "then"         décalage et aller à l'état 196

    $défaut  réduction par utilisation de la règle 247 (then)

    ifConditionBreak  aller à l'état 197
    then              aller à l'état 198


état 81

  102 condition: variable .  [error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "(", "[", "{", "if", "then", "else", "elseif", "end", "select", "function", "class", "for", "while", "do", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  157         | variable . "." functionCall
  160         | variable . listableEnd
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"         décalage et aller à l'état 148
    ":"         décalage et aller à l'état 116
    "."         décalage et aller à l'état 166
    ".'"        décalage et aller à l'état 150
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 151
    ".^"        décalage et aller à l'état 152
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140

    $défaut  réduction par utilisation de la règle 102 (condition)

    rightOperand   aller à l'état 153
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 154
    comparators    aller à l'état 155

Conflit entre la règle 102 et le jeton "+" résolu par décalage (HIGHLEVEL < "+").
Conflit entre la règle 102 et le jeton "-" résolu par décalage (HIGHLEVEL < "-").


état 82

  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  158 variable: functionCall . "." variable
  159         | functionCall . "." functionCall
  161         | functionCall . listableEnd
  262 selectable: functionCall .  ["end of line", ",", ";", "line comment"]
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"         décalage et aller à l'état 115
    ":"         décalage et aller à l'état 116
    "."         décalage et aller à l'état 165
    ".'"        décalage et aller à l'état 118
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 131
    ".^"        décalage et aller à l'état 132
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140

    $défaut  réduction par utilisation de la règle 262 (selectable)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145


état 83

  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  157         | variable . "." functionCall
  160         | variable . listableEnd
  261 selectable: variable .  ["end of line", ",", ";", "line comment"]
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"         décalage et aller à l'état 148
    ":"         décalage et aller à l'état 116
    "."         décalage et aller à l'état 166
    ".'"        décalage et aller à l'état 150
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 151
    ".^"        décalage et aller à l'état 152
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140

    $défaut  réduction par utilisation de la règle 261 (selectable)

    rightOperand   aller à l'état 153
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 154
    comparators    aller à l'état 155


état 84

  257 selectControl: "select" selectable . selectConditionBreak casesControl "end"
  258              | "select" selectable . selectConditionBreak casesControl else elseBody "end"
  259              | "select" selectable . "line comment" selectConditionBreak casesControl "end"
  260              | "select" selectable . "line comment" selectConditionBreak casesControl else elseBody "end"
  263 selectConditionBreak: . "end of line"
  264                     | . "," "end of line"
  265                     | . ";" "end of line"

    "end of line"   décalage et aller à l'état 199
    ","             décalage et aller à l'état 200
    ";"             décalage et aller à l'état 201
    "line comment"  décalage et aller à l'état 202

    selectConditionBreak  aller à l'état 203


état 85

   69 functionDeclaration: "function" "[" . functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | "function" "[" . "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   72 functionDeclarationReturns: . idList
   76 idList: . idList "," "identifier"
   77       | . "identifier"

    "]"           décalage et aller à l'état 204
    "identifier"  décalage et aller à l'état 205

    functionDeclarationReturns  aller à l'état 206
    idList                      aller à l'état 207


état 86

   68 functionDeclaration: "function" "identifier" . "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | "function" "identifier" . functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   73 functionDeclarationArguments: . "(" idList ")"
   74                             | . "(" ")"
   75                             | .  ["end of line", ",", ";", "line comment"]

    "("  décalage et aller à l'état 208
    "="  décalage et aller à l'état 209

    $défaut  réduction par utilisation de la règle 75 (functionDeclarationArguments)

    functionDeclarationArguments  aller à l'état 210


état 87

   78 functionDeclarationBreak: . lineEnd
   79                         | . ";"
   80                         | . ";" "end of line"
   81                         | . ","
   82                         | . "," "end of line"
   85 classDeclaration: "class" "identifier" . "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | "class" "identifier" . functionDeclarationBreak slotsDeclaration "endclass"
  333 lineEnd: . "end of line"
  334        | . "line comment" "end of line"

    "end of line"   décalage et aller à l'état 62
    ","             décalage et aller à l'état 211
    ";"             décalage et aller à l'état 212
    "<"             décalage et aller à l'état 213
    "line comment"  décalage et aller à l'état 64

    functionDeclarationBreak  aller à l'état 214
    lineEnd                   aller à l'état 215


état 88

  284 forControl: "for" "(" . "identifier" "=" forIterator ")" forConditionBreak forBody "end"

    "identifier"  décalage et aller à l'état 216


état 89

  283 forControl: "for" "identifier" . "=" forIterator forConditionBreak forBody "end"

    "="  décalage et aller à l'état 217


état 90

  297 whileControl: "while" condition . whileConditionBreak whileBody "end"
  300 whileConditionBreak: . ","
  301                    | . ";"
  302                    | . "do"
  303                    | . "do" ","
  304                    | . "do" ";"
  305                    | . "then"
  306                    | . "then" ","
  307                    | . "then" ";"
  308                    | . lineEnd
  309                    | . "," "end of line"
  310                    | . ";" "end of line"
  311                    | . "do" "end of line"
  312                    | . "do" "," "end of line"
  313                    | . "do" ";" "end of line"
  314                    | . "then" "end of line"
  315                    | . "then" "," "end of line"
  316                    | . "then" ";" "end of line"
  333 lineEnd: . "end of line"
  334        | . "line comment" "end of line"

    "end of line"   décalage et aller à l'état 62
    ","             décalage et aller à l'état 218
    ";"             décalage et aller à l'état 219
    "then"          décalage et aller à l'état 220
    "do"            décalage et aller à l'état 221
    "line comment"  décalage et aller à l'état 64

    whileConditionBreak  aller à l'état 222
    lineEnd              aller à l'état 223


état 91

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"
  215 variableDeclaration: . assignable "=" variable
  216                    | . assignable "=" functionCall
  217                    | . functionCall "=" variable
  218                    | . functionCall "=" functionCall
  219                    | . assignable "=" ":"
  220                    | . functionCall "=" ":"
  221                    | . assignable "=" returnControl
  222                    | . functionCall "=" returnControl
  223 assignable: . variable "." "identifier"
  224           | . variable "." functionCall
  225           | . functionCall "." variable
  226           | . functionCall "." functionCall
  227           | . "identifier"
  228           | . multipleResults
  229 multipleResults: . "[" matrixOrCellColumns "]"
  230 ifControl: . "if" condition then thenBody "end"
  231          | . "if" condition then thenBody else elseBody "end"
  232          | . "if" condition then thenBody elseIfControl "end"
  257 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  258              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  259              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  260              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  283 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  284           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  297 whileControl: . "while" condition whileConditionBreak whileBody "end"
  317 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  317           | "try" "end of line" . expressions "catch" "end of line" expressions "end"
  318           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  319           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  319           | "try" "end of line" . expressions "catch" "line comment" "end of line" expressions "end"
  320           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  321 returnControl: . "return"
  322              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    expressions            aller à l'état 224
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 92

  318 tryControl: "try" "line comment" . "end of line" expressions "catch" "end of line" expressions "end"
  320           | "try" "line comment" . "end of line" expressions "catch" "line comment" "end of line" expressions "end"

    "end of line"  décalage et aller à l'état 225


état 93

  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  158 variable: functionCall . "." variable
  159         | functionCall . "." functionCall
  161         | functionCall . listableEnd
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"         décalage et aller à l'état 115
    ":"         décalage et aller à l'état 116
    "."         décalage et aller à l'état 165
    ".'"        décalage et aller à l'état 118
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 131
    ".^"        décalage et aller à l'état 132
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145


état 94

  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  157         | variable . "." functionCall
  160         | variable . listableEnd
  322 returnControl: "return" variable .  ["end of file", "end of line", ",", ";", ")", "else", "elseif", "end", "case", "endfunction", "catch", "line comment"]
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"         décalage et aller à l'état 148
    ":"         décalage et aller à l'état 116
    "."         décalage et aller à l'état 166
    ".'"        décalage et aller à l'état 150
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 151
    ".^"        décalage et aller à l'état 152
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140

    $défaut  réduction par utilisation de la règle 322 (returnControl)

    rightOperand   aller à l'état 153
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 154
    comparators    aller à l'état 155


état 95

   41 implicitCallable: "%t or %T" .

    $défaut  réduction par utilisation de la règle 41 (implicitCallable)


état 96

   42 implicitCallable: "%f or %F" .

    $défaut  réduction par utilisation de la règle 42 (implicitCallable)


état 97

   40 implicitCallable: "$" .

    $défaut  réduction par utilisation de la règle 40 (implicitCallable)


état 98

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   55                   | "identifier" "(" . functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   58 functionArgs: . variable
   59             | . functionCall
   60             | . ":"
   61             | . variableDeclaration
   62             | .  [",", ")"]
   63             | . functionArgs "," variable
   64             | . functionArgs "," functionCall
   65             | . functionArgs "," ":"
   66             | . functionArgs "," variableDeclaration
   67             | . functionArgs ","
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"
  215 variableDeclaration: . assignable "=" variable
  216                    | . assignable "=" functionCall
  217                    | . functionCall "=" variable
  218                    | . functionCall "=" functionCall
  219                    | . assignable "=" ":"
  220                    | . functionCall "=" ":"
  221                    | . assignable "=" returnControl
  222                    | . functionCall "=" returnControl
  223 assignable: . variable "." "identifier"
  224           | . variable "." functionCall
  225           | . functionCall "." variable
  226           | . functionCall "." functionCall
  227           | . "identifier"
  228           | . multipleResults
  229 multipleResults: . "[" matrixOrCellColumns "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    ":"           décalage et aller à l'état 157
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 8
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 158
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    $défaut  réduction par utilisation de la règle 62 (functionArgs)

    functionCall           aller à l'état 159
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionArgs           aller à l'état 226
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 161
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 162
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45


état 99

   39 implicitCallable: "string" .

    $défaut  réduction par utilisation de la règle 39 (implicitCallable)


état 100

   35 implicitCallable: "identifier" .  ["end of file", "end of line", "%t or %T", "%f or %F", "$", ",", ";", ".", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "else", "elseif", "end", "case", "endfunction", "catch", "string", "identifier", "integer", "float", "number", "path", "line comment"]
   55 simpleFunctionCall: "identifier" . "(" functionArgs ")"

    "("  décalage et aller à l'état 98

    $défaut  réduction par utilisation de la règle 35 (implicitCallable)


état 101

   36 implicitCallable: "integer" .

    $défaut  réduction par utilisation de la règle 36 (implicitCallable)


état 102

   38 implicitCallable: "float" .

    $défaut  réduction par utilisation de la règle 38 (implicitCallable)


état 103

   37 implicitCallable: "number" .

    $défaut  réduction par utilisation de la règle 37 (implicitCallable)


état 104

   47 implicitCallable: "path" .

    $défaut  réduction par utilisation de la règle 47 (implicitCallable)


état 105

   34 implicitFunctionCall: "identifier" implicitCallable .  ["end of file", "end of line", "%t or %T", "%f or %F", "$", ",", ";", "else", "elseif", "end", "case", "endfunction", "catch", "string", "identifier", "integer", "float", "number", "path", "line comment"]
   43 implicitCallable: implicitCallable . "." "identifier"
   44                 | implicitCallable . "." functionCall
   46                 | implicitCallable . rightOperand
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall

    "."     décalage et aller à l'état 227
    "+"     décalage et aller à l'état 119
    "-"     décalage et aller à l'état 120
    "*"     décalage et aller à l'état 121
    ".*"    décalage et aller à l'état 122
    ".*."   décalage et aller à l'état 123
    "/"     décalage et aller à l'état 124
    "./"    décalage et aller à l'état 125
    "/."    décalage et aller à l'état 126
    "./."   décalage et aller à l'état 127
    "\\"    décalage et aller à l'état 128
    ".\\"   décalage et aller à l'état 129
    ".\\."  décalage et aller à l'état 130

    $défaut  réduction par utilisation de la règle 34 (implicitFunctionCall)

    rightOperand  aller à l'état 228


état 106

   45 implicitCallable: simpleFunctionCall .

    $défaut  réduction par utilisation de la règle 45 (implicitCallable)


état 107

    0 $accept: program "end of file" .

    $défaut  accepter


état 108

    4 expressions: recursiveExpression expression .  ["end of file", "else", "elseif", "end", "case", "endfunction", "catch"]
    5            | recursiveExpression expression . "line comment"
    8 recursiveExpression: recursiveExpression expression . expressionLineBreak
    9                    | recursiveExpression expression . "line comment" expressionLineBreak
   12 expressionLineBreak: . ";"
   13                    | . ","
   14                    | . "end of line"
   15                    | . expressionLineBreak ";"
   16                    | . expressionLineBreak ","
   17                    | . expressionLineBreak "end of line"

    "end of line"   décalage et aller à l'état 109
    ","             décalage et aller à l'état 110
    ";"             décalage et aller à l'état 111
    "line comment"  décalage et aller à l'état 229

    $défaut  réduction par utilisation de la règle 4 (expressions)

    expressionLineBreak  aller à l'état 230


état 109

   14 expressionLineBreak: "end of line" .

    $défaut  réduction par utilisation de la règle 14 (expressionLineBreak)


état 110

   13 expressionLineBreak: "," .

    $défaut  réduction par utilisation de la règle 13 (expressionLineBreak)


état 111

   12 expressionLineBreak: ";" .

    $défaut  réduction par utilisation de la règle 12 (expressionLineBreak)


état 112

    7 expressions: expression "line comment" .  ["end of file", "else", "elseif", "end", "case", "endfunction", "catch"]
   10 recursiveExpression: expression "line comment" . expressionLineBreak
   12 expressionLineBreak: . ";"
   13                    | . ","
   14                    | . "end of line"
   15                    | . expressionLineBreak ";"
   16                    | . expressionLineBreak ","
   17                    | . expressionLineBreak "end of line"

    "end of line"  décalage et aller à l'état 109
    ","            décalage et aller à l'état 110
    ";"            décalage et aller à l'état 111

    $défaut  réduction par utilisation de la règle 7 (expressions)

    expressionLineBreak  aller à l'état 231


état 113

   11 recursiveExpression: expression expressionLineBreak .  ["end of file", error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "line comment"]
   15 expressionLineBreak: expressionLineBreak . ";"
   16                    | expressionLineBreak . ","
   17                    | expressionLineBreak . "end of line"

    "end of line"  décalage et aller à l'état 232
    ","            décalage et aller à l'état 233
    ";"            décalage et aller à l'état 234

    $défaut  réduction par utilisation de la règle 11 (recursiveExpression)


état 114

   33 implicitFunctionCall: implicitFunctionCall implicitCallable .  ["end of file", "end of line", "%t or %T", "%f or %F", "$", ",", ";", "else", "elseif", "end", "case", "endfunction", "catch", "string", "identifier", "integer", "float", "number", "path", "line comment"]
   43 implicitCallable: implicitCallable . "." "identifier"
   44                 | implicitCallable . "." functionCall
   46                 | implicitCallable . rightOperand
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall

    "."     décalage et aller à l'état 227
    "+"     décalage et aller à l'état 119
    "-"     décalage et aller à l'état 120
    "*"     décalage et aller à l'état 121
    ".*"    décalage et aller à l'état 122
    ".*."   décalage et aller à l'état 123
    "/"     décalage et aller à l'état 124
    "./"    décalage et aller à l'état 125
    "/."    décalage et aller à l'état 126
    "./."   décalage et aller à l'état 127
    "\\"    décalage et aller à l'état 128
    ".\\"   décalage et aller à l'état 129
    ".\\."  décalage et aller à l'état 130

    $défaut  réduction par utilisation de la règle 33 (implicitFunctionCall)

    rightOperand  aller à l'état 228


état 115

  124 operation: functionCall "'" .

    $défaut  réduction par utilisation de la règle 124 (operation)


état 116

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  150 listableBegin: ":" . variable
  151              | ":" . functionCall
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 235
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 236
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 117

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  158         | functionCall "." . variable
  159         | . functionCall "." functionCall
  159         | functionCall "." . functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"
  225 assignable: functionCall "." . variable
  226           | functionCall "." . functionCall

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 237
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 238
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 118

  125 operation: functionCall ".'" .

    $défaut  réduction par utilisation de la règle 125 (operation)


état 119

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  126 rightOperand: "+" . variable
  127             | "+" . functionCall
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 239
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 240
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 120

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  128 rightOperand: "-" . variable
  129             | "-" . functionCall
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 241
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 242
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 121

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  130 rightOperand: "*" . variable
  131             | "*" . functionCall
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 243
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 244
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 122

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  132 rightOperand: ".*" . variable
  133             | ".*" . functionCall
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 245
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 246
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 123

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  134 rightOperand: ".*." . variable
  135             | ".*." . functionCall
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 247
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 248
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 124

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  136 rightOperand: "/" . variable
  137             | "/" . functionCall
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 249
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 250
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 125

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  138 rightOperand: "./" . variable
  139             | "./" . functionCall
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 251
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 252
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 126

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  142 rightOperand: "/." . variable
  143             | "/." . functionCall
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 253
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 254
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 127

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  140 rightOperand: "./." . variable
  141             | "./." . functionCall
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 255
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 256
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 128

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  144 rightOperand: "\\" . variable
  145             | "\\" . functionCall
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 257
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 258
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 129

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  146 rightOperand: ".\\" . variable
  147             | ".\\" . functionCall
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 259
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 260
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 130

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  148 rightOperand: ".\\." . variable
  149             | ".\\." . functionCall
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 261
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 262
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 131

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  116          | functionCall "** or ^" . variable
  117          | . functionCall "** or ^" functionCall
  117          | functionCall "** or ^" . functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 263
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 264
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 132

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  120          | functionCall ".^" . variable
  121          | . functionCall ".^" functionCall
  121          | functionCall ".^" . functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 265
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 266
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 133

  323 comparators: "==" .

    $défaut  réduction par utilisation de la règle 323 (comparators)


état 134

  324 comparators: "<> or ~=" .

    $défaut  réduction par utilisation de la règle 324 (comparators)


état 135

  325 comparators: "<" .

    $défaut  réduction par utilisation de la règle 325 (comparators)


état 136

  326 comparators: "<=" .

    $défaut  réduction par utilisation de la règle 326 (comparators)


état 137

  327 comparators: ">" .

    $défaut  réduction par utilisation de la règle 327 (comparators)


état 138

  328 comparators: ">=" .

    $défaut  réduction par utilisation de la règle 328 (comparators)


état 139

  329 comparators: "&" .

    $défaut  réduction par utilisation de la règle 329 (comparators)


état 140

  330 comparators: "|" .

    $défaut  réduction par utilisation de la règle 330 (comparators)


état 141

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"
  217 variableDeclaration: functionCall "=" . variable
  218                    | functionCall "=" . functionCall
  220                    | functionCall "=" . ":"
  222                    | functionCall "=" . returnControl
  321 returnControl: . "return"
  322              | . "return" variable

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    ":"           décalage et aller à l'état 267
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "return"      décalage et aller à l'état 20
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 268
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 269
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    returnControl          aller à l'état 270


état 142

  109 operation: functionCall rightOperand .

    $défaut  réduction par utilisation de la règle 109 (operation)


état 143

  152 listableEnd: listableBegin . ":" variable
  153            | listableBegin . ":" functionCall
  154            | listableBegin .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "'", "~ or @", "$", ",", ";", "(", ")", "[", "]", "{", "}", ".", ".'", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]

    ":"  décalage et aller à l'état 271

    $défaut  réduction par utilisation de la règle 154 (listableEnd)

Conflit entre la règle 154 et le jeton ":" résolu par décalage (LISTABLE < ":").


état 144

  161 variable: functionCall listableEnd .

    $défaut  réduction par utilisation de la règle 161 (variable)


état 145

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  104           | functionCall comparators . comparable
  105 comparable: . variable
  106           | . functionCall
  107           | . ":"
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    ":"           décalage et aller à l'état 272
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 273
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    comparable             aller à l'état 274
    operation              aller à l'état 39
    variable               aller à l'état 275
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 146

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   56                      | simpleFunctionCall "(" . functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   58 functionArgs: . variable
   59             | . functionCall
   60             | . ":"
   61             | . variableDeclaration
   62             | .  [",", ")"]
   63             | . functionArgs "," variable
   64             | . functionArgs "," functionCall
   65             | . functionArgs "," ":"
   66             | . functionArgs "," variableDeclaration
   67             | . functionArgs ","
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"
  215 variableDeclaration: . assignable "=" variable
  216                    | . assignable "=" functionCall
  217                    | . functionCall "=" variable
  218                    | . functionCall "=" functionCall
  219                    | . assignable "=" ":"
  220                    | . functionCall "=" ":"
  221                    | . assignable "=" returnControl
  222                    | . functionCall "=" returnControl
  223 assignable: . variable "." "identifier"
  224           | . variable "." functionCall
  225           | . functionCall "." variable
  226           | . functionCall "." functionCall
  227           | . "identifier"
  228           | . multipleResults
  229 multipleResults: . "[" matrixOrCellColumns "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    ":"           décalage et aller à l'état 157
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 8
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 158
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    $défaut  réduction par utilisation de la règle 62 (functionArgs)

    functionCall           aller à l'état 159
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionArgs           aller à l'état 276
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 161
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 162
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45


état 147

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   57                      | recursiveFunctionCall "(" . functionArgs ")"
   58 functionArgs: . variable
   59             | . functionCall
   60             | . ":"
   61             | . variableDeclaration
   62             | .  [",", ")"]
   63             | . functionArgs "," variable
   64             | . functionArgs "," functionCall
   65             | . functionArgs "," ":"
   66             | . functionArgs "," variableDeclaration
   67             | . functionArgs ","
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"
  215 variableDeclaration: . assignable "=" variable
  216                    | . assignable "=" functionCall
  217                    | . functionCall "=" variable
  218                    | . functionCall "=" functionCall
  219                    | . assignable "=" ":"
  220                    | . functionCall "=" ":"
  221                    | . assignable "=" returnControl
  222                    | . functionCall "=" returnControl
  223 assignable: . variable "." "identifier"
  224           | . variable "." functionCall
  225           | . functionCall "." variable
  226           | . functionCall "." functionCall
  227           | . "identifier"
  228           | . multipleResults
  229 multipleResults: . "[" matrixOrCellColumns "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    ":"           décalage et aller à l'état 157
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 8
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 158
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    $défaut  réduction par utilisation de la règle 62 (functionArgs)

    functionCall           aller à l'état 159
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionArgs           aller à l'état 277
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 161
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 162
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45


état 148

  122 operation: variable "'" .

    $défaut  réduction par utilisation de la règle 122 (operation)


état 149

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  156 variable: variable "." . "identifier"
  157         | variable "." . functionCall
  223 assignable: variable "." . "identifier"
  224           | variable "." . functionCall

    "%t or %T"    décalage et aller à l'état 278
    "%f or %F"    décalage et aller à l'état 279
    "~ or @"      décalage et aller à l'état 280
    "("           décalage et aller à l'état 281
    "identifier"  décalage et aller à l'état 282

    functionCall           aller à l'état 283
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35


état 150

  123 operation: variable ".'" .

    $défaut  réduction par utilisation de la règle 123 (operation)


état 151

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  114          | variable "** or ^" . variable
  115          | . variable "** or ^" functionCall
  115          | variable "** or ^" . functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 284
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 285
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 152

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  118          | variable ".^" . variable
  119          | . variable ".^" functionCall
  119          | variable ".^" . functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 286
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 287
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 153

  108 operation: variable rightOperand .

    $défaut  réduction par utilisation de la règle 108 (operation)


état 154

  160 variable: variable listableEnd .

    $défaut  réduction par utilisation de la règle 160 (variable)


état 155

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  103           | variable comparators . comparable
  104           | . functionCall comparators comparable
  105 comparable: . variable
  106           | . functionCall
  107           | . ":"
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    ":"           décalage et aller à l'état 272
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 273
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    comparable             aller à l'état 288
    operation              aller à l'état 39
    variable               aller à l'état 275
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 156

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"
  215 variableDeclaration: assignable "=" . variable
  216                    | assignable "=" . functionCall
  219                    | assignable "=" . ":"
  221                    | assignable "=" . returnControl
  321 returnControl: . "return"
  322              | . "return" variable

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    ":"           décalage et aller à l'état 289
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "return"      décalage et aller à l'état 20
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 290
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 291
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    returnControl          aller à l'état 292


état 157

   60 functionArgs: ":" .

    $défaut  réduction par utilisation de la règle 60 (functionArgs)


état 158

   55 simpleFunctionCall: "identifier" . "(" functionArgs ")"
  165 variable: "identifier" .  ["'", ",", ":", ")", ".", ".'", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|"]
  227 assignable: "identifier" .  ["="]

    "("  décalage et aller à l'état 98

    "="       réduction par utilisation de la règle 227 (assignable)
    $défaut  réduction par utilisation de la règle 165 (variable)


état 159

   59 functionArgs: functionCall .  [",", ")"]
  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  158 variable: functionCall . "." variable
  159         | functionCall . "." functionCall
  161         | functionCall . listableEnd
  217 variableDeclaration: functionCall . "=" variable
  218                    | functionCall . "=" functionCall
  220                    | functionCall . "=" ":"
  222                    | functionCall . "=" returnControl
  225 assignable: functionCall . "." variable
  226           | functionCall . "." functionCall
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"         décalage et aller à l'état 115
    ":"         décalage et aller à l'état 116
    "."         décalage et aller à l'état 117
    ".'"        décalage et aller à l'état 118
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 131
    ".^"        décalage et aller à l'état 132
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140
    "="         décalage et aller à l'état 141

    $défaut  réduction par utilisation de la règle 59 (functionArgs)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145


état 160

   53 specificFunctionCall: "%t or %T" "(" functionArgs . ")"
   63 functionArgs: functionArgs . "," variable
   64             | functionArgs . "," functionCall
   65             | functionArgs . "," ":"
   66             | functionArgs . "," variableDeclaration
   67             | functionArgs . ","

    ","  décalage et aller à l'état 293
    ")"  décalage et aller à l'état 294


état 161

   58 functionArgs: variable .  [",", ")"]
  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  157         | variable . "." functionCall
  160         | variable . listableEnd
  223 assignable: variable . "." "identifier"
  224           | variable . "." functionCall
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"         décalage et aller à l'état 148
    ":"         décalage et aller à l'état 116
    "."         décalage et aller à l'état 149
    ".'"        décalage et aller à l'état 150
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 151
    ".^"        décalage et aller à l'état 152
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140

    $défaut  réduction par utilisation de la règle 58 (functionArgs)

    rightOperand   aller à l'état 153
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 154
    comparators    aller à l'état 155


état 162

   61 functionArgs: variableDeclaration .

    $défaut  réduction par utilisation de la règle 61 (functionArgs)


état 163

   54 specificFunctionCall: "%f or %F" "(" functionArgs . ")"
   63 functionArgs: functionArgs . "," variable
   64             | functionArgs . "," functionCall
   65             | functionArgs . "," ":"
   66             | functionArgs . "," variableDeclaration
   67             | functionArgs . ","

    ","  décalage et aller à l'état 293
    ")"  décalage et aller à l'état 295


état 164

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  193       | "[" matrixOrCellColumns . "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"
  198 matrixOrCellLineBreak: . ";"
  199                      | . "end of line"
  200                      | . ";" "end of line"
  201 matrixOrCellLine: matrixOrCellColumns . matrixOrCellLineBreak
  202                 | matrixOrCellColumns . "line comment" "end of line"
  203                 | matrixOrCellColumns . ";" "line comment" "end of line"
  204                 | matrixOrCellColumns . matrixOrCellColumnsBreak matrixOrCellLineBreak
  205                 | matrixOrCellColumns . matrixOrCellColumnsBreak "line comment" "end of line"
  206                 | matrixOrCellColumns . matrixOrCellColumnsBreak ";" "line comment" "end of line"
  207 matrixOrCellColumns: matrixOrCellColumns . matrixOrCellColumnsBreak variable
  208                    | matrixOrCellColumns . matrixOrCellColumnsBreak functionCall
  209                    | matrixOrCellColumns . variable
  210                    | matrixOrCellColumns . functionCall
  213 matrixOrCellColumnsBreak: . matrixOrCellColumnsBreak ","
  214                         | . ","

    "end of line"   décalage et aller à l'état 177
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    ","             décalage et aller à l'état 178
    ";"             décalage et aller à l'état 179
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 55
    "]"             décalage et aller à l'état 296
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 56
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 181

    functionCall              aller à l'état 182
    specificFunctionCall      aller à l'état 33
    simpleFunctionCall        aller à l'état 34
    recursiveFunctionCall     aller à l'état 35
    comparison                aller à l'état 38
    operation                 aller à l'état 39
    variable                  aller à l'état 183
    cell                      aller à l'état 41
    matrix                    aller à l'état 42
    matrixOrCellLineBreak     aller à l'état 184
    matrixOrCellColumnsBreak  aller à l'état 185


état 165

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  158         | functionCall "." . variable
  159         | . functionCall "." functionCall
  159         | functionCall "." . functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 297
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 298
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 166

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  156 variable: variable "." . "identifier"
  157         | variable "." . functionCall

    "%t or %T"    décalage et aller à l'état 278
    "%f or %F"    décalage et aller à l'état 279
    "~ or @"      décalage et aller à l'état 280
    "("           décalage et aller à l'état 281
    "identifier"  décalage et aller à l'état 299

    functionCall           aller à l'état 300
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35


état 167

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  179 variableFields: functionCall "," . functionCall
  180               | functionCall "," . variable
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 301
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 302
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 168

   51 functionCall: "(" functionCall ")" .

    $défaut  réduction par utilisation de la règle 51 (functionCall)


état 169

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  178 variableFields: variable "," . variable
  181               | variable "," . functionCall
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 303
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 304
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 170

  173 variable: "(" variable ")" .

    $défaut  réduction par utilisation de la règle 173 (variable)


état 171

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  176 variableFields: variableFields "," . variable
  177               | variableFields "," . functionCall
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 305
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 306
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 172

  174 variable: "(" variableFields ")" .

    $défaut  réduction par utilisation de la règle 174 (variable)


état 173

  334 lineEnd: "line comment" "end of line" .

    $défaut  réduction par utilisation de la règle 334 (lineEnd)


état 174

  189 matrix: "[" matrixOrCellLines "]" .

    $défaut  réduction par utilisation de la règle 189 (matrix)


état 175

  196 matrixOrCellLines: matrixOrCellLines matrixOrCellLine .

    $défaut  réduction par utilisation de la règle 196 (matrixOrCellLines)


état 176

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  191       | "[" matrixOrCellLines matrixOrCellColumns . "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"
  198 matrixOrCellLineBreak: . ";"
  199                      | . "end of line"
  200                      | . ";" "end of line"
  201 matrixOrCellLine: matrixOrCellColumns . matrixOrCellLineBreak
  202                 | matrixOrCellColumns . "line comment" "end of line"
  203                 | matrixOrCellColumns . ";" "line comment" "end of line"
  204                 | matrixOrCellColumns . matrixOrCellColumnsBreak matrixOrCellLineBreak
  205                 | matrixOrCellColumns . matrixOrCellColumnsBreak "line comment" "end of line"
  206                 | matrixOrCellColumns . matrixOrCellColumnsBreak ";" "line comment" "end of line"
  207 matrixOrCellColumns: matrixOrCellColumns . matrixOrCellColumnsBreak variable
  208                    | matrixOrCellColumns . matrixOrCellColumnsBreak functionCall
  209                    | matrixOrCellColumns . variable
  210                    | matrixOrCellColumns . functionCall
  213 matrixOrCellColumnsBreak: . matrixOrCellColumnsBreak ","
  214                         | . ","

    "end of line"   décalage et aller à l'état 177
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    ","             décalage et aller à l'état 178
    ";"             décalage et aller à l'état 179
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 55
    "]"             décalage et aller à l'état 307
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 56
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 181

    functionCall              aller à l'état 182
    specificFunctionCall      aller à l'état 33
    simpleFunctionCall        aller à l'état 34
    recursiveFunctionCall     aller à l'état 35
    comparison                aller à l'état 38
    operation                 aller à l'état 39
    variable                  aller à l'état 183
    cell                      aller à l'état 41
    matrix                    aller à l'état 42
    matrixOrCellLineBreak     aller à l'état 184
    matrixOrCellColumnsBreak  aller à l'état 185


état 177

  199 matrixOrCellLineBreak: "end of line" .

    $défaut  réduction par utilisation de la règle 199 (matrixOrCellLineBreak)


état 178

  214 matrixOrCellColumnsBreak: "," .

    $défaut  réduction par utilisation de la règle 214 (matrixOrCellColumnsBreak)


état 179

  198 matrixOrCellLineBreak: ";" .  ["%t or %T", "%f or %F", "~ or @", "$", "(", "[", "]", "{", "}", "+", "-", "string", "identifier", "integer", "float", "number"]
  200                      | ";" . "end of line"
  203 matrixOrCellLine: matrixOrCellColumns ";" . "line comment" "end of line"

    "end of line"   décalage et aller à l'état 308
    "line comment"  décalage et aller à l'état 309

    $défaut  réduction par utilisation de la règle 198 (matrixOrCellLineBreak)


état 180

  193 matrix: "[" matrixOrCellColumns "]" .  ["end of file", "end of line", "'", ",", ":", ";", ")", ".", ".'", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "else", "elseif", "end", "case", "endfunction", "catch", "line comment"]
  229 multipleResults: "[" matrixOrCellColumns "]" .  ["="]

    "="       réduction par utilisation de la règle 229 (multipleResults)
    $défaut  réduction par utilisation de la règle 193 (matrix)


état 181

  202 matrixOrCellLine: matrixOrCellColumns "line comment" . "end of line"

    "end of line"  décalage et aller à l'état 310


état 182

  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  158 variable: functionCall . "." variable
  159         | functionCall . "." functionCall
  161         | functionCall . listableEnd
  210 matrixOrCellColumns: matrixOrCellColumns functionCall .  ["end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "(", "[", "]", "{", "}", "string", "identifier", "integer", "float", "number", "line comment"]
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"         décalage et aller à l'état 115
    ":"         décalage et aller à l'état 116
    "."         décalage et aller à l'état 165
    ".'"        décalage et aller à l'état 118
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 131
    ".^"        décalage et aller à l'état 132
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140

    $défaut  réduction par utilisation de la règle 210 (matrixOrCellColumns)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145

Conflit entre la règle 210 et le jeton "+" résolu par décalage (HIGHLEVEL < "+").
Conflit entre la règle 210 et le jeton "-" résolu par décalage (HIGHLEVEL < "-").


état 183

  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  157         | variable . "." functionCall
  160         | variable . listableEnd
  209 matrixOrCellColumns: matrixOrCellColumns variable .  ["end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "(", "[", "]", "{", "}", "string", "identifier", "integer", "float", "number", "line comment"]
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"         décalage et aller à l'état 148
    ":"         décalage et aller à l'état 116
    "."         décalage et aller à l'état 166
    ".'"        décalage et aller à l'état 150
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 151
    ".^"        décalage et aller à l'état 152
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140

    $défaut  réduction par utilisation de la règle 209 (matrixOrCellColumns)

    rightOperand   aller à l'état 153
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 154
    comparators    aller à l'état 155

Conflit entre la règle 209 et le jeton "+" résolu par décalage (HIGHLEVEL < "+").
Conflit entre la règle 209 et le jeton "-" résolu par décalage (HIGHLEVEL < "-").


état 184

  201 matrixOrCellLine: matrixOrCellColumns matrixOrCellLineBreak .

    $défaut  réduction par utilisation de la règle 201 (matrixOrCellLine)


état 185

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"
  198 matrixOrCellLineBreak: . ";"
  199                      | . "end of line"
  200                      | . ";" "end of line"
  204 matrixOrCellLine: matrixOrCellColumns matrixOrCellColumnsBreak . matrixOrCellLineBreak
  205                 | matrixOrCellColumns matrixOrCellColumnsBreak . "line comment" "end of line"
  206                 | matrixOrCellColumns matrixOrCellColumnsBreak . ";" "line comment" "end of line"
  207 matrixOrCellColumns: matrixOrCellColumns matrixOrCellColumnsBreak . variable
  208                    | matrixOrCellColumns matrixOrCellColumnsBreak . functionCall
  213 matrixOrCellColumnsBreak: matrixOrCellColumnsBreak . ","

    "end of line"   décalage et aller à l'état 177
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    ","             décalage et aller à l'état 311
    ";"             décalage et aller à l'état 312
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 55
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 56
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 313

    functionCall           aller à l'état 314
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 315
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    matrixOrCellLineBreak  aller à l'état 316


état 186

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  190       | "[" lineEnd matrixOrCellLines . "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  192       | "[" lineEnd matrixOrCellLines . matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"
  196 matrixOrCellLines: matrixOrCellLines . matrixOrCellLine
  201 matrixOrCellLine: . matrixOrCellColumns matrixOrCellLineBreak
  202                 | . matrixOrCellColumns "line comment" "end of line"
  203                 | . matrixOrCellColumns ";" "line comment" "end of line"
  204                 | . matrixOrCellColumns matrixOrCellColumnsBreak matrixOrCellLineBreak
  205                 | . matrixOrCellColumns matrixOrCellColumnsBreak "line comment" "end of line"
  206                 | . matrixOrCellColumns matrixOrCellColumnsBreak ";" "line comment" "end of line"
  207 matrixOrCellColumns: . matrixOrCellColumns matrixOrCellColumnsBreak variable
  208                    | . matrixOrCellColumns matrixOrCellColumnsBreak functionCall
  209                    | . matrixOrCellColumns variable
  210                    | . matrixOrCellColumns functionCall
  211                    | . variable
  212                    | . functionCall

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "]"           décalage et aller à l'état 317
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 65
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 66
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    matrixOrCellLine       aller à l'état 175
    matrixOrCellColumns    aller à l'état 318


état 187

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  194       | "[" lineEnd matrixOrCellColumns . "]"
  195       | . "[" "]"
  198 matrixOrCellLineBreak: . ";"
  199                      | . "end of line"
  200                      | . ";" "end of line"
  201 matrixOrCellLine: matrixOrCellColumns . matrixOrCellLineBreak
  202                 | matrixOrCellColumns . "line comment" "end of line"
  203                 | matrixOrCellColumns . ";" "line comment" "end of line"
  204                 | matrixOrCellColumns . matrixOrCellColumnsBreak matrixOrCellLineBreak
  205                 | matrixOrCellColumns . matrixOrCellColumnsBreak "line comment" "end of line"
  206                 | matrixOrCellColumns . matrixOrCellColumnsBreak ";" "line comment" "end of line"
  207 matrixOrCellColumns: matrixOrCellColumns . matrixOrCellColumnsBreak variable
  208                    | matrixOrCellColumns . matrixOrCellColumnsBreak functionCall
  209                    | matrixOrCellColumns . variable
  210                    | matrixOrCellColumns . functionCall
  213 matrixOrCellColumnsBreak: . matrixOrCellColumnsBreak ","
  214                         | . ","

    "end of line"   décalage et aller à l'état 177
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    ","             décalage et aller à l'état 178
    ";"             décalage et aller à l'état 179
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 55
    "]"             décalage et aller à l'état 319
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 56
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 181

    functionCall              aller à l'état 182
    specificFunctionCall      aller à l'état 33
    simpleFunctionCall        aller à l'état 34
    recursiveFunctionCall     aller à l'état 35
    comparison                aller à l'état 38
    operation                 aller à l'état 39
    variable                  aller à l'état 183
    cell                      aller à l'état 41
    matrix                    aller à l'état 42
    matrixOrCellLineBreak     aller à l'état 184
    matrixOrCellColumnsBreak  aller à l'état 185


état 188

  182 cell: "{" matrixOrCellLines "}" .

    $défaut  réduction par utilisation de la règle 182 (cell)


état 189

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  184     | "{" matrixOrCellLines matrixOrCellColumns . "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"
  198 matrixOrCellLineBreak: . ";"
  199                      | . "end of line"
  200                      | . ";" "end of line"
  201 matrixOrCellLine: matrixOrCellColumns . matrixOrCellLineBreak
  202                 | matrixOrCellColumns . "line comment" "end of line"
  203                 | matrixOrCellColumns . ";" "line comment" "end of line"
  204                 | matrixOrCellColumns . matrixOrCellColumnsBreak matrixOrCellLineBreak
  205                 | matrixOrCellColumns . matrixOrCellColumnsBreak "line comment" "end of line"
  206                 | matrixOrCellColumns . matrixOrCellColumnsBreak ";" "line comment" "end of line"
  207 matrixOrCellColumns: matrixOrCellColumns . matrixOrCellColumnsBreak variable
  208                    | matrixOrCellColumns . matrixOrCellColumnsBreak functionCall
  209                    | matrixOrCellColumns . variable
  210                    | matrixOrCellColumns . functionCall
  213 matrixOrCellColumnsBreak: . matrixOrCellColumnsBreak ","
  214                         | . ","

    "end of line"   décalage et aller à l'état 177
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    ","             décalage et aller à l'état 178
    ";"             décalage et aller à l'état 179
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 55
    "{"             décalage et aller à l'état 9
    "}"             décalage et aller à l'état 320
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 56
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 181

    functionCall              aller à l'état 182
    specificFunctionCall      aller à l'état 33
    simpleFunctionCall        aller à l'état 34
    recursiveFunctionCall     aller à l'état 35
    comparison                aller à l'état 38
    operation                 aller à l'état 39
    variable                  aller à l'état 183
    cell                      aller à l'état 41
    matrix                    aller à l'état 42
    matrixOrCellLineBreak     aller à l'état 184
    matrixOrCellColumnsBreak  aller à l'état 185


état 190

  186 cell: "{" matrixOrCellColumns "}" .

    $défaut  réduction par utilisation de la règle 186 (cell)


état 191

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  183     | "{" lineEnd matrixOrCellLines . "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  185     | "{" lineEnd matrixOrCellLines . matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"
  196 matrixOrCellLines: matrixOrCellLines . matrixOrCellLine
  201 matrixOrCellLine: . matrixOrCellColumns matrixOrCellLineBreak
  202                 | . matrixOrCellColumns "line comment" "end of line"
  203                 | . matrixOrCellColumns ";" "line comment" "end of line"
  204                 | . matrixOrCellColumns matrixOrCellColumnsBreak matrixOrCellLineBreak
  205                 | . matrixOrCellColumns matrixOrCellColumnsBreak "line comment" "end of line"
  206                 | . matrixOrCellColumns matrixOrCellColumnsBreak ";" "line comment" "end of line"
  207 matrixOrCellColumns: . matrixOrCellColumns matrixOrCellColumnsBreak variable
  208                    | . matrixOrCellColumns matrixOrCellColumnsBreak functionCall
  209                    | . matrixOrCellColumns variable
  210                    | . matrixOrCellColumns functionCall
  211                    | . variable
  212                    | . functionCall

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "}"           décalage et aller à l'état 321
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 65
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 66
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    matrixOrCellLine       aller à l'état 175
    matrixOrCellColumns    aller à l'état 322


état 192

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  187     | "{" lineEnd matrixOrCellColumns . "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"
  198 matrixOrCellLineBreak: . ";"
  199                      | . "end of line"
  200                      | . ";" "end of line"
  201 matrixOrCellLine: matrixOrCellColumns . matrixOrCellLineBreak
  202                 | matrixOrCellColumns . "line comment" "end of line"
  203                 | matrixOrCellColumns . ";" "line comment" "end of line"
  204                 | matrixOrCellColumns . matrixOrCellColumnsBreak matrixOrCellLineBreak
  205                 | matrixOrCellColumns . matrixOrCellColumnsBreak "line comment" "end of line"
  206                 | matrixOrCellColumns . matrixOrCellColumnsBreak ";" "line comment" "end of line"
  207 matrixOrCellColumns: matrixOrCellColumns . matrixOrCellColumnsBreak variable
  208                    | matrixOrCellColumns . matrixOrCellColumnsBreak functionCall
  209                    | matrixOrCellColumns . variable
  210                    | matrixOrCellColumns . functionCall
  213 matrixOrCellColumnsBreak: . matrixOrCellColumnsBreak ","
  214                         | . ","

    "end of line"   décalage et aller à l'état 177
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    ","             décalage et aller à l'état 178
    ";"             décalage et aller à l'état 179
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 55
    "{"             décalage et aller à l'état 9
    "}"             décalage et aller à l'état 323
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 56
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 181

    functionCall              aller à l'état 182
    specificFunctionCall      aller à l'état 33
    simpleFunctionCall        aller à l'état 34
    recursiveFunctionCall     aller à l'état 35
    comparison                aller à l'état 38
    operation                 aller à l'état 39
    variable                  aller à l'état 183
    cell                      aller à l'état 41
    matrix                    aller à l'état 42
    matrixOrCellLineBreak     aller à l'état 184
    matrixOrCellColumnsBreak  aller à l'état 185


état 193

  241 ifConditionBreak: "end of line" .

    $défaut  réduction par utilisation de la règle 241 (ifConditionBreak)


état 194

  239 ifConditionBreak: "," .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "then", "else", "elseif", "end", "select", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  240                 | "," . "end of line"

    "end of line"  décalage et aller à l'état 324

    $défaut  réduction par utilisation de la règle 239 (ifConditionBreak)


état 195

  237 ifConditionBreak: ";" .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "then", "else", "elseif", "end", "select", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  238                 | ";" . "end of line"

    "end of line"  décalage et aller à l'état 325

    $défaut  réduction par utilisation de la règle 237 (ifConditionBreak)


état 196

  237 ifConditionBreak: . ";"
  238                 | . ";" "end of line"
  239                 | . ","
  240                 | . "," "end of line"
  241                 | . "end of line"
  242 then: "then" .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "else", "elseif", "end", "select", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  245     | "then" . ifConditionBreak

    "end of line"  décalage et aller à l'état 193
    ","            décalage et aller à l'état 194
    ";"            décalage et aller à l'état 195

    $défaut  réduction par utilisation de la règle 242 (then)

    ifConditionBreak  aller à l'état 326


état 197

  243 then: ifConditionBreak . "then"
  244     | ifConditionBreak . "then" "end of line"
  246     | ifConditionBreak .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "else", "elseif", "end", "select", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]

    "then"  décalage et aller à l'état 327

    $défaut  réduction par utilisation de la règle 246 (then)


état 198

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"
  215 variableDeclaration: . assignable "=" variable
  216                    | . assignable "=" functionCall
  217                    | . functionCall "=" variable
  218                    | . functionCall "=" functionCall
  219                    | . assignable "=" ":"
  220                    | . functionCall "=" ":"
  221                    | . assignable "=" returnControl
  222                    | . functionCall "=" returnControl
  223 assignable: . variable "." "identifier"
  224           | . variable "." functionCall
  225           | . functionCall "." variable
  226           | . functionCall "." functionCall
  227           | . "identifier"
  228           | . multipleResults
  229 multipleResults: . "[" matrixOrCellColumns "]"
  230 ifControl: . "if" condition then thenBody "end"
  230          | "if" condition then . thenBody "end"
  231          | . "if" condition then thenBody else elseBody "end"
  231          | "if" condition then . thenBody else elseBody "end"
  232          | . "if" condition then thenBody elseIfControl "end"
  232          | "if" condition then . thenBody elseIfControl "end"
  233 thenBody: . expressions
  234         | .  ["else", "elseif", "end"]
  257 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  258              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  259              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  260              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  283 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  284           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  297 whileControl: . "while" condition whileConditionBreak whileBody "end"
  317 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  318           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  319           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  320           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  321 returnControl: . "return"
  322              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "else"    réduction par utilisation de la règle 234 (thenBody)
    "elseif"  réduction par utilisation de la règle 234 (thenBody)
    "end"     réduction par utilisation de la règle 234 (thenBody)

    expressions            aller à l'état 328
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    thenBody               aller à l'état 329
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 199

  263 selectConditionBreak: "end of line" .

    $défaut  réduction par utilisation de la règle 263 (selectConditionBreak)


état 200

  264 selectConditionBreak: "," . "end of line"

    "end of line"  décalage et aller à l'état 330


état 201

  265 selectConditionBreak: ";" . "end of line"

    "end of line"  décalage et aller à l'état 331


état 202

  259 selectControl: "select" selectable "line comment" . selectConditionBreak casesControl "end"
  260              | "select" selectable "line comment" . selectConditionBreak casesControl else elseBody "end"
  263 selectConditionBreak: . "end of line"
  264                     | . "," "end of line"
  265                     | . ";" "end of line"

    "end of line"  décalage et aller à l'état 199
    ","            décalage et aller à l'état 200
    ";"            décalage et aller à l'état 201

    selectConditionBreak  aller à l'état 332


état 203

  257 selectControl: "select" selectable selectConditionBreak . casesControl "end"
  258              | "select" selectable selectConditionBreak . casesControl else elseBody "end"
  266 casesControl: . "case" variable caseControlBreak caseBody
  267             | . comments "case" variable caseControlBreak caseBody
  268             | . "case" variable "line comment" "end of line" caseBody
  269             | . comments "case" variable "line comment" "end of line" caseBody
  270             | . casesControl "case" variable caseControlBreak caseBody
  271             | . casesControl "case" variable "line comment" "end of line" caseBody
  331 comments: . "line comment" "end of line"
  332         | . comments "line comment" "end of line"

    "case"          décalage et aller à l'état 333
    "line comment"  décalage et aller à l'état 334

    casesControl  aller à l'état 335
    comments      aller à l'état 336


état 204

   70 functionDeclaration: "function" "[" "]" . "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"

    "="  décalage et aller à l'état 337


état 205

   77 idList: "identifier" .

    $défaut  réduction par utilisation de la règle 77 (idList)


état 206

   69 functionDeclaration: "function" "[" functionDeclarationReturns . "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"

    "]"  décalage et aller à l'état 338


état 207

   72 functionDeclarationReturns: idList .  ["]"]
   76 idList: idList . "," "identifier"

    ","  décalage et aller à l'état 339

    $défaut  réduction par utilisation de la règle 72 (functionDeclarationReturns)


état 208

   73 functionDeclarationArguments: "(" . idList ")"
   74                             | "(" . ")"
   76 idList: . idList "," "identifier"
   77       | . "identifier"

    ")"           décalage et aller à l'état 340
    "identifier"  décalage et aller à l'état 205

    idList  aller à l'état 341


état 209

   68 functionDeclaration: "function" "identifier" "=" . "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"

    "identifier"  décalage et aller à l'état 342


état 210

   71 functionDeclaration: "function" "identifier" functionDeclarationArguments . functionDeclarationBreak functionBody "endfunction"
   78 functionDeclarationBreak: . lineEnd
   79                         | . ";"
   80                         | . ";" "end of line"
   81                         | . ","
   82                         | . "," "end of line"
  333 lineEnd: . "end of line"
  334        | . "line comment" "end of line"

    "end of line"   décalage et aller à l'état 62
    ","             décalage et aller à l'état 211
    ";"             décalage et aller à l'état 212
    "line comment"  décalage et aller à l'état 64

    functionDeclarationBreak  aller à l'état 343
    lineEnd                   aller à l'état 215


état 211

   81 functionDeclarationBreak: "," .  [error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "(", "[", "{", "+", "-", "if", "select", "function", "endfunction", "class", "endclass", "property", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
   82                         | "," . "end of line"

    "end of line"  décalage et aller à l'état 344

    "end of line"  [réduction par utilisation de la règle 81 (functionDeclarationBreak)]
    $défaut       réduction par utilisation de la règle 81 (functionDeclarationBreak)


état 212

   79 functionDeclarationBreak: ";" .  [error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "(", "[", "{", "+", "-", "if", "select", "function", "endfunction", "class", "endclass", "property", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
   80                         | ";" . "end of line"

    "end of line"  décalage et aller à l'état 345

    "end of line"  [réduction par utilisation de la règle 79 (functionDeclarationBreak)]
    $défaut       réduction par utilisation de la règle 79 (functionDeclarationBreak)


état 213

   85 classDeclaration: "class" "identifier" "<" . "identifier" functionDeclarationBreak slotsDeclaration "endclass"

    "identifier"  décalage et aller à l'état 346


état 214

   86 classDeclaration: "class" "identifier" functionDeclarationBreak . slotsDeclaration "endclass"
   87 slotsDeclaration: . slotsDeclaration slotDeclaration functionDeclarationBreak
   88                 | . slotsDeclaration functionDeclarationBreak
   89                 | .

    $défaut  réduction par utilisation de la règle 89 (slotsDeclaration)

    slotsDeclaration  aller à l'état 347


état 215

   78 functionDeclarationBreak: lineEnd .

    $défaut  réduction par utilisation de la règle 78 (functionDeclarationBreak)


état 216

  284 forControl: "for" "(" "identifier" . "=" forIterator ")" forConditionBreak forBody "end"

    "="  décalage et aller à l'état 348


état 217

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"
  283 forControl: "for" "identifier" "=" . forIterator forConditionBreak forBody "end"
  285 forIterator: . functionCall
  286            | . variable

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 349
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 350
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    forIterator            aller à l'état 351


état 218

  300 whileConditionBreak: "," .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "end", "select", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  309                    | "," . "end of line"

    "end of line"  décalage et aller à l'état 352

    $défaut  réduction par utilisation de la règle 300 (whileConditionBreak)


état 219

  301 whileConditionBreak: ";" .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "end", "select", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  310                    | ";" . "end of line"

    "end of line"  décalage et aller à l'état 353

    $défaut  réduction par utilisation de la règle 301 (whileConditionBreak)


état 220

  305 whileConditionBreak: "then" .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "end", "select", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  306                    | "then" . ","
  307                    | "then" . ";"
  314                    | "then" . "end of line"
  315                    | "then" . "," "end of line"
  316                    | "then" . ";" "end of line"

    "end of line"  décalage et aller à l'état 354
    ","            décalage et aller à l'état 355
    ";"            décalage et aller à l'état 356

    $défaut  réduction par utilisation de la règle 305 (whileConditionBreak)


état 221

  302 whileConditionBreak: "do" .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "end", "select", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  303                    | "do" . ","
  304                    | "do" . ";"
  311                    | "do" . "end of line"
  312                    | "do" . "," "end of line"
  313                    | "do" . ";" "end of line"

    "end of line"  décalage et aller à l'état 357
    ","            décalage et aller à l'état 358
    ";"            décalage et aller à l'état 359

    $défaut  réduction par utilisation de la règle 302 (whileConditionBreak)


état 222

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"
  215 variableDeclaration: . assignable "=" variable
  216                    | . assignable "=" functionCall
  217                    | . functionCall "=" variable
  218                    | . functionCall "=" functionCall
  219                    | . assignable "=" ":"
  220                    | . functionCall "=" ":"
  221                    | . assignable "=" returnControl
  222                    | . functionCall "=" returnControl
  223 assignable: . variable "." "identifier"
  224           | . variable "." functionCall
  225           | . functionCall "." variable
  226           | . functionCall "." functionCall
  227           | . "identifier"
  228           | . multipleResults
  229 multipleResults: . "[" matrixOrCellColumns "]"
  230 ifControl: . "if" condition then thenBody "end"
  231          | . "if" condition then thenBody else elseBody "end"
  232          | . "if" condition then thenBody elseIfControl "end"
  257 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  258              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  259              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  260              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  283 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  284           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  297 whileControl: . "while" condition whileConditionBreak whileBody "end"
  297             | "while" condition whileConditionBreak . whileBody "end"
  298 whileBody: . expressions
  299          | .  ["end"]
  317 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  318           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  319           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  320           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  321 returnControl: . "return"
  322              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "end"  réduction par utilisation de la règle 299 (whileBody)

    expressions            aller à l'état 360
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    whileBody              aller à l'état 361
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 223

  308 whileConditionBreak: lineEnd .

    $défaut  réduction par utilisation de la règle 308 (whileConditionBreak)


état 224

  317 tryControl: "try" "end of line" expressions . "catch" "end of line" expressions "end"
  319           | "try" "end of line" expressions . "catch" "line comment" "end of line" expressions "end"

    "catch"  décalage et aller à l'état 362


état 225

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"
  215 variableDeclaration: . assignable "=" variable
  216                    | . assignable "=" functionCall
  217                    | . functionCall "=" variable
  218                    | . functionCall "=" functionCall
  219                    | . assignable "=" ":"
  220                    | . functionCall "=" ":"
  221                    | . assignable "=" returnControl
  222                    | . functionCall "=" returnControl
  223 assignable: . variable "." "identifier"
  224           | . variable "." functionCall
  225           | . functionCall "." variable
  226           | . functionCall "." functionCall
  227           | . "identifier"
  228           | . multipleResults
  229 multipleResults: . "[" matrixOrCellColumns "]"
  230 ifControl: . "if" condition then thenBody "end"
  231          | . "if" condition then thenBody else elseBody "end"
  232          | . "if" condition then thenBody elseIfControl "end"
  257 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  258              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  259              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  260              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  283 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  284           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  297 whileControl: . "while" condition whileConditionBreak whileBody "end"
  317 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  318           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  318           | "try" "line comment" "end of line" . expressions "catch" "end of line" expressions "end"
  319           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  320           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  320           | "try" "line comment" "end of line" . expressions "catch" "line comment" "end of line" expressions "end"
  321 returnControl: . "return"
  322              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    expressions            aller à l'état 363
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 226

   55 simpleFunctionCall: "identifier" "(" functionArgs . ")"
   63 functionArgs: functionArgs . "," variable
   64             | functionArgs . "," functionCall
   65             | functionArgs . "," ":"
   66             | functionArgs . "," variableDeclaration
   67             | functionArgs . ","

    ","  décalage et aller à l'état 293
    ")"  décalage et aller à l'état 364


état 227

   43 implicitCallable: implicitCallable "." . "identifier"
   44                 | implicitCallable "." . functionCall
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"

    "%t or %T"    décalage et aller à l'état 278
    "%f or %F"    décalage et aller à l'état 279
    "~ or @"      décalage et aller à l'état 280
    "("           décalage et aller à l'état 281
    "identifier"  décalage et aller à l'état 365

    functionCall           aller à l'état 366
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35


état 228

   46 implicitCallable: implicitCallable rightOperand .

    $défaut  réduction par utilisation de la règle 46 (implicitCallable)


état 229

    5 expressions: recursiveExpression expression "line comment" .  ["end of file", "else", "elseif", "end", "case", "endfunction", "catch"]
    9 recursiveExpression: recursiveExpression expression "line comment" . expressionLineBreak
   12 expressionLineBreak: . ";"
   13                    | . ","
   14                    | . "end of line"
   15                    | . expressionLineBreak ";"
   16                    | . expressionLineBreak ","
   17                    | . expressionLineBreak "end of line"

    "end of line"  décalage et aller à l'état 109
    ","            décalage et aller à l'état 110
    ";"            décalage et aller à l'état 111

    $défaut  réduction par utilisation de la règle 5 (expressions)

    expressionLineBreak  aller à l'état 367


état 230

    8 recursiveExpression: recursiveExpression expression expressionLineBreak .  ["end of file", error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "line comment"]
   15 expressionLineBreak: expressionLineBreak . ";"
   16                    | expressionLineBreak . ","
   17                    | expressionLineBreak . "end of line"

    "end of line"  décalage et aller à l'état 232
    ","            décalage et aller à l'état 233
    ";"            décalage et aller à l'état 234

    $défaut  réduction par utilisation de la règle 8 (recursiveExpression)


état 231

   10 recursiveExpression: expression "line comment" expressionLineBreak .  ["end of file", error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "line comment"]
   15 expressionLineBreak: expressionLineBreak . ";"
   16                    | expressionLineBreak . ","
   17                    | expressionLineBreak . "end of line"

    "end of line"  décalage et aller à l'état 232
    ","            décalage et aller à l'état 233
    ";"            décalage et aller à l'état 234

    $défaut  réduction par utilisation de la règle 10 (recursiveExpression)


état 232

   17 expressionLineBreak: expressionLineBreak "end of line" .

    $défaut  réduction par utilisation de la règle 17 (expressionLineBreak)


état 233

   16 expressionLineBreak: expressionLineBreak "," .

    $défaut  réduction par utilisation de la règle 16 (expressionLineBreak)


état 234

   15 expressionLineBreak: expressionLineBreak ";" .

    $défaut  réduction par utilisation de la règle 15 (expressionLineBreak)


état 235

  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  151              | ":" functionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  158 variable: functionCall . "." variable
  159         | functionCall . "." functionCall
  161         | functionCall . listableEnd
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"         décalage et aller à l'état 115
    "."         décalage et aller à l'état 165
    ".'"        décalage et aller à l'état 118
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 131
    ".^"        décalage et aller à l'état 132
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138

    $défaut  réduction par utilisation de la règle 151 (listableBegin)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145

Conflit entre la règle 151 et le jeton "'" résolu par décalage (COLON < "'").
Conflit entre la règle 151 et le jeton ":" résolu par réduction (%left ":").
Conflit entre la règle 151 et le jeton "." résolu par décalage (COLON < ".").
Conflit entre la règle 151 et le jeton ".'" résolu par décalage (COLON < ".'").
Conflit entre la règle 151 et le jeton "+" résolu par décalage (COLON < "+").
Conflit entre la règle 151 et le jeton "-" résolu par décalage (COLON < "-").
Conflit entre la règle 151 et le jeton "*" résolu par décalage (COLON < "*").
Conflit entre la règle 151 et le jeton ".*" résolu par décalage (COLON < ".*").
Conflit entre la règle 151 et le jeton ".*." résolu par décalage (COLON < ".*.").
Conflit entre la règle 151 et le jeton "/" résolu par décalage (COLON < "/").
Conflit entre la règle 151 et le jeton "./" résolu par décalage (COLON < "./").
Conflit entre la règle 151 et le jeton "/." résolu par décalage (COLON < "/.").
Conflit entre la règle 151 et le jeton "./." résolu par décalage (COLON < "./.").
Conflit entre la règle 151 et le jeton "\\" résolu par décalage (COLON < "\\").
Conflit entre la règle 151 et le jeton ".\\" résolu par décalage (COLON < ".\\").
Conflit entre la règle 151 et le jeton ".\\." résolu par décalage (COLON < ".\\.").
Conflit entre la règle 151 et le jeton "** or ^" résolu par décalage (COLON < "** or ^").
Conflit entre la règle 151 et le jeton ".^" résolu par décalage (COLON < ".^").
Conflit entre la règle 151 et le jeton "==" résolu par décalage (COLON < "==").
Conflit entre la règle 151 et le jeton "<> or ~=" résolu par décalage (COLON < "<> or ~=").
Conflit entre la règle 151 et le jeton "<" résolu par décalage (COLON < "<").
Conflit entre la règle 151 et le jeton "<=" résolu par décalage (COLON < "<=").
Conflit entre la règle 151 et le jeton ">" résolu par décalage (COLON < ">").
Conflit entre la règle 151 et le jeton ">=" résolu par décalage (COLON < ">=").
Conflit entre la règle 151 et le jeton "&" résolu par réduction ("&" < COLON).
Conflit entre la règle 151 et le jeton "|" résolu par réduction ("|" < COLON).


état 236

  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  150              | ":" variable .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  157         | variable . "." functionCall
  160         | variable . listableEnd
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"         décalage et aller à l'état 148
    "."         décalage et aller à l'état 166
    ".'"        décalage et aller à l'état 150
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 151
    ".^"        décalage et aller à l'état 152
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138

    $défaut  réduction par utilisation de la règle 150 (listableBegin)

    rightOperand   aller à l'état 153
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 154
    comparators    aller à l'état 155

Conflit entre la règle 150 et le jeton "'" résolu par décalage (COLON < "'").
Conflit entre la règle 150 et le jeton ":" résolu par réduction (%left ":").
Conflit entre la règle 150 et le jeton "." résolu par décalage (COLON < ".").
Conflit entre la règle 150 et le jeton ".'" résolu par décalage (COLON < ".'").
Conflit entre la règle 150 et le jeton "+" résolu par décalage (COLON < "+").
Conflit entre la règle 150 et le jeton "-" résolu par décalage (COLON < "-").
Conflit entre la règle 150 et le jeton "*" résolu par décalage (COLON < "*").
Conflit entre la règle 150 et le jeton ".*" résolu par décalage (COLON < ".*").
Conflit entre la règle 150 et le jeton ".*." résolu par décalage (COLON < ".*.").
Conflit entre la règle 150 et le jeton "/" résolu par décalage (COLON < "/").
Conflit entre la règle 150 et le jeton "./" résolu par décalage (COLON < "./").
Conflit entre la règle 150 et le jeton "/." résolu par décalage (COLON < "/.").
Conflit entre la règle 150 et le jeton "./." résolu par décalage (COLON < "./.").
Conflit entre la règle 150 et le jeton "\\" résolu par décalage (COLON < "\\").
Conflit entre la règle 150 et le jeton ".\\" résolu par décalage (COLON < ".\\").
Conflit entre la règle 150 et le jeton ".\\." résolu par décalage (COLON < ".\\.").
Conflit entre la règle 150 et le jeton "** or ^" résolu par décalage (COLON < "** or ^").
Conflit entre la règle 150 et le jeton ".^" résolu par décalage (COLON < ".^").
Conflit entre la règle 150 et le jeton "==" résolu par décalage (COLON < "==").
Conflit entre la règle 150 et le jeton "<> or ~=" résolu par décalage (COLON < "<> or ~=").
Conflit entre la règle 150 et le jeton "<" résolu par décalage (COLON < "<").
Conflit entre la règle 150 et le jeton "<=" résolu par décalage (COLON < "<=").
Conflit entre la règle 150 et le jeton ">" résolu par décalage (COLON < ">").
Conflit entre la règle 150 et le jeton ">=" résolu par décalage (COLON < ">=").
Conflit entre la règle 150 et le jeton "&" résolu par réduction ("&" < COLON).
Conflit entre la règle 150 et le jeton "|" résolu par réduction ("|" < COLON).


état 237

  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  158 variable: functionCall . "." variable
  159         | functionCall . "." functionCall
  159         | functionCall "." functionCall .  ["end of file", "end of line", "'", ",", ":", ";", ")", ".", ".'", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "else", "elseif", "end", "case", "endfunction", "catch", "line comment"]
  161         | functionCall . listableEnd
  226 assignable: functionCall "." functionCall .  ["="]
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "="       réduction par utilisation de la règle 226 (assignable)
    $défaut  réduction par utilisation de la règle 159 (variable)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145

Conflit entre la règle 159 et le jeton "'" résolu par réduction ("'" < DOT).
Conflit entre la règle 159 et le jeton ":" résolu par réduction (":" < DOT).
Conflit entre la règle 159 et le jeton "." résolu par réduction (%left ".").
Conflit entre la règle 159 et le jeton ".'" résolu par réduction (".'" < DOT).
Conflit entre la règle 159 et le jeton "+" résolu par réduction ("+" < DOT).
Conflit entre la règle 159 et le jeton "-" résolu par réduction ("-" < DOT).
Conflit entre la règle 159 et le jeton "*" résolu par réduction ("*" < DOT).
Conflit entre la règle 159 et le jeton ".*" résolu par réduction (".*" < DOT).
Conflit entre la règle 159 et le jeton ".*." résolu par réduction (".*." < DOT).
Conflit entre la règle 159 et le jeton "/" résolu par réduction ("/" < DOT).
Conflit entre la règle 159 et le jeton "./" résolu par réduction ("./" < DOT).
Conflit entre la règle 159 et le jeton "/." résolu par réduction ("/." < DOT).
Conflit entre la règle 159 et le jeton "./." résolu par réduction ("./." < DOT).
Conflit entre la règle 159 et le jeton "\\" résolu par réduction ("\\" < DOT).
Conflit entre la règle 159 et le jeton ".\\" résolu par réduction (".\\" < DOT).
Conflit entre la règle 159 et le jeton ".\\." résolu par réduction (".\\." < DOT).
Conflit entre la règle 159 et le jeton "** or ^" résolu par réduction ("** or ^" < DOT).
Conflit entre la règle 159 et le jeton ".^" résolu par réduction (".^" < DOT).
Conflit entre la règle 159 et le jeton "==" résolu par réduction ("==" < DOT).
Conflit entre la règle 159 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < DOT).
Conflit entre la règle 159 et le jeton "<" résolu par réduction ("<" < DOT).
Conflit entre la règle 159 et le jeton "<=" résolu par réduction ("<=" < DOT).
Conflit entre la règle 159 et le jeton ">" résolu par réduction (">" < DOT).
Conflit entre la règle 159 et le jeton ">=" résolu par réduction (">=" < DOT).
Conflit entre la règle 159 et le jeton "&" résolu par réduction ("&" < DOT).
Conflit entre la règle 159 et le jeton "|" résolu par réduction ("|" < DOT).


état 238

  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  157         | variable . "." functionCall
  158         | functionCall "." variable .  ["end of file", "end of line", "'", ",", ":", ";", ")", ".", ".'", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "else", "elseif", "end", "case", "endfunction", "catch", "line comment"]
  160         | variable . listableEnd
  225 assignable: functionCall "." variable .  ["="]
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "="       réduction par utilisation de la règle 225 (assignable)
    $défaut  réduction par utilisation de la règle 158 (variable)

    rightOperand   aller à l'état 153
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 154
    comparators    aller à l'état 155

Conflit entre la règle 158 et le jeton "'" résolu par réduction ("'" < DOT).
Conflit entre la règle 158 et le jeton ":" résolu par réduction (":" < DOT).
Conflit entre la règle 158 et le jeton "." résolu par réduction (%left ".").
Conflit entre la règle 158 et le jeton ".'" résolu par réduction (".'" < DOT).
Conflit entre la règle 158 et le jeton "+" résolu par réduction ("+" < DOT).
Conflit entre la règle 158 et le jeton "-" résolu par réduction ("-" < DOT).
Conflit entre la règle 158 et le jeton "*" résolu par réduction ("*" < DOT).
Conflit entre la règle 158 et le jeton ".*" résolu par réduction (".*" < DOT).
Conflit entre la règle 158 et le jeton ".*." résolu par réduction (".*." < DOT).
Conflit entre la règle 158 et le jeton "/" résolu par réduction ("/" < DOT).
Conflit entre la règle 158 et le jeton "./" résolu par réduction ("./" < DOT).
Conflit entre la règle 158 et le jeton "/." résolu par réduction ("/." < DOT).
Conflit entre la règle 158 et le jeton "./." résolu par réduction ("./." < DOT).
Conflit entre la règle 158 et le jeton "\\" résolu par réduction ("\\" < DOT).
Conflit entre la règle 158 et le jeton ".\\" résolu par réduction (".\\" < DOT).
Conflit entre la règle 158 et le jeton ".\\." résolu par réduction (".\\." < DOT).
Conflit entre la règle 158 et le jeton "** or ^" résolu par réduction ("** or ^" < DOT).
Conflit entre la règle 158 et le jeton ".^" résolu par réduction (".^" < DOT).
Conflit entre la règle 158 et le jeton "==" résolu par réduction ("==" < DOT).
Conflit entre la règle 158 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < DOT).
Conflit entre la règle 158 et le jeton "<" résolu par réduction ("<" < DOT).
Conflit entre la règle 158 et le jeton "<=" résolu par réduction ("<=" < DOT).
Conflit entre la règle 158 et le jeton ">" résolu par réduction (">" < DOT).
Conflit entre la règle 158 et le jeton ">=" résolu par réduction (">=" < DOT).
Conflit entre la règle 158 et le jeton "&" résolu par réduction ("&" < DOT).
Conflit entre la règle 158 et le jeton "|" résolu par réduction ("|" < DOT).


état 239

  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  127             | "+" functionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  158 variable: functionCall . "." variable
  159         | functionCall . "." functionCall
  161         | functionCall . listableEnd
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"        décalage et aller à l'état 115
    "."        décalage et aller à l'état 165
    ".'"       décalage et aller à l'état 118
    "*"        décalage et aller à l'état 121
    ".*"       décalage et aller à l'état 122
    ".*."      décalage et aller à l'état 123
    "/"        décalage et aller à l'état 124
    "./"       décalage et aller à l'état 125
    "/."       décalage et aller à l'état 126
    "./."      décalage et aller à l'état 127
    "\\"       décalage et aller à l'état 128
    ".\\"      décalage et aller à l'état 129
    ".\\."     décalage et aller à l'état 130
    "** or ^"  décalage et aller à l'état 131
    ".^"       décalage et aller à l'état 132

    $défaut  réduction par utilisation de la règle 127 (rightOperand)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145

Conflit entre la règle 127 et le jeton "'" résolu par décalage (PLUS < "'").
Conflit entre la règle 127 et le jeton ":" résolu par réduction (":" < PLUS).
Conflit entre la règle 127 et le jeton "." résolu par décalage (PLUS < ".").
Conflit entre la règle 127 et le jeton ".'" résolu par décalage (PLUS < ".'").
Conflit entre la règle 127 et le jeton "+" résolu par réduction (%left "+").
Conflit entre la règle 127 et le jeton "-" résolu par réduction (%left "-").
Conflit entre la règle 127 et le jeton "*" résolu par décalage (PLUS < "*").
Conflit entre la règle 127 et le jeton ".*" résolu par décalage (PLUS < ".*").
Conflit entre la règle 127 et le jeton ".*." résolu par décalage (PLUS < ".*.").
Conflit entre la règle 127 et le jeton "/" résolu par décalage (PLUS < "/").
Conflit entre la règle 127 et le jeton "./" résolu par décalage (PLUS < "./").
Conflit entre la règle 127 et le jeton "/." résolu par décalage (PLUS < "/.").
Conflit entre la règle 127 et le jeton "./." résolu par décalage (PLUS < "./.").
Conflit entre la règle 127 et le jeton "\\" résolu par décalage (PLUS < "\\").
Conflit entre la règle 127 et le jeton ".\\" résolu par décalage (PLUS < ".\\").
Conflit entre la règle 127 et le jeton ".\\." résolu par décalage (PLUS < ".\\.").
Conflit entre la règle 127 et le jeton "** or ^" résolu par décalage (PLUS < "** or ^").
Conflit entre la règle 127 et le jeton ".^" résolu par décalage (PLUS < ".^").
Conflit entre la règle 127 et le jeton "==" résolu par réduction ("==" < PLUS).
Conflit entre la règle 127 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < PLUS).
Conflit entre la règle 127 et le jeton "<" résolu par réduction ("<" < PLUS).
Conflit entre la règle 127 et le jeton "<=" résolu par réduction ("<=" < PLUS).
Conflit entre la règle 127 et le jeton ">" résolu par réduction (">" < PLUS).
Conflit entre la règle 127 et le jeton ">=" résolu par réduction (">=" < PLUS).
Conflit entre la règle 127 et le jeton "&" résolu par réduction ("&" < PLUS).
Conflit entre la règle 127 et le jeton "|" résolu par réduction ("|" < PLUS).


état 240

  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  126             | "+" variable .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  157         | variable . "." functionCall
  160         | variable . listableEnd
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"        décalage et aller à l'état 148
    "."        décalage et aller à l'état 166
    ".'"       décalage et aller à l'état 150
    "*"        décalage et aller à l'état 121
    ".*"       décalage et aller à l'état 122
    ".*."      décalage et aller à l'état 123
    "/"        décalage et aller à l'état 124
    "./"       décalage et aller à l'état 125
    "/."       décalage et aller à l'état 126
    "./."      décalage et aller à l'état 127
    "\\"       décalage et aller à l'état 128
    ".\\"      décalage et aller à l'état 129
    ".\\."     décalage et aller à l'état 130
    "** or ^"  décalage et aller à l'état 151
    ".^"       décalage et aller à l'état 152

    $défaut  réduction par utilisation de la règle 126 (rightOperand)

    rightOperand   aller à l'état 153
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 154
    comparators    aller à l'état 155

Conflit entre la règle 126 et le jeton "'" résolu par décalage (PLUS < "'").
Conflit entre la règle 126 et le jeton ":" résolu par réduction (":" < PLUS).
Conflit entre la règle 126 et le jeton "." résolu par décalage (PLUS < ".").
Conflit entre la règle 126 et le jeton ".'" résolu par décalage (PLUS < ".'").
Conflit entre la règle 126 et le jeton "+" résolu par réduction (%left "+").
Conflit entre la règle 126 et le jeton "-" résolu par réduction (%left "-").
Conflit entre la règle 126 et le jeton "*" résolu par décalage (PLUS < "*").
Conflit entre la règle 126 et le jeton ".*" résolu par décalage (PLUS < ".*").
Conflit entre la règle 126 et le jeton ".*." résolu par décalage (PLUS < ".*.").
Conflit entre la règle 126 et le jeton "/" résolu par décalage (PLUS < "/").
Conflit entre la règle 126 et le jeton "./" résolu par décalage (PLUS < "./").
Conflit entre la règle 126 et le jeton "/." résolu par décalage (PLUS < "/.").
Conflit entre la règle 126 et le jeton "./." résolu par décalage (PLUS < "./.").
Conflit entre la règle 126 et le jeton "\\" résolu par décalage (PLUS < "\\").
Conflit entre la règle 126 et le jeton ".\\" résolu par décalage (PLUS < ".\\").
Conflit entre la règle 126 et le jeton ".\\." résolu par décalage (PLUS < ".\\.").
Conflit entre la règle 126 et le jeton "** or ^" résolu par décalage (PLUS < "** or ^").
Conflit entre la règle 126 et le jeton ".^" résolu par décalage (PLUS < ".^").
Conflit entre la règle 126 et le jeton "==" résolu par réduction ("==" < PLUS).
Conflit entre la règle 126 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < PLUS).
Conflit entre la règle 126 et le jeton "<" résolu par réduction ("<" < PLUS).
Conflit entre la règle 126 et le jeton "<=" résolu par réduction ("<=" < PLUS).
Conflit entre la règle 126 et le jeton ">" résolu par réduction (">" < PLUS).
Conflit entre la règle 126 et le jeton ">=" résolu par réduction (">=" < PLUS).
Conflit entre la règle 126 et le jeton "&" résolu par réduction ("&" < PLUS).
Conflit entre la règle 126 et le jeton "|" résolu par réduction ("|" < PLUS).


état 241

  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  129             | "-" functionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  158 variable: functionCall . "." variable
  159         | functionCall . "." functionCall
  161         | functionCall . listableEnd
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"        décalage et aller à l'état 115
    "."        décalage et aller à l'état 165
    ".'"       décalage et aller à l'état 118
    "*"        décalage et aller à l'état 121
    ".*"       décalage et aller à l'état 122
    ".*."      décalage et aller à l'état 123
    "/"        décalage et aller à l'état 124
    "./"       décalage et aller à l'état 125
    "/."       décalage et aller à l'état 126
    "./."      décalage et aller à l'état 127
    "\\"       décalage et aller à l'état 128
    ".\\"      décalage et aller à l'état 129
    ".\\."     décalage et aller à l'état 130
    "** or ^"  décalage et aller à l'état 131
    ".^"       décalage et aller à l'état 132

    $défaut  réduction par utilisation de la règle 129 (rightOperand)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145

Conflit entre la règle 129 et le jeton "'" résolu par décalage (MINUS < "'").
Conflit entre la règle 129 et le jeton ":" résolu par réduction (":" < MINUS).
Conflit entre la règle 129 et le jeton "." résolu par décalage (MINUS < ".").
Conflit entre la règle 129 et le jeton ".'" résolu par décalage (MINUS < ".'").
Conflit entre la règle 129 et le jeton "+" résolu par réduction (%left "+").
Conflit entre la règle 129 et le jeton "-" résolu par réduction (%left "-").
Conflit entre la règle 129 et le jeton "*" résolu par décalage (MINUS < "*").
Conflit entre la règle 129 et le jeton ".*" résolu par décalage (MINUS < ".*").
Conflit entre la règle 129 et le jeton ".*." résolu par décalage (MINUS < ".*.").
Conflit entre la règle 129 et le jeton "/" résolu par décalage (MINUS < "/").
Conflit entre la règle 129 et le jeton "./" résolu par décalage (MINUS < "./").
Conflit entre la règle 129 et le jeton "/." résolu par décalage (MINUS < "/.").
Conflit entre la règle 129 et le jeton "./." résolu par décalage (MINUS < "./.").
Conflit entre la règle 129 et le jeton "\\" résolu par décalage (MINUS < "\\").
Conflit entre la règle 129 et le jeton ".\\" résolu par décalage (MINUS < ".\\").
Conflit entre la règle 129 et le jeton ".\\." résolu par décalage (MINUS < ".\\.").
Conflit entre la règle 129 et le jeton "** or ^" résolu par décalage (MINUS < "** or ^").
Conflit entre la règle 129 et le jeton ".^" résolu par décalage (MINUS < ".^").
Conflit entre la règle 129 et le jeton "==" résolu par réduction ("==" < MINUS).
Conflit entre la règle 129 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < MINUS).
Conflit entre la règle 129 et le jeton "<" résolu par réduction ("<" < MINUS).
Conflit entre la règle 129 et le jeton "<=" résolu par réduction ("<=" < MINUS).
Conflit entre la règle 129 et le jeton ">" résolu par réduction (">" < MINUS).
Conflit entre la règle 129 et le jeton ">=" résolu par réduction (">=" < MINUS).
Conflit entre la règle 129 et le jeton "&" résolu par réduction ("&" < MINUS).
Conflit entre la règle 129 et le jeton "|" résolu par réduction ("|" < MINUS).


état 242

  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  128             | "-" variable .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  157         | variable . "." functionCall
  160         | variable . listableEnd
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"        décalage et aller à l'état 148
    "."        décalage et aller à l'état 166
    ".'"       décalage et aller à l'état 150
    "*"        décalage et aller à l'état 121
    ".*"       décalage et aller à l'état 122
    ".*."      décalage et aller à l'état 123
    "/"        décalage et aller à l'état 124
    "./"       décalage et aller à l'état 125
    "/."       décalage et aller à l'état 126
    "./."      décalage et aller à l'état 127
    "\\"       décalage et aller à l'état 128
    ".\\"      décalage et aller à l'état 129
    ".\\."     décalage et aller à l'état 130
    "** or ^"  décalage et aller à l'état 151
    ".^"       décalage et aller à l'état 152

    $défaut  réduction par utilisation de la règle 128 (rightOperand)

    rightOperand   aller à l'état 153
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 154
    comparators    aller à l'état 155

Conflit entre la règle 128 et le jeton "'" résolu par décalage (MINUS < "'").
Conflit entre la règle 128 et le jeton ":" résolu par réduction (":" < MINUS).
Conflit entre la règle 128 et le jeton "." résolu par décalage (MINUS < ".").
Conflit entre la règle 128 et le jeton ".'" résolu par décalage (MINUS < ".'").
Conflit entre la règle 128 et le jeton "+" résolu par réduction (%left "+").
Conflit entre la règle 128 et le jeton "-" résolu par réduction (%left "-").
Conflit entre la règle 128 et le jeton "*" résolu par décalage (MINUS < "*").
Conflit entre la règle 128 et le jeton ".*" résolu par décalage (MINUS < ".*").
Conflit entre la règle 128 et le jeton ".*." résolu par décalage (MINUS < ".*.").
Conflit entre la règle 128 et le jeton "/" résolu par décalage (MINUS < "/").
Conflit entre la règle 128 et le jeton "./" résolu par décalage (MINUS < "./").
Conflit entre la règle 128 et le jeton "/." résolu par décalage (MINUS < "/.").
Conflit entre la règle 128 et le jeton "./." résolu par décalage (MINUS < "./.").
Conflit entre la règle 128 et le jeton "\\" résolu par décalage (MINUS < "\\").
Conflit entre la règle 128 et le jeton ".\\" résolu par décalage (MINUS < ".\\").
Conflit entre la règle 128 et le jeton ".\\." résolu par décalage (MINUS < ".\\.").
Conflit entre la règle 128 et le jeton "** or ^" résolu par décalage (MINUS < "** or ^").
Conflit entre la règle 128 et le jeton ".^" résolu par décalage (MINUS < ".^").
Conflit entre la règle 128 et le jeton "==" résolu par réduction ("==" < MINUS).
Conflit entre la règle 128 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < MINUS).
Conflit entre la règle 128 et le jeton "<" résolu par réduction ("<" < MINUS).
Conflit entre la règle 128 et le jeton "<=" résolu par réduction ("<=" < MINUS).
Conflit entre la règle 128 et le jeton ">" résolu par réduction (">" < MINUS).
Conflit entre la règle 128 et le jeton ">=" résolu par réduction (">=" < MINUS).
Conflit entre la règle 128 et le jeton "&" résolu par réduction ("&" < MINUS).
Conflit entre la règle 128 et le jeton "|" résolu par réduction ("|" < MINUS).


état 243

  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  131             | "*" functionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  158 variable: functionCall . "." variable
  159         | functionCall . "." functionCall
  161         | functionCall . listableEnd
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"        décalage et aller à l'état 115
    "."        décalage et aller à l'état 165
    ".'"       décalage et aller à l'état 118
    "** or ^"  décalage et aller à l'état 131
    ".^"       décalage et aller à l'état 132

    $défaut  réduction par utilisation de la règle 131 (rightOperand)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145

Conflit entre la règle 131 et le jeton "'" résolu par décalage (TIMES < "'").
Conflit entre la règle 131 et le jeton ":" résolu par réduction (":" < TIMES).
Conflit entre la règle 131 et le jeton "." résolu par décalage (TIMES < ".").
Conflit entre la règle 131 et le jeton ".'" résolu par décalage (TIMES < ".'").
Conflit entre la règle 131 et le jeton "+" résolu par réduction ("+" < TIMES).
Conflit entre la règle 131 et le jeton "-" résolu par réduction ("-" < TIMES).
Conflit entre la règle 131 et le jeton "*" résolu par réduction (%left "*").
Conflit entre la règle 131 et le jeton ".*" résolu par réduction (%left ".*").
Conflit entre la règle 131 et le jeton ".*." résolu par réduction (%left ".*.").
Conflit entre la règle 131 et le jeton "/" résolu par réduction (%left "/").
Conflit entre la règle 131 et le jeton "./" résolu par réduction (%left "./").
Conflit entre la règle 131 et le jeton "/." résolu par réduction (%left "/.").
Conflit entre la règle 131 et le jeton "./." résolu par réduction (%left "./.").
Conflit entre la règle 131 et le jeton "\\" résolu par réduction (%left "\\").
Conflit entre la règle 131 et le jeton ".\\" résolu par réduction (%left ".\\").
Conflit entre la règle 131 et le jeton ".\\." résolu par réduction (%left ".\\.").
Conflit entre la règle 131 et le jeton "** or ^" résolu par décalage (TIMES < "** or ^").
Conflit entre la règle 131 et le jeton ".^" résolu par décalage (TIMES < ".^").
Conflit entre la règle 131 et le jeton "==" résolu par réduction ("==" < TIMES).
Conflit entre la règle 131 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < TIMES).
Conflit entre la règle 131 et le jeton "<" résolu par réduction ("<" < TIMES).
Conflit entre la règle 131 et le jeton "<=" résolu par réduction ("<=" < TIMES).
Conflit entre la règle 131 et le jeton ">" résolu par réduction (">" < TIMES).
Conflit entre la règle 131 et le jeton ">=" résolu par réduction (">=" < TIMES).
Conflit entre la règle 131 et le jeton "&" résolu par réduction ("&" < TIMES).
Conflit entre la règle 131 et le jeton "|" résolu par réduction ("|" < TIMES).


état 244

  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  130             | "*" variable .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  157         | variable . "." functionCall
  160         | variable . listableEnd
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"        décalage et aller à l'état 148
    "."        décalage et aller à l'état 166
    ".'"       décalage et aller à l'état 150
    "** or ^"  décalage et aller à l'état 151
    ".^"       décalage et aller à l'état 152

    $défaut  réduction par utilisation de la règle 130 (rightOperand)

    rightOperand   aller à l'état 153
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 154
    comparators    aller à l'état 155

Conflit entre la règle 130 et le jeton "'" résolu par décalage (TIMES < "'").
Conflit entre la règle 130 et le jeton ":" résolu par réduction (":" < TIMES).
Conflit entre la règle 130 et le jeton "." résolu par décalage (TIMES < ".").
Conflit entre la règle 130 et le jeton ".'" résolu par décalage (TIMES < ".'").
Conflit entre la règle 130 et le jeton "+" résolu par réduction ("+" < TIMES).
Conflit entre la règle 130 et le jeton "-" résolu par réduction ("-" < TIMES).
Conflit entre la règle 130 et le jeton "*" résolu par réduction (%left "*").
Conflit entre la règle 130 et le jeton ".*" résolu par réduction (%left ".*").
Conflit entre la règle 130 et le jeton ".*." résolu par réduction (%left ".*.").
Conflit entre la règle 130 et le jeton "/" résolu par réduction (%left "/").
Conflit entre la règle 130 et le jeton "./" résolu par réduction (%left "./").
Conflit entre la règle 130 et le jeton "/." résolu par réduction (%left "/.").
Conflit entre la règle 130 et le jeton "./." résolu par réduction (%left "./.").
Conflit entre la règle 130 et le jeton "\\" résolu par réduction (%left "\\").
Conflit entre la règle 130 et le jeton ".\\" résolu par réduction (%left ".\\").
Conflit entre la règle 130 et le jeton ".\\." résolu par réduction (%left ".\\.").
Conflit entre la règle 130 et le jeton "** or ^" résolu par décalage (TIMES < "** or ^").
Conflit entre la règle 130 et le jeton ".^" résolu par décalage (TIMES < ".^").
Conflit entre la règle 130 et le jeton "==" résolu par réduction ("==" < TIMES).
Conflit entre la règle 130 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < TIMES).
Conflit entre la règle 130 et le jeton "<" résolu par réduction ("<" < TIMES).
Conflit entre la règle 130 et le jeton "<=" résolu par réduction ("<=" < TIMES).
Conflit entre la règle 130 et le jeton ">" résolu par réduction (">" < TIMES).
Conflit entre la règle 130 et le jeton ">=" résolu par réduction (">=" < TIMES).
Conflit entre la règle 130 et le jeton "&" résolu par réduction ("&" < TIMES).
Conflit entre la règle 130 et le jeton "|" résolu par réduction ("|" < TIMES).


état 245

  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  133             | ".*" functionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  158 variable: functionCall . "." variable
  159         | functionCall . "." functionCall
  161         | functionCall . listableEnd
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"        décalage et aller à l'état 115
    "."        décalage et aller à l'état 165
    ".'"       décalage et aller à l'état 118
    "** or ^"  décalage et aller à l'état 131
    ".^"       décalage et aller à l'état 132

    $défaut  réduction par utilisation de la règle 133 (rightOperand)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145

Conflit entre la règle 133 et le jeton "'" résolu par décalage (DOTTIMES < "'").
Conflit entre la règle 133 et le jeton ":" résolu par réduction (":" < DOTTIMES).
Conflit entre la règle 133 et le jeton "." résolu par décalage (DOTTIMES < ".").
Conflit entre la règle 133 et le jeton ".'" résolu par décalage (DOTTIMES < ".'").
Conflit entre la règle 133 et le jeton "+" résolu par réduction ("+" < DOTTIMES).
Conflit entre la règle 133 et le jeton "-" résolu par réduction ("-" < DOTTIMES).
Conflit entre la règle 133 et le jeton "*" résolu par réduction (%left "*").
Conflit entre la règle 133 et le jeton ".*" résolu par réduction (%left ".*").
Conflit entre la règle 133 et le jeton ".*." résolu par réduction (%left ".*.").
Conflit entre la règle 133 et le jeton "/" résolu par réduction (%left "/").
Conflit entre la règle 133 et le jeton "./" résolu par réduction (%left "./").
Conflit entre la règle 133 et le jeton "/." résolu par réduction (%left "/.").
Conflit entre la règle 133 et le jeton "./." résolu par réduction (%left "./.").
Conflit entre la règle 133 et le jeton "\\" résolu par réduction (%left "\\").
Conflit entre la règle 133 et le jeton ".\\" résolu par réduction (%left ".\\").
Conflit entre la règle 133 et le jeton ".\\." résolu par réduction (%left ".\\.").
Conflit entre la règle 133 et le jeton "** or ^" résolu par décalage (DOTTIMES < "** or ^").
Conflit entre la règle 133 et le jeton ".^" résolu par décalage (DOTTIMES < ".^").
Conflit entre la règle 133 et le jeton "==" résolu par réduction ("==" < DOTTIMES).
Conflit entre la règle 133 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < DOTTIMES).
Conflit entre la règle 133 et le jeton "<" résolu par réduction ("<" < DOTTIMES).
Conflit entre la règle 133 et le jeton "<=" résolu par réduction ("<=" < DOTTIMES).
Conflit entre la règle 133 et le jeton ">" résolu par réduction (">" < DOTTIMES).
Conflit entre la règle 133 et le jeton ">=" résolu par réduction (">=" < DOTTIMES).
Conflit entre la règle 133 et le jeton "&" résolu par réduction ("&" < DOTTIMES).
Conflit entre la règle 133 et le jeton "|" résolu par réduction ("|" < DOTTIMES).


état 246

  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  132             | ".*" variable .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  157         | variable . "." functionCall
  160         | variable . listableEnd
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"        décalage et aller à l'état 148
    "."        décalage et aller à l'état 166
    ".'"       décalage et aller à l'état 150
    "** or ^"  décalage et aller à l'état 151
    ".^"       décalage et aller à l'état 152

    $défaut  réduction par utilisation de la règle 132 (rightOperand)

    rightOperand   aller à l'état 153
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 154
    comparators    aller à l'état 155

Conflit entre la règle 132 et le jeton "'" résolu par décalage (DOTTIMES < "'").
Conflit entre la règle 132 et le jeton ":" résolu par réduction (":" < DOTTIMES).
Conflit entre la règle 132 et le jeton "." résolu par décalage (DOTTIMES < ".").
Conflit entre la règle 132 et le jeton ".'" résolu par décalage (DOTTIMES < ".'").
Conflit entre la règle 132 et le jeton "+" résolu par réduction ("+" < DOTTIMES).
Conflit entre la règle 132 et le jeton "-" résolu par réduction ("-" < DOTTIMES).
Conflit entre la règle 132 et le jeton "*" résolu par réduction (%left "*").
Conflit entre la règle 132 et le jeton ".*" résolu par réduction (%left ".*").
Conflit entre la règle 132 et le jeton ".*." résolu par réduction (%left ".*.").
Conflit entre la règle 132 et le jeton "/" résolu par réduction (%left "/").
Conflit entre la règle 132 et le jeton "./" résolu par réduction (%left "./").
Conflit entre la règle 132 et le jeton "/." résolu par réduction (%left "/.").
Conflit entre la règle 132 et le jeton "./." résolu par réduction (%left "./.").
Conflit entre la règle 132 et le jeton "\\" résolu par réduction (%left "\\").
Conflit entre la règle 132 et le jeton ".\\" résolu par réduction (%left ".\\").
Conflit entre la règle 132 et le jeton ".\\." résolu par réduction (%left ".\\.").
Conflit entre la règle 132 et le jeton "** or ^" résolu par décalage (DOTTIMES < "** or ^").
Conflit entre la règle 132 et le jeton ".^" résolu par décalage (DOTTIMES < ".^").
Conflit entre la règle 132 et le jeton "==" résolu par réduction ("==" < DOTTIMES).
Conflit entre la règle 132 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < DOTTIMES).
Conflit entre la règle 132 et le jeton "<" résolu par réduction ("<" < DOTTIMES).
Conflit entre la règle 132 et le jeton "<=" résolu par réduction ("<=" < DOTTIMES).
Conflit entre la règle 132 et le jeton ">" résolu par réduction (">" < DOTTIMES).
Conflit entre la règle 132 et le jeton ">=" résolu par réduction (">=" < DOTTIMES).
Conflit entre la règle 132 et le jeton "&" résolu par réduction ("&" < DOTTIMES).
Conflit entre la règle 132 et le jeton "|" résolu par réduction ("|" < DOTTIMES).


état 247

  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  135             | ".*." functionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  158 variable: functionCall . "." variable
  159         | functionCall . "." functionCall
  161         | functionCall . listableEnd
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"        décalage et aller à l'état 115
    "."        décalage et aller à l'état 165
    ".'"       décalage et aller à l'état 118
    "** or ^"  décalage et aller à l'état 131
    ".^"       décalage et aller à l'état 132

    $défaut  réduction par utilisation de la règle 135 (rightOperand)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145

Conflit entre la règle 135 et le jeton "'" résolu par décalage (KRONTIMES < "'").
Conflit entre la règle 135 et le jeton ":" résolu par réduction (":" < KRONTIMES).
Conflit entre la règle 135 et le jeton "." résolu par décalage (KRONTIMES < ".").
Conflit entre la règle 135 et le jeton ".'" résolu par décalage (KRONTIMES < ".'").
Conflit entre la règle 135 et le jeton "+" résolu par réduction ("+" < KRONTIMES).
Conflit entre la règle 135 et le jeton "-" résolu par réduction ("-" < KRONTIMES).
Conflit entre la règle 135 et le jeton "*" résolu par réduction (%left "*").
Conflit entre la règle 135 et le jeton ".*" résolu par réduction (%left ".*").
Conflit entre la règle 135 et le jeton ".*." résolu par réduction (%left ".*.").
Conflit entre la règle 135 et le jeton "/" résolu par réduction (%left "/").
Conflit entre la règle 135 et le jeton "./" résolu par réduction (%left "./").
Conflit entre la règle 135 et le jeton "/." résolu par réduction (%left "/.").
Conflit entre la règle 135 et le jeton "./." résolu par réduction (%left "./.").
Conflit entre la règle 135 et le jeton "\\" résolu par réduction (%left "\\").
Conflit entre la règle 135 et le jeton ".\\" résolu par réduction (%left ".\\").
Conflit entre la règle 135 et le jeton ".\\." résolu par réduction (%left ".\\.").
Conflit entre la règle 135 et le jeton "** or ^" résolu par décalage (KRONTIMES < "** or ^").
Conflit entre la règle 135 et le jeton ".^" résolu par décalage (KRONTIMES < ".^").
Conflit entre la règle 135 et le jeton "==" résolu par réduction ("==" < KRONTIMES).
Conflit entre la règle 135 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < KRONTIMES).
Conflit entre la règle 135 et le jeton "<" résolu par réduction ("<" < KRONTIMES).
Conflit entre la règle 135 et le jeton "<=" résolu par réduction ("<=" < KRONTIMES).
Conflit entre la règle 135 et le jeton ">" résolu par réduction (">" < KRONTIMES).
Conflit entre la règle 135 et le jeton ">=" résolu par réduction (">=" < KRONTIMES).
Conflit entre la règle 135 et le jeton "&" résolu par réduction ("&" < KRONTIMES).
Conflit entre la règle 135 et le jeton "|" résolu par réduction ("|" < KRONTIMES).


état 248

  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  134             | ".*." variable .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  157         | variable . "." functionCall
  160         | variable . listableEnd
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"        décalage et aller à l'état 148
    "."        décalage et aller à l'état 166
    ".'"       décalage et aller à l'état 150
    "** or ^"  décalage et aller à l'état 151
    ".^"       décalage et aller à l'état 152

    $défaut  réduction par utilisation de la règle 134 (rightOperand)

    rightOperand   aller à l'état 153
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 154
    comparators    aller à l'état 155

Conflit entre la règle 134 et le jeton "'" résolu par décalage (KRONTIMES < "'").
Conflit entre la règle 134 et le jeton ":" résolu par réduction (":" < KRONTIMES).
Conflit entre la règle 134 et le jeton "." résolu par décalage (KRONTIMES < ".").
Conflit entre la règle 134 et le jeton ".'" résolu par décalage (KRONTIMES < ".'").
Conflit entre la règle 134 et le jeton "+" résolu par réduction ("+" < KRONTIMES).
Conflit entre la règle 134 et le jeton "-" résolu par réduction ("-" < KRONTIMES).
Conflit entre la règle 134 et le jeton "*" résolu par réduction (%left "*").
Conflit entre la règle 134 et le jeton ".*" résolu par réduction (%left ".*").
Conflit entre la règle 134 et le jeton ".*." résolu par réduction (%left ".*.").
Conflit entre la règle 134 et le jeton "/" résolu par réduction (%left "/").
Conflit entre la règle 134 et le jeton "./" résolu par réduction (%left "./").
Conflit entre la règle 134 et le jeton "/." résolu par réduction (%left "/.").
Conflit entre la règle 134 et le jeton "./." résolu par réduction (%left "./.").
Conflit entre la règle 134 et le jeton "\\" résolu par réduction (%left "\\").
Conflit entre la règle 134 et le jeton ".\\" résolu par réduction (%left ".\\").
Conflit entre la règle 134 et le jeton ".\\." résolu par réduction (%left ".\\.").
Conflit entre la règle 134 et le jeton "** or ^" résolu par décalage (KRONTIMES < "** or ^").
Conflit entre la règle 134 et le jeton ".^" résolu par décalage (KRONTIMES < ".^").
Conflit entre la règle 134 et le jeton "==" résolu par réduction ("==" < KRONTIMES).
Conflit entre la règle 134 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < KRONTIMES).
Conflit entre la règle 134 et le jeton "<" résolu par réduction ("<" < KRONTIMES).
Conflit entre la règle 134 et le jeton "<=" résolu par réduction ("<=" < KRONTIMES).
Conflit entre la règle 134 et le jeton ">" résolu par réduction (">" < KRONTIMES).
Conflit entre la règle 134 et le jeton ">=" résolu par réduction (">=" < KRONTIMES).
Conflit entre la règle 134 et le jeton "&" résolu par réduction ("&" < KRONTIMES).
Conflit entre la règle 134 et le jeton "|" résolu par réduction ("|" < KRONTIMES).


état 249

  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  137             | "/" functionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  158 variable: functionCall . "." variable
  159         | functionCall . "." functionCall
  161         | functionCall . listableEnd
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"        décalage et aller à l'état 115
    "."        décalage et aller à l'état 165
    ".'"       décalage et aller à l'état 118
    "** or ^"  décalage et aller à l'état 131
    ".^"       décalage et aller à l'état 132

    $défaut  réduction par utilisation de la règle 137 (rightOperand)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145

Conflit entre la règle 137 et le jeton "'" résolu par décalage (DIVIDE < "'").
Conflit entre la règle 137 et le jeton ":" résolu par réduction (":" < DIVIDE).
Conflit entre la règle 137 et le jeton "." résolu par décalage (DIVIDE < ".").
Conflit entre la règle 137 et le jeton ".'" résolu par décalage (DIVIDE < ".'").
Conflit entre la règle 137 et le jeton "+" résolu par réduction ("+" < DIVIDE).
Conflit entre la règle 137 et le jeton "-" résolu par réduction ("-" < DIVIDE).
Conflit entre la règle 137 et le jeton "*" résolu par réduction (%left "*").
Conflit entre la règle 137 et le jeton ".*" résolu par réduction (%left ".*").
Conflit entre la règle 137 et le jeton ".*." résolu par réduction (%left ".*.").
Conflit entre la règle 137 et le jeton "/" résolu par réduction (%left "/").
Conflit entre la règle 137 et le jeton "./" résolu par réduction (%left "./").
Conflit entre la règle 137 et le jeton "/." résolu par réduction (%left "/.").
Conflit entre la règle 137 et le jeton "./." résolu par réduction (%left "./.").
Conflit entre la règle 137 et le jeton "\\" résolu par réduction (%left "\\").
Conflit entre la règle 137 et le jeton ".\\" résolu par réduction (%left ".\\").
Conflit entre la règle 137 et le jeton ".\\." résolu par réduction (%left ".\\.").
Conflit entre la règle 137 et le jeton "** or ^" résolu par décalage (DIVIDE < "** or ^").
Conflit entre la règle 137 et le jeton ".^" résolu par décalage (DIVIDE < ".^").
Conflit entre la règle 137 et le jeton "==" résolu par réduction ("==" < DIVIDE).
Conflit entre la règle 137 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < DIVIDE).
Conflit entre la règle 137 et le jeton "<" résolu par réduction ("<" < DIVIDE).
Conflit entre la règle 137 et le jeton "<=" résolu par réduction ("<=" < DIVIDE).
Conflit entre la règle 137 et le jeton ">" résolu par réduction (">" < DIVIDE).
Conflit entre la règle 137 et le jeton ">=" résolu par réduction (">=" < DIVIDE).
Conflit entre la règle 137 et le jeton "&" résolu par réduction ("&" < DIVIDE).
Conflit entre la règle 137 et le jeton "|" résolu par réduction ("|" < DIVIDE).


état 250

  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  136             | "/" variable .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  157         | variable . "." functionCall
  160         | variable . listableEnd
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"        décalage et aller à l'état 148
    "."        décalage et aller à l'état 166
    ".'"       décalage et aller à l'état 150
    "** or ^"  décalage et aller à l'état 151
    ".^"       décalage et aller à l'état 152

    $défaut  réduction par utilisation de la règle 136 (rightOperand)

    rightOperand   aller à l'état 153
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 154
    comparators    aller à l'état 155

Conflit entre la règle 136 et le jeton "'" résolu par décalage (DIVIDE < "'").
Conflit entre la règle 136 et le jeton ":" résolu par réduction (":" < DIVIDE).
Conflit entre la règle 136 et le jeton "." résolu par décalage (DIVIDE < ".").
Conflit entre la règle 136 et le jeton ".'" résolu par décalage (DIVIDE < ".'").
Conflit entre la règle 136 et le jeton "+" résolu par réduction ("+" < DIVIDE).
Conflit entre la règle 136 et le jeton "-" résolu par réduction ("-" < DIVIDE).
Conflit entre la règle 136 et le jeton "*" résolu par réduction (%left "*").
Conflit entre la règle 136 et le jeton ".*" résolu par réduction (%left ".*").
Conflit entre la règle 136 et le jeton ".*." résolu par réduction (%left ".*.").
Conflit entre la règle 136 et le jeton "/" résolu par réduction (%left "/").
Conflit entre la règle 136 et le jeton "./" résolu par réduction (%left "./").
Conflit entre la règle 136 et le jeton "/." résolu par réduction (%left "/.").
Conflit entre la règle 136 et le jeton "./." résolu par réduction (%left "./.").
Conflit entre la règle 136 et le jeton "\\" résolu par réduction (%left "\\").
Conflit entre la règle 136 et le jeton ".\\" résolu par réduction (%left ".\\").
Conflit entre la règle 136 et le jeton ".\\." résolu par réduction (%left ".\\.").
Conflit entre la règle 136 et le jeton "** or ^" résolu par décalage (DIVIDE < "** or ^").
Conflit entre la règle 136 et le jeton ".^" résolu par décalage (DIVIDE < ".^").
Conflit entre la règle 136 et le jeton "==" résolu par réduction ("==" < DIVIDE).
Conflit entre la règle 136 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < DIVIDE).
Conflit entre la règle 136 et le jeton "<" résolu par réduction ("<" < DIVIDE).
Conflit entre la règle 136 et le jeton "<=" résolu par réduction ("<=" < DIVIDE).
Conflit entre la règle 136 et le jeton ">" résolu par réduction (">" < DIVIDE).
Conflit entre la règle 136 et le jeton ">=" résolu par réduction (">=" < DIVIDE).
Conflit entre la règle 136 et le jeton "&" résolu par réduction ("&" < DIVIDE).
Conflit entre la règle 136 et le jeton "|" résolu par réduction ("|" < DIVIDE).


état 251

  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  139             | "./" functionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  158 variable: functionCall . "." variable
  159         | functionCall . "." functionCall
  161         | functionCall . listableEnd
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"        décalage et aller à l'état 115
    "."        décalage et aller à l'état 165
    ".'"       décalage et aller à l'état 118
    "** or ^"  décalage et aller à l'état 131
    ".^"       décalage et aller à l'état 132

    $défaut  réduction par utilisation de la règle 139 (rightOperand)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145

Conflit entre la règle 139 et le jeton "'" résolu par décalage (DOTDIVIDE < "'").
Conflit entre la règle 139 et le jeton ":" résolu par réduction (":" < DOTDIVIDE).
Conflit entre la règle 139 et le jeton "." résolu par décalage (DOTDIVIDE < ".").
Conflit entre la règle 139 et le jeton ".'" résolu par décalage (DOTDIVIDE < ".'").
Conflit entre la règle 139 et le jeton "+" résolu par réduction ("+" < DOTDIVIDE).
Conflit entre la règle 139 et le jeton "-" résolu par réduction ("-" < DOTDIVIDE).
Conflit entre la règle 139 et le jeton "*" résolu par réduction (%left "*").
Conflit entre la règle 139 et le jeton ".*" résolu par réduction (%left ".*").
Conflit entre la règle 139 et le jeton ".*." résolu par réduction (%left ".*.").
Conflit entre la règle 139 et le jeton "/" résolu par réduction (%left "/").
Conflit entre la règle 139 et le jeton "./" résolu par réduction (%left "./").
Conflit entre la règle 139 et le jeton "/." résolu par réduction (%left "/.").
Conflit entre la règle 139 et le jeton "./." résolu par réduction (%left "./.").
Conflit entre la règle 139 et le jeton "\\" résolu par réduction (%left "\\").
Conflit entre la règle 139 et le jeton ".\\" résolu par réduction (%left ".\\").
Conflit entre la règle 139 et le jeton ".\\." résolu par réduction (%left ".\\.").
Conflit entre la règle 139 et le jeton "** or ^" résolu par décalage (DOTDIVIDE < "** or ^").
Conflit entre la règle 139 et le jeton ".^" résolu par décalage (DOTDIVIDE < ".^").
Conflit entre la règle 139 et le jeton "==" résolu par réduction ("==" < DOTDIVIDE).
Conflit entre la règle 139 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < DOTDIVIDE).
Conflit entre la règle 139 et le jeton "<" résolu par réduction ("<" < DOTDIVIDE).
Conflit entre la règle 139 et le jeton "<=" résolu par réduction ("<=" < DOTDIVIDE).
Conflit entre la règle 139 et le jeton ">" résolu par réduction (">" < DOTDIVIDE).
Conflit entre la règle 139 et le jeton ">=" résolu par réduction (">=" < DOTDIVIDE).
Conflit entre la règle 139 et le jeton "&" résolu par réduction ("&" < DOTDIVIDE).
Conflit entre la règle 139 et le jeton "|" résolu par réduction ("|" < DOTDIVIDE).


état 252

  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  138             | "./" variable .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  157         | variable . "." functionCall
  160         | variable . listableEnd
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"        décalage et aller à l'état 148
    "."        décalage et aller à l'état 166
    ".'"       décalage et aller à l'état 150
    "** or ^"  décalage et aller à l'état 151
    ".^"       décalage et aller à l'état 152

    $défaut  réduction par utilisation de la règle 138 (rightOperand)

    rightOperand   aller à l'état 153
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 154
    comparators    aller à l'état 155

Conflit entre la règle 138 et le jeton "'" résolu par décalage (DOTDIVIDE < "'").
Conflit entre la règle 138 et le jeton ":" résolu par réduction (":" < DOTDIVIDE).
Conflit entre la règle 138 et le jeton "." résolu par décalage (DOTDIVIDE < ".").
Conflit entre la règle 138 et le jeton ".'" résolu par décalage (DOTDIVIDE < ".'").
Conflit entre la règle 138 et le jeton "+" résolu par réduction ("+" < DOTDIVIDE).
Conflit entre la règle 138 et le jeton "-" résolu par réduction ("-" < DOTDIVIDE).
Conflit entre la règle 138 et le jeton "*" résolu par réduction (%left "*").
Conflit entre la règle 138 et le jeton ".*" résolu par réduction (%left ".*").
Conflit entre la règle 138 et le jeton ".*." résolu par réduction (%left ".*.").
Conflit entre la règle 138 et le jeton "/" résolu par réduction (%left "/").
Conflit entre la règle 138 et le jeton "./" résolu par réduction (%left "./").
Conflit entre la règle 138 et le jeton "/." résolu par réduction (%left "/.").
Conflit entre la règle 138 et le jeton "./." résolu par réduction (%left "./.").
Conflit entre la règle 138 et le jeton "\\" résolu par réduction (%left "\\").
Conflit entre la règle 138 et le jeton ".\\" résolu par réduction (%left ".\\").
Conflit entre la règle 138 et le jeton ".\\." résolu par réduction (%left ".\\.").
Conflit entre la règle 138 et le jeton "** or ^" résolu par décalage (DOTDIVIDE < "** or ^").
Conflit entre la règle 138 et le jeton ".^" résolu par décalage (DOTDIVIDE < ".^").
Conflit entre la règle 138 et le jeton "==" résolu par réduction ("==" < DOTDIVIDE).
Conflit entre la règle 138 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < DOTDIVIDE).
Conflit entre la règle 138 et le jeton "<" résolu par réduction ("<" < DOTDIVIDE).
Conflit entre la règle 138 et le jeton "<=" résolu par réduction ("<=" < DOTDIVIDE).
Conflit entre la règle 138 et le jeton ">" résolu par réduction (">" < DOTDIVIDE).
Conflit entre la règle 138 et le jeton ">=" résolu par réduction (">=" < DOTDIVIDE).
Conflit entre la règle 138 et le jeton "&" résolu par réduction ("&" < DOTDIVIDE).
Conflit entre la règle 138 et le jeton "|" résolu par réduction ("|" < DOTDIVIDE).


état 253

  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  143             | "/." functionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  158 variable: functionCall . "." variable
  159         | functionCall . "." functionCall
  161         | functionCall . listableEnd
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"        décalage et aller à l'état 115
    "."        décalage et aller à l'état 165
    ".'"       décalage et aller à l'état 118
    "** or ^"  décalage et aller à l'état 131
    ".^"       décalage et aller à l'état 132

    $défaut  réduction par utilisation de la règle 143 (rightOperand)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145

Conflit entre la règle 143 et le jeton "'" résolu par décalage (CONTROLDIVIDE < "'").
Conflit entre la règle 143 et le jeton ":" résolu par réduction (":" < CONTROLDIVIDE).
Conflit entre la règle 143 et le jeton "." résolu par décalage (CONTROLDIVIDE < ".").
Conflit entre la règle 143 et le jeton ".'" résolu par décalage (CONTROLDIVIDE < ".'").
Conflit entre la règle 143 et le jeton "+" résolu par réduction ("+" < CONTROLDIVIDE).
Conflit entre la règle 143 et le jeton "-" résolu par réduction ("-" < CONTROLDIVIDE).
Conflit entre la règle 143 et le jeton "*" résolu par réduction (%left "*").
Conflit entre la règle 143 et le jeton ".*" résolu par réduction (%left ".*").
Conflit entre la règle 143 et le jeton ".*." résolu par réduction (%left ".*.").
Conflit entre la règle 143 et le jeton "/" résolu par réduction (%left "/").
Conflit entre la règle 143 et le jeton "./" résolu par réduction (%left "./").
Conflit entre la règle 143 et le jeton "/." résolu par réduction (%left "/.").
Conflit entre la règle 143 et le jeton "./." résolu par réduction (%left "./.").
Conflit entre la règle 143 et le jeton "\\" résolu par réduction (%left "\\").
Conflit entre la règle 143 et le jeton ".\\" résolu par réduction (%left ".\\").
Conflit entre la règle 143 et le jeton ".\\." résolu par réduction (%left ".\\.").
Conflit entre la règle 143 et le jeton "** or ^" résolu par décalage (CONTROLDIVIDE < "** or ^").
Conflit entre la règle 143 et le jeton ".^" résolu par décalage (CONTROLDIVIDE < ".^").
Conflit entre la règle 143 et le jeton "==" résolu par réduction ("==" < CONTROLDIVIDE).
Conflit entre la règle 143 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < CONTROLDIVIDE).
Conflit entre la règle 143 et le jeton "<" résolu par réduction ("<" < CONTROLDIVIDE).
Conflit entre la règle 143 et le jeton "<=" résolu par réduction ("<=" < CONTROLDIVIDE).
Conflit entre la règle 143 et le jeton ">" résolu par réduction (">" < CONTROLDIVIDE).
Conflit entre la règle 143 et le jeton ">=" résolu par réduction (">=" < CONTROLDIVIDE).
Conflit entre la règle 143 et le jeton "&" résolu par réduction ("&" < CONTROLDIVIDE).
Conflit entre la règle 143 et le jeton "|" résolu par réduction ("|" < CONTROLDIVIDE).


état 254

  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  142             | "/." variable .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  157         | variable . "." functionCall
  160         | variable . listableEnd
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"        décalage et aller à l'état 148
    "."        décalage et aller à l'état 166
    ".'"       décalage et aller à l'état 150
    "** or ^"  décalage et aller à l'état 151
    ".^"       décalage et aller à l'état 152

    $défaut  réduction par utilisation de la règle 142 (rightOperand)

    rightOperand   aller à l'état 153
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 154
    comparators    aller à l'état 155

Conflit entre la règle 142 et le jeton "'" résolu par décalage (CONTROLDIVIDE < "'").
Conflit entre la règle 142 et le jeton ":" résolu par réduction (":" < CONTROLDIVIDE).
Conflit entre la règle 142 et le jeton "." résolu par décalage (CONTROLDIVIDE < ".").
Conflit entre la règle 142 et le jeton ".'" résolu par décalage (CONTROLDIVIDE < ".'").
Conflit entre la règle 142 et le jeton "+" résolu par réduction ("+" < CONTROLDIVIDE).
Conflit entre la règle 142 et le jeton "-" résolu par réduction ("-" < CONTROLDIVIDE).
Conflit entre la règle 142 et le jeton "*" résolu par réduction (%left "*").
Conflit entre la règle 142 et le jeton ".*" résolu par réduction (%left ".*").
Conflit entre la règle 142 et le jeton ".*." résolu par réduction (%left ".*.").
Conflit entre la règle 142 et le jeton "/" résolu par réduction (%left "/").
Conflit entre la règle 142 et le jeton "./" résolu par réduction (%left "./").
Conflit entre la règle 142 et le jeton "/." résolu par réduction (%left "/.").
Conflit entre la règle 142 et le jeton "./." résolu par réduction (%left "./.").
Conflit entre la règle 142 et le jeton "\\" résolu par réduction (%left "\\").
Conflit entre la règle 142 et le jeton ".\\" résolu par réduction (%left ".\\").
Conflit entre la règle 142 et le jeton ".\\." résolu par réduction (%left ".\\.").
Conflit entre la règle 142 et le jeton "** or ^" résolu par décalage (CONTROLDIVIDE < "** or ^").
Conflit entre la règle 142 et le jeton ".^" résolu par décalage (CONTROLDIVIDE < ".^").
Conflit entre la règle 142 et le jeton "==" résolu par réduction ("==" < CONTROLDIVIDE).
Conflit entre la règle 142 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < CONTROLDIVIDE).
Conflit entre la règle 142 et le jeton "<" résolu par réduction ("<" < CONTROLDIVIDE).
Conflit entre la règle 142 et le jeton "<=" résolu par réduction ("<=" < CONTROLDIVIDE).
Conflit entre la règle 142 et le jeton ">" résolu par réduction (">" < CONTROLDIVIDE).
Conflit entre la règle 142 et le jeton ">=" résolu par réduction (">=" < CONTROLDIVIDE).
Conflit entre la règle 142 et le jeton "&" résolu par réduction ("&" < CONTROLDIVIDE).
Conflit entre la règle 142 et le jeton "|" résolu par réduction ("|" < CONTROLDIVIDE).


état 255

  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  141             | "./." functionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  158 variable: functionCall . "." variable
  159         | functionCall . "." functionCall
  161         | functionCall . listableEnd
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"        décalage et aller à l'état 115
    "."        décalage et aller à l'état 165
    ".'"       décalage et aller à l'état 118
    "** or ^"  décalage et aller à l'état 131
    ".^"       décalage et aller à l'état 132

    $défaut  réduction par utilisation de la règle 141 (rightOperand)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145

Conflit entre la règle 141 et le jeton "'" résolu par décalage (KRONDIVIDE < "'").
Conflit entre la règle 141 et le jeton ":" résolu par réduction (":" < KRONDIVIDE).
Conflit entre la règle 141 et le jeton "." résolu par décalage (KRONDIVIDE < ".").
Conflit entre la règle 141 et le jeton ".'" résolu par décalage (KRONDIVIDE < ".'").
Conflit entre la règle 141 et le jeton "+" résolu par réduction ("+" < KRONDIVIDE).
Conflit entre la règle 141 et le jeton "-" résolu par réduction ("-" < KRONDIVIDE).
Conflit entre la règle 141 et le jeton "*" résolu par réduction (%left "*").
Conflit entre la règle 141 et le jeton ".*" résolu par réduction (%left ".*").
Conflit entre la règle 141 et le jeton ".*." résolu par réduction (%left ".*.").
Conflit entre la règle 141 et le jeton "/" résolu par réduction (%left "/").
Conflit entre la règle 141 et le jeton "./" résolu par réduction (%left "./").
Conflit entre la règle 141 et le jeton "/." résolu par réduction (%left "/.").
Conflit entre la règle 141 et le jeton "./." résolu par réduction (%left "./.").
Conflit entre la règle 141 et le jeton "\\" résolu par réduction (%left "\\").
Conflit entre la règle 141 et le jeton ".\\" résolu par réduction (%left ".\\").
Conflit entre la règle 141 et le jeton ".\\." résolu par réduction (%left ".\\.").
Conflit entre la règle 141 et le jeton "** or ^" résolu par décalage (KRONDIVIDE < "** or ^").
Conflit entre la règle 141 et le jeton ".^" résolu par décalage (KRONDIVIDE < ".^").
Conflit entre la règle 141 et le jeton "==" résolu par réduction ("==" < KRONDIVIDE).
Conflit entre la règle 141 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < KRONDIVIDE).
Conflit entre la règle 141 et le jeton "<" résolu par réduction ("<" < KRONDIVIDE).
Conflit entre la règle 141 et le jeton "<=" résolu par réduction ("<=" < KRONDIVIDE).
Conflit entre la règle 141 et le jeton ">" résolu par réduction (">" < KRONDIVIDE).
Conflit entre la règle 141 et le jeton ">=" résolu par réduction (">=" < KRONDIVIDE).
Conflit entre la règle 141 et le jeton "&" résolu par réduction ("&" < KRONDIVIDE).
Conflit entre la règle 141 et le jeton "|" résolu par réduction ("|" < KRONDIVIDE).


état 256

  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  140             | "./." variable .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  157         | variable . "." functionCall
  160         | variable . listableEnd
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"        décalage et aller à l'état 148
    "."        décalage et aller à l'état 166
    ".'"       décalage et aller à l'état 150
    "** or ^"  décalage et aller à l'état 151
    ".^"       décalage et aller à l'état 152

    $défaut  réduction par utilisation de la règle 140 (rightOperand)

    rightOperand   aller à l'état 153
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 154
    comparators    aller à l'état 155

Conflit entre la règle 140 et le jeton "'" résolu par décalage (KRONDIVIDE < "'").
Conflit entre la règle 140 et le jeton ":" résolu par réduction (":" < KRONDIVIDE).
Conflit entre la règle 140 et le jeton "." résolu par décalage (KRONDIVIDE < ".").
Conflit entre la règle 140 et le jeton ".'" résolu par décalage (KRONDIVIDE < ".'").
Conflit entre la règle 140 et le jeton "+" résolu par réduction ("+" < KRONDIVIDE).
Conflit entre la règle 140 et le jeton "-" résolu par réduction ("-" < KRONDIVIDE).
Conflit entre la règle 140 et le jeton "*" résolu par réduction (%left "*").
Conflit entre la règle 140 et le jeton ".*" résolu par réduction (%left ".*").
Conflit entre la règle 140 et le jeton ".*." résolu par réduction (%left ".*.").
Conflit entre la règle 140 et le jeton "/" résolu par réduction (%left "/").
Conflit entre la règle 140 et le jeton "./" résolu par réduction (%left "./").
Conflit entre la règle 140 et le jeton "/." résolu par réduction (%left "/.").
Conflit entre la règle 140 et le jeton "./." résolu par réduction (%left "./.").
Conflit entre la règle 140 et le jeton "\\" résolu par réduction (%left "\\").
Conflit entre la règle 140 et le jeton ".\\" résolu par réduction (%left ".\\").
Conflit entre la règle 140 et le jeton ".\\." résolu par réduction (%left ".\\.").
Conflit entre la règle 140 et le jeton "** or ^" résolu par décalage (KRONDIVIDE < "** or ^").
Conflit entre la règle 140 et le jeton ".^" résolu par décalage (KRONDIVIDE < ".^").
Conflit entre la règle 140 et le jeton "==" résolu par réduction ("==" < KRONDIVIDE).
Conflit entre la règle 140 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < KRONDIVIDE).
Conflit entre la règle 140 et le jeton "<" résolu par réduction ("<" < KRONDIVIDE).
Conflit entre la règle 140 et le jeton "<=" résolu par réduction ("<=" < KRONDIVIDE).
Conflit entre la règle 140 et le jeton ">" résolu par réduction (">" < KRONDIVIDE).
Conflit entre la règle 140 et le jeton ">=" résolu par réduction (">=" < KRONDIVIDE).
Conflit entre la règle 140 et le jeton "&" résolu par réduction ("&" < KRONDIVIDE).
Conflit entre la règle 140 et le jeton "|" résolu par réduction ("|" < KRONDIVIDE).


état 257

  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  145             | "\\" functionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  158 variable: functionCall . "." variable
  159         | functionCall . "." functionCall
  161         | functionCall . listableEnd
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"        décalage et aller à l'état 115
    "."        décalage et aller à l'état 165
    ".'"       décalage et aller à l'état 118
    "** or ^"  décalage et aller à l'état 131
    ".^"       décalage et aller à l'état 132

    $défaut  réduction par utilisation de la règle 145 (rightOperand)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145

Conflit entre la règle 145 et le jeton "'" résolu par décalage (RDIVIDE < "'").
Conflit entre la règle 145 et le jeton ":" résolu par réduction (":" < RDIVIDE).
Conflit entre la règle 145 et le jeton "." résolu par décalage (RDIVIDE < ".").
Conflit entre la règle 145 et le jeton ".'" résolu par décalage (RDIVIDE < ".'").
Conflit entre la règle 145 et le jeton "+" résolu par réduction ("+" < RDIVIDE).
Conflit entre la règle 145 et le jeton "-" résolu par réduction ("-" < RDIVIDE).
Conflit entre la règle 145 et le jeton "*" résolu par réduction (%left "*").
Conflit entre la règle 145 et le jeton ".*" résolu par réduction (%left ".*").
Conflit entre la règle 145 et le jeton ".*." résolu par réduction (%left ".*.").
Conflit entre la règle 145 et le jeton "/" résolu par réduction (%left "/").
Conflit entre la règle 145 et le jeton "./" résolu par réduction (%left "./").
Conflit entre la règle 145 et le jeton "/." résolu par réduction (%left "/.").
Conflit entre la règle 145 et le jeton "./." résolu par réduction (%left "./.").
Conflit entre la règle 145 et le jeton "\\" résolu par réduction (%left "\\").
Conflit entre la règle 145 et le jeton ".\\" résolu par réduction (%left ".\\").
Conflit entre la règle 145 et le jeton ".\\." résolu par réduction (%left ".\\.").
Conflit entre la règle 145 et le jeton "** or ^" résolu par décalage (RDIVIDE < "** or ^").
Conflit entre la règle 145 et le jeton ".^" résolu par décalage (RDIVIDE < ".^").
Conflit entre la règle 145 et le jeton "==" résolu par réduction ("==" < RDIVIDE).
Conflit entre la règle 145 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < RDIVIDE).
Conflit entre la règle 145 et le jeton "<" résolu par réduction ("<" < RDIVIDE).
Conflit entre la règle 145 et le jeton "<=" résolu par réduction ("<=" < RDIVIDE).
Conflit entre la règle 145 et le jeton ">" résolu par réduction (">" < RDIVIDE).
Conflit entre la règle 145 et le jeton ">=" résolu par réduction (">=" < RDIVIDE).
Conflit entre la règle 145 et le jeton "&" résolu par réduction ("&" < RDIVIDE).
Conflit entre la règle 145 et le jeton "|" résolu par réduction ("|" < RDIVIDE).


état 258

  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  144             | "\\" variable .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  157         | variable . "." functionCall
  160         | variable . listableEnd
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"        décalage et aller à l'état 148
    "."        décalage et aller à l'état 166
    ".'"       décalage et aller à l'état 150
    "** or ^"  décalage et aller à l'état 151
    ".^"       décalage et aller à l'état 152

    $défaut  réduction par utilisation de la règle 144 (rightOperand)

    rightOperand   aller à l'état 153
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 154
    comparators    aller à l'état 155

Conflit entre la règle 144 et le jeton "'" résolu par décalage (RDIVIDE < "'").
Conflit entre la règle 144 et le jeton ":" résolu par réduction (":" < RDIVIDE).
Conflit entre la règle 144 et le jeton "." résolu par décalage (RDIVIDE < ".").
Conflit entre la règle 144 et le jeton ".'" résolu par décalage (RDIVIDE < ".'").
Conflit entre la règle 144 et le jeton "+" résolu par réduction ("+" < RDIVIDE).
Conflit entre la règle 144 et le jeton "-" résolu par réduction ("-" < RDIVIDE).
Conflit entre la règle 144 et le jeton "*" résolu par réduction (%left "*").
Conflit entre la règle 144 et le jeton ".*" résolu par réduction (%left ".*").
Conflit entre la règle 144 et le jeton ".*." résolu par réduction (%left ".*.").
Conflit entre la règle 144 et le jeton "/" résolu par réduction (%left "/").
Conflit entre la règle 144 et le jeton "./" résolu par réduction (%left "./").
Conflit entre la règle 144 et le jeton "/." résolu par réduction (%left "/.").
Conflit entre la règle 144 et le jeton "./." résolu par réduction (%left "./.").
Conflit entre la règle 144 et le jeton "\\" résolu par réduction (%left "\\").
Conflit entre la règle 144 et le jeton ".\\" résolu par réduction (%left ".\\").
Conflit entre la règle 144 et le jeton ".\\." résolu par réduction (%left ".\\.").
Conflit entre la règle 144 et le jeton "** or ^" résolu par décalage (RDIVIDE < "** or ^").
Conflit entre la règle 144 et le jeton ".^" résolu par décalage (RDIVIDE < ".^").
Conflit entre la règle 144 et le jeton "==" résolu par réduction ("==" < RDIVIDE).
Conflit entre la règle 144 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < RDIVIDE).
Conflit entre la règle 144 et le jeton "<" résolu par réduction ("<" < RDIVIDE).
Conflit entre la règle 144 et le jeton "<=" résolu par réduction ("<=" < RDIVIDE).
Conflit entre la règle 144 et le jeton ">" résolu par réduction (">" < RDIVIDE).
Conflit entre la règle 144 et le jeton ">=" résolu par réduction (">=" < RDIVIDE).
Conflit entre la règle 144 et le jeton "&" résolu par réduction ("&" < RDIVIDE).
Conflit entre la règle 144 et le jeton "|" résolu par réduction ("|" < RDIVIDE).


état 259

  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  147             | ".\\" functionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  158 variable: functionCall . "." variable
  159         | functionCall . "." functionCall
  161         | functionCall . listableEnd
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"        décalage et aller à l'état 115
    "."        décalage et aller à l'état 165
    ".'"       décalage et aller à l'état 118
    "** or ^"  décalage et aller à l'état 131
    ".^"       décalage et aller à l'état 132

    $défaut  réduction par utilisation de la règle 147 (rightOperand)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145

Conflit entre la règle 147 et le jeton "'" résolu par décalage (DOTRDIVIDE < "'").
Conflit entre la règle 147 et le jeton ":" résolu par réduction (":" < DOTRDIVIDE).
Conflit entre la règle 147 et le jeton "." résolu par décalage (DOTRDIVIDE < ".").
Conflit entre la règle 147 et le jeton ".'" résolu par décalage (DOTRDIVIDE < ".'").
Conflit entre la règle 147 et le jeton "+" résolu par réduction ("+" < DOTRDIVIDE).
Conflit entre la règle 147 et le jeton "-" résolu par réduction ("-" < DOTRDIVIDE).
Conflit entre la règle 147 et le jeton "*" résolu par réduction (%left "*").
Conflit entre la règle 147 et le jeton ".*" résolu par réduction (%left ".*").
Conflit entre la règle 147 et le jeton ".*." résolu par réduction (%left ".*.").
Conflit entre la règle 147 et le jeton "/" résolu par réduction (%left "/").
Conflit entre la règle 147 et le jeton "./" résolu par réduction (%left "./").
Conflit entre la règle 147 et le jeton "/." résolu par réduction (%left "/.").
Conflit entre la règle 147 et le jeton "./." résolu par réduction (%left "./.").
Conflit entre la règle 147 et le jeton "\\" résolu par réduction (%left "\\").
Conflit entre la règle 147 et le jeton ".\\" résolu par réduction (%left ".\\").
Conflit entre la règle 147 et le jeton ".\\." résolu par réduction (%left ".\\.").
Conflit entre la règle 147 et le jeton "** or ^" résolu par décalage (DOTRDIVIDE < "** or ^").
Conflit entre la règle 147 et le jeton ".^" résolu par décalage (DOTRDIVIDE < ".^").
Conflit entre la règle 147 et le jeton "==" résolu par réduction ("==" < DOTRDIVIDE).
Conflit entre la règle 147 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < DOTRDIVIDE).
Conflit entre la règle 147 et le jeton "<" résolu par réduction ("<" < DOTRDIVIDE).
Conflit entre la règle 147 et le jeton "<=" résolu par réduction ("<=" < DOTRDIVIDE).
Conflit entre la règle 147 et le jeton ">" résolu par réduction (">" < DOTRDIVIDE).
Conflit entre la règle 147 et le jeton ">=" résolu par réduction (">=" < DOTRDIVIDE).
Conflit entre la règle 147 et le jeton "&" résolu par réduction ("&" < DOTRDIVIDE).
Conflit entre la règle 147 et le jeton "|" résolu par réduction ("|" < DOTRDIVIDE).


état 260

  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  146             | ".\\" variable .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  157         | variable . "." functionCall
  160         | variable . listableEnd
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"        décalage et aller à l'état 148
    "."        décalage et aller à l'état 166
    ".'"       décalage et aller à l'état 150
    "** or ^"  décalage et aller à l'état 151
    ".^"       décalage et aller à l'état 152

    $défaut  réduction par utilisation de la règle 146 (rightOperand)

    rightOperand   aller à l'état 153
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 154
    comparators    aller à l'état 155

Conflit entre la règle 146 et le jeton "'" résolu par décalage (DOTRDIVIDE < "'").
Conflit entre la règle 146 et le jeton ":" résolu par réduction (":" < DOTRDIVIDE).
Conflit entre la règle 146 et le jeton "." résolu par décalage (DOTRDIVIDE < ".").
Conflit entre la règle 146 et le jeton ".'" résolu par décalage (DOTRDIVIDE < ".'").
Conflit entre la règle 146 et le jeton "+" résolu par réduction ("+" < DOTRDIVIDE).
Conflit entre la règle 146 et le jeton "-" résolu par réduction ("-" < DOTRDIVIDE).
Conflit entre la règle 146 et le jeton "*" résolu par réduction (%left "*").
Conflit entre la règle 146 et le jeton ".*" résolu par réduction (%left ".*").
Conflit entre la règle 146 et le jeton ".*." résolu par réduction (%left ".*.").
Conflit entre la règle 146 et le jeton "/" résolu par réduction (%left "/").
Conflit entre la règle 146 et le jeton "./" résolu par réduction (%left "./").
Conflit entre la règle 146 et le jeton "/." résolu par réduction (%left "/.").
Conflit entre la règle 146 et le jeton "./." résolu par réduction (%left "./.").
Conflit entre la règle 146 et le jeton "\\" résolu par réduction (%left "\\").
Conflit entre la règle 146 et le jeton ".\\" résolu par réduction (%left ".\\").
Conflit entre la règle 146 et le jeton ".\\." résolu par réduction (%left ".\\.").
Conflit entre la règle 146 et le jeton "** or ^" résolu par décalage (DOTRDIVIDE < "** or ^").
Conflit entre la règle 146 et le jeton ".^" résolu par décalage (DOTRDIVIDE < ".^").
Conflit entre la règle 146 et le jeton "==" résolu par réduction ("==" < DOTRDIVIDE).
Conflit entre la règle 146 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < DOTRDIVIDE).
Conflit entre la règle 146 et le jeton "<" résolu par réduction ("<" < DOTRDIVIDE).
Conflit entre la règle 146 et le jeton "<=" résolu par réduction ("<=" < DOTRDIVIDE).
Conflit entre la règle 146 et le jeton ">" résolu par réduction (">" < DOTRDIVIDE).
Conflit entre la règle 146 et le jeton ">=" résolu par réduction (">=" < DOTRDIVIDE).
Conflit entre la règle 146 et le jeton "&" résolu par réduction ("&" < DOTRDIVIDE).
Conflit entre la règle 146 et le jeton "|" résolu par réduction ("|" < DOTRDIVIDE).


état 261

  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  149             | ".\\." functionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  158 variable: functionCall . "." variable
  159         | functionCall . "." functionCall
  161         | functionCall . listableEnd
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"        décalage et aller à l'état 115
    "."        décalage et aller à l'état 165
    ".'"       décalage et aller à l'état 118
    "** or ^"  décalage et aller à l'état 131
    ".^"       décalage et aller à l'état 132

    $défaut  réduction par utilisation de la règle 149 (rightOperand)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145

Conflit entre la règle 149 et le jeton "'" résolu par décalage (KRONRDIVIDE < "'").
Conflit entre la règle 149 et le jeton ":" résolu par réduction (":" < KRONRDIVIDE).
Conflit entre la règle 149 et le jeton "." résolu par décalage (KRONRDIVIDE < ".").
Conflit entre la règle 149 et le jeton ".'" résolu par décalage (KRONRDIVIDE < ".'").
Conflit entre la règle 149 et le jeton "+" résolu par réduction ("+" < KRONRDIVIDE).
Conflit entre la règle 149 et le jeton "-" résolu par réduction ("-" < KRONRDIVIDE).
Conflit entre la règle 149 et le jeton "*" résolu par réduction (%left "*").
Conflit entre la règle 149 et le jeton ".*" résolu par réduction (%left ".*").
Conflit entre la règle 149 et le jeton ".*." résolu par réduction (%left ".*.").
Conflit entre la règle 149 et le jeton "/" résolu par réduction (%left "/").
Conflit entre la règle 149 et le jeton "./" résolu par réduction (%left "./").
Conflit entre la règle 149 et le jeton "/." résolu par réduction (%left "/.").
Conflit entre la règle 149 et le jeton "./." résolu par réduction (%left "./.").
Conflit entre la règle 149 et le jeton "\\" résolu par réduction (%left "\\").
Conflit entre la règle 149 et le jeton ".\\" résolu par réduction (%left ".\\").
Conflit entre la règle 149 et le jeton ".\\." résolu par réduction (%left ".\\.").
Conflit entre la règle 149 et le jeton "** or ^" résolu par décalage (KRONRDIVIDE < "** or ^").
Conflit entre la règle 149 et le jeton ".^" résolu par décalage (KRONRDIVIDE < ".^").
Conflit entre la règle 149 et le jeton "==" résolu par réduction ("==" < KRONRDIVIDE).
Conflit entre la règle 149 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < KRONRDIVIDE).
Conflit entre la règle 149 et le jeton "<" résolu par réduction ("<" < KRONRDIVIDE).
Conflit entre la règle 149 et le jeton "<=" résolu par réduction ("<=" < KRONRDIVIDE).
Conflit entre la règle 149 et le jeton ">" résolu par réduction (">" < KRONRDIVIDE).
Conflit entre la règle 149 et le jeton ">=" résolu par réduction (">=" < KRONRDIVIDE).
Conflit entre la règle 149 et le jeton "&" résolu par réduction ("&" < KRONRDIVIDE).
Conflit entre la règle 149 et le jeton "|" résolu par réduction ("|" < KRONRDIVIDE).


état 262

  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  148             | ".\\." variable .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  157         | variable . "." functionCall
  160         | variable . listableEnd
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"        décalage et aller à l'état 148
    "."        décalage et aller à l'état 166
    ".'"       décalage et aller à l'état 150
    "** or ^"  décalage et aller à l'état 151
    ".^"       décalage et aller à l'état 152

    $défaut  réduction par utilisation de la règle 148 (rightOperand)

    rightOperand   aller à l'état 153
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 154
    comparators    aller à l'état 155

Conflit entre la règle 148 et le jeton "'" résolu par décalage (KRONRDIVIDE < "'").
Conflit entre la règle 148 et le jeton ":" résolu par réduction (":" < KRONRDIVIDE).
Conflit entre la règle 148 et le jeton "." résolu par décalage (KRONRDIVIDE < ".").
Conflit entre la règle 148 et le jeton ".'" résolu par décalage (KRONRDIVIDE < ".'").
Conflit entre la règle 148 et le jeton "+" résolu par réduction ("+" < KRONRDIVIDE).
Conflit entre la règle 148 et le jeton "-" résolu par réduction ("-" < KRONRDIVIDE).
Conflit entre la règle 148 et le jeton "*" résolu par réduction (%left "*").
Conflit entre la règle 148 et le jeton ".*" résolu par réduction (%left ".*").
Conflit entre la règle 148 et le jeton ".*." résolu par réduction (%left ".*.").
Conflit entre la règle 148 et le jeton "/" résolu par réduction (%left "/").
Conflit entre la règle 148 et le jeton "./" résolu par réduction (%left "./").
Conflit entre la règle 148 et le jeton "/." résolu par réduction (%left "/.").
Conflit entre la règle 148 et le jeton "./." résolu par réduction (%left "./.").
Conflit entre la règle 148 et le jeton "\\" résolu par réduction (%left "\\").
Conflit entre la règle 148 et le jeton ".\\" résolu par réduction (%left ".\\").
Conflit entre la règle 148 et le jeton ".\\." résolu par réduction (%left ".\\.").
Conflit entre la règle 148 et le jeton "** or ^" résolu par décalage (KRONRDIVIDE < "** or ^").
Conflit entre la règle 148 et le jeton ".^" résolu par décalage (KRONRDIVIDE < ".^").
Conflit entre la règle 148 et le jeton "==" résolu par réduction ("==" < KRONRDIVIDE).
Conflit entre la règle 148 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < KRONRDIVIDE).
Conflit entre la règle 148 et le jeton "<" résolu par réduction ("<" < KRONRDIVIDE).
Conflit entre la règle 148 et le jeton "<=" résolu par réduction ("<=" < KRONRDIVIDE).
Conflit entre la règle 148 et le jeton ">" résolu par réduction (">" < KRONRDIVIDE).
Conflit entre la règle 148 et le jeton ">=" résolu par réduction (">=" < KRONRDIVIDE).
Conflit entre la règle 148 et le jeton "&" résolu par réduction ("&" < KRONRDIVIDE).
Conflit entre la règle 148 et le jeton "|" résolu par réduction ("|" < KRONRDIVIDE).


état 263

  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  117          | functionCall "** or ^" functionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  158 variable: functionCall . "." variable
  159         | functionCall . "." functionCall
  161         | functionCall . listableEnd
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"   décalage et aller à l'état 115
    "."   décalage et aller à l'état 165
    ".'"  décalage et aller à l'état 118

    $défaut  réduction par utilisation de la règle 117 (operation)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145

Conflit entre la règle 117 et le jeton "'" résolu par décalage (POWER < "'").
Conflit entre la règle 117 et le jeton ":" résolu par réduction (":" < POWER).
Conflit entre la règle 117 et le jeton "." résolu par décalage (POWER < ".").
Conflit entre la règle 117 et le jeton ".'" résolu par décalage (POWER < ".'").
Conflit entre la règle 117 et le jeton "+" résolu par réduction ("+" < POWER).
Conflit entre la règle 117 et le jeton "-" résolu par réduction ("-" < POWER).
Conflit entre la règle 117 et le jeton "*" résolu par réduction ("*" < POWER).
Conflit entre la règle 117 et le jeton ".*" résolu par réduction (".*" < POWER).
Conflit entre la règle 117 et le jeton ".*." résolu par réduction (".*." < POWER).
Conflit entre la règle 117 et le jeton "/" résolu par réduction ("/" < POWER).
Conflit entre la règle 117 et le jeton "./" résolu par réduction ("./" < POWER).
Conflit entre la règle 117 et le jeton "/." résolu par réduction ("/." < POWER).
Conflit entre la règle 117 et le jeton "./." résolu par réduction ("./." < POWER).
Conflit entre la règle 117 et le jeton "\\" résolu par réduction ("\\" < POWER).
Conflit entre la règle 117 et le jeton ".\\" résolu par réduction (".\\" < POWER).
Conflit entre la règle 117 et le jeton ".\\." résolu par réduction (".\\." < POWER).
Conflit entre la règle 117 et le jeton "** or ^" résolu par réduction (%left "** or ^").
Conflit entre la règle 117 et le jeton ".^" résolu par réduction (%left ".^").
Conflit entre la règle 117 et le jeton "==" résolu par réduction ("==" < POWER).
Conflit entre la règle 117 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < POWER).
Conflit entre la règle 117 et le jeton "<" résolu par réduction ("<" < POWER).
Conflit entre la règle 117 et le jeton "<=" résolu par réduction ("<=" < POWER).
Conflit entre la règle 117 et le jeton ">" résolu par réduction (">" < POWER).
Conflit entre la règle 117 et le jeton ">=" résolu par réduction (">=" < POWER).
Conflit entre la règle 117 et le jeton "&" résolu par réduction ("&" < POWER).
Conflit entre la règle 117 et le jeton "|" résolu par réduction ("|" < POWER).


état 264

  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  116          | functionCall "** or ^" variable .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  157         | variable . "." functionCall
  160         | variable . listableEnd
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"   décalage et aller à l'état 148
    "."   décalage et aller à l'état 166
    ".'"  décalage et aller à l'état 150

    $défaut  réduction par utilisation de la règle 116 (operation)

    rightOperand   aller à l'état 153
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 154
    comparators    aller à l'état 155

Conflit entre la règle 116 et le jeton "'" résolu par décalage (POWER < "'").
Conflit entre la règle 116 et le jeton ":" résolu par réduction (":" < POWER).
Conflit entre la règle 116 et le jeton "." résolu par décalage (POWER < ".").
Conflit entre la règle 116 et le jeton ".'" résolu par décalage (POWER < ".'").
Conflit entre la règle 116 et le jeton "+" résolu par réduction ("+" < POWER).
Conflit entre la règle 116 et le jeton "-" résolu par réduction ("-" < POWER).
Conflit entre la règle 116 et le jeton "*" résolu par réduction ("*" < POWER).
Conflit entre la règle 116 et le jeton ".*" résolu par réduction (".*" < POWER).
Conflit entre la règle 116 et le jeton ".*." résolu par réduction (".*." < POWER).
Conflit entre la règle 116 et le jeton "/" résolu par réduction ("/" < POWER).
Conflit entre la règle 116 et le jeton "./" résolu par réduction ("./" < POWER).
Conflit entre la règle 116 et le jeton "/." résolu par réduction ("/." < POWER).
Conflit entre la règle 116 et le jeton "./." résolu par réduction ("./." < POWER).
Conflit entre la règle 116 et le jeton "\\" résolu par réduction ("\\" < POWER).
Conflit entre la règle 116 et le jeton ".\\" résolu par réduction (".\\" < POWER).
Conflit entre la règle 116 et le jeton ".\\." résolu par réduction (".\\." < POWER).
Conflit entre la règle 116 et le jeton "** or ^" résolu par réduction (%left "** or ^").
Conflit entre la règle 116 et le jeton ".^" résolu par réduction (%left ".^").
Conflit entre la règle 116 et le jeton "==" résolu par réduction ("==" < POWER).
Conflit entre la règle 116 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < POWER).
Conflit entre la règle 116 et le jeton "<" résolu par réduction ("<" < POWER).
Conflit entre la règle 116 et le jeton "<=" résolu par réduction ("<=" < POWER).
Conflit entre la règle 116 et le jeton ">" résolu par réduction (">" < POWER).
Conflit entre la règle 116 et le jeton ">=" résolu par réduction (">=" < POWER).
Conflit entre la règle 116 et le jeton "&" résolu par réduction ("&" < POWER).
Conflit entre la règle 116 et le jeton "|" résolu par réduction ("|" < POWER).


état 265

  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  121          | functionCall ".^" functionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  158 variable: functionCall . "." variable
  159         | functionCall . "." functionCall
  161         | functionCall . listableEnd
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"   décalage et aller à l'état 115
    "."   décalage et aller à l'état 165
    ".'"  décalage et aller à l'état 118

    $défaut  réduction par utilisation de la règle 121 (operation)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145

Conflit entre la règle 121 et le jeton "'" résolu par décalage (DOTPOWER < "'").
Conflit entre la règle 121 et le jeton ":" résolu par réduction (":" < DOTPOWER).
Conflit entre la règle 121 et le jeton "." résolu par décalage (DOTPOWER < ".").
Conflit entre la règle 121 et le jeton ".'" résolu par décalage (DOTPOWER < ".'").
Conflit entre la règle 121 et le jeton "+" résolu par réduction ("+" < DOTPOWER).
Conflit entre la règle 121 et le jeton "-" résolu par réduction ("-" < DOTPOWER).
Conflit entre la règle 121 et le jeton "*" résolu par réduction ("*" < DOTPOWER).
Conflit entre la règle 121 et le jeton ".*" résolu par réduction (".*" < DOTPOWER).
Conflit entre la règle 121 et le jeton ".*." résolu par réduction (".*." < DOTPOWER).
Conflit entre la règle 121 et le jeton "/" résolu par réduction ("/" < DOTPOWER).
Conflit entre la règle 121 et le jeton "./" résolu par réduction ("./" < DOTPOWER).
Conflit entre la règle 121 et le jeton "/." résolu par réduction ("/." < DOTPOWER).
Conflit entre la règle 121 et le jeton "./." résolu par réduction ("./." < DOTPOWER).
Conflit entre la règle 121 et le jeton "\\" résolu par réduction ("\\" < DOTPOWER).
Conflit entre la règle 121 et le jeton ".\\" résolu par réduction (".\\" < DOTPOWER).
Conflit entre la règle 121 et le jeton ".\\." résolu par réduction (".\\." < DOTPOWER).
Conflit entre la règle 121 et le jeton "** or ^" résolu par réduction (%left "** or ^").
Conflit entre la règle 121 et le jeton ".^" résolu par réduction (%left ".^").
Conflit entre la règle 121 et le jeton "==" résolu par réduction ("==" < DOTPOWER).
Conflit entre la règle 121 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < DOTPOWER).
Conflit entre la règle 121 et le jeton "<" résolu par réduction ("<" < DOTPOWER).
Conflit entre la règle 121 et le jeton "<=" résolu par réduction ("<=" < DOTPOWER).
Conflit entre la règle 121 et le jeton ">" résolu par réduction (">" < DOTPOWER).
Conflit entre la règle 121 et le jeton ">=" résolu par réduction (">=" < DOTPOWER).
Conflit entre la règle 121 et le jeton "&" résolu par réduction ("&" < DOTPOWER).
Conflit entre la règle 121 et le jeton "|" résolu par réduction ("|" < DOTPOWER).


état 266

  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  120          | functionCall ".^" variable .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  157         | variable . "." functionCall
  160         | variable . listableEnd
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"   décalage et aller à l'état 148
    "."   décalage et aller à l'état 166
    ".'"  décalage et aller à l'état 150

    $défaut  réduction par utilisation de la règle 120 (operation)

    rightOperand   aller à l'état 153
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 154
    comparators    aller à l'état 155

Conflit entre la règle 120 et le jeton "'" résolu par décalage (DOTPOWER < "'").
Conflit entre la règle 120 et le jeton ":" résolu par réduction (":" < DOTPOWER).
Conflit entre la règle 120 et le jeton "." résolu par décalage (DOTPOWER < ".").
Conflit entre la règle 120 et le jeton ".'" résolu par décalage (DOTPOWER < ".'").
Conflit entre la règle 120 et le jeton "+" résolu par réduction ("+" < DOTPOWER).
Conflit entre la règle 120 et le jeton "-" résolu par réduction ("-" < DOTPOWER).
Conflit entre la règle 120 et le jeton "*" résolu par réduction ("*" < DOTPOWER).
Conflit entre la règle 120 et le jeton ".*" résolu par réduction (".*" < DOTPOWER).
Conflit entre la règle 120 et le jeton ".*." résolu par réduction (".*." < DOTPOWER).
Conflit entre la règle 120 et le jeton "/" résolu par réduction ("/" < DOTPOWER).
Conflit entre la règle 120 et le jeton "./" résolu par réduction ("./" < DOTPOWER).
Conflit entre la règle 120 et le jeton "/." résolu par réduction ("/." < DOTPOWER).
Conflit entre la règle 120 et le jeton "./." résolu par réduction ("./." < DOTPOWER).
Conflit entre la règle 120 et le jeton "\\" résolu par réduction ("\\" < DOTPOWER).
Conflit entre la règle 120 et le jeton ".\\" résolu par réduction (".\\" < DOTPOWER).
Conflit entre la règle 120 et le jeton ".\\." résolu par réduction (".\\." < DOTPOWER).
Conflit entre la règle 120 et le jeton "** or ^" résolu par réduction (%left "** or ^").
Conflit entre la règle 120 et le jeton ".^" résolu par réduction (%left ".^").
Conflit entre la règle 120 et le jeton "==" résolu par réduction ("==" < DOTPOWER).
Conflit entre la règle 120 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < DOTPOWER).
Conflit entre la règle 120 et le jeton "<" résolu par réduction ("<" < DOTPOWER).
Conflit entre la règle 120 et le jeton "<=" résolu par réduction ("<=" < DOTPOWER).
Conflit entre la règle 120 et le jeton ">" résolu par réduction (">" < DOTPOWER).
Conflit entre la règle 120 et le jeton ">=" résolu par réduction (">=" < DOTPOWER).
Conflit entre la règle 120 et le jeton "&" résolu par réduction ("&" < DOTPOWER).
Conflit entre la règle 120 et le jeton "|" résolu par réduction ("|" < DOTPOWER).


état 267

  220 variableDeclaration: functionCall "=" ":" .

    $défaut  réduction par utilisation de la règle 220 (variableDeclaration)


état 268

  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  158 variable: functionCall . "." variable
  159         | functionCall . "." functionCall
  161         | functionCall . listableEnd
  218 variableDeclaration: functionCall "=" functionCall .  ["end of file", "end of line", ",", ";", ")", "else", "elseif", "end", "case", "endfunction", "catch", "line comment"]
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"         décalage et aller à l'état 115
    ":"         décalage et aller à l'état 116
    "."         décalage et aller à l'état 165
    ".'"        décalage et aller à l'état 118
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 131
    ".^"        décalage et aller à l'état 132
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140

    $défaut  réduction par utilisation de la règle 218 (variableDeclaration)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145


état 269

  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  157         | variable . "." functionCall
  160         | variable . listableEnd
  217 variableDeclaration: functionCall "=" variable .  ["end of file", "end of line", ",", ";", ")", "else", "elseif", "end", "case", "endfunction", "catch", "line comment"]
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"         décalage et aller à l'état 148
    ":"         décalage et aller à l'état 116
    "."         décalage et aller à l'état 166
    ".'"        décalage et aller à l'état 150
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 151
    ".^"        décalage et aller à l'état 152
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140

    $défaut  réduction par utilisation de la règle 217 (variableDeclaration)

    rightOperand   aller à l'état 153
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 154
    comparators    aller à l'état 155


état 270

  222 variableDeclaration: functionCall "=" returnControl .

    $défaut  réduction par utilisation de la règle 222 (variableDeclaration)


état 271

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  152 listableEnd: listableBegin ":" . variable
  153            | listableBegin ":" . functionCall
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 368
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 369
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 272

  107 comparable: ":" .

    $défaut  réduction par utilisation de la règle 107 (comparable)


état 273

  104 comparison: functionCall . comparators comparable
  106 comparable: functionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "(", ")", "[", "]", "{", "}", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  158 variable: functionCall . "." variable
  159         | functionCall . "." functionCall
  161         | functionCall . listableEnd
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"         décalage et aller à l'état 115
    ":"         décalage et aller à l'état 116
    "."         décalage et aller à l'état 165
    ".'"        décalage et aller à l'état 118
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 131
    ".^"        décalage et aller à l'état 132
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140

    $défaut  réduction par utilisation de la règle 106 (comparable)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145

Conflit entre la règle 106 et le jeton "'" résolu par décalage (HIGHLEVEL < "'").
Conflit entre la règle 106 et le jeton ":" résolu par décalage (HIGHLEVEL < ":").
Conflit entre la règle 106 et le jeton "." résolu par décalage (HIGHLEVEL < ".").
Conflit entre la règle 106 et le jeton ".'" résolu par décalage (HIGHLEVEL < ".'").
Conflit entre la règle 106 et le jeton "+" résolu par décalage (HIGHLEVEL < "+").
Conflit entre la règle 106 et le jeton "-" résolu par décalage (HIGHLEVEL < "-").
Conflit entre la règle 106 et le jeton "*" résolu par décalage (HIGHLEVEL < "*").
Conflit entre la règle 106 et le jeton ".*" résolu par décalage (HIGHLEVEL < ".*").
Conflit entre la règle 106 et le jeton ".*." résolu par décalage (HIGHLEVEL < ".*.").
Conflit entre la règle 106 et le jeton "/" résolu par décalage (HIGHLEVEL < "/").
Conflit entre la règle 106 et le jeton "./" résolu par décalage (HIGHLEVEL < "./").
Conflit entre la règle 106 et le jeton "/." résolu par décalage (HIGHLEVEL < "/.").
Conflit entre la règle 106 et le jeton "./." résolu par décalage (HIGHLEVEL < "./.").
Conflit entre la règle 106 et le jeton "\\" résolu par décalage (HIGHLEVEL < "\\").
Conflit entre la règle 106 et le jeton ".\\" résolu par décalage (HIGHLEVEL < ".\\").
Conflit entre la règle 106 et le jeton ".\\." résolu par décalage (HIGHLEVEL < ".\\.").
Conflit entre la règle 106 et le jeton "** or ^" résolu par décalage (HIGHLEVEL < "** or ^").
Conflit entre la règle 106 et le jeton ".^" résolu par décalage (HIGHLEVEL < ".^").
Conflit entre la règle 106 et le jeton "==" résolu par décalage (HIGHLEVEL < "==").
Conflit entre la règle 106 et le jeton "<> or ~=" résolu par décalage (HIGHLEVEL < "<> or ~=").
Conflit entre la règle 106 et le jeton "<" résolu par décalage (HIGHLEVEL < "<").
Conflit entre la règle 106 et le jeton "<=" résolu par décalage (HIGHLEVEL < "<=").
Conflit entre la règle 106 et le jeton ">" résolu par décalage (HIGHLEVEL < ">").
Conflit entre la règle 106 et le jeton ">=" résolu par décalage (HIGHLEVEL < ">=").
Conflit entre la règle 106 et le jeton "&" résolu par décalage (HIGHLEVEL < "&").
Conflit entre la règle 106 et le jeton "|" résolu par décalage (HIGHLEVEL < "|").


état 274

  104 comparison: functionCall comparators comparable .

    $défaut  réduction par utilisation de la règle 104 (comparison)


état 275

  103 comparison: variable . comparators comparable
  105 comparable: variable .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "(", ")", "[", "]", "{", "}", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  157         | variable . "." functionCall
  160         | variable . listableEnd
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"         décalage et aller à l'état 148
    ":"         décalage et aller à l'état 116
    "."         décalage et aller à l'état 166
    ".'"        décalage et aller à l'état 150
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 151
    ".^"        décalage et aller à l'état 152
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140

    $défaut  réduction par utilisation de la règle 105 (comparable)

    rightOperand   aller à l'état 153
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 154
    comparators    aller à l'état 155

Conflit entre la règle 105 et le jeton "'" résolu par décalage (HIGHLEVEL < "'").
Conflit entre la règle 105 et le jeton ":" résolu par décalage (HIGHLEVEL < ":").
Conflit entre la règle 105 et le jeton "." résolu par décalage (HIGHLEVEL < ".").
Conflit entre la règle 105 et le jeton ".'" résolu par décalage (HIGHLEVEL < ".'").
Conflit entre la règle 105 et le jeton "+" résolu par décalage (HIGHLEVEL < "+").
Conflit entre la règle 105 et le jeton "-" résolu par décalage (HIGHLEVEL < "-").
Conflit entre la règle 105 et le jeton "*" résolu par décalage (HIGHLEVEL < "*").
Conflit entre la règle 105 et le jeton ".*" résolu par décalage (HIGHLEVEL < ".*").
Conflit entre la règle 105 et le jeton ".*." résolu par décalage (HIGHLEVEL < ".*.").
Conflit entre la règle 105 et le jeton "/" résolu par décalage (HIGHLEVEL < "/").
Conflit entre la règle 105 et le jeton "./" résolu par décalage (HIGHLEVEL < "./").
Conflit entre la règle 105 et le jeton "/." résolu par décalage (HIGHLEVEL < "/.").
Conflit entre la règle 105 et le jeton "./." résolu par décalage (HIGHLEVEL < "./.").
Conflit entre la règle 105 et le jeton "\\" résolu par décalage (HIGHLEVEL < "\\").
Conflit entre la règle 105 et le jeton ".\\" résolu par décalage (HIGHLEVEL < ".\\").
Conflit entre la règle 105 et le jeton ".\\." résolu par décalage (HIGHLEVEL < ".\\.").
Conflit entre la règle 105 et le jeton "** or ^" résolu par décalage (HIGHLEVEL < "** or ^").
Conflit entre la règle 105 et le jeton ".^" résolu par décalage (HIGHLEVEL < ".^").
Conflit entre la règle 105 et le jeton "==" résolu par décalage (HIGHLEVEL < "==").
Conflit entre la règle 105 et le jeton "<> or ~=" résolu par décalage (HIGHLEVEL < "<> or ~=").
Conflit entre la règle 105 et le jeton "<" résolu par décalage (HIGHLEVEL < "<").
Conflit entre la règle 105 et le jeton "<=" résolu par décalage (HIGHLEVEL < "<=").
Conflit entre la règle 105 et le jeton ">" résolu par décalage (HIGHLEVEL < ">").
Conflit entre la règle 105 et le jeton ">=" résolu par décalage (HIGHLEVEL < ">=").
Conflit entre la règle 105 et le jeton "&" résolu par décalage (HIGHLEVEL < "&").
Conflit entre la règle 105 et le jeton "|" résolu par décalage (HIGHLEVEL < "|").


état 276

   56 recursiveFunctionCall: simpleFunctionCall "(" functionArgs . ")"
   63 functionArgs: functionArgs . "," variable
   64             | functionArgs . "," functionCall
   65             | functionArgs . "," ":"
   66             | functionArgs . "," variableDeclaration
   67             | functionArgs . ","

    ","  décalage et aller à l'état 293
    ")"  décalage et aller à l'état 370


état 277

   57 recursiveFunctionCall: recursiveFunctionCall "(" functionArgs . ")"
   63 functionArgs: functionArgs . "," variable
   64             | functionArgs . "," functionCall
   65             | functionArgs . "," ":"
   66             | functionArgs . "," variableDeclaration
   67             | functionArgs . ","

    ","  décalage et aller à l'état 293
    ")"  décalage et aller à l'état 371


état 278

   53 specificFunctionCall: "%t or %T" . "(" functionArgs ")"

    "("  décalage et aller à l'état 53


état 279

   54 specificFunctionCall: "%f or %F" . "(" functionArgs ")"

    "("  décalage et aller à l'état 54


état 280

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   52             | "~ or @" . functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"

    "%t or %T"    décalage et aller à l'état 278
    "%f or %F"    décalage et aller à l'état 279
    "~ or @"      décalage et aller à l'état 280
    "("           décalage et aller à l'état 281
    "identifier"  décalage et aller à l'état 372

    functionCall           aller à l'état 373
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35


état 281

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   51             | "(" . functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"

    "%t or %T"    décalage et aller à l'état 278
    "%f or %F"    décalage et aller à l'état 279
    "~ or @"      décalage et aller à l'état 280
    "("           décalage et aller à l'état 281
    "identifier"  décalage et aller à l'état 372

    functionCall           aller à l'état 374
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35


état 282

   55 simpleFunctionCall: "identifier" . "(" functionArgs ")"
  156 variable: variable "." "identifier" .  ["end of file", "end of line", "'", ",", ":", ";", ")", ".", ".'", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "else", "elseif", "end", "case", "endfunction", "catch", "line comment"]
  223 assignable: variable "." "identifier" .  ["="]

    "("  décalage et aller à l'état 98

    "="       réduction par utilisation de la règle 223 (assignable)
    $défaut  réduction par utilisation de la règle 156 (variable)


état 283

  157 variable: variable "." functionCall .  ["end of file", "end of line", "'", ",", ":", ";", ")", ".", ".'", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "else", "elseif", "end", "case", "endfunction", "catch", "line comment"]
  224 assignable: variable "." functionCall .  ["="]

    "="       réduction par utilisation de la règle 224 (assignable)
    $défaut  réduction par utilisation de la règle 157 (variable)


état 284

  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  115          | variable "** or ^" functionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  158 variable: functionCall . "." variable
  159         | functionCall . "." functionCall
  161         | functionCall . listableEnd
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"   décalage et aller à l'état 115
    "."   décalage et aller à l'état 165
    ".'"  décalage et aller à l'état 118

    $défaut  réduction par utilisation de la règle 115 (operation)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145

Conflit entre la règle 115 et le jeton "'" résolu par décalage (POWER < "'").
Conflit entre la règle 115 et le jeton ":" résolu par réduction (":" < POWER).
Conflit entre la règle 115 et le jeton "." résolu par décalage (POWER < ".").
Conflit entre la règle 115 et le jeton ".'" résolu par décalage (POWER < ".'").
Conflit entre la règle 115 et le jeton "+" résolu par réduction ("+" < POWER).
Conflit entre la règle 115 et le jeton "-" résolu par réduction ("-" < POWER).
Conflit entre la règle 115 et le jeton "*" résolu par réduction ("*" < POWER).
Conflit entre la règle 115 et le jeton ".*" résolu par réduction (".*" < POWER).
Conflit entre la règle 115 et le jeton ".*." résolu par réduction (".*." < POWER).
Conflit entre la règle 115 et le jeton "/" résolu par réduction ("/" < POWER).
Conflit entre la règle 115 et le jeton "./" résolu par réduction ("./" < POWER).
Conflit entre la règle 115 et le jeton "/." résolu par réduction ("/." < POWER).
Conflit entre la règle 115 et le jeton "./." résolu par réduction ("./." < POWER).
Conflit entre la règle 115 et le jeton "\\" résolu par réduction ("\\" < POWER).
Conflit entre la règle 115 et le jeton ".\\" résolu par réduction (".\\" < POWER).
Conflit entre la règle 115 et le jeton ".\\." résolu par réduction (".\\." < POWER).
Conflit entre la règle 115 et le jeton "** or ^" résolu par réduction (%left "** or ^").
Conflit entre la règle 115 et le jeton ".^" résolu par réduction (%left ".^").
Conflit entre la règle 115 et le jeton "==" résolu par réduction ("==" < POWER).
Conflit entre la règle 115 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < POWER).
Conflit entre la règle 115 et le jeton "<" résolu par réduction ("<" < POWER).
Conflit entre la règle 115 et le jeton "<=" résolu par réduction ("<=" < POWER).
Conflit entre la règle 115 et le jeton ">" résolu par réduction (">" < POWER).
Conflit entre la règle 115 et le jeton ">=" résolu par réduction (">=" < POWER).
Conflit entre la règle 115 et le jeton "&" résolu par réduction ("&" < POWER).
Conflit entre la règle 115 et le jeton "|" résolu par réduction ("|" < POWER).


état 285

  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  114          | variable "** or ^" variable .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  157         | variable . "." functionCall
  160         | variable . listableEnd
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"   décalage et aller à l'état 148
    "."   décalage et aller à l'état 166
    ".'"  décalage et aller à l'état 150

    $défaut  réduction par utilisation de la règle 114 (operation)

    rightOperand   aller à l'état 153
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 154
    comparators    aller à l'état 155

Conflit entre la règle 114 et le jeton "'" résolu par décalage (POWER < "'").
Conflit entre la règle 114 et le jeton ":" résolu par réduction (":" < POWER).
Conflit entre la règle 114 et le jeton "." résolu par décalage (POWER < ".").
Conflit entre la règle 114 et le jeton ".'" résolu par décalage (POWER < ".'").
Conflit entre la règle 114 et le jeton "+" résolu par réduction ("+" < POWER).
Conflit entre la règle 114 et le jeton "-" résolu par réduction ("-" < POWER).
Conflit entre la règle 114 et le jeton "*" résolu par réduction ("*" < POWER).
Conflit entre la règle 114 et le jeton ".*" résolu par réduction (".*" < POWER).
Conflit entre la règle 114 et le jeton ".*." résolu par réduction (".*." < POWER).
Conflit entre la règle 114 et le jeton "/" résolu par réduction ("/" < POWER).
Conflit entre la règle 114 et le jeton "./" résolu par réduction ("./" < POWER).
Conflit entre la règle 114 et le jeton "/." résolu par réduction ("/." < POWER).
Conflit entre la règle 114 et le jeton "./." résolu par réduction ("./." < POWER).
Conflit entre la règle 114 et le jeton "\\" résolu par réduction ("\\" < POWER).
Conflit entre la règle 114 et le jeton ".\\" résolu par réduction (".\\" < POWER).
Conflit entre la règle 114 et le jeton ".\\." résolu par réduction (".\\." < POWER).
Conflit entre la règle 114 et le jeton "** or ^" résolu par réduction (%left "** or ^").
Conflit entre la règle 114 et le jeton ".^" résolu par réduction (%left ".^").
Conflit entre la règle 114 et le jeton "==" résolu par réduction ("==" < POWER).
Conflit entre la règle 114 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < POWER).
Conflit entre la règle 114 et le jeton "<" résolu par réduction ("<" < POWER).
Conflit entre la règle 114 et le jeton "<=" résolu par réduction ("<=" < POWER).
Conflit entre la règle 114 et le jeton ">" résolu par réduction (">" < POWER).
Conflit entre la règle 114 et le jeton ">=" résolu par réduction (">=" < POWER).
Conflit entre la règle 114 et le jeton "&" résolu par réduction ("&" < POWER).
Conflit entre la règle 114 et le jeton "|" résolu par réduction ("|" < POWER).


état 286

  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  119          | variable ".^" functionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  158 variable: functionCall . "." variable
  159         | functionCall . "." functionCall
  161         | functionCall . listableEnd
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"   décalage et aller à l'état 115
    "."   décalage et aller à l'état 165
    ".'"  décalage et aller à l'état 118

    $défaut  réduction par utilisation de la règle 119 (operation)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145

Conflit entre la règle 119 et le jeton "'" résolu par décalage (DOTPOWER < "'").
Conflit entre la règle 119 et le jeton ":" résolu par réduction (":" < DOTPOWER).
Conflit entre la règle 119 et le jeton "." résolu par décalage (DOTPOWER < ".").
Conflit entre la règle 119 et le jeton ".'" résolu par décalage (DOTPOWER < ".'").
Conflit entre la règle 119 et le jeton "+" résolu par réduction ("+" < DOTPOWER).
Conflit entre la règle 119 et le jeton "-" résolu par réduction ("-" < DOTPOWER).
Conflit entre la règle 119 et le jeton "*" résolu par réduction ("*" < DOTPOWER).
Conflit entre la règle 119 et le jeton ".*" résolu par réduction (".*" < DOTPOWER).
Conflit entre la règle 119 et le jeton ".*." résolu par réduction (".*." < DOTPOWER).
Conflit entre la règle 119 et le jeton "/" résolu par réduction ("/" < DOTPOWER).
Conflit entre la règle 119 et le jeton "./" résolu par réduction ("./" < DOTPOWER).
Conflit entre la règle 119 et le jeton "/." résolu par réduction ("/." < DOTPOWER).
Conflit entre la règle 119 et le jeton "./." résolu par réduction ("./." < DOTPOWER).
Conflit entre la règle 119 et le jeton "\\" résolu par réduction ("\\" < DOTPOWER).
Conflit entre la règle 119 et le jeton ".\\" résolu par réduction (".\\" < DOTPOWER).
Conflit entre la règle 119 et le jeton ".\\." résolu par réduction (".\\." < DOTPOWER).
Conflit entre la règle 119 et le jeton "** or ^" résolu par réduction (%left "** or ^").
Conflit entre la règle 119 et le jeton ".^" résolu par réduction (%left ".^").
Conflit entre la règle 119 et le jeton "==" résolu par réduction ("==" < DOTPOWER).
Conflit entre la règle 119 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < DOTPOWER).
Conflit entre la règle 119 et le jeton "<" résolu par réduction ("<" < DOTPOWER).
Conflit entre la règle 119 et le jeton "<=" résolu par réduction ("<=" < DOTPOWER).
Conflit entre la règle 119 et le jeton ">" résolu par réduction (">" < DOTPOWER).
Conflit entre la règle 119 et le jeton ">=" résolu par réduction (">=" < DOTPOWER).
Conflit entre la règle 119 et le jeton "&" résolu par réduction ("&" < DOTPOWER).
Conflit entre la règle 119 et le jeton "|" résolu par réduction ("|" < DOTPOWER).


état 287

  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  118          | variable ".^" variable .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  157         | variable . "." functionCall
  160         | variable . listableEnd
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"   décalage et aller à l'état 148
    "."   décalage et aller à l'état 166
    ".'"  décalage et aller à l'état 150

    $défaut  réduction par utilisation de la règle 118 (operation)

    rightOperand   aller à l'état 153
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 154
    comparators    aller à l'état 155

Conflit entre la règle 118 et le jeton "'" résolu par décalage (DOTPOWER < "'").
Conflit entre la règle 118 et le jeton ":" résolu par réduction (":" < DOTPOWER).
Conflit entre la règle 118 et le jeton "." résolu par décalage (DOTPOWER < ".").
Conflit entre la règle 118 et le jeton ".'" résolu par décalage (DOTPOWER < ".'").
Conflit entre la règle 118 et le jeton "+" résolu par réduction ("+" < DOTPOWER).
Conflit entre la règle 118 et le jeton "-" résolu par réduction ("-" < DOTPOWER).
Conflit entre la règle 118 et le jeton "*" résolu par réduction ("*" < DOTPOWER).
Conflit entre la règle 118 et le jeton ".*" résolu par réduction (".*" < DOTPOWER).
Conflit entre la règle 118 et le jeton ".*." résolu par réduction (".*." < DOTPOWER).
Conflit entre la règle 118 et le jeton "/" résolu par réduction ("/" < DOTPOWER).
Conflit entre la règle 118 et le jeton "./" résolu par réduction ("./" < DOTPOWER).
Conflit entre la règle 118 et le jeton "/." résolu par réduction ("/." < DOTPOWER).
Conflit entre la règle 118 et le jeton "./." résolu par réduction ("./." < DOTPOWER).
Conflit entre la règle 118 et le jeton "\\" résolu par réduction ("\\" < DOTPOWER).
Conflit entre la règle 118 et le jeton ".\\" résolu par réduction (".\\" < DOTPOWER).
Conflit entre la règle 118 et le jeton ".\\." résolu par réduction (".\\." < DOTPOWER).
Conflit entre la règle 118 et le jeton "** or ^" résolu par réduction (%left "** or ^").
Conflit entre la règle 118 et le jeton ".^" résolu par réduction (%left ".^").
Conflit entre la règle 118 et le jeton "==" résolu par réduction ("==" < DOTPOWER).
Conflit entre la règle 118 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < DOTPOWER).
Conflit entre la règle 118 et le jeton "<" résolu par réduction ("<" < DOTPOWER).
Conflit entre la règle 118 et le jeton "<=" résolu par réduction ("<=" < DOTPOWER).
Conflit entre la règle 118 et le jeton ">" résolu par réduction (">" < DOTPOWER).
Conflit entre la règle 118 et le jeton ">=" résolu par réduction (">=" < DOTPOWER).
Conflit entre la règle 118 et le jeton "&" résolu par réduction ("&" < DOTPOWER).
Conflit entre la règle 118 et le jeton "|" résolu par réduction ("|" < DOTPOWER).


état 288

  103 comparison: variable comparators comparable .

    $défaut  réduction par utilisation de la règle 103 (comparison)


état 289

  219 variableDeclaration: assignable "=" ":" .

    $défaut  réduction par utilisation de la règle 219 (variableDeclaration)


état 290

  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  158 variable: functionCall . "." variable
  159         | functionCall . "." functionCall
  161         | functionCall . listableEnd
  216 variableDeclaration: assignable "=" functionCall .  ["end of file", "end of line", ",", ";", ")", "else", "elseif", "end", "case", "endfunction", "catch", "line comment"]
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"         décalage et aller à l'état 115
    ":"         décalage et aller à l'état 116
    "."         décalage et aller à l'état 165
    ".'"        décalage et aller à l'état 118
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 131
    ".^"        décalage et aller à l'état 132
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140

    $défaut  réduction par utilisation de la règle 216 (variableDeclaration)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145


état 291

  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  157         | variable . "." functionCall
  160         | variable . listableEnd
  215 variableDeclaration: assignable "=" variable .  ["end of file", "end of line", ",", ";", ")", "else", "elseif", "end", "case", "endfunction", "catch", "line comment"]
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"         décalage et aller à l'état 148
    ":"         décalage et aller à l'état 116
    "."         décalage et aller à l'état 166
    ".'"        décalage et aller à l'état 150
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 151
    ".^"        décalage et aller à l'état 152
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140

    $défaut  réduction par utilisation de la règle 215 (variableDeclaration)

    rightOperand   aller à l'état 153
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 154
    comparators    aller à l'état 155


état 292

  221 variableDeclaration: assignable "=" returnControl .

    $défaut  réduction par utilisation de la règle 221 (variableDeclaration)


état 293

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   63 functionArgs: functionArgs "," . variable
   64             | functionArgs "," . functionCall
   65             | functionArgs "," . ":"
   66             | functionArgs "," . variableDeclaration
   67             | functionArgs "," .  [",", ")"]
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"
  215 variableDeclaration: . assignable "=" variable
  216                    | . assignable "=" functionCall
  217                    | . functionCall "=" variable
  218                    | . functionCall "=" functionCall
  219                    | . assignable "=" ":"
  220                    | . functionCall "=" ":"
  221                    | . assignable "=" returnControl
  222                    | . functionCall "=" returnControl
  223 assignable: . variable "." "identifier"
  224           | . variable "." functionCall
  225           | . functionCall "." variable
  226           | . functionCall "." functionCall
  227           | . "identifier"
  228           | . multipleResults
  229 multipleResults: . "[" matrixOrCellColumns "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    ":"           décalage et aller à l'état 375
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 8
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 158
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    $défaut  réduction par utilisation de la règle 67 (functionArgs)

    functionCall           aller à l'état 376
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 377
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 378
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45


état 294

   53 specificFunctionCall: "%t or %T" "(" functionArgs ")" .

    $défaut  réduction par utilisation de la règle 53 (specificFunctionCall)


état 295

   54 specificFunctionCall: "%f or %F" "(" functionArgs ")" .

    $défaut  réduction par utilisation de la règle 54 (specificFunctionCall)


état 296

  193 matrix: "[" matrixOrCellColumns "]" .

    $défaut  réduction par utilisation de la règle 193 (matrix)


état 297

  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  158 variable: functionCall . "." variable
  159         | functionCall . "." functionCall
  159         | functionCall "." functionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "'", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", ".", ".'", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  161         | functionCall . listableEnd
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    $défaut  réduction par utilisation de la règle 159 (variable)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145

Conflit entre la règle 159 et le jeton "'" résolu par réduction ("'" < DOT).
Conflit entre la règle 159 et le jeton ":" résolu par réduction (":" < DOT).
Conflit entre la règle 159 et le jeton "." résolu par réduction (%left ".").
Conflit entre la règle 159 et le jeton ".'" résolu par réduction (".'" < DOT).
Conflit entre la règle 159 et le jeton "+" résolu par réduction ("+" < DOT).
Conflit entre la règle 159 et le jeton "-" résolu par réduction ("-" < DOT).
Conflit entre la règle 159 et le jeton "*" résolu par réduction ("*" < DOT).
Conflit entre la règle 159 et le jeton ".*" résolu par réduction (".*" < DOT).
Conflit entre la règle 159 et le jeton ".*." résolu par réduction (".*." < DOT).
Conflit entre la règle 159 et le jeton "/" résolu par réduction ("/" < DOT).
Conflit entre la règle 159 et le jeton "./" résolu par réduction ("./" < DOT).
Conflit entre la règle 159 et le jeton "/." résolu par réduction ("/." < DOT).
Conflit entre la règle 159 et le jeton "./." résolu par réduction ("./." < DOT).
Conflit entre la règle 159 et le jeton "\\" résolu par réduction ("\\" < DOT).
Conflit entre la règle 159 et le jeton ".\\" résolu par réduction (".\\" < DOT).
Conflit entre la règle 159 et le jeton ".\\." résolu par réduction (".\\." < DOT).
Conflit entre la règle 159 et le jeton "** or ^" résolu par réduction ("** or ^" < DOT).
Conflit entre la règle 159 et le jeton ".^" résolu par réduction (".^" < DOT).
Conflit entre la règle 159 et le jeton "==" résolu par réduction ("==" < DOT).
Conflit entre la règle 159 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < DOT).
Conflit entre la règle 159 et le jeton "<" résolu par réduction ("<" < DOT).
Conflit entre la règle 159 et le jeton "<=" résolu par réduction ("<=" < DOT).
Conflit entre la règle 159 et le jeton ">" résolu par réduction (">" < DOT).
Conflit entre la règle 159 et le jeton ">=" résolu par réduction (">=" < DOT).
Conflit entre la règle 159 et le jeton "&" résolu par réduction ("&" < DOT).
Conflit entre la règle 159 et le jeton "|" résolu par réduction ("|" < DOT).


état 298

  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  157         | variable . "." functionCall
  158         | functionCall "." variable .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "'", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", ".", ".'", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  160         | variable . listableEnd
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    $défaut  réduction par utilisation de la règle 158 (variable)

    rightOperand   aller à l'état 153
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 154
    comparators    aller à l'état 155

Conflit entre la règle 158 et le jeton "'" résolu par réduction ("'" < DOT).
Conflit entre la règle 158 et le jeton ":" résolu par réduction (":" < DOT).
Conflit entre la règle 158 et le jeton "." résolu par réduction (%left ".").
Conflit entre la règle 158 et le jeton ".'" résolu par réduction (".'" < DOT).
Conflit entre la règle 158 et le jeton "+" résolu par réduction ("+" < DOT).
Conflit entre la règle 158 et le jeton "-" résolu par réduction ("-" < DOT).
Conflit entre la règle 158 et le jeton "*" résolu par réduction ("*" < DOT).
Conflit entre la règle 158 et le jeton ".*" résolu par réduction (".*" < DOT).
Conflit entre la règle 158 et le jeton ".*." résolu par réduction (".*." < DOT).
Conflit entre la règle 158 et le jeton "/" résolu par réduction ("/" < DOT).
Conflit entre la règle 158 et le jeton "./" résolu par réduction ("./" < DOT).
Conflit entre la règle 158 et le jeton "/." résolu par réduction ("/." < DOT).
Conflit entre la règle 158 et le jeton "./." résolu par réduction ("./." < DOT).
Conflit entre la règle 158 et le jeton "\\" résolu par réduction ("\\" < DOT).
Conflit entre la règle 158 et le jeton ".\\" résolu par réduction (".\\" < DOT).
Conflit entre la règle 158 et le jeton ".\\." résolu par réduction (".\\." < DOT).
Conflit entre la règle 158 et le jeton "** or ^" résolu par réduction ("** or ^" < DOT).
Conflit entre la règle 158 et le jeton ".^" résolu par réduction (".^" < DOT).
Conflit entre la règle 158 et le jeton "==" résolu par réduction ("==" < DOT).
Conflit entre la règle 158 et le jeton "<> or ~=" résolu par réduction ("<> or ~=" < DOT).
Conflit entre la règle 158 et le jeton "<" résolu par réduction ("<" < DOT).
Conflit entre la règle 158 et le jeton "<=" résolu par réduction ("<=" < DOT).
Conflit entre la règle 158 et le jeton ">" résolu par réduction (">" < DOT).
Conflit entre la règle 158 et le jeton ">=" résolu par réduction (">=" < DOT).
Conflit entre la règle 158 et le jeton "&" résolu par réduction ("&" < DOT).
Conflit entre la règle 158 et le jeton "|" résolu par réduction ("|" < DOT).


état 299

   55 simpleFunctionCall: "identifier" . "(" functionArgs ")"
  156 variable: variable "." "identifier" .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "'", "~ or @", "$", ",", ":", ";", ")", "[", "]", "{", "}", ".", ".'", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]

    "("  décalage et aller à l'état 98

    $défaut  réduction par utilisation de la règle 156 (variable)

Conflit entre la règle 156 et le jeton "(" résolu par décalage (UPLEVEL < "(").


état 300

  157 variable: variable "." functionCall .

    $défaut  réduction par utilisation de la règle 157 (variable)


état 301

  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  158 variable: functionCall . "." variable
  159         | functionCall . "." functionCall
  161         | functionCall . listableEnd
  179 variableFields: functionCall "," functionCall .  [",", ")"]
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"         décalage et aller à l'état 115
    ":"         décalage et aller à l'état 116
    "."         décalage et aller à l'état 165
    ".'"        décalage et aller à l'état 118
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 131
    ".^"        décalage et aller à l'état 132
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140

    $défaut  réduction par utilisation de la règle 179 (variableFields)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145


état 302

  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  157         | variable . "." functionCall
  160         | variable . listableEnd
  180 variableFields: functionCall "," variable .  [",", ")"]
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"         décalage et aller à l'état 148
    ":"         décalage et aller à l'état 116
    "."         décalage et aller à l'état 166
    ".'"        décalage et aller à l'état 150
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 151
    ".^"        décalage et aller à l'état 152
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140

    $défaut  réduction par utilisation de la règle 180 (variableFields)

    rightOperand   aller à l'état 153
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 154
    comparators    aller à l'état 155


état 303

  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  158 variable: functionCall . "." variable
  159         | functionCall . "." functionCall
  161         | functionCall . listableEnd
  181 variableFields: variable "," functionCall .  [",", ")"]
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"         décalage et aller à l'état 115
    ":"         décalage et aller à l'état 116
    "."         décalage et aller à l'état 165
    ".'"        décalage et aller à l'état 118
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 131
    ".^"        décalage et aller à l'état 132
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140

    $défaut  réduction par utilisation de la règle 181 (variableFields)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145


état 304

  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  157         | variable . "." functionCall
  160         | variable . listableEnd
  178 variableFields: variable "," variable .  [",", ")"]
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"         décalage et aller à l'état 148
    ":"         décalage et aller à l'état 116
    "."         décalage et aller à l'état 166
    ".'"        décalage et aller à l'état 150
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 151
    ".^"        décalage et aller à l'état 152
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140

    $défaut  réduction par utilisation de la règle 178 (variableFields)

    rightOperand   aller à l'état 153
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 154
    comparators    aller à l'état 155


état 305

  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  158 variable: functionCall . "." variable
  159         | functionCall . "." functionCall
  161         | functionCall . listableEnd
  177 variableFields: variableFields "," functionCall .  [",", ")"]
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"         décalage et aller à l'état 115
    ":"         décalage et aller à l'état 116
    "."         décalage et aller à l'état 165
    ".'"        décalage et aller à l'état 118
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 131
    ".^"        décalage et aller à l'état 132
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140

    $défaut  réduction par utilisation de la règle 177 (variableFields)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145


état 306

  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  157         | variable . "." functionCall
  160         | variable . listableEnd
  176 variableFields: variableFields "," variable .  [",", ")"]
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"         décalage et aller à l'état 148
    ":"         décalage et aller à l'état 116
    "."         décalage et aller à l'état 166
    ".'"        décalage et aller à l'état 150
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 151
    ".^"        décalage et aller à l'état 152
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140

    $défaut  réduction par utilisation de la règle 176 (variableFields)

    rightOperand   aller à l'état 153
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 154
    comparators    aller à l'état 155


état 307

  191 matrix: "[" matrixOrCellLines matrixOrCellColumns "]" .

    $défaut  réduction par utilisation de la règle 191 (matrix)


état 308

  200 matrixOrCellLineBreak: ";" "end of line" .

    $défaut  réduction par utilisation de la règle 200 (matrixOrCellLineBreak)


état 309

  203 matrixOrCellLine: matrixOrCellColumns ";" "line comment" . "end of line"

    "end of line"  décalage et aller à l'état 379


état 310

  202 matrixOrCellLine: matrixOrCellColumns "line comment" "end of line" .

    $défaut  réduction par utilisation de la règle 202 (matrixOrCellLine)


état 311

  213 matrixOrCellColumnsBreak: matrixOrCellColumnsBreak "," .

    $défaut  réduction par utilisation de la règle 213 (matrixOrCellColumnsBreak)


état 312

  198 matrixOrCellLineBreak: ";" .  ["%t or %T", "%f or %F", "~ or @", "$", "(", "[", "]", "{", "}", "+", "-", "string", "identifier", "integer", "float", "number"]
  200                      | ";" . "end of line"
  206 matrixOrCellLine: matrixOrCellColumns matrixOrCellColumnsBreak ";" . "line comment" "end of line"

    "end of line"   décalage et aller à l'état 308
    "line comment"  décalage et aller à l'état 380

    $défaut  réduction par utilisation de la règle 198 (matrixOrCellLineBreak)


état 313

  205 matrixOrCellLine: matrixOrCellColumns matrixOrCellColumnsBreak "line comment" . "end of line"

    "end of line"  décalage et aller à l'état 381


état 314

  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  158 variable: functionCall . "." variable
  159         | functionCall . "." functionCall
  161         | functionCall . listableEnd
  208 matrixOrCellColumns: matrixOrCellColumns matrixOrCellColumnsBreak functionCall .  ["end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "(", "[", "]", "{", "}", "string", "identifier", "integer", "float", "number", "line comment"]
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"         décalage et aller à l'état 115
    ":"         décalage et aller à l'état 116
    "."         décalage et aller à l'état 165
    ".'"        décalage et aller à l'état 118
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 131
    ".^"        décalage et aller à l'état 132
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140

    $défaut  réduction par utilisation de la règle 208 (matrixOrCellColumns)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145

Conflit entre la règle 208 et le jeton "+" résolu par décalage (HIGHLEVEL < "+").
Conflit entre la règle 208 et le jeton "-" résolu par décalage (HIGHLEVEL < "-").


état 315

  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  157         | variable . "." functionCall
  160         | variable . listableEnd
  207 matrixOrCellColumns: matrixOrCellColumns matrixOrCellColumnsBreak variable .  ["end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "(", "[", "]", "{", "}", "string", "identifier", "integer", "float", "number", "line comment"]
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"         décalage et aller à l'état 148
    ":"         décalage et aller à l'état 116
    "."         décalage et aller à l'état 166
    ".'"        décalage et aller à l'état 150
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 151
    ".^"        décalage et aller à l'état 152
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140

    $défaut  réduction par utilisation de la règle 207 (matrixOrCellColumns)

    rightOperand   aller à l'état 153
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 154
    comparators    aller à l'état 155

Conflit entre la règle 207 et le jeton "+" résolu par décalage (HIGHLEVEL < "+").
Conflit entre la règle 207 et le jeton "-" résolu par décalage (HIGHLEVEL < "-").


état 316

  204 matrixOrCellLine: matrixOrCellColumns matrixOrCellColumnsBreak matrixOrCellLineBreak .

    $défaut  réduction par utilisation de la règle 204 (matrixOrCellLine)


état 317

  190 matrix: "[" lineEnd matrixOrCellLines "]" .

    $défaut  réduction par utilisation de la règle 190 (matrix)


état 318

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  192       | "[" lineEnd matrixOrCellLines matrixOrCellColumns . "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"
  198 matrixOrCellLineBreak: . ";"
  199                      | . "end of line"
  200                      | . ";" "end of line"
  201 matrixOrCellLine: matrixOrCellColumns . matrixOrCellLineBreak
  202                 | matrixOrCellColumns . "line comment" "end of line"
  203                 | matrixOrCellColumns . ";" "line comment" "end of line"
  204                 | matrixOrCellColumns . matrixOrCellColumnsBreak matrixOrCellLineBreak
  205                 | matrixOrCellColumns . matrixOrCellColumnsBreak "line comment" "end of line"
  206                 | matrixOrCellColumns . matrixOrCellColumnsBreak ";" "line comment" "end of line"
  207 matrixOrCellColumns: matrixOrCellColumns . matrixOrCellColumnsBreak variable
  208                    | matrixOrCellColumns . matrixOrCellColumnsBreak functionCall
  209                    | matrixOrCellColumns . variable
  210                    | matrixOrCellColumns . functionCall
  213 matrixOrCellColumnsBreak: . matrixOrCellColumnsBreak ","
  214                         | . ","

    "end of line"   décalage et aller à l'état 177
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    ","             décalage et aller à l'état 178
    ";"             décalage et aller à l'état 179
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 55
    "]"             décalage et aller à l'état 382
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 56
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 181

    functionCall              aller à l'état 182
    specificFunctionCall      aller à l'état 33
    simpleFunctionCall        aller à l'état 34
    recursiveFunctionCall     aller à l'état 35
    comparison                aller à l'état 38
    operation                 aller à l'état 39
    variable                  aller à l'état 183
    cell                      aller à l'état 41
    matrix                    aller à l'état 42
    matrixOrCellLineBreak     aller à l'état 184
    matrixOrCellColumnsBreak  aller à l'état 185


état 319

  194 matrix: "[" lineEnd matrixOrCellColumns "]" .

    $défaut  réduction par utilisation de la règle 194 (matrix)


état 320

  184 cell: "{" matrixOrCellLines matrixOrCellColumns "}" .

    $défaut  réduction par utilisation de la règle 184 (cell)


état 321

  183 cell: "{" lineEnd matrixOrCellLines "}" .

    $défaut  réduction par utilisation de la règle 183 (cell)


état 322

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  185     | "{" lineEnd matrixOrCellLines matrixOrCellColumns . "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"
  198 matrixOrCellLineBreak: . ";"
  199                      | . "end of line"
  200                      | . ";" "end of line"
  201 matrixOrCellLine: matrixOrCellColumns . matrixOrCellLineBreak
  202                 | matrixOrCellColumns . "line comment" "end of line"
  203                 | matrixOrCellColumns . ";" "line comment" "end of line"
  204                 | matrixOrCellColumns . matrixOrCellColumnsBreak matrixOrCellLineBreak
  205                 | matrixOrCellColumns . matrixOrCellColumnsBreak "line comment" "end of line"
  206                 | matrixOrCellColumns . matrixOrCellColumnsBreak ";" "line comment" "end of line"
  207 matrixOrCellColumns: matrixOrCellColumns . matrixOrCellColumnsBreak variable
  208                    | matrixOrCellColumns . matrixOrCellColumnsBreak functionCall
  209                    | matrixOrCellColumns . variable
  210                    | matrixOrCellColumns . functionCall
  213 matrixOrCellColumnsBreak: . matrixOrCellColumnsBreak ","
  214                         | . ","

    "end of line"   décalage et aller à l'état 177
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    ","             décalage et aller à l'état 178
    ";"             décalage et aller à l'état 179
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 55
    "{"             décalage et aller à l'état 9
    "}"             décalage et aller à l'état 383
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 56
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 181

    functionCall              aller à l'état 182
    specificFunctionCall      aller à l'état 33
    simpleFunctionCall        aller à l'état 34
    recursiveFunctionCall     aller à l'état 35
    comparison                aller à l'état 38
    operation                 aller à l'état 39
    variable                  aller à l'état 183
    cell                      aller à l'état 41
    matrix                    aller à l'état 42
    matrixOrCellLineBreak     aller à l'état 184
    matrixOrCellColumnsBreak  aller à l'état 185


état 323

  187 cell: "{" lineEnd matrixOrCellColumns "}" .

    $défaut  réduction par utilisation de la règle 187 (cell)


état 324

  240 ifConditionBreak: "," "end of line" .

    $défaut  réduction par utilisation de la règle 240 (ifConditionBreak)


état 325

  238 ifConditionBreak: ";" "end of line" .

    $défaut  réduction par utilisation de la règle 238 (ifConditionBreak)


état 326

  245 then: "then" ifConditionBreak .

    $défaut  réduction par utilisation de la règle 245 (then)


état 327

  243 then: ifConditionBreak "then" .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "else", "elseif", "end", "select", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  244     | ifConditionBreak "then" . "end of line"

    "end of line"  décalage et aller à l'état 384

    $défaut  réduction par utilisation de la règle 243 (then)


état 328

  233 thenBody: expressions .

    $défaut  réduction par utilisation de la règle 233 (thenBody)


état 329

  230 ifControl: "if" condition then thenBody . "end"
  231          | "if" condition then thenBody . else elseBody "end"
  232          | "if" condition then thenBody . elseIfControl "end"
  248 else: . "else"
  249     | . "else" ","
  250     | . "else" ";"
  251     | . "else" "end of line"
  252     | . "else" "," "end of line"
  253     | . "else" ";" "end of line"
  254 elseIfControl: . "elseif" condition then thenBody
  255              | . "elseif" condition then thenBody else elseBody
  256              | . "elseif" condition then thenBody elseIfControl

    "else"    décalage et aller à l'état 385
    "elseif"  décalage et aller à l'état 386
    "end"     décalage et aller à l'état 387

    else           aller à l'état 388
    elseIfControl  aller à l'état 389


état 330

  264 selectConditionBreak: "," "end of line" .

    $défaut  réduction par utilisation de la règle 264 (selectConditionBreak)


état 331

  265 selectConditionBreak: ";" "end of line" .

    $défaut  réduction par utilisation de la règle 265 (selectConditionBreak)


état 332

  259 selectControl: "select" selectable "line comment" selectConditionBreak . casesControl "end"
  260              | "select" selectable "line comment" selectConditionBreak . casesControl else elseBody "end"
  266 casesControl: . "case" variable caseControlBreak caseBody
  267             | . comments "case" variable caseControlBreak caseBody
  268             | . "case" variable "line comment" "end of line" caseBody
  269             | . comments "case" variable "line comment" "end of line" caseBody
  270             | . casesControl "case" variable caseControlBreak caseBody
  271             | . casesControl "case" variable "line comment" "end of line" caseBody
  331 comments: . "line comment" "end of line"
  332         | . comments "line comment" "end of line"

    "case"          décalage et aller à l'état 333
    "line comment"  décalage et aller à l'état 334

    casesControl  aller à l'état 390
    comments      aller à l'état 336


état 333

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"
  266 casesControl: "case" . variable caseControlBreak caseBody
  268             | "case" . variable "line comment" "end of line" caseBody

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 93
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 391
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 334

  331 comments: "line comment" . "end of line"

    "end of line"  décalage et aller à l'état 392


état 335

  248 else: . "else"
  249     | . "else" ","
  250     | . "else" ";"
  251     | . "else" "end of line"
  252     | . "else" "," "end of line"
  253     | . "else" ";" "end of line"
  257 selectControl: "select" selectable selectConditionBreak casesControl . "end"
  258              | "select" selectable selectConditionBreak casesControl . else elseBody "end"
  270 casesControl: casesControl . "case" variable caseControlBreak caseBody
  271             | casesControl . "case" variable "line comment" "end of line" caseBody

    "else"  décalage et aller à l'état 385
    "end"   décalage et aller à l'état 393
    "case"  décalage et aller à l'état 394

    else  aller à l'état 395


état 336

  267 casesControl: comments . "case" variable caseControlBreak caseBody
  269             | comments . "case" variable "line comment" "end of line" caseBody
  332 comments: comments . "line comment" "end of line"

    "case"          décalage et aller à l'état 396
    "line comment"  décalage et aller à l'état 397


état 337

   70 functionDeclaration: "function" "[" "]" "=" . "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"

    "identifier"  décalage et aller à l'état 398


état 338

   69 functionDeclaration: "function" "[" functionDeclarationReturns "]" . "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"

    "="  décalage et aller à l'état 399


état 339

   76 idList: idList "," . "identifier"

    "identifier"  décalage et aller à l'état 400


état 340

   74 functionDeclarationArguments: "(" ")" .

    $défaut  réduction par utilisation de la règle 74 (functionDeclarationArguments)


état 341

   73 functionDeclarationArguments: "(" idList . ")"
   76 idList: idList . "," "identifier"

    ","  décalage et aller à l'état 339
    ")"  décalage et aller à l'état 401


état 342

   68 functionDeclaration: "function" "identifier" "=" "identifier" . functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   73 functionDeclarationArguments: . "(" idList ")"
   74                             | . "(" ")"
   75                             | .  ["end of line", ",", ";", "line comment"]

    "("  décalage et aller à l'état 208

    $défaut  réduction par utilisation de la règle 75 (functionDeclarationArguments)

    functionDeclarationArguments  aller à l'état 402


état 343

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | "function" "identifier" functionDeclarationArguments functionDeclarationBreak . functionBody "endfunction"
   83 functionBody: . expressions
   84             | .  ["endfunction"]
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"
  215 variableDeclaration: . assignable "=" variable
  216                    | . assignable "=" functionCall
  217                    | . functionCall "=" variable
  218                    | . functionCall "=" functionCall
  219                    | . assignable "=" ":"
  220                    | . functionCall "=" ":"
  221                    | . assignable "=" returnControl
  222                    | . functionCall "=" returnControl
  223 assignable: . variable "." "identifier"
  224           | . variable "." functionCall
  225           | . functionCall "." variable
  226           | . functionCall "." functionCall
  227           | . "identifier"
  228           | . multipleResults
  229 multipleResults: . "[" matrixOrCellColumns "]"
  230 ifControl: . "if" condition then thenBody "end"
  231          | . "if" condition then thenBody else elseBody "end"
  232          | . "if" condition then thenBody elseIfControl "end"
  257 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  258              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  259              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  260              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  283 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  284           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  297 whileControl: . "while" condition whileConditionBreak whileBody "end"
  317 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  318           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  319           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  320           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  321 returnControl: . "return"
  322              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "endfunction"  réduction par utilisation de la règle 84 (functionBody)

    expressions            aller à l'état 403
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    functionBody           aller à l'état 404
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 344

   82 functionDeclarationBreak: "," "end of line" .

    $défaut  réduction par utilisation de la règle 82 (functionDeclarationBreak)


état 345

   80 functionDeclarationBreak: ";" "end of line" .

    $défaut  réduction par utilisation de la règle 80 (functionDeclarationBreak)


état 346

   78 functionDeclarationBreak: . lineEnd
   79                         | . ";"
   80                         | . ";" "end of line"
   81                         | . ","
   82                         | . "," "end of line"
   85 classDeclaration: "class" "identifier" "<" "identifier" . functionDeclarationBreak slotsDeclaration "endclass"
  333 lineEnd: . "end of line"
  334        | . "line comment" "end of line"

    "end of line"   décalage et aller à l'état 62
    ","             décalage et aller à l'état 211
    ";"             décalage et aller à l'état 212
    "line comment"  décalage et aller à l'état 64

    functionDeclarationBreak  aller à l'état 405
    lineEnd                   aller à l'état 215


état 347

   78 functionDeclarationBreak: . lineEnd
   79                         | . ";"
   80                         | . ";" "end of line"
   81                         | . ","
   82                         | . "," "end of line"
   86 classDeclaration: "class" "identifier" functionDeclarationBreak slotsDeclaration . "endclass"
   87 slotsDeclaration: slotsDeclaration . slotDeclaration functionDeclarationBreak
   88                 | slotsDeclaration . functionDeclarationBreak
   90 slotDeclaration: . methodDeclaration
   91                | . propertyDeclaration
   92 methodDeclaration: . "function" slotAttributes "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   93                  | . "function" slotAttributes "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   94                  | . "function" slotAttributes "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   95                  | . "function" slotAttributes "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   96 propertyDeclaration: . "property" slotAttributes "identifier" "=" variable
   97                    | . "property" slotAttributes "identifier"
  333 lineEnd: . "end of line"
  334        | . "line comment" "end of line"

    "end of line"   décalage et aller à l'état 62
    ","             décalage et aller à l'état 211
    ";"             décalage et aller à l'état 212
    "function"      décalage et aller à l'état 406
    "endclass"      décalage et aller à l'état 407
    "property"      décalage et aller à l'état 408
    "line comment"  décalage et aller à l'état 64

    functionDeclarationBreak  aller à l'état 409
    slotDeclaration           aller à l'état 410
    methodDeclaration         aller à l'état 411
    propertyDeclaration       aller à l'état 412
    lineEnd                   aller à l'état 215


état 348

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"
  284 forControl: "for" "(" "identifier" "=" . forIterator ")" forConditionBreak forBody "end"
  285 forIterator: . functionCall
  286            | . variable

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 349
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 350
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    forIterator            aller à l'état 413


état 349

  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  158 variable: functionCall . "." variable
  159         | functionCall . "." functionCall
  161         | functionCall . listableEnd
  285 forIterator: functionCall .  [error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "(", ")", "[", "{", "if", "end", "select", "function", "class", "for", "while", "do", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"         décalage et aller à l'état 115
    ":"         décalage et aller à l'état 116
    "."         décalage et aller à l'état 165
    ".'"        décalage et aller à l'état 118
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 131
    ".^"        décalage et aller à l'état 132
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140

    $défaut  réduction par utilisation de la règle 285 (forIterator)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145

Conflit entre la règle 285 et le jeton "+" résolu par décalage (UPLEVEL < "+").
Conflit entre la règle 285 et le jeton "-" résolu par décalage (UPLEVEL < "-").


état 350

  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  157         | variable . "." functionCall
  160         | variable . listableEnd
  286 forIterator: variable .  [error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ";", "(", ")", "[", "{", "if", "end", "select", "function", "class", "for", "while", "do", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"         décalage et aller à l'état 148
    ":"         décalage et aller à l'état 116
    "."         décalage et aller à l'état 166
    ".'"        décalage et aller à l'état 150
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 151
    ".^"        décalage et aller à l'état 152
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140

    $défaut  réduction par utilisation de la règle 286 (forIterator)

    rightOperand   aller à l'état 153
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 154
    comparators    aller à l'état 155

Conflit entre la règle 286 et le jeton "+" résolu par décalage (UPLEVEL < "+").
Conflit entre la règle 286 et le jeton "-" résolu par décalage (UPLEVEL < "-").


état 351

  283 forControl: "for" "identifier" "=" forIterator . forConditionBreak forBody "end"
  287 forConditionBreak: . "end of line"
  288                  | . ";"
  289                  | . ";" "end of line"
  290                  | . ","
  291                  | . "," "end of line"
  292                  | . "do"
  293                  | . "do" "end of line"
  294                  | .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "end", "select", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]

    "end of line"  décalage et aller à l'état 414
    ","            décalage et aller à l'état 415
    ";"            décalage et aller à l'état 416
    "do"           décalage et aller à l'état 417

    $défaut  réduction par utilisation de la règle 294 (forConditionBreak)

    forConditionBreak  aller à l'état 418


état 352

  309 whileConditionBreak: "," "end of line" .

    $défaut  réduction par utilisation de la règle 309 (whileConditionBreak)


état 353

  310 whileConditionBreak: ";" "end of line" .

    $défaut  réduction par utilisation de la règle 310 (whileConditionBreak)


état 354

  314 whileConditionBreak: "then" "end of line" .

    $défaut  réduction par utilisation de la règle 314 (whileConditionBreak)


état 355

  306 whileConditionBreak: "then" "," .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "end", "select", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  315                    | "then" "," . "end of line"

    "end of line"  décalage et aller à l'état 419

    $défaut  réduction par utilisation de la règle 306 (whileConditionBreak)


état 356

  307 whileConditionBreak: "then" ";" .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "end", "select", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  316                    | "then" ";" . "end of line"

    "end of line"  décalage et aller à l'état 420

    $défaut  réduction par utilisation de la règle 307 (whileConditionBreak)


état 357

  311 whileConditionBreak: "do" "end of line" .

    $défaut  réduction par utilisation de la règle 311 (whileConditionBreak)


état 358

  303 whileConditionBreak: "do" "," .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "end", "select", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  312                    | "do" "," . "end of line"

    "end of line"  décalage et aller à l'état 421

    $défaut  réduction par utilisation de la règle 303 (whileConditionBreak)


état 359

  304 whileConditionBreak: "do" ";" .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "end", "select", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  313                    | "do" ";" . "end of line"

    "end of line"  décalage et aller à l'état 422

    $défaut  réduction par utilisation de la règle 304 (whileConditionBreak)


état 360

  298 whileBody: expressions .

    $défaut  réduction par utilisation de la règle 298 (whileBody)


état 361

  297 whileControl: "while" condition whileConditionBreak whileBody . "end"

    "end"  décalage et aller à l'état 423


état 362

  317 tryControl: "try" "end of line" expressions "catch" . "end of line" expressions "end"
  319           | "try" "end of line" expressions "catch" . "line comment" "end of line" expressions "end"

    "end of line"   décalage et aller à l'état 424
    "line comment"  décalage et aller à l'état 425


état 363

  318 tryControl: "try" "line comment" "end of line" expressions . "catch" "end of line" expressions "end"
  320           | "try" "line comment" "end of line" expressions . "catch" "line comment" "end of line" expressions "end"

    "catch"  décalage et aller à l'état 426


état 364

   55 simpleFunctionCall: "identifier" "(" functionArgs ")" .

    $défaut  réduction par utilisation de la règle 55 (simpleFunctionCall)


état 365

   43 implicitCallable: implicitCallable "." "identifier" .  ["end of file", "end of line", "%t or %T", "%f or %F", "$", ",", ";", ".", "+", "-", "*", ".*", ".*.", "/", "./", "/.", "./.", "\\", ".\\", ".\\.", "else", "elseif", "end", "case", "endfunction", "catch", "string", "identifier", "integer", "float", "number", "path", "line comment"]
   55 simpleFunctionCall: "identifier" . "(" functionArgs ")"

    "("  décalage et aller à l'état 98

    $défaut  réduction par utilisation de la règle 43 (implicitCallable)


état 366

   44 implicitCallable: implicitCallable "." functionCall .

    $défaut  réduction par utilisation de la règle 44 (implicitCallable)


état 367

    9 recursiveExpression: recursiveExpression expression "line comment" expressionLineBreak .  ["end of file", error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "line comment"]
   15 expressionLineBreak: expressionLineBreak . ";"
   16                    | expressionLineBreak . ","
   17                    | expressionLineBreak . "end of line"

    "end of line"  décalage et aller à l'état 232
    ","            décalage et aller à l'état 233
    ";"            décalage et aller à l'état 234

    $défaut  réduction par utilisation de la règle 9 (recursiveExpression)


état 368

  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  153            | listableBegin ":" functionCall .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  154            | . listableBegin
  158 variable: functionCall . "." variable
  159         | functionCall . "." functionCall
  161         | functionCall . listableEnd
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"         décalage et aller à l'état 115
    "."         décalage et aller à l'état 165
    ".'"        décalage et aller à l'état 118
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 131
    ".^"        décalage et aller à l'état 132
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138

    $défaut  réduction par utilisation de la règle 153 (listableEnd)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145

Conflit entre la règle 153 et le jeton "'" résolu par décalage (COLON < "'").
Conflit entre la règle 153 et le jeton ":" résolu par réduction (%left ":").
Conflit entre la règle 153 et le jeton "." résolu par décalage (COLON < ".").
Conflit entre la règle 153 et le jeton ".'" résolu par décalage (COLON < ".'").
Conflit entre la règle 153 et le jeton "+" résolu par décalage (COLON < "+").
Conflit entre la règle 153 et le jeton "-" résolu par décalage (COLON < "-").
Conflit entre la règle 153 et le jeton "*" résolu par décalage (COLON < "*").
Conflit entre la règle 153 et le jeton ".*" résolu par décalage (COLON < ".*").
Conflit entre la règle 153 et le jeton ".*." résolu par décalage (COLON < ".*.").
Conflit entre la règle 153 et le jeton "/" résolu par décalage (COLON < "/").
Conflit entre la règle 153 et le jeton "./" résolu par décalage (COLON < "./").
Conflit entre la règle 153 et le jeton "/." résolu par décalage (COLON < "/.").
Conflit entre la règle 153 et le jeton "./." résolu par décalage (COLON < "./.").
Conflit entre la règle 153 et le jeton "\\" résolu par décalage (COLON < "\\").
Conflit entre la règle 153 et le jeton ".\\" résolu par décalage (COLON < ".\\").
Conflit entre la règle 153 et le jeton ".\\." résolu par décalage (COLON < ".\\.").
Conflit entre la règle 153 et le jeton "** or ^" résolu par décalage (COLON < "** or ^").
Conflit entre la règle 153 et le jeton ".^" résolu par décalage (COLON < ".^").
Conflit entre la règle 153 et le jeton "==" résolu par décalage (COLON < "==").
Conflit entre la règle 153 et le jeton "<> or ~=" résolu par décalage (COLON < "<> or ~=").
Conflit entre la règle 153 et le jeton "<" résolu par décalage (COLON < "<").
Conflit entre la règle 153 et le jeton "<=" résolu par décalage (COLON < "<=").
Conflit entre la règle 153 et le jeton ">" résolu par décalage (COLON < ">").
Conflit entre la règle 153 et le jeton ">=" résolu par décalage (COLON < ">=").
Conflit entre la règle 153 et le jeton "&" résolu par réduction ("&" < COLON).
Conflit entre la règle 153 et le jeton "|" résolu par réduction ("|" < COLON).


état 369

  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  152            | listableBegin ":" variable .  ["end of file", error, "end of line", "%t or %T", "%f or %F", "~ or @", "$", ",", ":", ";", "(", ")", "[", "]", "{", "}", "&", "|", "=", "if", "then", "else", "elseif", "end", "select", "case", "function", "endfunction", "class", "for", "while", "do", "break", "try", "catch", "return", "string", "identifier", "integer", "float", "number", "path", "line comment"]
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  157         | variable . "." functionCall
  160         | variable . listableEnd
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"         décalage et aller à l'état 148
    "."         décalage et aller à l'état 166
    ".'"        décalage et aller à l'état 150
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 151
    ".^"        décalage et aller à l'état 152
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138

    $défaut  réduction par utilisation de la règle 152 (listableEnd)

    rightOperand   aller à l'état 153
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 154
    comparators    aller à l'état 155

Conflit entre la règle 152 et le jeton "'" résolu par décalage (COLON < "'").
Conflit entre la règle 152 et le jeton ":" résolu par réduction (%left ":").
Conflit entre la règle 152 et le jeton "." résolu par décalage (COLON < ".").
Conflit entre la règle 152 et le jeton ".'" résolu par décalage (COLON < ".'").
Conflit entre la règle 152 et le jeton "+" résolu par décalage (COLON < "+").
Conflit entre la règle 152 et le jeton "-" résolu par décalage (COLON < "-").
Conflit entre la règle 152 et le jeton "*" résolu par décalage (COLON < "*").
Conflit entre la règle 152 et le jeton ".*" résolu par décalage (COLON < ".*").
Conflit entre la règle 152 et le jeton ".*." résolu par décalage (COLON < ".*.").
Conflit entre la règle 152 et le jeton "/" résolu par décalage (COLON < "/").
Conflit entre la règle 152 et le jeton "./" résolu par décalage (COLON < "./").
Conflit entre la règle 152 et le jeton "/." résolu par décalage (COLON < "/.").
Conflit entre la règle 152 et le jeton "./." résolu par décalage (COLON < "./.").
Conflit entre la règle 152 et le jeton "\\" résolu par décalage (COLON < "\\").
Conflit entre la règle 152 et le jeton ".\\" résolu par décalage (COLON < ".\\").
Conflit entre la règle 152 et le jeton ".\\." résolu par décalage (COLON < ".\\.").
Conflit entre la règle 152 et le jeton "** or ^" résolu par décalage (COLON < "** or ^").
Conflit entre la règle 152 et le jeton ".^" résolu par décalage (COLON < ".^").
Conflit entre la règle 152 et le jeton "==" résolu par décalage (COLON < "==").
Conflit entre la règle 152 et le jeton "<> or ~=" résolu par décalage (COLON < "<> or ~=").
Conflit entre la règle 152 et le jeton "<" résolu par décalage (COLON < "<").
Conflit entre la règle 152 et le jeton "<=" résolu par décalage (COLON < "<=").
Conflit entre la règle 152 et le jeton ">" résolu par décalage (COLON < ">").
Conflit entre la règle 152 et le jeton ">=" résolu par décalage (COLON < ">=").
Conflit entre la règle 152 et le jeton "&" résolu par réduction ("&" < COLON).
Conflit entre la règle 152 et le jeton "|" résolu par réduction ("|" < COLON).


état 370

   56 recursiveFunctionCall: simpleFunctionCall "(" functionArgs ")" .

    $défaut  réduction par utilisation de la règle 56 (recursiveFunctionCall)


état 371

   57 recursiveFunctionCall: recursiveFunctionCall "(" functionArgs ")" .

    $défaut  réduction par utilisation de la règle 57 (recursiveFunctionCall)


état 372

   55 simpleFunctionCall: "identifier" . "(" functionArgs ")"

    "("  décalage et aller à l'état 98


état 373

   52 functionCall: "~ or @" functionCall .

    $défaut  réduction par utilisation de la règle 52 (functionCall)


état 374

   51 functionCall: "(" functionCall . ")"

    ")"  décalage et aller à l'état 168


état 375

   65 functionArgs: functionArgs "," ":" .

    $défaut  réduction par utilisation de la règle 65 (functionArgs)


état 376

   64 functionArgs: functionArgs "," functionCall .  [",", ")"]
  104 comparison: functionCall . comparators comparable
  109 operation: functionCall . rightOperand
  116          | functionCall . "** or ^" variable
  117          | functionCall . "** or ^" functionCall
  120          | functionCall . ".^" variable
  121          | functionCall . ".^" functionCall
  124          | functionCall . "'"
  125          | functionCall . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  158 variable: functionCall . "." variable
  159         | functionCall . "." functionCall
  161         | functionCall . listableEnd
  217 variableDeclaration: functionCall . "=" variable
  218                    | functionCall . "=" functionCall
  220                    | functionCall . "=" ":"
  222                    | functionCall . "=" returnControl
  225 assignable: functionCall . "." variable
  226           | functionCall . "." functionCall
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"         décalage et aller à l'état 115
    ":"         décalage et aller à l'état 116
    "."         décalage et aller à l'état 117
    ".'"        décalage et aller à l'état 118
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 131
    ".^"        décalage et aller à l'état 132
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140
    "="         décalage et aller à l'état 141

    $défaut  réduction par utilisation de la règle 64 (functionArgs)

    rightOperand   aller à l'état 142
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 144
    comparators    aller à l'état 145


état 377

   63 functionArgs: functionArgs "," variable .  [",", ")"]
  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  157         | variable . "." functionCall
  160         | variable . listableEnd
  223 assignable: variable . "." "identifier"
  224           | variable . "." functionCall
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"         décalage et aller à l'état 148
    ":"         décalage et aller à l'état 116
    "."         décalage et aller à l'état 149
    ".'"        décalage et aller à l'état 150
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 151
    ".^"        décalage et aller à l'état 152
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140

    $défaut  réduction par utilisation de la règle 63 (functionArgs)

    rightOperand   aller à l'état 153
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 154
    comparators    aller à l'état 155


état 378

   66 functionArgs: functionArgs "," variableDeclaration .

    $défaut  réduction par utilisation de la règle 66 (functionArgs)


état 379

  203 matrixOrCellLine: matrixOrCellColumns ";" "line comment" "end of line" .

    $défaut  réduction par utilisation de la règle 203 (matrixOrCellLine)


état 380

  206 matrixOrCellLine: matrixOrCellColumns matrixOrCellColumnsBreak ";" "line comment" . "end of line"

    "end of line"  décalage et aller à l'état 427


état 381

  205 matrixOrCellLine: matrixOrCellColumns matrixOrCellColumnsBreak "line comment" "end of line" .

    $défaut  réduction par utilisation de la règle 205 (matrixOrCellLine)


état 382

  192 matrix: "[" lineEnd matrixOrCellLines matrixOrCellColumns "]" .

    $défaut  réduction par utilisation de la règle 192 (matrix)


état 383

  185 cell: "{" lineEnd matrixOrCellLines matrixOrCellColumns "}" .

    $défaut  réduction par utilisation de la règle 185 (cell)


état 384

  244 then: ifConditionBreak "then" "end of line" .

    $défaut  réduction par utilisation de la règle 244 (then)


état 385

  248 else: "else" .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "end", "select", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  249     | "else" . ","
  250     | "else" . ";"
  251     | "else" . "end of line"
  252     | "else" . "," "end of line"
  253     | "else" . ";" "end of line"

    "end of line"  décalage et aller à l'état 428
    ","            décalage et aller à l'état 429
    ";"            décalage et aller à l'état 430

    $défaut  réduction par utilisation de la règle 248 (else)


état 386

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  101 condition: . functionCall
  102          | . variable
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"
  254 elseIfControl: "elseif" . condition then thenBody
  255              | "elseif" . condition then thenBody else elseBody
  256              | "elseif" . condition then thenBody elseIfControl

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 79
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    condition              aller à l'état 431
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 81
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 387

  230 ifControl: "if" condition then thenBody "end" .

    $défaut  réduction par utilisation de la règle 230 (ifControl)


état 388

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"
  215 variableDeclaration: . assignable "=" variable
  216                    | . assignable "=" functionCall
  217                    | . functionCall "=" variable
  218                    | . functionCall "=" functionCall
  219                    | . assignable "=" ":"
  220                    | . functionCall "=" ":"
  221                    | . assignable "=" returnControl
  222                    | . functionCall "=" returnControl
  223 assignable: . variable "." "identifier"
  224           | . variable "." functionCall
  225           | . functionCall "." variable
  226           | . functionCall "." functionCall
  227           | . "identifier"
  228           | . multipleResults
  229 multipleResults: . "[" matrixOrCellColumns "]"
  230 ifControl: . "if" condition then thenBody "end"
  231          | . "if" condition then thenBody else elseBody "end"
  231          | "if" condition then thenBody else . elseBody "end"
  232          | . "if" condition then thenBody elseIfControl "end"
  235 elseBody: . expressions
  236         | .  ["end"]
  257 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  258              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  259              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  260              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  283 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  284           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  297 whileControl: . "while" condition whileConditionBreak whileBody "end"
  317 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  318           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  319           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  320           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  321 returnControl: . "return"
  322              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "end"  réduction par utilisation de la règle 236 (elseBody)

    expressions            aller à l'état 432
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    elseBody               aller à l'état 433
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 389

  232 ifControl: "if" condition then thenBody elseIfControl . "end"

    "end"  décalage et aller à l'état 434


état 390

  248 else: . "else"
  249     | . "else" ","
  250     | . "else" ";"
  251     | . "else" "end of line"
  252     | . "else" "," "end of line"
  253     | . "else" ";" "end of line"
  259 selectControl: "select" selectable "line comment" selectConditionBreak casesControl . "end"
  260              | "select" selectable "line comment" selectConditionBreak casesControl . else elseBody "end"
  270 casesControl: casesControl . "case" variable caseControlBreak caseBody
  271             | casesControl . "case" variable "line comment" "end of line" caseBody

    "else"  décalage et aller à l'état 385
    "end"   décalage et aller à l'état 435
    "case"  décalage et aller à l'état 394

    else  aller à l'état 436


état 391

  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  157         | variable . "." functionCall
  160         | variable . listableEnd
  266 casesControl: "case" variable . caseControlBreak caseBody
  268             | "case" variable . "line comment" "end of line" caseBody
  274 caseControlBreak: . "then"
  275                 | . ","
  276                 | . ";"
  277                 | . "end of line"
  278                 | . "then" "end of line"
  279                 | . "," "end of line"
  280                 | . ";" "end of line"
  281                 | . "then" ","
  282                 | . "then" "," "end of line"
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "end of line"   décalage et aller à l'état 437
    "'"             décalage et aller à l'état 148
    ","             décalage et aller à l'état 438
    ":"             décalage et aller à l'état 116
    ";"             décalage et aller à l'état 439
    "."             décalage et aller à l'état 166
    ".'"            décalage et aller à l'état 150
    "+"             décalage et aller à l'état 119
    "-"             décalage et aller à l'état 120
    "*"             décalage et aller à l'état 121
    ".*"            décalage et aller à l'état 122
    ".*."           décalage et aller à l'état 123
    "/"             décalage et aller à l'état 124
    "./"            décalage et aller à l'état 125
    "/."            décalage et aller à l'état 126
    "./."           décalage et aller à l'état 127
    "\\"            décalage et aller à l'état 128
    ".\\"           décalage et aller à l'état 129
    ".\\."          décalage et aller à l'état 130
    "** or ^"       décalage et aller à l'état 151
    ".^"            décalage et aller à l'état 152
    "=="            décalage et aller à l'état 133
    "<> or ~="      décalage et aller à l'état 134
    "<"             décalage et aller à l'état 135
    "<="            décalage et aller à l'état 136
    ">"             décalage et aller à l'état 137
    ">="            décalage et aller à l'état 138
    "&"             décalage et aller à l'état 139
    "|"             décalage et aller à l'état 140
    "then"          décalage et aller à l'état 440
    "line comment"  décalage et aller à l'état 441

    rightOperand      aller à l'état 153
    listableBegin     aller à l'état 143
    listableEnd       aller à l'état 154
    caseControlBreak  aller à l'état 442
    comparators       aller à l'état 155


état 392

  331 comments: "line comment" "end of line" .

    $défaut  réduction par utilisation de la règle 331 (comments)


état 393

  257 selectControl: "select" selectable selectConditionBreak casesControl "end" .

    $défaut  réduction par utilisation de la règle 257 (selectControl)


état 394

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"
  270 casesControl: casesControl "case" . variable caseControlBreak caseBody
  271             | casesControl "case" . variable "line comment" "end of line" caseBody

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 93
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 443
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 395

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"
  215 variableDeclaration: . assignable "=" variable
  216                    | . assignable "=" functionCall
  217                    | . functionCall "=" variable
  218                    | . functionCall "=" functionCall
  219                    | . assignable "=" ":"
  220                    | . functionCall "=" ":"
  221                    | . assignable "=" returnControl
  222                    | . functionCall "=" returnControl
  223 assignable: . variable "." "identifier"
  224           | . variable "." functionCall
  225           | . functionCall "." variable
  226           | . functionCall "." functionCall
  227           | . "identifier"
  228           | . multipleResults
  229 multipleResults: . "[" matrixOrCellColumns "]"
  230 ifControl: . "if" condition then thenBody "end"
  231          | . "if" condition then thenBody else elseBody "end"
  232          | . "if" condition then thenBody elseIfControl "end"
  235 elseBody: . expressions
  236         | .  ["end"]
  257 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  258              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  258              | "select" selectable selectConditionBreak casesControl else . elseBody "end"
  259              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  260              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  283 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  284           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  297 whileControl: . "while" condition whileConditionBreak whileBody "end"
  317 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  318           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  319           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  320           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  321 returnControl: . "return"
  322              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "end"  réduction par utilisation de la règle 236 (elseBody)

    expressions            aller à l'état 432
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    elseBody               aller à l'état 444
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 396

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"
  267 casesControl: comments "case" . variable caseControlBreak caseBody
  269             | comments "case" . variable "line comment" "end of line" caseBody

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 93
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 445
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 397

  332 comments: comments "line comment" . "end of line"

    "end of line"  décalage et aller à l'état 446


état 398

   70 functionDeclaration: "function" "[" "]" "=" "identifier" . functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   73 functionDeclarationArguments: . "(" idList ")"
   74                             | . "(" ")"
   75                             | .  ["end of line", ",", ";", "line comment"]

    "("  décalage et aller à l'état 208

    $défaut  réduction par utilisation de la règle 75 (functionDeclarationArguments)

    functionDeclarationArguments  aller à l'état 447


état 399

   69 functionDeclaration: "function" "[" functionDeclarationReturns "]" "=" . "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"

    "identifier"  décalage et aller à l'état 448


état 400

   76 idList: idList "," "identifier" .

    $défaut  réduction par utilisation de la règle 76 (idList)


état 401

   73 functionDeclarationArguments: "(" idList ")" .

    $défaut  réduction par utilisation de la règle 73 (functionDeclarationArguments)


état 402

   68 functionDeclaration: "function" "identifier" "=" "identifier" functionDeclarationArguments . functionDeclarationBreak functionBody "endfunction"
   78 functionDeclarationBreak: . lineEnd
   79                         | . ";"
   80                         | . ";" "end of line"
   81                         | . ","
   82                         | . "," "end of line"
  333 lineEnd: . "end of line"
  334        | . "line comment" "end of line"

    "end of line"   décalage et aller à l'état 62
    ","             décalage et aller à l'état 211
    ";"             décalage et aller à l'état 212
    "line comment"  décalage et aller à l'état 64

    functionDeclarationBreak  aller à l'état 449
    lineEnd                   aller à l'état 215


état 403

   83 functionBody: expressions .

    $défaut  réduction par utilisation de la règle 83 (functionBody)


état 404

   71 functionDeclaration: "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody . "endfunction"

    "endfunction"  décalage et aller à l'état 450


état 405

   85 classDeclaration: "class" "identifier" "<" "identifier" functionDeclarationBreak . slotsDeclaration "endclass"
   87 slotsDeclaration: . slotsDeclaration slotDeclaration functionDeclarationBreak
   88                 | . slotsDeclaration functionDeclarationBreak
   89                 | .

    $défaut  réduction par utilisation de la règle 89 (slotsDeclaration)

    slotsDeclaration  aller à l'état 451


état 406

   92 methodDeclaration: "function" . slotAttributes "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   93                  | "function" . slotAttributes "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   94                  | "function" . slotAttributes "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   95                  | "function" . slotAttributes "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   98 slotAttributes: . "(" idList ")"
   99               | . "(" ")"
  100               | .  ["[", "identifier"]

    "("  décalage et aller à l'état 452

    $défaut  réduction par utilisation de la règle 100 (slotAttributes)

    slotAttributes  aller à l'état 453


état 407

   86 classDeclaration: "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass" .

    $défaut  réduction par utilisation de la règle 86 (classDeclaration)


état 408

   96 propertyDeclaration: "property" . slotAttributes "identifier" "=" variable
   97                    | "property" . slotAttributes "identifier"
   98 slotAttributes: . "(" idList ")"
   99               | . "(" ")"
  100               | .  ["identifier"]

    "("  décalage et aller à l'état 452

    $défaut  réduction par utilisation de la règle 100 (slotAttributes)

    slotAttributes  aller à l'état 454


état 409

   88 slotsDeclaration: slotsDeclaration functionDeclarationBreak .

    $défaut  réduction par utilisation de la règle 88 (slotsDeclaration)


état 410

   78 functionDeclarationBreak: . lineEnd
   79                         | . ";"
   80                         | . ";" "end of line"
   81                         | . ","
   82                         | . "," "end of line"
   87 slotsDeclaration: slotsDeclaration slotDeclaration . functionDeclarationBreak
  333 lineEnd: . "end of line"
  334        | . "line comment" "end of line"

    "end of line"   décalage et aller à l'état 62
    ","             décalage et aller à l'état 211
    ";"             décalage et aller à l'état 212
    "line comment"  décalage et aller à l'état 64

    functionDeclarationBreak  aller à l'état 455
    lineEnd                   aller à l'état 215


état 411

   90 slotDeclaration: methodDeclaration .

    $défaut  réduction par utilisation de la règle 90 (slotDeclaration)


état 412

   91 slotDeclaration: propertyDeclaration .

    $défaut  réduction par utilisation de la règle 91 (slotDeclaration)


état 413

  284 forControl: "for" "(" "identifier" "=" forIterator . ")" forConditionBreak forBody "end"

    ")"  décalage et aller à l'état 456


état 414

  287 forConditionBreak: "end of line" .

    $défaut  réduction par utilisation de la règle 287 (forConditionBreak)


état 415

  290 forConditionBreak: "," .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "end", "select", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  291                  | "," . "end of line"

    "end of line"  décalage et aller à l'état 457

    $défaut  réduction par utilisation de la règle 290 (forConditionBreak)


état 416

  288 forConditionBreak: ";" .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "end", "select", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  289                  | ";" . "end of line"

    "end of line"  décalage et aller à l'état 458

    $défaut  réduction par utilisation de la règle 288 (forConditionBreak)


état 417

  292 forConditionBreak: "do" .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "end", "select", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  293                  | "do" . "end of line"

    "end of line"  décalage et aller à l'état 459

    $défaut  réduction par utilisation de la règle 292 (forConditionBreak)


état 418

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"
  215 variableDeclaration: . assignable "=" variable
  216                    | . assignable "=" functionCall
  217                    | . functionCall "=" variable
  218                    | . functionCall "=" functionCall
  219                    | . assignable "=" ":"
  220                    | . functionCall "=" ":"
  221                    | . assignable "=" returnControl
  222                    | . functionCall "=" returnControl
  223 assignable: . variable "." "identifier"
  224           | . variable "." functionCall
  225           | . functionCall "." variable
  226           | . functionCall "." functionCall
  227           | . "identifier"
  228           | . multipleResults
  229 multipleResults: . "[" matrixOrCellColumns "]"
  230 ifControl: . "if" condition then thenBody "end"
  231          | . "if" condition then thenBody else elseBody "end"
  232          | . "if" condition then thenBody elseIfControl "end"
  257 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  258              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  259              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  260              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  283 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  283           | "for" "identifier" "=" forIterator forConditionBreak . forBody "end"
  284           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  295 forBody: . expressions
  296        | .  ["end"]
  297 whileControl: . "while" condition whileConditionBreak whileBody "end"
  317 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  318           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  319           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  320           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  321 returnControl: . "return"
  322              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "end"  réduction par utilisation de la règle 296 (forBody)

    expressions            aller à l'état 460
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    forBody                aller à l'état 461
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 419

  315 whileConditionBreak: "then" "," "end of line" .

    $défaut  réduction par utilisation de la règle 315 (whileConditionBreak)


état 420

  316 whileConditionBreak: "then" ";" "end of line" .

    $défaut  réduction par utilisation de la règle 316 (whileConditionBreak)


état 421

  312 whileConditionBreak: "do" "," "end of line" .

    $défaut  réduction par utilisation de la règle 312 (whileConditionBreak)


état 422

  313 whileConditionBreak: "do" ";" "end of line" .

    $défaut  réduction par utilisation de la règle 313 (whileConditionBreak)


état 423

  297 whileControl: "while" condition whileConditionBreak whileBody "end" .

    $défaut  réduction par utilisation de la règle 297 (whileControl)


état 424

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"
  215 variableDeclaration: . assignable "=" variable
  216                    | . assignable "=" functionCall
  217                    | . functionCall "=" variable
  218                    | . functionCall "=" functionCall
  219                    | . assignable "=" ":"
  220                    | . functionCall "=" ":"
  221                    | . assignable "=" returnControl
  222                    | . functionCall "=" returnControl
  223 assignable: . variable "." "identifier"
  224           | . variable "." functionCall
  225           | . functionCall "." variable
  226           | . functionCall "." functionCall
  227           | . "identifier"
  228           | . multipleResults
  229 multipleResults: . "[" matrixOrCellColumns "]"
  230 ifControl: . "if" condition then thenBody "end"
  231          | . "if" condition then thenBody else elseBody "end"
  232          | . "if" condition then thenBody elseIfControl "end"
  257 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  258              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  259              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  260              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  283 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  284           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  297 whileControl: . "while" condition whileConditionBreak whileBody "end"
  317 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  317           | "try" "end of line" expressions "catch" "end of line" . expressions "end"
  318           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  319           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  320           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  321 returnControl: . "return"
  322              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    expressions            aller à l'état 462
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 425

  319 tryControl: "try" "end of line" expressions "catch" "line comment" . "end of line" expressions "end"

    "end of line"  décalage et aller à l'état 463


état 426

  318 tryControl: "try" "line comment" "end of line" expressions "catch" . "end of line" expressions "end"
  320           | "try" "line comment" "end of line" expressions "catch" . "line comment" "end of line" expressions "end"

    "end of line"   décalage et aller à l'état 464
    "line comment"  décalage et aller à l'état 465


état 427

  206 matrixOrCellLine: matrixOrCellColumns matrixOrCellColumnsBreak ";" "line comment" "end of line" .

    $défaut  réduction par utilisation de la règle 206 (matrixOrCellLine)


état 428

  251 else: "else" "end of line" .

    $défaut  réduction par utilisation de la règle 251 (else)


état 429

  249 else: "else" "," .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "end", "select", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  252     | "else" "," . "end of line"

    "end of line"  décalage et aller à l'état 466

    $défaut  réduction par utilisation de la règle 249 (else)


état 430

  250 else: "else" ";" .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "end", "select", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  253     | "else" ";" . "end of line"

    "end of line"  décalage et aller à l'état 467

    $défaut  réduction par utilisation de la règle 250 (else)


état 431

  237 ifConditionBreak: . ";"
  238                 | . ";" "end of line"
  239                 | . ","
  240                 | . "," "end of line"
  241                 | . "end of line"
  242 then: . "then"
  243     | . ifConditionBreak "then"
  244     | . ifConditionBreak "then" "end of line"
  245     | . "then" ifConditionBreak
  246     | . ifConditionBreak
  247     | .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "else", "elseif", "end", "select", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  254 elseIfControl: "elseif" condition . then thenBody
  255              | "elseif" condition . then thenBody else elseBody
  256              | "elseif" condition . then thenBody elseIfControl

    "end of line"  décalage et aller à l'état 193
    ","            décalage et aller à l'état 194
    ";"            décalage et aller à l'état 195
    "then"         décalage et aller à l'état 196

    $défaut  réduction par utilisation de la règle 247 (then)

    ifConditionBreak  aller à l'état 197
    then              aller à l'état 468


état 432

  235 elseBody: expressions .

    $défaut  réduction par utilisation de la règle 235 (elseBody)


état 433

  231 ifControl: "if" condition then thenBody else elseBody . "end"

    "end"  décalage et aller à l'état 469


état 434

  232 ifControl: "if" condition then thenBody elseIfControl "end" .

    $défaut  réduction par utilisation de la règle 232 (ifControl)


état 435

  259 selectControl: "select" selectable "line comment" selectConditionBreak casesControl "end" .

    $défaut  réduction par utilisation de la règle 259 (selectControl)


état 436

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"
  215 variableDeclaration: . assignable "=" variable
  216                    | . assignable "=" functionCall
  217                    | . functionCall "=" variable
  218                    | . functionCall "=" functionCall
  219                    | . assignable "=" ":"
  220                    | . functionCall "=" ":"
  221                    | . assignable "=" returnControl
  222                    | . functionCall "=" returnControl
  223 assignable: . variable "." "identifier"
  224           | . variable "." functionCall
  225           | . functionCall "." variable
  226           | . functionCall "." functionCall
  227           | . "identifier"
  228           | . multipleResults
  229 multipleResults: . "[" matrixOrCellColumns "]"
  230 ifControl: . "if" condition then thenBody "end"
  231          | . "if" condition then thenBody else elseBody "end"
  232          | . "if" condition then thenBody elseIfControl "end"
  235 elseBody: . expressions
  236         | .  ["end"]
  257 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  258              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  259              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  260              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  260              | "select" selectable "line comment" selectConditionBreak casesControl else . elseBody "end"
  283 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  284           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  297 whileControl: . "while" condition whileConditionBreak whileBody "end"
  317 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  318           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  319           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  320           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  321 returnControl: . "return"
  322              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "end"  réduction par utilisation de la règle 236 (elseBody)

    expressions            aller à l'état 432
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    elseBody               aller à l'état 470
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 437

  277 caseControlBreak: "end of line" .

    $défaut  réduction par utilisation de la règle 277 (caseControlBreak)


état 438

  275 caseControlBreak: "," .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "else", "end", "select", "case", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  279                 | "," . "end of line"

    "end of line"  décalage et aller à l'état 471

    $défaut  réduction par utilisation de la règle 275 (caseControlBreak)


état 439

  276 caseControlBreak: ";" .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "else", "end", "select", "case", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  280                 | ";" . "end of line"

    "end of line"  décalage et aller à l'état 472

    $défaut  réduction par utilisation de la règle 276 (caseControlBreak)


état 440

  274 caseControlBreak: "then" .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "else", "end", "select", "case", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  278                 | "then" . "end of line"
  281                 | "then" . ","
  282                 | "then" . "," "end of line"

    "end of line"  décalage et aller à l'état 473
    ","            décalage et aller à l'état 474

    $défaut  réduction par utilisation de la règle 274 (caseControlBreak)


état 441

  268 casesControl: "case" variable "line comment" . "end of line" caseBody

    "end of line"  décalage et aller à l'état 475


état 442

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"
  215 variableDeclaration: . assignable "=" variable
  216                    | . assignable "=" functionCall
  217                    | . functionCall "=" variable
  218                    | . functionCall "=" functionCall
  219                    | . assignable "=" ":"
  220                    | . functionCall "=" ":"
  221                    | . assignable "=" returnControl
  222                    | . functionCall "=" returnControl
  223 assignable: . variable "." "identifier"
  224           | . variable "." functionCall
  225           | . functionCall "." variable
  226           | . functionCall "." functionCall
  227           | . "identifier"
  228           | . multipleResults
  229 multipleResults: . "[" matrixOrCellColumns "]"
  230 ifControl: . "if" condition then thenBody "end"
  231          | . "if" condition then thenBody else elseBody "end"
  232          | . "if" condition then thenBody elseIfControl "end"
  257 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  258              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  259              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  260              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  266 casesControl: "case" variable caseControlBreak . caseBody
  272 caseBody: . expressions
  273         | .  ["else", "end", "case"]
  283 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  284           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  297 whileControl: . "while" condition whileConditionBreak whileBody "end"
  317 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  318           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  319           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  320           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  321 returnControl: . "return"
  322              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "else"  réduction par utilisation de la règle 273 (caseBody)
    "end"   réduction par utilisation de la règle 273 (caseBody)
    "case"  réduction par utilisation de la règle 273 (caseBody)

    expressions            aller à l'état 476
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    caseBody               aller à l'état 477
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 443

  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  157         | variable . "." functionCall
  160         | variable . listableEnd
  270 casesControl: casesControl "case" variable . caseControlBreak caseBody
  271             | casesControl "case" variable . "line comment" "end of line" caseBody
  274 caseControlBreak: . "then"
  275                 | . ","
  276                 | . ";"
  277                 | . "end of line"
  278                 | . "then" "end of line"
  279                 | . "," "end of line"
  280                 | . ";" "end of line"
  281                 | . "then" ","
  282                 | . "then" "," "end of line"
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "end of line"   décalage et aller à l'état 437
    "'"             décalage et aller à l'état 148
    ","             décalage et aller à l'état 438
    ":"             décalage et aller à l'état 116
    ";"             décalage et aller à l'état 439
    "."             décalage et aller à l'état 166
    ".'"            décalage et aller à l'état 150
    "+"             décalage et aller à l'état 119
    "-"             décalage et aller à l'état 120
    "*"             décalage et aller à l'état 121
    ".*"            décalage et aller à l'état 122
    ".*."           décalage et aller à l'état 123
    "/"             décalage et aller à l'état 124
    "./"            décalage et aller à l'état 125
    "/."            décalage et aller à l'état 126
    "./."           décalage et aller à l'état 127
    "\\"            décalage et aller à l'état 128
    ".\\"           décalage et aller à l'état 129
    ".\\."          décalage et aller à l'état 130
    "** or ^"       décalage et aller à l'état 151
    ".^"            décalage et aller à l'état 152
    "=="            décalage et aller à l'état 133
    "<> or ~="      décalage et aller à l'état 134
    "<"             décalage et aller à l'état 135
    "<="            décalage et aller à l'état 136
    ">"             décalage et aller à l'état 137
    ">="            décalage et aller à l'état 138
    "&"             décalage et aller à l'état 139
    "|"             décalage et aller à l'état 140
    "then"          décalage et aller à l'état 440
    "line comment"  décalage et aller à l'état 478

    rightOperand      aller à l'état 153
    listableBegin     aller à l'état 143
    listableEnd       aller à l'état 154
    caseControlBreak  aller à l'état 479
    comparators       aller à l'état 155


état 444

  258 selectControl: "select" selectable selectConditionBreak casesControl else elseBody . "end"

    "end"  décalage et aller à l'état 480


état 445

  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  157         | variable . "." functionCall
  160         | variable . listableEnd
  267 casesControl: comments "case" variable . caseControlBreak caseBody
  269             | comments "case" variable . "line comment" "end of line" caseBody
  274 caseControlBreak: . "then"
  275                 | . ","
  276                 | . ";"
  277                 | . "end of line"
  278                 | . "then" "end of line"
  279                 | . "," "end of line"
  280                 | . ";" "end of line"
  281                 | . "then" ","
  282                 | . "then" "," "end of line"
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "end of line"   décalage et aller à l'état 437
    "'"             décalage et aller à l'état 148
    ","             décalage et aller à l'état 438
    ":"             décalage et aller à l'état 116
    ";"             décalage et aller à l'état 439
    "."             décalage et aller à l'état 166
    ".'"            décalage et aller à l'état 150
    "+"             décalage et aller à l'état 119
    "-"             décalage et aller à l'état 120
    "*"             décalage et aller à l'état 121
    ".*"            décalage et aller à l'état 122
    ".*."           décalage et aller à l'état 123
    "/"             décalage et aller à l'état 124
    "./"            décalage et aller à l'état 125
    "/."            décalage et aller à l'état 126
    "./."           décalage et aller à l'état 127
    "\\"            décalage et aller à l'état 128
    ".\\"           décalage et aller à l'état 129
    ".\\."          décalage et aller à l'état 130
    "** or ^"       décalage et aller à l'état 151
    ".^"            décalage et aller à l'état 152
    "=="            décalage et aller à l'état 133
    "<> or ~="      décalage et aller à l'état 134
    "<"             décalage et aller à l'état 135
    "<="            décalage et aller à l'état 136
    ">"             décalage et aller à l'état 137
    ">="            décalage et aller à l'état 138
    "&"             décalage et aller à l'état 139
    "|"             décalage et aller à l'état 140
    "then"          décalage et aller à l'état 440
    "line comment"  décalage et aller à l'état 481

    rightOperand      aller à l'état 153
    listableBegin     aller à l'état 143
    listableEnd       aller à l'état 154
    caseControlBreak  aller à l'état 482
    comparators       aller à l'état 155


état 446

  332 comments: comments "line comment" "end of line" .

    $défaut  réduction par utilisation de la règle 332 (comments)


état 447

   70 functionDeclaration: "function" "[" "]" "=" "identifier" functionDeclarationArguments . functionDeclarationBreak functionBody "endfunction"
   78 functionDeclarationBreak: . lineEnd
   79                         | . ";"
   80                         | . ";" "end of line"
   81                         | . ","
   82                         | . "," "end of line"
  333 lineEnd: . "end of line"
  334        | . "line comment" "end of line"

    "end of line"   décalage et aller à l'état 62
    ","             décalage et aller à l'état 211
    ";"             décalage et aller à l'état 212
    "line comment"  décalage et aller à l'état 64

    functionDeclarationBreak  aller à l'état 483
    lineEnd                   aller à l'état 215


état 448

   69 functionDeclaration: "function" "[" functionDeclarationReturns "]" "=" "identifier" . functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   73 functionDeclarationArguments: . "(" idList ")"
   74                             | . "(" ")"
   75                             | .  ["end of line", ",", ";", "line comment"]

    "("  décalage et aller à l'état 208

    $défaut  réduction par utilisation de la règle 75 (functionDeclarationArguments)

    functionDeclarationArguments  aller à l'état 484


état 449

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   68                    | "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak . functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   83 functionBody: . expressions
   84             | .  ["endfunction"]
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"
  215 variableDeclaration: . assignable "=" variable
  216                    | . assignable "=" functionCall
  217                    | . functionCall "=" variable
  218                    | . functionCall "=" functionCall
  219                    | . assignable "=" ":"
  220                    | . functionCall "=" ":"
  221                    | . assignable "=" returnControl
  222                    | . functionCall "=" returnControl
  223 assignable: . variable "." "identifier"
  224           | . variable "." functionCall
  225           | . functionCall "." variable
  226           | . functionCall "." functionCall
  227           | . "identifier"
  228           | . multipleResults
  229 multipleResults: . "[" matrixOrCellColumns "]"
  230 ifControl: . "if" condition then thenBody "end"
  231          | . "if" condition then thenBody else elseBody "end"
  232          | . "if" condition then thenBody elseIfControl "end"
  257 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  258              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  259              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  260              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  283 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  284           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  297 whileControl: . "while" condition whileConditionBreak whileBody "end"
  317 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  318           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  319           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  320           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  321 returnControl: . "return"
  322              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "endfunction"  réduction par utilisation de la règle 84 (functionBody)

    expressions            aller à l'état 403
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    functionBody           aller à l'état 485
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 450

   71 functionDeclaration: "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction" .

    $défaut  réduction par utilisation de la règle 71 (functionDeclaration)


état 451

   78 functionDeclarationBreak: . lineEnd
   79                         | . ";"
   80                         | . ";" "end of line"
   81                         | . ","
   82                         | . "," "end of line"
   85 classDeclaration: "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration . "endclass"
   87 slotsDeclaration: slotsDeclaration . slotDeclaration functionDeclarationBreak
   88                 | slotsDeclaration . functionDeclarationBreak
   90 slotDeclaration: . methodDeclaration
   91                | . propertyDeclaration
   92 methodDeclaration: . "function" slotAttributes "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   93                  | . "function" slotAttributes "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   94                  | . "function" slotAttributes "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   95                  | . "function" slotAttributes "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   96 propertyDeclaration: . "property" slotAttributes "identifier" "=" variable
   97                    | . "property" slotAttributes "identifier"
  333 lineEnd: . "end of line"
  334        | . "line comment" "end of line"

    "end of line"   décalage et aller à l'état 62
    ","             décalage et aller à l'état 211
    ";"             décalage et aller à l'état 212
    "function"      décalage et aller à l'état 406
    "endclass"      décalage et aller à l'état 486
    "property"      décalage et aller à l'état 408
    "line comment"  décalage et aller à l'état 64

    functionDeclarationBreak  aller à l'état 409
    slotDeclaration           aller à l'état 410
    methodDeclaration         aller à l'état 411
    propertyDeclaration       aller à l'état 412
    lineEnd                   aller à l'état 215


état 452

   76 idList: . idList "," "identifier"
   77       | . "identifier"
   98 slotAttributes: "(" . idList ")"
   99               | "(" . ")"

    ")"           décalage et aller à l'état 487
    "identifier"  décalage et aller à l'état 205

    idList  aller à l'état 488


état 453

   92 methodDeclaration: "function" slotAttributes . "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   93                  | "function" slotAttributes . "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   94                  | "function" slotAttributes . "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   95                  | "function" slotAttributes . "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"

    "["           décalage et aller à l'état 489
    "identifier"  décalage et aller à l'état 490


état 454

   96 propertyDeclaration: "property" slotAttributes . "identifier" "=" variable
   97                    | "property" slotAttributes . "identifier"

    "identifier"  décalage et aller à l'état 491


état 455

   87 slotsDeclaration: slotsDeclaration slotDeclaration functionDeclarationBreak .

    $défaut  réduction par utilisation de la règle 87 (slotsDeclaration)


état 456

  284 forControl: "for" "(" "identifier" "=" forIterator ")" . forConditionBreak forBody "end"
  287 forConditionBreak: . "end of line"
  288                  | . ";"
  289                  | . ";" "end of line"
  290                  | . ","
  291                  | . "," "end of line"
  292                  | . "do"
  293                  | . "do" "end of line"
  294                  | .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "end", "select", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]

    "end of line"  décalage et aller à l'état 414
    ","            décalage et aller à l'état 415
    ";"            décalage et aller à l'état 416
    "do"           décalage et aller à l'état 417

    $défaut  réduction par utilisation de la règle 294 (forConditionBreak)

    forConditionBreak  aller à l'état 492


état 457

  291 forConditionBreak: "," "end of line" .

    $défaut  réduction par utilisation de la règle 291 (forConditionBreak)


état 458

  289 forConditionBreak: ";" "end of line" .

    $défaut  réduction par utilisation de la règle 289 (forConditionBreak)


état 459

  293 forConditionBreak: "do" "end of line" .

    $défaut  réduction par utilisation de la règle 293 (forConditionBreak)


état 460

  295 forBody: expressions .

    $défaut  réduction par utilisation de la règle 295 (forBody)


état 461

  283 forControl: "for" "identifier" "=" forIterator forConditionBreak forBody . "end"

    "end"  décalage et aller à l'état 493


état 462

  317 tryControl: "try" "end of line" expressions "catch" "end of line" expressions . "end"

    "end"  décalage et aller à l'état 494


état 463

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"
  215 variableDeclaration: . assignable "=" variable
  216                    | . assignable "=" functionCall
  217                    | . functionCall "=" variable
  218                    | . functionCall "=" functionCall
  219                    | . assignable "=" ":"
  220                    | . functionCall "=" ":"
  221                    | . assignable "=" returnControl
  222                    | . functionCall "=" returnControl
  223 assignable: . variable "." "identifier"
  224           | . variable "." functionCall
  225           | . functionCall "." variable
  226           | . functionCall "." functionCall
  227           | . "identifier"
  228           | . multipleResults
  229 multipleResults: . "[" matrixOrCellColumns "]"
  230 ifControl: . "if" condition then thenBody "end"
  231          | . "if" condition then thenBody else elseBody "end"
  232          | . "if" condition then thenBody elseIfControl "end"
  257 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  258              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  259              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  260              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  283 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  284           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  297 whileControl: . "while" condition whileConditionBreak whileBody "end"
  317 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  318           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  319           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  319           | "try" "end of line" expressions "catch" "line comment" "end of line" . expressions "end"
  320           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  321 returnControl: . "return"
  322              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    expressions            aller à l'état 495
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 464

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"
  215 variableDeclaration: . assignable "=" variable
  216                    | . assignable "=" functionCall
  217                    | . functionCall "=" variable
  218                    | . functionCall "=" functionCall
  219                    | . assignable "=" ":"
  220                    | . functionCall "=" ":"
  221                    | . assignable "=" returnControl
  222                    | . functionCall "=" returnControl
  223 assignable: . variable "." "identifier"
  224           | . variable "." functionCall
  225           | . functionCall "." variable
  226           | . functionCall "." functionCall
  227           | . "identifier"
  228           | . multipleResults
  229 multipleResults: . "[" matrixOrCellColumns "]"
  230 ifControl: . "if" condition then thenBody "end"
  231          | . "if" condition then thenBody else elseBody "end"
  232          | . "if" condition then thenBody elseIfControl "end"
  257 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  258              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  259              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  260              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  283 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  284           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  297 whileControl: . "while" condition whileConditionBreak whileBody "end"
  317 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  318           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  318           | "try" "line comment" "end of line" expressions "catch" "end of line" . expressions "end"
  319           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  320           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  321 returnControl: . "return"
  322              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    expressions            aller à l'état 496
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 465

  320 tryControl: "try" "line comment" "end of line" expressions "catch" "line comment" . "end of line" expressions "end"

    "end of line"  décalage et aller à l'état 497


état 466

  252 else: "else" "," "end of line" .

    $défaut  réduction par utilisation de la règle 252 (else)


état 467

  253 else: "else" ";" "end of line" .

    $défaut  réduction par utilisation de la règle 253 (else)


état 468

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"
  215 variableDeclaration: . assignable "=" variable
  216                    | . assignable "=" functionCall
  217                    | . functionCall "=" variable
  218                    | . functionCall "=" functionCall
  219                    | . assignable "=" ":"
  220                    | . functionCall "=" ":"
  221                    | . assignable "=" returnControl
  222                    | . functionCall "=" returnControl
  223 assignable: . variable "." "identifier"
  224           | . variable "." functionCall
  225           | . functionCall "." variable
  226           | . functionCall "." functionCall
  227           | . "identifier"
  228           | . multipleResults
  229 multipleResults: . "[" matrixOrCellColumns "]"
  230 ifControl: . "if" condition then thenBody "end"
  231          | . "if" condition then thenBody else elseBody "end"
  232          | . "if" condition then thenBody elseIfControl "end"
  233 thenBody: . expressions
  234         | .  ["else", "elseif", "end"]
  254 elseIfControl: "elseif" condition then . thenBody
  255              | "elseif" condition then . thenBody else elseBody
  256              | "elseif" condition then . thenBody elseIfControl
  257 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  258              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  259              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  260              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  283 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  284           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  297 whileControl: . "while" condition whileConditionBreak whileBody "end"
  317 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  318           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  319           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  320           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  321 returnControl: . "return"
  322              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "else"    réduction par utilisation de la règle 234 (thenBody)
    "elseif"  réduction par utilisation de la règle 234 (thenBody)
    "end"     réduction par utilisation de la règle 234 (thenBody)

    expressions            aller à l'état 328
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    thenBody               aller à l'état 498
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 469

  231 ifControl: "if" condition then thenBody else elseBody "end" .

    $défaut  réduction par utilisation de la règle 231 (ifControl)


état 470

  260 selectControl: "select" selectable "line comment" selectConditionBreak casesControl else elseBody . "end"

    "end"  décalage et aller à l'état 499


état 471

  279 caseControlBreak: "," "end of line" .

    $défaut  réduction par utilisation de la règle 279 (caseControlBreak)


état 472

  280 caseControlBreak: ";" "end of line" .

    $défaut  réduction par utilisation de la règle 280 (caseControlBreak)


état 473

  278 caseControlBreak: "then" "end of line" .

    $défaut  réduction par utilisation de la règle 278 (caseControlBreak)


état 474

  281 caseControlBreak: "then" "," .  [error, "%t or %T", "%f or %F", "~ or @", "$", "(", "[", "{", "+", "-", "if", "else", "end", "select", "case", "function", "class", "for", "while", "break", "try", "return", "string", "identifier", "integer", "float", "number", "line comment"]
  282                 | "then" "," . "end of line"

    "end of line"  décalage et aller à l'état 500

    $défaut  réduction par utilisation de la règle 281 (caseControlBreak)


état 475

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"
  215 variableDeclaration: . assignable "=" variable
  216                    | . assignable "=" functionCall
  217                    | . functionCall "=" variable
  218                    | . functionCall "=" functionCall
  219                    | . assignable "=" ":"
  220                    | . functionCall "=" ":"
  221                    | . assignable "=" returnControl
  222                    | . functionCall "=" returnControl
  223 assignable: . variable "." "identifier"
  224           | . variable "." functionCall
  225           | . functionCall "." variable
  226           | . functionCall "." functionCall
  227           | . "identifier"
  228           | . multipleResults
  229 multipleResults: . "[" matrixOrCellColumns "]"
  230 ifControl: . "if" condition then thenBody "end"
  231          | . "if" condition then thenBody else elseBody "end"
  232          | . "if" condition then thenBody elseIfControl "end"
  257 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  258              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  259              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  260              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  268 casesControl: "case" variable "line comment" "end of line" . caseBody
  272 caseBody: . expressions
  273         | .  ["else", "end", "case"]
  283 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  284           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  297 whileControl: . "while" condition whileConditionBreak whileBody "end"
  317 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  318           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  319           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  320           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  321 returnControl: . "return"
  322              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "else"  réduction par utilisation de la règle 273 (caseBody)
    "end"   réduction par utilisation de la règle 273 (caseBody)
    "case"  réduction par utilisation de la règle 273 (caseBody)

    expressions            aller à l'état 476
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    caseBody               aller à l'état 501
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 476

  272 caseBody: expressions .

    $défaut  réduction par utilisation de la règle 272 (caseBody)


état 477

  266 casesControl: "case" variable caseControlBreak caseBody .

    $défaut  réduction par utilisation de la règle 266 (casesControl)


état 478

  271 casesControl: casesControl "case" variable "line comment" . "end of line" caseBody

    "end of line"  décalage et aller à l'état 502


état 479

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"
  215 variableDeclaration: . assignable "=" variable
  216                    | . assignable "=" functionCall
  217                    | . functionCall "=" variable
  218                    | . functionCall "=" functionCall
  219                    | . assignable "=" ":"
  220                    | . functionCall "=" ":"
  221                    | . assignable "=" returnControl
  222                    | . functionCall "=" returnControl
  223 assignable: . variable "." "identifier"
  224           | . variable "." functionCall
  225           | . functionCall "." variable
  226           | . functionCall "." functionCall
  227           | . "identifier"
  228           | . multipleResults
  229 multipleResults: . "[" matrixOrCellColumns "]"
  230 ifControl: . "if" condition then thenBody "end"
  231          | . "if" condition then thenBody else elseBody "end"
  232          | . "if" condition then thenBody elseIfControl "end"
  257 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  258              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  259              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  260              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  270 casesControl: casesControl "case" variable caseControlBreak . caseBody
  272 caseBody: . expressions
  273         | .  ["else", "end", "case"]
  283 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  284           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  297 whileControl: . "while" condition whileConditionBreak whileBody "end"
  317 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  318           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  319           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  320           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  321 returnControl: . "return"
  322              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "else"  réduction par utilisation de la règle 273 (caseBody)
    "end"   réduction par utilisation de la règle 273 (caseBody)
    "case"  réduction par utilisation de la règle 273 (caseBody)

    expressions            aller à l'état 476
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    caseBody               aller à l'état 503
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 480

  258 selectControl: "select" selectable selectConditionBreak casesControl else elseBody "end" .

    $défaut  réduction par utilisation de la règle 258 (selectControl)


état 481

  269 casesControl: comments "case" variable "line comment" . "end of line" caseBody

    "end of line"  décalage et aller à l'état 504


état 482

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"
  215 variableDeclaration: . assignable "=" variable
  216                    | . assignable "=" functionCall
  217                    | . functionCall "=" variable
  218                    | . functionCall "=" functionCall
  219                    | . assignable "=" ":"
  220                    | . functionCall "=" ":"
  221                    | . assignable "=" returnControl
  222                    | . functionCall "=" returnControl
  223 assignable: . variable "." "identifier"
  224           | . variable "." functionCall
  225           | . functionCall "." variable
  226           | . functionCall "." functionCall
  227           | . "identifier"
  228           | . multipleResults
  229 multipleResults: . "[" matrixOrCellColumns "]"
  230 ifControl: . "if" condition then thenBody "end"
  231          | . "if" condition then thenBody else elseBody "end"
  232          | . "if" condition then thenBody elseIfControl "end"
  257 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  258              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  259              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  260              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  267 casesControl: comments "case" variable caseControlBreak . caseBody
  272 caseBody: . expressions
  273         | .  ["else", "end", "case"]
  283 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  284           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  297 whileControl: . "while" condition whileConditionBreak whileBody "end"
  317 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  318           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  319           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  320           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  321 returnControl: . "return"
  322              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "else"  réduction par utilisation de la règle 273 (caseBody)
    "end"   réduction par utilisation de la règle 273 (caseBody)
    "case"  réduction par utilisation de la règle 273 (caseBody)

    expressions            aller à l'état 476
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    caseBody               aller à l'état 505
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 483

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak . functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   83 functionBody: . expressions
   84             | .  ["endfunction"]
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"
  215 variableDeclaration: . assignable "=" variable
  216                    | . assignable "=" functionCall
  217                    | . functionCall "=" variable
  218                    | . functionCall "=" functionCall
  219                    | . assignable "=" ":"
  220                    | . functionCall "=" ":"
  221                    | . assignable "=" returnControl
  222                    | . functionCall "=" returnControl
  223 assignable: . variable "." "identifier"
  224           | . variable "." functionCall
  225           | . functionCall "." variable
  226           | . functionCall "." functionCall
  227           | . "identifier"
  228           | . multipleResults
  229 multipleResults: . "[" matrixOrCellColumns "]"
  230 ifControl: . "if" condition then thenBody "end"
  231          | . "if" condition then thenBody else elseBody "end"
  232          | . "if" condition then thenBody elseIfControl "end"
  257 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  258              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  259              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  260              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  283 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  284           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  297 whileControl: . "while" condition whileConditionBreak whileBody "end"
  317 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  318           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  319           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  320           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  321 returnControl: . "return"
  322              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "endfunction"  réduction par utilisation de la règle 84 (functionBody)

    expressions            aller à l'état 403
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    functionBody           aller à l'état 506
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 484

   69 functionDeclaration: "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments . functionDeclarationBreak functionBody "endfunction"
   78 functionDeclarationBreak: . lineEnd
   79                         | . ";"
   80                         | . ";" "end of line"
   81                         | . ","
   82                         | . "," "end of line"
  333 lineEnd: . "end of line"
  334        | . "line comment" "end of line"

    "end of line"   décalage et aller à l'état 62
    ","             décalage et aller à l'état 211
    ";"             décalage et aller à l'état 212
    "line comment"  décalage et aller à l'état 64

    functionDeclarationBreak  aller à l'état 507
    lineEnd                   aller à l'état 215


état 485

   68 functionDeclaration: "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody . "endfunction"

    "endfunction"  décalage et aller à l'état 508


état 486

   85 classDeclaration: "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass" .

    $défaut  réduction par utilisation de la règle 85 (classDeclaration)


état 487

   99 slotAttributes: "(" ")" .

    $défaut  réduction par utilisation de la règle 99 (slotAttributes)


état 488

   76 idList: idList . "," "identifier"
   98 slotAttributes: "(" idList . ")"

    ","  décalage et aller à l'état 339
    ")"  décalage et aller à l'état 509


état 489

   72 functionDeclarationReturns: . idList
   76 idList: . idList "," "identifier"
   77       | . "identifier"
   93 methodDeclaration: "function" slotAttributes "[" . functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   94                  | "function" slotAttributes "[" . "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"

    "]"           décalage et aller à l'état 510
    "identifier"  décalage et aller à l'état 205

    functionDeclarationReturns  aller à l'état 511
    idList                      aller à l'état 207


état 490

   73 functionDeclarationArguments: . "(" idList ")"
   74                             | . "(" ")"
   75                             | .  ["end of line", ",", ";", "line comment"]
   92 methodDeclaration: "function" slotAttributes "identifier" . "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   95                  | "function" slotAttributes "identifier" . functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"

    "("  décalage et aller à l'état 208
    "="  décalage et aller à l'état 512

    $défaut  réduction par utilisation de la règle 75 (functionDeclarationArguments)

    functionDeclarationArguments  aller à l'état 513


état 491

   96 propertyDeclaration: "property" slotAttributes "identifier" . "=" variable
   97                    | "property" slotAttributes "identifier" .  ["end of line", ",", ";", "line comment"]

    "="  décalage et aller à l'état 514

    $défaut  réduction par utilisation de la règle 97 (propertyDeclaration)


état 492

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"
  215 variableDeclaration: . assignable "=" variable
  216                    | . assignable "=" functionCall
  217                    | . functionCall "=" variable
  218                    | . functionCall "=" functionCall
  219                    | . assignable "=" ":"
  220                    | . functionCall "=" ":"
  221                    | . assignable "=" returnControl
  222                    | . functionCall "=" returnControl
  223 assignable: . variable "." "identifier"
  224           | . variable "." functionCall
  225           | . functionCall "." variable
  226           | . functionCall "." functionCall
  227           | . "identifier"
  228           | . multipleResults
  229 multipleResults: . "[" matrixOrCellColumns "]"
  230 ifControl: . "if" condition then thenBody "end"
  231          | . "if" condition then thenBody else elseBody "end"
  232          | . "if" condition then thenBody elseIfControl "end"
  257 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  258              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  259              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  260              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  283 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  284           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  284           | "for" "(" "identifier" "=" forIterator ")" forConditionBreak . forBody "end"
  295 forBody: . expressions
  296        | .  ["end"]
  297 whileControl: . "while" condition whileConditionBreak whileBody "end"
  317 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  318           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  319           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  320           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  321 returnControl: . "return"
  322              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "end"  réduction par utilisation de la règle 296 (forBody)

    expressions            aller à l'état 460
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    forBody                aller à l'état 515
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 493

  283 forControl: "for" "identifier" "=" forIterator forConditionBreak forBody "end" .

    $défaut  réduction par utilisation de la règle 283 (forControl)


état 494

  317 tryControl: "try" "end of line" expressions "catch" "end of line" expressions "end" .

    $défaut  réduction par utilisation de la règle 317 (tryControl)


état 495

  319 tryControl: "try" "end of line" expressions "catch" "line comment" "end of line" expressions . "end"

    "end"  décalage et aller à l'état 516


état 496

  318 tryControl: "try" "line comment" "end of line" expressions "catch" "end of line" expressions . "end"

    "end"  décalage et aller à l'état 517


état 497

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"
  215 variableDeclaration: . assignable "=" variable
  216                    | . assignable "=" functionCall
  217                    | . functionCall "=" variable
  218                    | . functionCall "=" functionCall
  219                    | . assignable "=" ":"
  220                    | . functionCall "=" ":"
  221                    | . assignable "=" returnControl
  222                    | . functionCall "=" returnControl
  223 assignable: . variable "." "identifier"
  224           | . variable "." functionCall
  225           | . functionCall "." variable
  226           | . functionCall "." functionCall
  227           | . "identifier"
  228           | . multipleResults
  229 multipleResults: . "[" matrixOrCellColumns "]"
  230 ifControl: . "if" condition then thenBody "end"
  231          | . "if" condition then thenBody else elseBody "end"
  232          | . "if" condition then thenBody elseIfControl "end"
  257 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  258              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  259              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  260              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  283 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  284           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  297 whileControl: . "while" condition whileConditionBreak whileBody "end"
  317 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  318           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  319           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  320           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  320           | "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" . expressions "end"
  321 returnControl: . "return"
  322              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    expressions            aller à l'état 518
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 498

  248 else: . "else"
  249     | . "else" ","
  250     | . "else" ";"
  251     | . "else" "end of line"
  252     | . "else" "," "end of line"
  253     | . "else" ";" "end of line"
  254 elseIfControl: . "elseif" condition then thenBody
  254              | "elseif" condition then thenBody .  ["end"]
  255              | . "elseif" condition then thenBody else elseBody
  255              | "elseif" condition then thenBody . else elseBody
  256              | . "elseif" condition then thenBody elseIfControl
  256              | "elseif" condition then thenBody . elseIfControl

    "else"    décalage et aller à l'état 385
    "elseif"  décalage et aller à l'état 386

    $défaut  réduction par utilisation de la règle 254 (elseIfControl)

    else           aller à l'état 519
    elseIfControl  aller à l'état 520


état 499

  260 selectControl: "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end" .

    $défaut  réduction par utilisation de la règle 260 (selectControl)


état 500

  282 caseControlBreak: "then" "," "end of line" .

    $défaut  réduction par utilisation de la règle 282 (caseControlBreak)


état 501

  268 casesControl: "case" variable "line comment" "end of line" caseBody .

    $défaut  réduction par utilisation de la règle 268 (casesControl)


état 502

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"
  215 variableDeclaration: . assignable "=" variable
  216                    | . assignable "=" functionCall
  217                    | . functionCall "=" variable
  218                    | . functionCall "=" functionCall
  219                    | . assignable "=" ":"
  220                    | . functionCall "=" ":"
  221                    | . assignable "=" returnControl
  222                    | . functionCall "=" returnControl
  223 assignable: . variable "." "identifier"
  224           | . variable "." functionCall
  225           | . functionCall "." variable
  226           | . functionCall "." functionCall
  227           | . "identifier"
  228           | . multipleResults
  229 multipleResults: . "[" matrixOrCellColumns "]"
  230 ifControl: . "if" condition then thenBody "end"
  231          | . "if" condition then thenBody else elseBody "end"
  232          | . "if" condition then thenBody elseIfControl "end"
  257 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  258              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  259              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  260              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  271 casesControl: casesControl "case" variable "line comment" "end of line" . caseBody
  272 caseBody: . expressions
  273         | .  ["else", "end", "case"]
  283 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  284           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  297 whileControl: . "while" condition whileConditionBreak whileBody "end"
  317 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  318           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  319           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  320           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  321 returnControl: . "return"
  322              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "else"  réduction par utilisation de la règle 273 (caseBody)
    "end"   réduction par utilisation de la règle 273 (caseBody)
    "case"  réduction par utilisation de la règle 273 (caseBody)

    expressions            aller à l'état 476
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    caseBody               aller à l'état 521
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 503

  270 casesControl: casesControl "case" variable caseControlBreak caseBody .

    $défaut  réduction par utilisation de la règle 270 (casesControl)


état 504

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"
  215 variableDeclaration: . assignable "=" variable
  216                    | . assignable "=" functionCall
  217                    | . functionCall "=" variable
  218                    | . functionCall "=" functionCall
  219                    | . assignable "=" ":"
  220                    | . functionCall "=" ":"
  221                    | . assignable "=" returnControl
  222                    | . functionCall "=" returnControl
  223 assignable: . variable "." "identifier"
  224           | . variable "." functionCall
  225           | . functionCall "." variable
  226           | . functionCall "." functionCall
  227           | . "identifier"
  228           | . multipleResults
  229 multipleResults: . "[" matrixOrCellColumns "]"
  230 ifControl: . "if" condition then thenBody "end"
  231          | . "if" condition then thenBody else elseBody "end"
  232          | . "if" condition then thenBody elseIfControl "end"
  257 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  258              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  259              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  260              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  269 casesControl: comments "case" variable "line comment" "end of line" . caseBody
  272 caseBody: . expressions
  273         | .  ["else", "end", "case"]
  283 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  284           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  297 whileControl: . "while" condition whileConditionBreak whileBody "end"
  317 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  318           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  319           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  320           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  321 returnControl: . "return"
  322              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "else"  réduction par utilisation de la règle 273 (caseBody)
    "end"   réduction par utilisation de la règle 273 (caseBody)
    "case"  réduction par utilisation de la règle 273 (caseBody)

    expressions            aller à l'état 476
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    caseBody               aller à l'état 522
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 505

  267 casesControl: comments "case" variable caseControlBreak caseBody .

    $défaut  réduction par utilisation de la règle 267 (casesControl)


état 506

   70 functionDeclaration: "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody . "endfunction"

    "endfunction"  décalage et aller à l'état 523


état 507

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak . functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   83 functionBody: . expressions
   84             | .  ["endfunction"]
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"
  215 variableDeclaration: . assignable "=" variable
  216                    | . assignable "=" functionCall
  217                    | . functionCall "=" variable
  218                    | . functionCall "=" functionCall
  219                    | . assignable "=" ":"
  220                    | . functionCall "=" ":"
  221                    | . assignable "=" returnControl
  222                    | . functionCall "=" returnControl
  223 assignable: . variable "." "identifier"
  224           | . variable "." functionCall
  225           | . functionCall "." variable
  226           | . functionCall "." functionCall
  227           | . "identifier"
  228           | . multipleResults
  229 multipleResults: . "[" matrixOrCellColumns "]"
  230 ifControl: . "if" condition then thenBody "end"
  231          | . "if" condition then thenBody else elseBody "end"
  232          | . "if" condition then thenBody elseIfControl "end"
  257 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  258              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  259              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  260              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  283 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  284           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  297 whileControl: . "while" condition whileConditionBreak whileBody "end"
  317 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  318           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  319           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  320           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  321 returnControl: . "return"
  322              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "endfunction"  réduction par utilisation de la règle 84 (functionBody)

    expressions            aller à l'état 403
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    functionBody           aller à l'état 524
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 508

   68 functionDeclaration: "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction" .

    $défaut  réduction par utilisation de la règle 68 (functionDeclaration)


état 509

   98 slotAttributes: "(" idList ")" .

    $défaut  réduction par utilisation de la règle 98 (slotAttributes)


état 510

   94 methodDeclaration: "function" slotAttributes "[" "]" . "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"

    "="  décalage et aller à l'état 525


état 511

   93 methodDeclaration: "function" slotAttributes "[" functionDeclarationReturns . "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"

    "]"  décalage et aller à l'état 526


état 512

   92 methodDeclaration: "function" slotAttributes "identifier" "=" . "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"

    "identifier"  décalage et aller à l'état 527


état 513

   78 functionDeclarationBreak: . lineEnd
   79                         | . ";"
   80                         | . ";" "end of line"
   81                         | . ","
   82                         | . "," "end of line"
   95 methodDeclaration: "function" slotAttributes "identifier" functionDeclarationArguments . functionDeclarationBreak functionBody "endfunction"
  333 lineEnd: . "end of line"
  334        | . "line comment" "end of line"

    "end of line"   décalage et aller à l'état 62
    ","             décalage et aller à l'état 211
    ";"             décalage et aller à l'état 212
    "line comment"  décalage et aller à l'état 64

    functionDeclarationBreak  aller à l'état 528
    lineEnd                   aller à l'état 215


état 514

   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   96 propertyDeclaration: "property" slotAttributes "identifier" "=" . variable
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"

    "%t or %T"    décalage et aller à l'état 3
    "%f or %F"    décalage et aller à l'état 4
    "~ or @"      décalage et aller à l'état 5
    "$"           décalage et aller à l'état 6
    "("           décalage et aller à l'état 7
    "["           décalage et aller à l'état 55
    "{"           décalage et aller à l'état 9
    "+"           décalage et aller à l'état 10
    "-"           décalage et aller à l'état 11
    "string"      décalage et aller à l'état 21
    "identifier"  décalage et aller à l'état 56
    "integer"     décalage et aller à l'état 23
    "float"       décalage et aller à l'état 24
    "number"      décalage et aller à l'état 25

    functionCall           aller à l'état 93
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 529
    cell                   aller à l'état 41
    matrix                 aller à l'état 42


état 515

  284 forControl: "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody . "end"

    "end"  décalage et aller à l'état 530


état 516

  319 tryControl: "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end" .

    $défaut  réduction par utilisation de la règle 319 (tryControl)


état 517

  318 tryControl: "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end" .

    $défaut  réduction par utilisation de la règle 318 (tryControl)


état 518

  320 tryControl: "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions . "end"

    "end"  décalage et aller à l'état 531


état 519

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"
  215 variableDeclaration: . assignable "=" variable
  216                    | . assignable "=" functionCall
  217                    | . functionCall "=" variable
  218                    | . functionCall "=" functionCall
  219                    | . assignable "=" ":"
  220                    | . functionCall "=" ":"
  221                    | . assignable "=" returnControl
  222                    | . functionCall "=" returnControl
  223 assignable: . variable "." "identifier"
  224           | . variable "." functionCall
  225           | . functionCall "." variable
  226           | . functionCall "." functionCall
  227           | . "identifier"
  228           | . multipleResults
  229 multipleResults: . "[" matrixOrCellColumns "]"
  230 ifControl: . "if" condition then thenBody "end"
  231          | . "if" condition then thenBody else elseBody "end"
  232          | . "if" condition then thenBody elseIfControl "end"
  235 elseBody: . expressions
  236         | .  ["end"]
  255 elseIfControl: "elseif" condition then thenBody else . elseBody
  257 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  258              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  259              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  260              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  283 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  284           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  297 whileControl: . "while" condition whileConditionBreak whileBody "end"
  317 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  318           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  319           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  320           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  321 returnControl: . "return"
  322              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "end"  réduction par utilisation de la règle 236 (elseBody)

    expressions            aller à l'état 432
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    elseBody               aller à l'état 532
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 520

  256 elseIfControl: "elseif" condition then thenBody elseIfControl .

    $défaut  réduction par utilisation de la règle 256 (elseIfControl)


état 521

  271 casesControl: casesControl "case" variable "line comment" "end of line" caseBody .

    $défaut  réduction par utilisation de la règle 271 (casesControl)


état 522

  269 casesControl: comments "case" variable "line comment" "end of line" caseBody .

    $défaut  réduction par utilisation de la règle 269 (casesControl)


état 523

   70 functionDeclaration: "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction" .

    $défaut  réduction par utilisation de la règle 70 (functionDeclaration)


état 524

   69 functionDeclaration: "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody . "endfunction"

    "endfunction"  décalage et aller à l'état 533


état 525

   94 methodDeclaration: "function" slotAttributes "[" "]" "=" . "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"

    "identifier"  décalage et aller à l'état 534


état 526

   93 methodDeclaration: "function" slotAttributes "[" functionDeclarationReturns "]" . "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"

    "="  décalage et aller à l'état 535


état 527

   73 functionDeclarationArguments: . "(" idList ")"
   74                             | . "(" ")"
   75                             | .  ["end of line", ",", ";", "line comment"]
   92 methodDeclaration: "function" slotAttributes "identifier" "=" "identifier" . functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"

    "("  décalage et aller à l'état 208

    $défaut  réduction par utilisation de la règle 75 (functionDeclarationArguments)

    functionDeclarationArguments  aller à l'état 536


état 528

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   83 functionBody: . expressions
   84             | .  ["endfunction"]
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   95 methodDeclaration: "function" slotAttributes "identifier" functionDeclarationArguments functionDeclarationBreak . functionBody "endfunction"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"
  215 variableDeclaration: . assignable "=" variable
  216                    | . assignable "=" functionCall
  217                    | . functionCall "=" variable
  218                    | . functionCall "=" functionCall
  219                    | . assignable "=" ":"
  220                    | . functionCall "=" ":"
  221                    | . assignable "=" returnControl
  222                    | . functionCall "=" returnControl
  223 assignable: . variable "." "identifier"
  224           | . variable "." functionCall
  225           | . functionCall "." variable
  226           | . functionCall "." functionCall
  227           | . "identifier"
  228           | . multipleResults
  229 multipleResults: . "[" matrixOrCellColumns "]"
  230 ifControl: . "if" condition then thenBody "end"
  231          | . "if" condition then thenBody else elseBody "end"
  232          | . "if" condition then thenBody elseIfControl "end"
  257 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  258              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  259              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  260              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  283 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  284           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  297 whileControl: . "while" condition whileConditionBreak whileBody "end"
  317 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  318           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  319           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  320           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  321 returnControl: . "return"
  322              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "endfunction"  réduction par utilisation de la règle 84 (functionBody)

    expressions            aller à l'état 403
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    functionBody           aller à l'état 537
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 529

   96 propertyDeclaration: "property" slotAttributes "identifier" "=" variable .  ["end of line", ",", ";", "line comment"]
  103 comparison: variable . comparators comparable
  108 operation: variable . rightOperand
  114          | variable . "** or ^" variable
  115          | variable . "** or ^" functionCall
  118          | variable . ".^" variable
  119          | variable . ".^" functionCall
  122          | variable . "'"
  123          | variable . ".'"
  126 rightOperand: . "+" variable
  127             | . "+" functionCall
  128             | . "-" variable
  129             | . "-" functionCall
  130             | . "*" variable
  131             | . "*" functionCall
  132             | . ".*" variable
  133             | . ".*" functionCall
  134             | . ".*." variable
  135             | . ".*." functionCall
  136             | . "/" variable
  137             | . "/" functionCall
  138             | . "./" variable
  139             | . "./" functionCall
  140             | . "./." variable
  141             | . "./." functionCall
  142             | . "/." variable
  143             | . "/." functionCall
  144             | . "\\" variable
  145             | . "\\" functionCall
  146             | . ".\\" variable
  147             | . ".\\" functionCall
  148             | . ".\\." variable
  149             | . ".\\." functionCall
  150 listableBegin: . ":" variable
  151              | . ":" functionCall
  152 listableEnd: . listableBegin ":" variable
  153            | . listableBegin ":" functionCall
  154            | . listableBegin
  156 variable: variable . "." "identifier"
  157         | variable . "." functionCall
  160         | variable . listableEnd
  323 comparators: . "=="
  324            | . "<> or ~="
  325            | . "<"
  326            | . "<="
  327            | . ">"
  328            | . ">="
  329            | . "&"
  330            | . "|"

    "'"         décalage et aller à l'état 148
    ":"         décalage et aller à l'état 116
    "."         décalage et aller à l'état 166
    ".'"        décalage et aller à l'état 150
    "+"         décalage et aller à l'état 119
    "-"         décalage et aller à l'état 120
    "*"         décalage et aller à l'état 121
    ".*"        décalage et aller à l'état 122
    ".*."       décalage et aller à l'état 123
    "/"         décalage et aller à l'état 124
    "./"        décalage et aller à l'état 125
    "/."        décalage et aller à l'état 126
    "./."       décalage et aller à l'état 127
    "\\"        décalage et aller à l'état 128
    ".\\"       décalage et aller à l'état 129
    ".\\."      décalage et aller à l'état 130
    "** or ^"   décalage et aller à l'état 151
    ".^"        décalage et aller à l'état 152
    "=="        décalage et aller à l'état 133
    "<> or ~="  décalage et aller à l'état 134
    "<"         décalage et aller à l'état 135
    "<="        décalage et aller à l'état 136
    ">"         décalage et aller à l'état 137
    ">="        décalage et aller à l'état 138
    "&"         décalage et aller à l'état 139
    "|"         décalage et aller à l'état 140

    $défaut  réduction par utilisation de la règle 96 (propertyDeclaration)

    rightOperand   aller à l'état 153
    listableBegin  aller à l'état 143
    listableEnd    aller à l'état 154
    comparators    aller à l'état 155


état 530

  284 forControl: "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end" .

    $défaut  réduction par utilisation de la règle 284 (forControl)


état 531

  320 tryControl: "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end" .

    $défaut  réduction par utilisation de la règle 320 (tryControl)


état 532

  255 elseIfControl: "elseif" condition then thenBody else elseBody .

    $défaut  réduction par utilisation de la règle 255 (elseIfControl)


état 533

   69 functionDeclaration: "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction" .

    $défaut  réduction par utilisation de la règle 69 (functionDeclaration)


état 534

   73 functionDeclarationArguments: . "(" idList ")"
   74                             | . "(" ")"
   75                             | .  ["end of line", ",", ";", "line comment"]
   94 methodDeclaration: "function" slotAttributes "[" "]" "=" "identifier" . functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"

    "("  décalage et aller à l'état 208

    $défaut  réduction par utilisation de la règle 75 (functionDeclarationArguments)

    functionDeclarationArguments  aller à l'état 538


état 535

   93 methodDeclaration: "function" slotAttributes "[" functionDeclarationReturns "]" "=" . "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"

    "identifier"  décalage et aller à l'état 539


état 536

   78 functionDeclarationBreak: . lineEnd
   79                         | . ";"
   80                         | . ";" "end of line"
   81                         | . ","
   82                         | . "," "end of line"
   92 methodDeclaration: "function" slotAttributes "identifier" "=" "identifier" functionDeclarationArguments . functionDeclarationBreak functionBody "endfunction"
  333 lineEnd: . "end of line"
  334        | . "line comment" "end of line"

    "end of line"   décalage et aller à l'état 62
    ","             décalage et aller à l'état 211
    ";"             décalage et aller à l'état 212
    "line comment"  décalage et aller à l'état 64

    functionDeclarationBreak  aller à l'état 540
    lineEnd                   aller à l'état 215


état 537

   95 methodDeclaration: "function" slotAttributes "identifier" functionDeclarationArguments functionDeclarationBreak functionBody . "endfunction"

    "endfunction"  décalage et aller à l'état 541


état 538

   78 functionDeclarationBreak: . lineEnd
   79                         | . ";"
   80                         | . ";" "end of line"
   81                         | . ","
   82                         | . "," "end of line"
   94 methodDeclaration: "function" slotAttributes "[" "]" "=" "identifier" functionDeclarationArguments . functionDeclarationBreak functionBody "endfunction"
  333 lineEnd: . "end of line"
  334        | . "line comment" "end of line"

    "end of line"   décalage et aller à l'état 62
    ","             décalage et aller à l'état 211
    ";"             décalage et aller à l'état 212
    "line comment"  décalage et aller à l'état 64

    functionDeclarationBreak  aller à l'état 542
    lineEnd                   aller à l'état 215


état 539

   73 functionDeclarationArguments: . "(" idList ")"
   74                             | . "(" ")"
   75                             | .  ["end of line", ",", ";", "line comment"]
   93 methodDeclaration: "function" slotAttributes "[" functionDeclarationReturns "]" "=" "identifier" . functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"

    "("  décalage et aller à l'état 208

    $défaut  réduction par utilisation de la règle 75 (functionDeclarationArguments)

    functionDeclarationArguments  aller à l'état 543


état 540

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   83 functionBody: . expressions
   84             | .  ["endfunction"]
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   92 methodDeclaration: "function" slotAttributes "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak . functionBody "endfunction"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"
  215 variableDeclaration: . assignable "=" variable
  216                    | . assignable "=" functionCall
  217                    | . functionCall "=" variable
  218                    | . functionCall "=" functionCall
  219                    | . assignable "=" ":"
  220                    | . functionCall "=" ":"
  221                    | . assignable "=" returnControl
  222                    | . functionCall "=" returnControl
  223 assignable: . variable "." "identifier"
  224           | . variable "." functionCall
  225           | . functionCall "." variable
  226           | . functionCall "." functionCall
  227           | . "identifier"
  228           | . multipleResults
  229 multipleResults: . "[" matrixOrCellColumns "]"
  230 ifControl: . "if" condition then thenBody "end"
  231          | . "if" condition then thenBody else elseBody "end"
  232          | . "if" condition then thenBody elseIfControl "end"
  257 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  258              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  259              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  260              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  283 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  284           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  297 whileControl: . "while" condition whileConditionBreak whileBody "end"
  317 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  318           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  319           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  320           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  321 returnControl: . "return"
  322              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "endfunction"  réduction par utilisation de la règle 84 (functionBody)

    expressions            aller à l'état 403
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    functionBody           aller à l'état 544
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 541

   95 methodDeclaration: "function" slotAttributes "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction" .

    $défaut  réduction par utilisation de la règle 95 (methodDeclaration)


état 542

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   83 functionBody: . expressions
   84             | .  ["endfunction"]
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   94 methodDeclaration: "function" slotAttributes "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak . functionBody "endfunction"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"
  215 variableDeclaration: . assignable "=" variable
  216                    | . assignable "=" functionCall
  217                    | . functionCall "=" variable
  218                    | . functionCall "=" functionCall
  219                    | . assignable "=" ":"
  220                    | . functionCall "=" ":"
  221                    | . assignable "=" returnControl
  222                    | . functionCall "=" returnControl
  223 assignable: . variable "." "identifier"
  224           | . variable "." functionCall
  225           | . functionCall "." variable
  226           | . functionCall "." functionCall
  227           | . "identifier"
  228           | . multipleResults
  229 multipleResults: . "[" matrixOrCellColumns "]"
  230 ifControl: . "if" condition then thenBody "end"
  231          | . "if" condition then thenBody else elseBody "end"
  232          | . "if" condition then thenBody elseIfControl "end"
  257 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  258              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  259              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  260              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  283 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  284           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  297 whileControl: . "while" condition whileConditionBreak whileBody "end"
  317 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  318           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  319           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  320           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  321 returnControl: . "return"
  322              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "endfunction"  réduction par utilisation de la règle 84 (functionBody)

    expressions            aller à l'état 403
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    functionBody           aller à l'état 545
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 543

   78 functionDeclarationBreak: . lineEnd
   79                         | . ";"
   80                         | . ";" "end of line"
   81                         | . ","
   82                         | . "," "end of line"
   93 methodDeclaration: "function" slotAttributes "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments . functionDeclarationBreak functionBody "endfunction"
  333 lineEnd: . "end of line"
  334        | . "line comment" "end of line"

    "end of line"   décalage et aller à l'état 62
    ","             décalage et aller à l'état 211
    ";"             décalage et aller à l'état 212
    "line comment"  décalage et aller à l'état 64

    functionDeclarationBreak  aller à l'état 546
    lineEnd                   aller à l'état 215


état 544

   92 methodDeclaration: "function" slotAttributes "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody . "endfunction"

    "endfunction"  décalage et aller à l'état 547


état 545

   94 methodDeclaration: "function" slotAttributes "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody . "endfunction"

    "endfunction"  décalage et aller à l'état 548


état 546

    3 expressions: . recursiveExpression
    4            | . recursiveExpression expression
    5            | . recursiveExpression expression "line comment"
    6            | . expression
    7            | . expression "line comment"
    8 recursiveExpression: . recursiveExpression expression expressionLineBreak
    9                    | . recursiveExpression expression "line comment" expressionLineBreak
   10                    | . expression "line comment" expressionLineBreak
   11                    | . expression expressionLineBreak
   18 expression: . functionDeclaration
   19           | . classDeclaration
   20           | . functionCall
   21           | . variableDeclaration
   22           | . ifControl
   23           | . selectControl
   24           | . forControl
   25           | . whileControl
   26           | . tryControl
   27           | . variable
   28           | . implicitFunctionCall
   29           | . "break"
   30           | . returnControl
   31           | . "line comment"
   32           | . error
   33 implicitFunctionCall: . implicitFunctionCall implicitCallable
   34                     | . "identifier" implicitCallable
   48 functionCall: . simpleFunctionCall
   49             | . specificFunctionCall
   50             | . recursiveFunctionCall
   51             | . "(" functionCall ")"
   52             | . "~ or @" functionCall
   53 specificFunctionCall: . "%t or %T" "(" functionArgs ")"
   54                     | . "%f or %F" "(" functionArgs ")"
   55 simpleFunctionCall: . "identifier" "(" functionArgs ")"
   56 recursiveFunctionCall: . simpleFunctionCall "(" functionArgs ")"
   57                      | . recursiveFunctionCall "(" functionArgs ")"
   68 functionDeclaration: . "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   69                    | . "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   70                    | . "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   71                    | . "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction"
   83 functionBody: . expressions
   84             | .  ["endfunction"]
   85 classDeclaration: . "class" "identifier" "<" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   86                 | . "class" "identifier" functionDeclarationBreak slotsDeclaration "endclass"
   93 methodDeclaration: "function" slotAttributes "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak . functionBody "endfunction"
  103 comparison: . variable comparators comparable
  104           | . functionCall comparators comparable
  108 operation: . variable rightOperand
  109          | . functionCall rightOperand
  110          | . "-" variable
  111          | . "-" functionCall
  112          | . "+" variable
  113          | . "+" functionCall
  114          | . variable "** or ^" variable
  115          | . variable "** or ^" functionCall
  116          | . functionCall "** or ^" variable
  117          | . functionCall "** or ^" functionCall
  118          | . variable ".^" variable
  119          | . variable ".^" functionCall
  120          | . functionCall ".^" variable
  121          | . functionCall ".^" functionCall
  122          | . variable "'"
  123          | . variable ".'"
  124          | . functionCall "'"
  125          | . functionCall ".'"
  155 variable: . "~ or @" variable
  156         | . variable "." "identifier"
  157         | . variable "." functionCall
  158         | . functionCall "." variable
  159         | . functionCall "." functionCall
  160         | . variable listableEnd
  161         | . functionCall listableEnd
  162         | . matrix
  163         | . cell
  164         | . operation
  165         | . "identifier"
  166         | . "integer"
  167         | . "number"
  168         | . "float"
  169         | . "string"
  170         | . "$"
  171         | . "%t or %T"
  172         | . "%f or %F"
  173         | . "(" variable ")"
  174         | . "(" variableFields ")"
  175         | . comparison
  182 cell: . "{" matrixOrCellLines "}"
  183     | . "{" lineEnd matrixOrCellLines "}"
  184     | . "{" matrixOrCellLines matrixOrCellColumns "}"
  185     | . "{" lineEnd matrixOrCellLines matrixOrCellColumns "}"
  186     | . "{" matrixOrCellColumns "}"
  187     | . "{" lineEnd matrixOrCellColumns "}"
  188     | . "{" "}"
  189 matrix: . "[" matrixOrCellLines "]"
  190       | . "[" lineEnd matrixOrCellLines "]"
  191       | . "[" matrixOrCellLines matrixOrCellColumns "]"
  192       | . "[" lineEnd matrixOrCellLines matrixOrCellColumns "]"
  193       | . "[" matrixOrCellColumns "]"
  194       | . "[" lineEnd matrixOrCellColumns "]"
  195       | . "[" "]"
  215 variableDeclaration: . assignable "=" variable
  216                    | . assignable "=" functionCall
  217                    | . functionCall "=" variable
  218                    | . functionCall "=" functionCall
  219                    | . assignable "=" ":"
  220                    | . functionCall "=" ":"
  221                    | . assignable "=" returnControl
  222                    | . functionCall "=" returnControl
  223 assignable: . variable "." "identifier"
  224           | . variable "." functionCall
  225           | . functionCall "." variable
  226           | . functionCall "." functionCall
  227           | . "identifier"
  228           | . multipleResults
  229 multipleResults: . "[" matrixOrCellColumns "]"
  230 ifControl: . "if" condition then thenBody "end"
  231          | . "if" condition then thenBody else elseBody "end"
  232          | . "if" condition then thenBody elseIfControl "end"
  257 selectControl: . "select" selectable selectConditionBreak casesControl "end"
  258              | . "select" selectable selectConditionBreak casesControl else elseBody "end"
  259              | . "select" selectable "line comment" selectConditionBreak casesControl "end"
  260              | . "select" selectable "line comment" selectConditionBreak casesControl else elseBody "end"
  283 forControl: . "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  284           | . "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  297 whileControl: . "while" condition whileConditionBreak whileBody "end"
  317 tryControl: . "try" "end of line" expressions "catch" "end of line" expressions "end"
  318           | . "try" "line comment" "end of line" expressions "catch" "end of line" expressions "end"
  319           | . "try" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  320           | . "try" "line comment" "end of line" expressions "catch" "line comment" "end of line" expressions "end"
  321 returnControl: . "return"
  322              | . "return" variable

    error           décalage et aller à l'état 1
    "%t or %T"      décalage et aller à l'état 3
    "%f or %F"      décalage et aller à l'état 4
    "~ or @"        décalage et aller à l'état 5
    "$"             décalage et aller à l'état 6
    "("             décalage et aller à l'état 7
    "["             décalage et aller à l'état 8
    "{"             décalage et aller à l'état 9
    "+"             décalage et aller à l'état 10
    "-"             décalage et aller à l'état 11
    "if"            décalage et aller à l'état 12
    "select"        décalage et aller à l'état 13
    "function"      décalage et aller à l'état 14
    "class"         décalage et aller à l'état 15
    "for"           décalage et aller à l'état 16
    "while"         décalage et aller à l'état 17
    "break"         décalage et aller à l'état 18
    "try"           décalage et aller à l'état 19
    "return"        décalage et aller à l'état 20
    "string"        décalage et aller à l'état 21
    "identifier"    décalage et aller à l'état 22
    "integer"       décalage et aller à l'état 23
    "float"         décalage et aller à l'état 24
    "number"        décalage et aller à l'état 25
    "line comment"  décalage et aller à l'état 26

    "endfunction"  réduction par utilisation de la règle 84 (functionBody)

    expressions            aller à l'état 403
    recursiveExpression    aller à l'état 29
    expression             aller à l'état 30
    implicitFunctionCall   aller à l'état 31
    functionCall           aller à l'état 32
    specificFunctionCall   aller à l'état 33
    simpleFunctionCall     aller à l'état 34
    recursiveFunctionCall  aller à l'état 35
    functionDeclaration    aller à l'état 36
    functionBody           aller à l'état 549
    classDeclaration       aller à l'état 37
    comparison             aller à l'état 38
    operation              aller à l'état 39
    variable               aller à l'état 40
    cell                   aller à l'état 41
    matrix                 aller à l'état 42
    variableDeclaration    aller à l'état 43
    assignable             aller à l'état 44
    multipleResults        aller à l'état 45
    ifControl              aller à l'état 46
    selectControl          aller à l'état 47
    forControl             aller à l'état 48
    whileControl           aller à l'état 49
    tryControl             aller à l'état 50
    returnControl          aller à l'état 51


état 547

   92 methodDeclaration: "function" slotAttributes "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction" .

    $défaut  réduction par utilisation de la règle 92 (methodDeclaration)


état 548

   94 methodDeclaration: "function" slotAttributes "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction" .

    $défaut  réduction par utilisation de la règle 94 (methodDeclaration)


état 549

   93 methodDeclaration: "function" slotAttributes "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody . "endfunction"

    "endfunction"  décalage et aller à l'état 550


état 550

   93 methodDeclaration: "function" slotAttributes "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody "endfunction" .

    $défaut  réduction par utilisation de la règle 93 (methodDeclaration)
