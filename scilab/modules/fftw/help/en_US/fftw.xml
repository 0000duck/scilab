<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) 2007 - INRIA
 * 
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at    
 * http://www.cecill.info/licences/Licence_CeCILL_V2-en.txt
 *
 --><?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!DOCTYPE MAN SYSTEM "../../../../modules/helptools/help.dtd">
<MAN>
  <LANGUAGE>eng</LANGUAGE>
  <TITLE>fftw</TITLE>
  <TYPE>Scilab Function</TYPE>
  <DATE>October 2006</DATE>
  <SHORT_DESCRIPTION name="fftw">fast fourier transform that use fftw library</SHORT_DESCRIPTION>
  <CALLING_SEQUENCE>
    <CALLING_SEQUENCE_ITEM>[y]=fftw(x)</CALLING_SEQUENCE_ITEM>
    <CALLING_SEQUENCE_ITEM>[y]=fftw(x,sign)</CALLING_SEQUENCE_ITEM>
    <CALLING_SEQUENCE_ITEM>[y]=fftw(x,sign,dim,incr)</CALLING_SEQUENCE_ITEM>
    <CALLING_SEQUENCE_ITEM>[y]=fftw(x,sign,[dim1 dim2 ...dimN],[incr1 incr2 ...incrN])</CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>
  <PARAM>
    <PARAM_INDENT>
      <PARAM_ITEM>
        <PARAM_NAME>y,x</PARAM_NAME>
        <PARAM_DESCRIPTION>
          <SP>: matrix/vector of real/complex data. Input/output data to be transformed.</SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>
      <PARAM_ITEM>
        <PARAM_NAME>sign</PARAM_NAME>
        <PARAM_DESCRIPTION>
          <SP>: Integer. 1 or -1. Set direct or inverse transform.</SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>
      <PARAM_ITEM>
        <PARAM_NAME>dim</PARAM_NAME>
        <PARAM_DESCRIPTION>
          <SP>: integer. Set the dimension (the length) of the transform.</SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>
      <PARAM_ITEM>
        <PARAM_NAME>incr</PARAM_NAME>
        <PARAM_DESCRIPTION>
          <SP>: integer. Set the stride (the span) of the transform.</SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>
    </PARAM_INDENT>
  </PARAM>
  <DESCRIPTION>
    <P>
    This function realizes direct/inverse Discrete Fourier Transform (DFT) with the help of the FFTW library.
    </P>
    <P>
    One can compute vector, 2D, M-D transform with this function.
    </P>
    <P>
    For more details of fftw syntax see <A href='fft.htm'><VERB>fft</VERB></A> scilab function.
    </P>
    <P>
    For more details about FFTW library see FFTW Web site :<A href='http://www.fftw.org'><VERB> http://www.fftw.org </VERB>.</A>
    </P>
    <SP>
    Remark : fftw function automaticaly stores his last parameters in memory to re-use it in a second time.
    </SP>
    <SP>
    This results on a time computation improvement when consecutives calls (with same parameters) are used.
    </SP>
  </DESCRIPTION>
  <EXAMPLE>
  <![CDATA[
  //simple vector direct transform
  a = rand(50,1)+%i*rand(50,1);
  y = fftw(a);
  y = fftw(a,-1);
  //inverse transform
  b = fftw(y,1);

  //2D transform
  a = rand(512,512)+%i*rand(512,512);
  y = fftw(a);

  //M-D transform -old calling sequence-
  a = rand(120,1);
  y = a;
  dim=[5 6 4];incr=[1 5 30];
  for i=1:3
    y = fftw(y,-1,dim(i),incr(i));
  end

  //M-D transform -new calling sequence-
  //More efficient than old
  y = fftw(a,-1,[5 6 4],[1 5 30]);
  b = fftw(y,1,[5 6 4],[1 5 30]);
  ]]>
  </EXAMPLE>

  <SEE_ALSO>
    <SEE_ALSO_ITEM><LINK>fftw_flags</LINK></SEE_ALSO_ITEM>
    <SEE_ALSO_ITEM><LINK>get_fftw_wisdom</LINK></SEE_ALSO_ITEM>
    <SEE_ALSO_ITEM><LINK>set_fftw_wisdom</LINK></SEE_ALSO_ITEM>
    <SEE_ALSO_ITEM><LINK>fftw_forget_wisdom</LINK></SEE_ALSO_ITEM>
  </SEE_ALSO>

  <BIBLIO>
    <P>
    Matteo Frigo and Steven G. Johnson, &quot;FFTW Manual fo version 3.1.2&quot; June 2006. Available : http://www.fftw.org
    </P>
  </BIBLIO>

</MAN>
