// =============================================================================
// Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
// Copyright (C) ????-2008 - INRIA Michael Baudin
//
//  This file is distributed under the same license as the Scilab package.
// =============================================================================
// TODO : use relative error criteria instead of absolute error
eps=100*%eps;
// inf
if norm([1,2,3,-1,-2,-3],0)<>%inf then bugmes();quit;end
if ~isnan(norm([1,2,3,-1,-2,-3],%nan)) then bugmes();quit;end
if norm([])<>0 then bugmes();quit;end
// vector
x=[1,2,3,-4];
if abs(norm(x,1) - sum(abs(x))) > eps then bugmes();quit;end
if abs(norm(x,2) - sqrt(sum(abs(x).*abs(x)))) > eps then bugmes();quit;end
if abs(norm(x,2) - norm(x)) > eps then bugmes();quit;end
p=0.5;
if abs(norm(x,p) - sum(abs(x)^p)^(1/p)) > eps then bugmes();quit;end
p=2.5;
if abs(norm(x,p) - sum(abs(x)^p)^(1/p)) > eps then bugmes();quit;end
if abs(norm(x,'inf') -maxi(abs(x))) > eps then bugmes();quit;end
if abs(norm(x,'inf') -norm(x,%inf)) > eps then bugmes();quit;end
if abs(norm(x,'fro') -norm(x,2)) > eps then bugmes();quit;end
// complex
x=x+%i*x;
if abs(norm(x,1) - sum(abs(x))) > eps then bugmes();quit;end
if abs(norm(x,2) - sqrt(sum(abs(x).*abs(x)))) > eps then bugmes();quit;end
if abs(norm(x,2) - norm(x)) > eps then bugmes();quit;end
p=0.5;
// 100*%eps is needed for linux
if abs(norm(x,p) - maxi(abs(x))*sum((abs(x)/maxi(abs(x)))^p)^(1/p))> 100*%eps then bugmes();quit;end
p=2.5;
if abs(norm(x,p) - maxi(abs(x))*sum((abs(x)/maxi(abs(x)))^p)^(1/p))> 100*%eps then bugmes();quit;end
if abs(norm(x,'inf') -maxi(abs(x)))> eps then bugmes();quit;end
if abs(norm(x,'inf') -norm(x,%inf)) > eps then bugmes();quit;end
if abs(norm(x,'fro') -norm(x,2))> eps then bugmes();quit;end
// scalar
x=[1.23];
if abs(norm(x,1) - sum(abs(x))) > eps then bugmes();quit;end
if abs(norm(x,2) - sqrt(sum(abs(x).*abs(x)))) > eps then bugmes();quit;end
if abs(norm(x,2) - norm(x)) > eps then bugmes();quit;end
p=0.5;
if abs(norm(x,p) - sum(abs(x)^p)^(1/p)) > eps then bugmes();quit;end
p=2.5;
if abs(norm(x,p) - sum(abs(x)^p)^(1/p)) > eps then bugmes();quit;end
if abs(norm(x,'inf') -maxi(abs(x))) > eps then bugmes();quit;end
if abs(norm(x,'inf') -norm(x,%inf)) > eps then bugmes();quit;end
if abs(norm(x,'fro') -norm(x,2)) > eps then bugmes();quit;end
// Matrices
a=rand(10,10,'g');
if abs(norm(a,1) - maxi(sum(abs(a),'r'))) > eps then bugmes();quit;end
if abs(norm(a,'inf') - maxi(sum(abs(a),'c'))) > eps then bugmes();quit;end
if abs(norm(a,%inf) - maxi(sum(abs(a),'c'))) > eps then bugmes();quit;end
if abs(norm(a,2) - maxi(svd(a))) > eps then bugmes();quit;end
if abs(norm(a,'fro') - norm(matrix(a,1,size(a,'*')),2)) > eps then bugmes();quit;end
a=a+%i*a;
if abs(norm(a,1) - maxi(sum(abs(a),'r'))) > eps then bugmes();quit;end
if abs(norm(a,'inf') - maxi(sum(abs(a),'c'))) > eps then bugmes();quit;end
if abs(norm(a,%inf) - maxi(sum(abs(a),'c'))) > eps then bugmes();quit;end
if abs(norm(a,2) - maxi(svd(a))) > eps then bugmes();quit;end
if abs(norm(a,'fro') - norm(matrix(a,1,size(a,'*')),2)) > eps then bugmes();quit;end
//
// Difficult cases for large/small vectors
//
//norm 2
x = 1.e307 * [1 1];
if abs(norm(x) - sqrt(2) * 1.e307)/1.e307 > %eps then bugmes();quit;end
x = 1.e-307 * [1 1];
if abs(norm(x) - sqrt(2) * 1.e-307)/1.e-307 > %eps then bugmes();quit;end
// norm f
x = 1.e307 * [1 1];
if abs(norm(x,"f") - sqrt(2) * 1.e307)/1.e307 > %eps then bugmes();quit;end
x = 1.e-307 * [1 1];
if abs(norm(x,"f") - sqrt(2) * 1.e-307)/1.e-307 > %eps then bugmes();quit;end
//
// Difficult cases for large/small matrices
//
// norm f - case 1 : n < m
x = 1.e307 * ones(10,20);
if abs(norm(x,"f") - sqrt(200) * 1.e307)/1.e307 > %eps then bugmes();quit;end
x = 1.e-307 * ones(10,20);
if abs(norm(x,"f") - sqrt(200) * 1.e-307)/1.e-307 > %eps then bugmes();quit;end
// norm f - case 1 : n > m
x = 1.e307 * ones(20,10);
if abs(norm(x,"f") - sqrt(200) * 1.e307)/1.e307 > %eps then bugmes();quit;end
x = 1.e-307 * ones(20,10);
if abs(norm(x,"f") - sqrt(200) * 1.e-307)/1.e-307 > %eps then bugmes();quit;end
