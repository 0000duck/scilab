# Makefile.in generated by automake 1.10 from Makefile.am.
# modules/output_stream/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



##########
### Sylvestre Ledru <sylvestre.ledru@inria.fr>
### INRIA - Scilab 2006/2007
### 
### Makefile included stuff
### Target, variable, suffixes which are supposed to be usefull in every makefile.am
##########




pkgdatadir = $(datadir)/scilab
pkglibdir = $(libdir)/scilab
pkgincludedir = $(includedir)/scilab
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
DIST_COMMON = $(libscioutput_stream_la_include_HEADERS) \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/Makefile.incl.am
#am__append_1 = build-java
#am__append_2 = build-swig
#am__append_3 = build-giws
subdir = modules/output_stream
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/fftw.m4 \
	$(top_srcdir)/m4/fortran.m4 $(top_srcdir)/m4/giws.m4 \
	$(top_srcdir)/m4/intel_compiler.m4 $(top_srcdir)/m4/java.m4 \
	$(top_srcdir)/m4/libs_by_debian.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/libxml2.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/mpi.m4 $(top_srcdir)/m4/ocaml.m4 \
	$(top_srcdir)/m4/pcre.m4 $(top_srcdir)/m4/pvm.m4 \
	$(top_srcdir)/m4/sciman.m4 $(top_srcdir)/m4/swig.m4 \
	$(top_srcdir)/m4/symlinks.m4 $(top_srcdir)/m4/tcltk.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/modules/core/includes/machine.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(pkglibdir)" \
	"$(DESTDIR)$(libscioutput_stream_la_demosintrodir)" \
	"$(DESTDIR)$(libscioutput_stream_la_etcdir)" \
	"$(DESTDIR)$(libscioutput_stream_la_rootdir)" \
	"$(DESTDIR)$(libscioutput_stream_la_sci_gatewaydir)" \
	"$(DESTDIR)$(libscioutput_stream_la_xmldir)" \
	"$(DESTDIR)$(libscioutput_stream_la_includedir)"
pkglibLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(pkglib_LTLIBRARIES)
libscioutput_stream_la_DEPENDENCIES =
am__objects_1 =
am_libscioutput_stream_la_OBJECTS = $(am__objects_1) $(am__objects_1) \
	$(am__objects_1) $(am__objects_1)
libscioutput_stream_la_OBJECTS = $(am_libscioutput_stream_la_OBJECTS)
libscioutput_stream_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libscioutput_stream_la_CFLAGS) $(CFLAGS) \
	$(libscioutput_stream_la_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)/modules/core/includes
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libscioutput_stream_la_SOURCES)
DIST_SOURCES = $(libscioutput_stream_la_SOURCES)
libscioutput_stream_la_demosintroDATA_INSTALL = $(INSTALL_DATA)
libscioutput_stream_la_etcDATA_INSTALL = $(INSTALL_DATA)
libscioutput_stream_la_rootDATA_INSTALL = $(INSTALL_DATA)
libscioutput_stream_la_sci_gatewayDATA_INSTALL = $(INSTALL_DATA)
libscioutput_stream_la_xmlDATA_INSTALL = $(INSTALL_DATA)
DATA = $(libscioutput_stream_la_demosintro_DATA) \
	$(libscioutput_stream_la_etc_DATA) \
	$(libscioutput_stream_la_root_DATA) \
	$(libscioutput_stream_la_sci_gateway_DATA) \
	$(libscioutput_stream_la_xml_DATA)
libscioutput_stream_la_includeHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(libscioutput_stream_la_include_HEADERS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/bruno/work/scilab/config/missing --run aclocal-1.10
ALL_LINGUAS = 
AMTAR = ${SHELL} /home/bruno/work/scilab/config/missing --run tar
ANT = 
AR = ar
AUTOCONF = ${SHELL} /home/bruno/work/scilab/config/missing --run autoconf
AUTOHEADER = ${SHELL} /home/bruno/work/scilab/config/missing --run autoheader
AUTOMAKE = ${SHELL} /home/bruno/work/scilab/config/missing --run automake-1.10
AWK = mawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -Wformat -Wshadow -Wpointer-arith -Wcast-align -Wmissing-prototypes -Wmissing-declarations -Wall  -Dlinux -DNARROWPROTO -I$(top_srcdir)/libs/MALLOC/includes/ -Werror -O0
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2 -Wshadow -Wpointer-arith -Wcast-align -Wreturn-type -Wswitch -Wtrigraphs -Wcomment -W -Wchar-subscripts -Wformat -Wparentheses -Wsign-compare -Wwrite-strings -Wunused -Wstrict-aliasing -Wextra -Wall  -I$(top_srcdir)/libs/MALLOC/includes/ -Werror -O0
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
F77 = g77
FFLAGS = -g -O2 -DNDEBUG -I$(top_srcdir)/modules/core/includes/
FFTW3_LIB = 
FGREP = /bin/grep -F
GIWS_BIN = 
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
JAR = 
JAVA = 
JAVAC = 
JAVAH = 
JAVA_G = 
JAVA_HOME = 
JAVA_JNI_INCLUDE = 
JAVA_JNI_LIBS = 
JDB = 
LD = /usr/bin/ld
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
LTLIBOBJS = 
MAINT = 
MAKEINFO = ${SHELL} /home/bruno/work/scilab/config/missing --run makeinfo
MANGENERATOR = sabcmd
MKDIR_P = /bin/mkdir -p
MSGCAT = 
MSGFMT = 
NM = nm
OBJEXT = o
OCAMLC = ocamlc
OCAMLDEP = ocamldep
OCAMLOPT = ocamlopt
OPENMPI_CC = 
OPENMPI_FLAGS = 
OPENMPI_LIBS = 
PACKAGE = scilab
PACKAGE_BUGREPORT = http://www.scilab.org/cgi-bin/bugzilla_bug_II/index.cgi
PACKAGE_NAME = scilab
PACKAGE_STRING = scilab 0
PACKAGE_TARNAME = scilab
PACKAGE_VERSION = 0
PATH_SEPARATOR = :
PCRE_CONFIG = pcre-config
PCRE_FLAGS = 
PCRE_LIBS = -L/usr/lib -lpcreposix -lpcre
POW_LIB = 
PVMARCH = 
PVMGETARCH = 
PVM_INCLUDE = 
PVM_LIB = 
PYTHON = 
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
SWIG_BIN = 
SWIG_JAVA = 
SWIG_RUNTIME_LIBS_DIR = 
TCLTK_LIBS =  -L/usr/lib -ltk8.4   -L/usr/lib -ltcl8.4  -ldl
TCL_INC_PATH = -I/usr/include/tcl8.4
TERMCAP_LIB = -lncurses
TK_INC_PATH = -I/usr/include/tcl8.4
VERSION = 0
WITH = 
WITH_OCAML = 
XGETTEXT = 
XMKMF = 
XML_CONFIG = xml2-config
XML_FLAGS = -I/usr/include/libxml2
XML_LIBS = -L/usr/lib -lxml2
X_CFLAGS = 
X_EXTRA_LIBS =  -lXaw3d -lXmu
X_LIBS = 
X_PRE_LIBS =  -lSM -lICE
abs_builddir = /home/bruno/work/scilab/modules/output_stream
abs_srcdir = /home/bruno/work/scilab/modules/output_stream
abs_top_builddir = /home/bruno/work/scilab
abs_top_srcdir = /home/bruno/work/scilab
ac_ct_CC = gcc
ac_ct_CXX = 
ac_ct_DUMPBIN = 
ac_ct_F77 = g77
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /home/bruno/work/scilab/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = echo
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
tcldir = /tcl/
top_builddir = ../..
top_srcdir = ../..
OUTPUT_STREAM_C_SOURCES = 
OUTPUT_STREAM_FORTRAN_SOURCES = 
GATEWAY_C_SOURCES = 
GATEWAY_FORTRAN_SOURCES = 
MODULE_CHECKS = 
libscioutput_stream_la_CFLAGS = -Iincludes/ -Isrc/c/
libscioutput_stream_la_LDFLAGS = 
pkglib_LTLIBRARIES = libscioutput_stream.la
libscioutput_stream_la_SOURCES = $(OUTPUT_STREAM_C_SOURCES) $(OUTPUT_STREAM_FORTRAN_SOURCES) $(GATEWAY_C_SOURCES) $(GATEWAY_FORTRAN_SOURCES) $(JNI_SOURCES)
libscioutput_stream_la_LIBADD = 

#### Target ######
modulename = output_stream

#### output_stream : Conf files ####
libscioutput_stream_la_rootdir = $(mydatadir)
libscioutput_stream_la_root_DATA = changelog.txt licence.txt readme.txt version.xml

#### output_stream : init scripts ####
libscioutput_stream_la_etcdir = $(mydatadir)/etc
libscioutput_stream_la_etc_DATA = etc/output_stream.quit etc/output_stream.start

#### output_stream : gateway declaration ####
libscioutput_stream_la_sci_gatewaydir = $(mydatadir)/sci_gateway
libscioutput_stream_la_sci_gateway_DATA = sci_gateway/output_stream_gateway.xml

#### output_stream :  dtd files ####
libscioutput_stream_la_xmldir = $(mydatadir)/xml
libscioutput_stream_la_xml_DATA = xml/modules.dtd xml/version.dtd

#### output_stream : include files ####
libscioutput_stream_la_includedir = $(pkgincludedir)/output_stream
libscioutput_stream_la_include_HEADERS = 

#### output_stream : demos files ####
libscioutput_stream_la_demosintrodir = $(mydatadir)/demos/intro/
libscioutput_stream_la_demosintro_DATA = 

# Where all the Scilab stuff is installed (macros, help, ...)
mydatadir = $(pkgdatadir)/modules/$(modulename)

#SUFFIXES = .xml .sci .htm
SUFFIXES = .sci 
TARGETS_ALL = $(am__append_1) $(am__append_2) $(am__append_3)

########### INSTALL DOCUMENTATION ###################
# Install HTML files into the right target
# We do not use the automake mechanism (libxxxx_la_help_fr_DATA) because
# automake needs the html files to be present which is not the case when
# we are building Scilab

# Where it should be installed
pkgdocdir = $(mydatadir)
# Which directories we have to install
DOCDIRS = help/fr_FR help/en_US
# What is the mask of the help output
DOCMASK = *.htm
# What is the mask of the help source
DOCMASKXML = *.xml

########### INSTALL DATA ###################
# Install macros
# Where it should be installed
pkgmacrosdir = $(mydatadir)
# Which directory we process
MACRODIRS = macros/
# Mask of the Scilab sources macros
MACROMASK = *.sci
# Mask of the Scilab executable sources macros
MACROBUILDMASK = *.sce
# Mask of the Scilab compiled macros
MACROBINMASK = *.bin
# List of the function of a module
FUNCTION_NAMES = macros/names
# Localisation directory name
LOCALISATIONDIRS = locales/fr_FR/ locales/en_US/
# Chapter file 
HELP_CHAPTERDIR = help/en_US/
HELP_CHAPTERFILE = addchapter.sce
# Where to export JAVA files (.jar)
JARDIR = jar/
# JAR files
JARMASK = *.jar
all: all-am

.SUFFIXES:
.SUFFIXES: .sci .bin
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/Makefile.incl.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  modules/output_stream/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  modules/output_stream/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-pkglibLTLIBRARIES: $(pkglib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(pkglibdir)" || $(MKDIR_P) "$(DESTDIR)$(pkglibdir)"
	@list='$(pkglib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) --mode=install $(pkglibLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(pkglibdir)/$$f'"; \
	    $(LIBTOOL) --mode=install $(pkglibLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(pkglibdir)/$$f"; \
	  else :; fi; \
	done

uninstall-pkglibLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(pkglib_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) --mode=uninstall rm -f '$(DESTDIR)$(pkglibdir)/$$p'"; \
	  $(LIBTOOL) --mode=uninstall rm -f "$(DESTDIR)$(pkglibdir)/$$p"; \
	done

clean-pkglibLTLIBRARIES:
	-test -z "$(pkglib_LTLIBRARIES)" || rm -f $(pkglib_LTLIBRARIES)
	@list='$(pkglib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libscioutput_stream.la: $(libscioutput_stream_la_OBJECTS) $(libscioutput_stream_la_DEPENDENCIES) 
	$(libscioutput_stream_la_LINK) -rpath $(pkglibdir) $(libscioutput_stream_la_OBJECTS) $(libscioutput_stream_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-libscioutput_stream_la_demosintroDATA: $(libscioutput_stream_la_demosintro_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(libscioutput_stream_la_demosintrodir)" || $(MKDIR_P) "$(DESTDIR)$(libscioutput_stream_la_demosintrodir)"
	@list='$(libscioutput_stream_la_demosintro_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(libscioutput_stream_la_demosintroDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(libscioutput_stream_la_demosintrodir)/$$f'"; \
	  $(libscioutput_stream_la_demosintroDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(libscioutput_stream_la_demosintrodir)/$$f"; \
	done

uninstall-libscioutput_stream_la_demosintroDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(libscioutput_stream_la_demosintro_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(libscioutput_stream_la_demosintrodir)/$$f'"; \
	  rm -f "$(DESTDIR)$(libscioutput_stream_la_demosintrodir)/$$f"; \
	done
install-libscioutput_stream_la_etcDATA: $(libscioutput_stream_la_etc_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(libscioutput_stream_la_etcdir)" || $(MKDIR_P) "$(DESTDIR)$(libscioutput_stream_la_etcdir)"
	@list='$(libscioutput_stream_la_etc_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(libscioutput_stream_la_etcDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(libscioutput_stream_la_etcdir)/$$f'"; \
	  $(libscioutput_stream_la_etcDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(libscioutput_stream_la_etcdir)/$$f"; \
	done

uninstall-libscioutput_stream_la_etcDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(libscioutput_stream_la_etc_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(libscioutput_stream_la_etcdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(libscioutput_stream_la_etcdir)/$$f"; \
	done
install-libscioutput_stream_la_rootDATA: $(libscioutput_stream_la_root_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(libscioutput_stream_la_rootdir)" || $(MKDIR_P) "$(DESTDIR)$(libscioutput_stream_la_rootdir)"
	@list='$(libscioutput_stream_la_root_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(libscioutput_stream_la_rootDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(libscioutput_stream_la_rootdir)/$$f'"; \
	  $(libscioutput_stream_la_rootDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(libscioutput_stream_la_rootdir)/$$f"; \
	done

uninstall-libscioutput_stream_la_rootDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(libscioutput_stream_la_root_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(libscioutput_stream_la_rootdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(libscioutput_stream_la_rootdir)/$$f"; \
	done
install-libscioutput_stream_la_sci_gatewayDATA: $(libscioutput_stream_la_sci_gateway_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(libscioutput_stream_la_sci_gatewaydir)" || $(MKDIR_P) "$(DESTDIR)$(libscioutput_stream_la_sci_gatewaydir)"
	@list='$(libscioutput_stream_la_sci_gateway_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(libscioutput_stream_la_sci_gatewayDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(libscioutput_stream_la_sci_gatewaydir)/$$f'"; \
	  $(libscioutput_stream_la_sci_gatewayDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(libscioutput_stream_la_sci_gatewaydir)/$$f"; \
	done

uninstall-libscioutput_stream_la_sci_gatewayDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(libscioutput_stream_la_sci_gateway_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(libscioutput_stream_la_sci_gatewaydir)/$$f'"; \
	  rm -f "$(DESTDIR)$(libscioutput_stream_la_sci_gatewaydir)/$$f"; \
	done
install-libscioutput_stream_la_xmlDATA: $(libscioutput_stream_la_xml_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(libscioutput_stream_la_xmldir)" || $(MKDIR_P) "$(DESTDIR)$(libscioutput_stream_la_xmldir)"
	@list='$(libscioutput_stream_la_xml_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(libscioutput_stream_la_xmlDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(libscioutput_stream_la_xmldir)/$$f'"; \
	  $(libscioutput_stream_la_xmlDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(libscioutput_stream_la_xmldir)/$$f"; \
	done

uninstall-libscioutput_stream_la_xmlDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(libscioutput_stream_la_xml_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(libscioutput_stream_la_xmldir)/$$f'"; \
	  rm -f "$(DESTDIR)$(libscioutput_stream_la_xmldir)/$$f"; \
	done
install-libscioutput_stream_la_includeHEADERS: $(libscioutput_stream_la_include_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(libscioutput_stream_la_includedir)" || $(MKDIR_P) "$(DESTDIR)$(libscioutput_stream_la_includedir)"
	@list='$(libscioutput_stream_la_include_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(libscioutput_stream_la_includeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(libscioutput_stream_la_includedir)/$$f'"; \
	  $(libscioutput_stream_la_includeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(libscioutput_stream_la_includedir)/$$f"; \
	done

uninstall-libscioutput_stream_la_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(libscioutput_stream_la_include_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(libscioutput_stream_la_includedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(libscioutput_stream_la_includedir)/$$f"; \
	done
tags: TAGS
TAGS:

ctags: CTAGS
CTAGS:


distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-local
check: check-am
all-am: Makefile $(LTLIBRARIES) $(DATA) $(HEADERS) all-local
installdirs:
	for dir in "$(DESTDIR)$(pkglibdir)" "$(DESTDIR)$(libscioutput_stream_la_demosintrodir)" "$(DESTDIR)$(libscioutput_stream_la_etcdir)" "$(DESTDIR)$(libscioutput_stream_la_rootdir)" "$(DESTDIR)$(libscioutput_stream_la_sci_gatewaydir)" "$(DESTDIR)$(libscioutput_stream_la_xmldir)" "$(DESTDIR)$(libscioutput_stream_la_includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-local \
	clean-pkglibLTLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-data-local \
	install-libscioutput_stream_la_demosintroDATA \
	install-libscioutput_stream_la_etcDATA \
	install-libscioutput_stream_la_includeHEADERS \
	install-libscioutput_stream_la_rootDATA \
	install-libscioutput_stream_la_sci_gatewayDATA \
	install-libscioutput_stream_la_xmlDATA

install-dvi: install-dvi-am

install-exec-am: install-pkglibLTLIBRARIES

install-html: install-html-am

install-html-am: install-html-local

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-libscioutput_stream_la_demosintroDATA \
	uninstall-libscioutput_stream_la_etcDATA \
	uninstall-libscioutput_stream_la_includeHEADERS \
	uninstall-libscioutput_stream_la_rootDATA \
	uninstall-libscioutput_stream_la_sci_gatewayDATA \
	uninstall-libscioutput_stream_la_xmlDATA \
	uninstall-pkglibLTLIBRARIES

.MAKE: install-am install-strip

.PHONY: all all-am all-local check check-am check-local clean \
	clean-generic clean-libtool clean-local \
	clean-pkglibLTLIBRARIES distclean distclean-compile \
	distclean-generic distclean-libtool distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-data-local install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-html-local install-info install-info-am \
	install-libscioutput_stream_la_demosintroDATA \
	install-libscioutput_stream_la_etcDATA \
	install-libscioutput_stream_la_includeHEADERS \
	install-libscioutput_stream_la_rootDATA \
	install-libscioutput_stream_la_sci_gatewayDATA \
	install-libscioutput_stream_la_xmlDATA install-man install-pdf \
	install-pdf-am install-pkglibLTLIBRARIES install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am uninstall uninstall-am \
	uninstall-libscioutput_stream_la_demosintroDATA \
	uninstall-libscioutput_stream_la_etcDATA \
	uninstall-libscioutput_stream_la_includeHEADERS \
	uninstall-libscioutput_stream_la_rootDATA \
	uninstall-libscioutput_stream_la_sci_gatewayDATA \
	uninstall-libscioutput_stream_la_xmlDATA \
	uninstall-pkglibLTLIBRARIES

-I$(top_srcdir)/libs/doublylinkedlist/includes
#.java .class .jar

# This target enables tests for Scilab
check-local: $(top_builddir)/scilab-bin
	@for check in $(MODULE_CHECKS) ; do \
		TESTS="$$TESTS'$$check';"; \
	done; \
	if test -f build.xml; then \
		$(ANT) checkstyle; \
	fi;\
	if test ! -z "$(MODULE_CHECKS)"; then \
		COMMAND="myTests=[$$TESTS];launchtest(pwd(),myTests);quit";\
		$(top_builddir)/bin/scilab -nwni -nb -e "$$COMMAND"; \
	fi

########################### JAVA ######################################
#### We had to create those rules because autotools does NOT provide
#### a kind of mechanism like C or Fortran sources :
#### libsciboolean_la_SOURCES = plop.c plip.f 
####
#### It is why those rules exist.
#######################################################################

# TODO : Renamed this variable

#build-java:
#	@if test -f build.xml; then \
#		$(ANT) jar; \
#	fi

#clean-java: 
#	@if test -f build.xml; then \
#		$(ANT) clean; \
#	fi

all-local: $(TARGETS_ALL)

# If the user request for the SWIG generation of the wrappers Java => C/C++ 
# We call the target swig-build on the variable SWIG_WRAPPERS

build-swig: $(SWIG_WRAPPERS)
	@SWIG_PACKAGENAME=org.scilab.modules.$(modulename); \
	SWIG_OUTDIR=src/java/org/scilab/modules/$(modulename)/; \
	if test ! -z "$(SWIG_WRAPPERS)"; then \
		for file in $(SWIG_WRAPPERS) ; do \
			echo "Swig process of $$file ..."; \
			$(SWIG_BIN) $(SWIG_JAVA) -package $$SWIG_PACKAGENAME  -outdir $$SWIG_OUTDIR $$file; \
		done; \
	fi

# If the user request for the SWIG generation of the wrappers Java => C/C++ 
# We call the target swig-build on the variable SWIG_WRAPPERS

build-giws: $(GIWS_WRAPPERS)
	@GIWS_OUTPUTDIR=src/jni/;\
	if test ! -z "$(GIWS_WRAPPERS)"; then \
		for file in $(GIWS_WRAPPERS) ; do \
			echo "Giws process of $$file ..."; \
			$(GIWS_BIN) --output-dir $$GIWS_OUTPUTDIR -s --description-file $$file; \
		done; \
	fi

################ MACROS ######################"
# Rule to build a macro
.sci.bin:
	-@( if test ! -x $(top_builddir)/scilab-bin; then \
	echo "Error : Cannot build $< : Scilab has not been build"; \
	else \
	echo "Creating $@"; \
	$(top_builddir)/bin/scilab -ns -nwni -e "exec('$(abs_srcdir)/$<');save('$(abs_srcdir)/$@');exit;"; \
	fi )

macrossly:
	@( if test ! -x $(top_builddir)/scilab-bin; then \
	echo "Error : Cannot build $< : Scilab has not been build"; \
	else \
	LD_LIBRARY_PATH="$(JAVA_HOME)/jre/lib/i386/:$(JAVA_HOME)/jre/lib/i386/server/:$(JAVA_HOME)/jre/lib/i386/native_threads/:$LD_LIBRARY_PATH"; 	export LD_LIBRARY_PATH; \
	SCI=`cd $(top_builddir); pwd;`; export SCI; \
	echo $$SCI/modules/functions/macros/genlib.bin; \
	if test ! -f $$SCI/modules/functions/macros/genlib.bin; then \
	(cd $$SCI; $$SCI/scilab-bin -ns -nwni -f $$SCI/modules/functions/scripts/buildmacros/buildmacros.sce;) \
	fi; \
	echo $(top_builddir)/scilab-bin -ns -nwni -f macros/buildmacros.sce; \
	$(top_builddir)/scilab-bin -nwni -f macros/buildmacros.sce; \
	fi )
install-html-local:
	$(mkinstalldirs) $(DESTDIR)$(pkgdocdir)
	@for dir in $(DOCDIRS) ; do \
	 if test -d $$dir; then \
	  $(mkinstalldirs) $(DESTDIR)$(pkgdocdir)/$$dir && \
		if ls -lLd $(srcdir)/$$dir/$(DOCMASK) >/dev/null 2>&1; then \
		  for file in $(srcdir)/$$dir/$(DOCMASK) ; do \
		    echo "$(INSTALL_DATA) $$file $(DESTDIR)$(pkgdocdir)/$$dir" ; \
	    	$(INSTALL_DATA) "$$file" $(DESTDIR)$(pkgdocdir)/$$dir ; \
		  done ; \
		fi; \
	 fi; \
	done
# If the user wants the help sources to be installed
#	@for dir in $(DOCDIRS) ; do \
#	 if test -d $$dir; then \
#	  $(mkinstalldirs) $(DESTDIR)$(pkgdocdir)/$$dir && \
#		if ls -lLd $(srcdir)/$$dir/$(DOCMASKXML) >/dev/null 2>&1; then \
#		  for file in $(srcdir)/$$dir/$(DOCMASKXML) ; do \
#		    echo "$(INSTALL_DATA) $$file $(DESTDIR)$(pkgdocdir)/$$dir" ; \
#	    	$(INSTALL_DATA) "$$file" $(DESTDIR)$(pkgdocdir)/$$dir ; \
#		  done ; \
#		fi; \
#	 fi; \
#	done
install-data-local:
	@if test -f $(FUNCTION_NAMES); then \
		echo $(mkinstalldirs) $(DESTDIR)$(pkgmacrosdir); \
		$(mkinstalldirs) $(DESTDIR)$(pkgmacrosdir); \
		echo $(mkinstalldirs) $(DESTDIR)$(pkgmacrosdir)/$(MACRODIRS); \
		$(mkinstalldirs) $(DESTDIR)$(pkgmacrosdir)/$(MACRODIRS); \
		echo "$(INSTALL_DATA) $(FUNCTION_NAMES) $(DESTDIR)$(pkgmacrosdir)/macros/"; \
		$(INSTALL_DATA) $(FUNCTION_NAMES) $(DESTDIR)$(pkgmacrosdir)/$(MACRODIRS); \
	fi
# Install the help chapter
	@HELPFILE=$(HELP_CHAPTERDIR)$(HELP_CHAPTERFILE); \
	if test -f $$HELPFILE; then \
		echo $(mkinstalldirs) $(DESTDIR)$(pkgdocdir)/$(HELP_CHAPTERDIR); \
		$(mkinstalldirs) $(DESTDIR)$(pkgdocdir)/$(HELP_CHAPTERDIR); \
		echo $(INSTALL_DATA) $$HELPFILE $(DESTDIR)$(pkgdocdir)/$$HELPFILE; \
		$(INSTALL_DATA) $$HELPFILE $(DESTDIR)$(pkgdocdir)/$$HELPFILE; \
	fi
# Install the macros
	@for dir in $(MACRODIRS) $(MACROSDIRSEXT) ; do \
	  $(mkinstalldirs) $(DESTDIR)$(pkgmacrosdir)/$$dir && \
		if test -d $(srcdir)/$$dir/; then \
		  for file in `ls -1 $(srcdir)/$$dir/$(MACROMASK) $(srcdir)/$$dir/$(MACROBINMASK) $(srcdir)/$$dir/$(MACROBUILDMASK) $(srcdir)/$$dir/lib 2>/dev/null`; do \
		    echo "$(INSTALL_DATA) $$file $(DESTDIR)$(pkgmacrosdir)/$$dir" ; \
	    	$(INSTALL_DATA) "$$file" $(DESTDIR)$(pkgmacrosdir)/$$dir ; \
		  done; \
		fi; \
	done
# Install java files (.jar)
	@if ls -lLd $(srcdir)/$(JARDIR)$(JARMASK) >/dev/null 2>&1; then \
    $(mkinstalldirs) $(DESTDIR)$(pkgdocdir)/$(JARDIR); \
	  for file in $(srcdir)/$(JARDIR)$(JARMASK); do\
		    echo "$(INSTALL_DATA) $$file $(DESTDIR)$(pkgdocdir)/$(JARDIR)" ; \
	    	$(INSTALL_DATA) "$$file" $(DESTDIR)$(pkgdocdir)/$(JARDIR) ; \
	  done ; \
	fi

########### CLEAN ###################
# Clean macros and help (generated automatically by Scilab)
#clean-local: clean-java
clean-local:
# Removes macros (*.bin generated from .sci)
	@for dir in $(MACRODIRS) $(MACROSDIRSEXT) ; do \
		echo "rm -f $(srcdir)/$$dir/$(MACROBINMASK)"; \
		rm -f $(srcdir)/$$dir/$(MACROBINMASK); \
	done
# Removes documentation (*.htm generated from .xml) 
	@for dir in $(DOCDIRS) ; do \
		 if test -d $$dir; then \
			echo "rm -f $(srcdir)/$$dir/$(DOCMASK)"; \
			rm -f $(srcdir)/$$dir/$(DOCMASK); \
		fi; \
	done

build-macros: $(top_builddir)/scilab-bin $(top_builddir)/bin/scilab $(srcdir)/$(MACRODIRS)/$(MACROMASK)
	-@( 	$(top_builddir)/bin/scilab -ns -nwni -e "exec('macros/buildmacros.sce');quit;";\
	)
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
