<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!DOCTYPE MAN SYSTEM "../../../../modules/helptools/help.dtd">
<MAN>
  <LANGUAGE>eng</LANGUAGE>
  <TITLE>deff</TITLE>
  <TYPE>Scilab Function</TYPE>
  <DATE>$LastChangedDate$</DATE>
  <SHORT_DESCRIPTION name="deff"> on-line definition of function</SHORT_DESCRIPTION>
  <CALLING_SEQUENCE>
    <CALLING_SEQUENCE_ITEM>deff('[s1,s2,...]=newfunction(e1,e2,....)',text [,opt])  </CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>
  <PARAM>
    <PARAM_INDENT>
      <PARAM_ITEM>
        <PARAM_NAME>e1,e2,...,  </PARAM_NAME>
        <PARAM_DESCRIPTION>
          <SP>: input variables.</SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>
      <PARAM_ITEM>
        <PARAM_NAME>s1,s2,...,  </PARAM_NAME>
        <PARAM_DESCRIPTION>
          <SP>: output variables.</SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>
      <PARAM_ITEM>
        <PARAM_NAME>text</PARAM_NAME>
        <PARAM_DESCRIPTION>
          <SP>: matrix of character strings</SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>
      <PARAM_ITEM>
        <PARAM_NAME>opt</PARAM_NAME>
        <PARAM_DESCRIPTION>
          <SP>: optional character string</SP>
          <PARAM_INDENT>
            <PARAM_ITEM>
              <PARAM_NAME>'c'  </PARAM_NAME>
              <PARAM_DESCRIPTION>
                <SP>: function is &quot;compiled&quot; to be more efficient (default)</SP>
              </PARAM_DESCRIPTION>
            </PARAM_ITEM>
            <PARAM_ITEM>
              <PARAM_NAME>'p'  </PARAM_NAME>
              <PARAM_DESCRIPTION>
                <SP>: function is &quot;compiled&quot; and prepared for profiling (see profile)</SP>
              </PARAM_DESCRIPTION>
            </PARAM_ITEM>
            <PARAM_ITEM>
               <PARAM_NAME>'n'  </PARAM_NAME>
              <PARAM_DESCRIPTION>
                <SP>: function is not &quot;compiled&quot;</SP>
              </PARAM_DESCRIPTION>
            </PARAM_ITEM>
         </PARAM_INDENT>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>
    </PARAM_INDENT>
  </PARAM>
  <DESCRIPTION>
    <P>
    <VERB>deff</VERB> can be used to define functions from sequences of instructions
    written in text strings. The resulting function object has the same proprerties
    of any other function defined in a text file and loaded with <VERB>getf</VERB> 
    or <VERB>exec</VERB>.</P>
    <P>
    Quotes in the instructions (delimiting strings or meaning matrix transposition) 
    have to be doubled to be interpreted correctly (see help quote). This can make
    writing up a little awkward.
    An option in such cases is to define functions in files as usual, to load them into
    Scilab by <VERB>getf</VERB> (with the <VERB>'n'</VERB> option) and to use 
    <VERB>sci2exp</VERB> to get a printout of corresponding <VERB>deff</VERB> 
    instructions.</P>
  </DESCRIPTION>
  <EXAMPLE>
<![CDATA[
deff('[x]=myplus(y,z)','x=y+z')
//
deff('[x]=mymacro(y,z)',['a=3*y+1'; 'x=a*z+y'])
 ]]>
  </EXAMPLE>
  <SEE_ALSO>
    <SEE_ALSO_ITEM>
      <LINK>getf</LINK>
    </SEE_ALSO_ITEM>
    <SEE_ALSO_ITEM>
      <LINK>comp</LINK>
    </SEE_ALSO_ITEM>
    <SEE_ALSO_ITEM>
      <LINK>exec</LINK>
    </SEE_ALSO_ITEM>
    <SEE_ALSO_ITEM>
      <LINK>function</LINK>
    </SEE_ALSO_ITEM>
    <SEE_ALSO_ITEM>
      <LINK>profile</LINK>
    </SEE_ALSO_ITEM>
  </SEE_ALSO>
</MAN>
