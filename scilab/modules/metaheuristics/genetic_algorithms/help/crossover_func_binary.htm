<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>crossover_func_binary</title>
</head>
<body bgcolor="#FFFFFF">
<center>Scilab Function  </center>
<div align="right">Last update : 24/03/2008</div>
<p><b>crossover_func_binary</b> -  A crossover function for binary code </p>
<h3><font color="blue">Calling Sequence</font></h3>
<dl><dd><tt>[Crossed_Indiv1,Crossed_Indiv2] = crossover_func_binary(Indiv1,Indiv2,param)</tt></dd></dl>
<h3><font color="blue">Parameters</font></h3>
<ul>
<li>
<tt><b>Indiv1</b></tt>
       : the first individual (here a binary code) to be crossed-over.
       </li>
<li>
<tt><b>Indiv2</b></tt>
       : the second individual to be crossed-over.
       </li>
<li>
<tt><b>param</b></tt>
       : a list of parameters.
         - 'binary_length': the length of the binary code.
         - 'multi_cross': a boolean. If %T then we allow several cuts in the binary code.
         - 'multi_cross_nb': the number of cuts in the binary code. Only used when multi_cross is set to %T.
       </li>
<li>
<tt><b>Crossed_Indiv1</b></tt>
       : The first individual obtained by the cross-over function.
       </li>
<li>
<tt><b>Crossed_Indiv2</b></tt>
       : The second individual obtained by the cross-over function.
       </li>
</ul>
<h3><font color="blue">Description</font></h3>
<dl><dd>
<b></b><p>
      This function implements a classical binary cross-over.
     </p>
</dd></dl>
<h3><font color="blue">See Also</font></h3>
<p><a href="crossover_func_binary.htm"><tt><b> crossover_func_binary </b></tt></a>,&nbsp;&nbsp;<a href="crossover_func_default.htm"><tt><b> crossover_func_default </b></tt></a>,&nbsp;&nbsp;<a href="mutation_func_binary.htm"><tt><b> mutation_func_binary </b></tt></a>,&nbsp;&nbsp;<a href="optim_ga.htm"><tt><b> optim_ga </b></tt></a>,&nbsp;&nbsp;</p>
<h3><font color="blue">Authors</font></h3>
<dl><dd>
<b>Yann COLLETTE</b>
    ycollet@freesurf.fr
    </dd></dl>
</body>
</html>
