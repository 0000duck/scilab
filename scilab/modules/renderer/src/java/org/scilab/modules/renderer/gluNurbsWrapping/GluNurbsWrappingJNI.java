/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.24
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.scilab.modules.renderer.gluNurbsWrapping;


 /** 
  * Test array calling 
  * @author Jean-Baptiste Silvy
  * @copyright INRIA 2007
  */
public class GluNurbsWrappingJNI {

  /**
   * Constructor. Should not be called
   */
  protected GluNurbsWrappingJNI() {
	throw new UnsupportedOperationException();
  }

  static {
    try {
        System.loadLibrary("scirenderer");
    } catch (SecurityException e) {
		System.err.println("A security manager exists and does not allow the loading of the specified dynamic library :");
		e.printStackTrace(System.err);
	} catch (UnsatisfiedLinkError e)	{
		System.err.println("The native library scirenderer does not exist or cannot be found.");
		e.printStackTrace(System.err);
    }
  }

  public final static native long gluNewNurbsRendererWrapping();
  public final static native void gluDeleteNurbsRendererWrapping(long jarg1);
  public final static native void gluBeginCurveWrapping(long jarg1);
  public final static native void gluEndCurveWrapping(long jarg1);
  public final static native void gluNurbsCurveWrapping(long jarg1, int jarg2, float[] jarg3, int jarg4, float[] jarg5, int jarg6, int jarg7);
  public final static native void gluBeginSurfaceWrapping(long jarg1);
  public final static native void gluEndSurfaceWrapping(long jarg1);
  public final static native void gluNurbsSurfaceWrapping(long jarg1, int jarg2, float[] jarg3, int jarg4, float[] jarg5, int jarg6, int jarg7, float[] jarg8, int jarg9, int jarg10, int jarg11);
  public final static native void gluBeginTrimWrapping(long jarg1);
  public final static native void gluEndTrimWrapping(long jarg1);
  public final static native void gluPwlCurveWrapping(long jarg1, int jarg2, float[] jarg3, int jarg4, int jarg5);
  public final static native void gluNurbsPropertyWrapping(long jarg1, int jarg2, float jarg3);
  public final static native float gluGetNurbsPropertyWrapping(long jarg1, int jarg2);
  public final static native void gluLoadSamplingMatricesWrapping(long jarg1, float[] jarg2, float[] jarg3, int[] jarg4);
}
