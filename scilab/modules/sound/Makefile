# Makefile.in generated by automake 1.9.6 from Makefile.am.
# modules/sound/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



##########
### Sylvestre Ledru <sylvestre.ledru@inria.fr>
### INRIA - Scilab 2006 
##########


srcdir = .
top_srcdir = ../..

pkgdatadir = $(datadir)/scilab
pkglibdir = $(libdir)/scilab
pkgincludedir = $(includedir)/scilab
top_builddir = ../..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
subdir = modules/sound
DIST_COMMON = $(libsound_la_include_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/check_compiler.m4 \
	$(top_srcdir)/m4/fortran.m4 $(top_srcdir)/m4/gtk-2.0.m4 \
	$(top_srcdir)/m4/java.m4 $(top_srcdir)/m4/libs_by_debian.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/ocaml.m4 $(top_srcdir)/m4/pvm.m4 \
	$(top_srcdir)/m4/tcltk.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/modules/core/includes/machine.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)" \
	"$(DESTDIR)$(libsound_la_includedir)"
libLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(lib_LTLIBRARIES)
am__DEPENDENCIES_1 = $(top_builddir)/modules/core/libcore.la
am__objects_1 = libsound_la-raw.lo libsound_la-sox.lo \
	libsound_la-libst.lo libsound_la-wav.lo libsound_la-misc.lo
am__objects_2 = libsound_la-sci_savewave.lo \
	libsound_la-sci_loadwave.lo libsound_la-gw_sound.lo \
	libsound_la-sci_beep.lo libsound_la-sci_PlaySound.lo
am_libsound_la_OBJECTS = $(am__objects_1) $(am__objects_2)
libsound_la_OBJECTS = $(am_libsound_la_OBJECTS)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)/modules/core/includes
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libsound_la_SOURCES)
DIST_SOURCES = $(libsound_la_SOURCES)
libsound_la_includeHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(libsound_la_include_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/sylvestre/dev/scilab5/config/missing --run aclocal-1.9
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/sylvestre/dev/scilab5/config/missing --run tar
AR = ar
AR_FLAGS = cru
ATLAS_DIR = 
AUTOCONF = ${SHELL} /home/sylvestre/dev/scilab5/config/missing --run autoconf
AUTOHEADER = ${SHELL} /home/sylvestre/dev/scilab5/config/missing --run autoheader
AUTOMAKE = ${SHELL} /home/sylvestre/dev/scilab5/config/missing --run automake-1.9
AWK = mawk
BLPR_SCRIPTS = $(BPROGRAMS)
CC = gcc
CCDEPMODE = depmode=gcc3
CC_LDFLAGS = 
CC_OPTIONS = 
CC_PICFLAGS = 
CFLAGS = -g -O2 -DNDEBUG -D_FORTIFY_SOURCE=2 -Dlinux -DNARROWPROTO -I/home/sylvestre/dev/scilab5/libs/MALLOC/includes/
CPP = gcc -E
CPPFLAGS = 
CXX = 
CXXCPP = 
CXXFLAGS = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLDLIB = 
DLD_SUBDIR = 
DLLTOOL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXAMPLES_TESTS = $(SUBDIRS1) $(SUBDIRS2)
EXEC_PREFIX_DIR = NONE
EXEEXT = 
FC = gfortran
FCFLAGS = -g -O2
FC_LDFLAGS = 
FC_PICFLAGS = 
FC_SUBDIR = 
FFLAGS =  -DNDEBUG -D_FORTIFY_SOURCE=2 -I/home/sylvestre/dev/scilab5/modules/core/includes -g -O2
FFLAGS1 = 
FGREP = /bin/grep -F
FILES_TO_CLEAN = *.CKP *.ln *.BAK *.bak core errs ,* *~ *.a .emacs_* tags TAGS make.log MakeOut .*~ *.trace so_locations *.orig *.cos *.obj
FLIBS = 
GCC = yes
GCCFIX = 
GETLIBTK = libtk8.4.so
GNOME_CFLAGS = 
GREP = /bin/grep
GTKPLUGBUG = 
GTK_CFLAGS = 
GTK_LIBS = 
GUI = X11
GUILIB = xsci
GUI_GTK_FALSE = 
GUI_GTK_TRUE = #
GUI_WIN32_FALSE = 
GUI_WIN32_TRUE = #
GUI_X11_FALSE = #
GUI_X11_TRUE = 
GZVT = 
HPPA_OLD = 
HTMLFLAGS = 
ICC = 
IFC = 
IMPENV = 
IMPPREF = S
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
IN_ATLAS = LOCAL
IS_HPUX_FALSE = 
IS_HPUX_TRUE = #
IS_MIPS_SGI_IRIX_FALSE = 
IS_MIPS_SGI_IRIX_TRUE = #
IS_SPARC_FALSE = 
IS_SPARC_TRUE = #
JAVAC = /home/sylvestre/dev/thirdparty/Java/jdk1.5.0_06/bin/javac
JAVA_FALSE = #
JAVA_JNI_INCLUDE = -I/home/sylvestre/dev/thirdparty/Java/jdk1.5.0_06/include -I/home/sylvestre/dev/thirdparty/Java/jdk1.5.0_06/include/linux
JAVA_JNI_LIBS = -L/home/sylvestre/dev/thirdparty/Java/jdk1.5.0_06/jre/lib/i386 -ljava -lverify -L/home/sylvestre/dev/thirdparty/Java/jdk1.5.0_06/jre/lib/i386/client -ljvm -L/home/sylvestre/dev/thirdparty/Java/jdk1.5.0_06/jre/lib/i386/native_threads -lhpi
JAVA_TRUE = 
LD = /usr/bin/ld
LDFLAGS = 
LD_LDFLAGS = 
LIBGTKHTML_CFLAGS = 
LIBGTKHTML_LIBS = 
LIBM = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBTOOL_DEPS = config/ltmain.sh
LN_S = ln -s
LTLIBOBJS = 
MAIN = mainsci.o
MAKEINFO = ${SHELL} /home/sylvestre/dev/scilab5/config/missing --run makeinfo
MALLOC = 
MANGENERATOR = 
MANTARGET = 
MENUSOBJS = XOBJS
NM = /usr/bin/nm -B
NOINLINE = 
OBJDUMP = 
OBJEXT = o
OCAMLC = ocamlc
OCAMLDEP = ocamldep
OCAMLOPT = ocamlopt
OCAMLTARGET = scilex-lib
OCAMLTARGET_DISTCLEAN = distclean
PACKAGE = scilab
PACKAGE_BUGREPORT = http://scilabsoft.inria.fr/cgi-bin/bugzilla_bug_II/index.cgi
PACKAGE_NAME = scilab
PACKAGE_STRING = scilab 0
PACKAGE_TARNAME = scilab
PACKAGE_VERSION = 0
PATH_SEPARATOR = :
PERIX11NOPT = periX11darwin
PKG_CONFIG = 
PREFIX_DIR = NONE
PVMARCH = LINUX
PVMGETARCH = pvmgetarch
PVM_FALSE = #
PVM_INCLUDE = -I/usr/include
PVM_LIB =  -L/usr/lib -lgpvm3 -lpvm3
PVM_TRUE = 
RANLIB = ranlib
RM = rm -f
SCIDIR = .
SCILABSCRIPT = scilab.g
SCILAB_GS = sh
SCIVERSION = Scilab-trunk-SVN
SED = /bin/sed
SED_CYGDRIVE = 
SET_MAKE = 
SHELL = /bin/sh
STATIC = 
STRIP = strip
TCLSCIDIR = tclsci
TCLSCILIB = $(SCIDIR)/libs/tclsci.a
TCLTKHELP = tksci
TCLTK_LIBS =  -L/usr/lib -ltk8.4   -L/usr/lib -ltcl8.4  -ldl
TCL_INC_PATH = -I/usr/include/tcl8.4
TERMCAPLIB = -lreadline -lncurses
TERM_VTE_FALSE = 
TERM_VTE_TRUE = #
TERM_ZTERM_FALSE = 
TERM_ZTERM_TRUE = #
TKBASE = 
TK_INC_PATH = -I/usr/include/tcl8.4
TK_MAJOR_VERSION = 8
TK_MINOR_VERSION = 4
VERSION = 0
VTE_CFLAGS = 
VTE_LIBS = 
WHICH_BLAS = STD_BLAS
WINXFLAGS = 
WITH_OCAML = 
WITH_SABLOTRON = 
WITH_XSLTPROC = 
XAW = Xaw3d
XAWLIB = $(SCIDIR)/libs/libXaw3d.a
XAW_LOCAL_INCLUDES = -I$(SCIDIR)/routines
XAW_LOCAL_LIB = $(SCIDIR)/libs/libXaw3d.a $(SCIDIR)/libs/libXmu.a
XAW_LOCAL_SUBDIR = X11
XDRLIB = 
XDRLIBNAME = 
XMKMF = 
XMULIB = $(SCIDIR)/libs/libXmu.a
XXTXEXT = 
X_CFLAGS = 
X_EXTRA_LIBS = 
X_LIBS = 
X_LIB_PATH = 
X_PRE_LIBS =  -lSM -lICE
ZVT_CFLAGS = 
ZVT_LIBS = 
ZZLEDT = zzledt-rl.o
ac_ct_CC = gcc
ac_ct_DUMPBIN = 
ac_ct_FC = gfortran
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = /home/sylvestre/dev/scilab5/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = echo
mandir = ${datarootdir}/man
mkdir_p = mkdir -p --
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target_alias = 
tcldir = NONE/tcl/
SOUND_C_SOURCES = src/raw.c \
src/sox.c \
src/libst.c \
src/wav.c \
src/misc.c

GATEWAY_C_SOURCES = sci_gateway/sci_savewave.c \
sci_gateway/sci_loadwave.c \
sci_gateway/gw_sound.c \
sci_gateway/sci_beep.c \
sci_gateway/sci_PlaySound.c

libsound_la_includedir = $(includedir)/sound
libsound_la_include_HEADERS = includes/sci_PlaySound.h \
includes/sci_beep.h \
includes/sci_savewave.h \
includes/sci_loadwave.h \
includes/gw_sound.h

libsound_la_CFLAGS = -Iincludes/ -Isrc/
lib_LTLIBRARIES = libsound.la
libsound_la_SOURCES = $(SOUND_C_SOURCES) $(GATEWAY_C_SOURCES)
libsound_la_DEPENDENCIES = \
	$(top_builddir)/modules/core/libcore.la


#	$(top_builddir)/libs/blas/libblas.la \
#	$(top_builddir)/modules/elementaries_functions/libelementaries_functions.la 
libsound_la_LIBADD = $(libsound_la_DEPENDENCIES)
libsound_la_PKGCONFIG = sound.pc
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  modules/sound/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  modules/sound/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(mkdir_p) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@set -x; list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  $(LIBTOOL) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libsound.la: $(libsound_la_OBJECTS) $(libsound_la_DEPENDENCIES) 
	$(LINK) -rpath $(libdir) $(libsound_la_LDFLAGS) $(libsound_la_OBJECTS) $(libsound_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libsound_la-gw_sound.Plo
include ./$(DEPDIR)/libsound_la-libst.Plo
include ./$(DEPDIR)/libsound_la-misc.Plo
include ./$(DEPDIR)/libsound_la-raw.Plo
include ./$(DEPDIR)/libsound_la-sci_PlaySound.Plo
include ./$(DEPDIR)/libsound_la-sci_beep.Plo
include ./$(DEPDIR)/libsound_la-sci_loadwave.Plo
include ./$(DEPDIR)/libsound_la-sci_savewave.Plo
include ./$(DEPDIR)/libsound_la-sox.Plo
include ./$(DEPDIR)/libsound_la-wav.Plo

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

libsound_la-raw.lo: src/raw.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsound_la_CFLAGS) $(CFLAGS) -MT libsound_la-raw.lo -MD -MP -MF "$(DEPDIR)/libsound_la-raw.Tpo" -c -o libsound_la-raw.lo `test -f 'src/raw.c' || echo '$(srcdir)/'`src/raw.c; \
	then mv -f "$(DEPDIR)/libsound_la-raw.Tpo" "$(DEPDIR)/libsound_la-raw.Plo"; else rm -f "$(DEPDIR)/libsound_la-raw.Tpo"; exit 1; fi
#	source='src/raw.c' object='libsound_la-raw.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsound_la_CFLAGS) $(CFLAGS) -c -o libsound_la-raw.lo `test -f 'src/raw.c' || echo '$(srcdir)/'`src/raw.c

libsound_la-sox.lo: src/sox.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsound_la_CFLAGS) $(CFLAGS) -MT libsound_la-sox.lo -MD -MP -MF "$(DEPDIR)/libsound_la-sox.Tpo" -c -o libsound_la-sox.lo `test -f 'src/sox.c' || echo '$(srcdir)/'`src/sox.c; \
	then mv -f "$(DEPDIR)/libsound_la-sox.Tpo" "$(DEPDIR)/libsound_la-sox.Plo"; else rm -f "$(DEPDIR)/libsound_la-sox.Tpo"; exit 1; fi
#	source='src/sox.c' object='libsound_la-sox.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsound_la_CFLAGS) $(CFLAGS) -c -o libsound_la-sox.lo `test -f 'src/sox.c' || echo '$(srcdir)/'`src/sox.c

libsound_la-libst.lo: src/libst.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsound_la_CFLAGS) $(CFLAGS) -MT libsound_la-libst.lo -MD -MP -MF "$(DEPDIR)/libsound_la-libst.Tpo" -c -o libsound_la-libst.lo `test -f 'src/libst.c' || echo '$(srcdir)/'`src/libst.c; \
	then mv -f "$(DEPDIR)/libsound_la-libst.Tpo" "$(DEPDIR)/libsound_la-libst.Plo"; else rm -f "$(DEPDIR)/libsound_la-libst.Tpo"; exit 1; fi
#	source='src/libst.c' object='libsound_la-libst.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsound_la_CFLAGS) $(CFLAGS) -c -o libsound_la-libst.lo `test -f 'src/libst.c' || echo '$(srcdir)/'`src/libst.c

libsound_la-wav.lo: src/wav.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsound_la_CFLAGS) $(CFLAGS) -MT libsound_la-wav.lo -MD -MP -MF "$(DEPDIR)/libsound_la-wav.Tpo" -c -o libsound_la-wav.lo `test -f 'src/wav.c' || echo '$(srcdir)/'`src/wav.c; \
	then mv -f "$(DEPDIR)/libsound_la-wav.Tpo" "$(DEPDIR)/libsound_la-wav.Plo"; else rm -f "$(DEPDIR)/libsound_la-wav.Tpo"; exit 1; fi
#	source='src/wav.c' object='libsound_la-wav.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsound_la_CFLAGS) $(CFLAGS) -c -o libsound_la-wav.lo `test -f 'src/wav.c' || echo '$(srcdir)/'`src/wav.c

libsound_la-misc.lo: src/misc.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsound_la_CFLAGS) $(CFLAGS) -MT libsound_la-misc.lo -MD -MP -MF "$(DEPDIR)/libsound_la-misc.Tpo" -c -o libsound_la-misc.lo `test -f 'src/misc.c' || echo '$(srcdir)/'`src/misc.c; \
	then mv -f "$(DEPDIR)/libsound_la-misc.Tpo" "$(DEPDIR)/libsound_la-misc.Plo"; else rm -f "$(DEPDIR)/libsound_la-misc.Tpo"; exit 1; fi
#	source='src/misc.c' object='libsound_la-misc.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsound_la_CFLAGS) $(CFLAGS) -c -o libsound_la-misc.lo `test -f 'src/misc.c' || echo '$(srcdir)/'`src/misc.c

libsound_la-sci_savewave.lo: sci_gateway/sci_savewave.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsound_la_CFLAGS) $(CFLAGS) -MT libsound_la-sci_savewave.lo -MD -MP -MF "$(DEPDIR)/libsound_la-sci_savewave.Tpo" -c -o libsound_la-sci_savewave.lo `test -f 'sci_gateway/sci_savewave.c' || echo '$(srcdir)/'`sci_gateway/sci_savewave.c; \
	then mv -f "$(DEPDIR)/libsound_la-sci_savewave.Tpo" "$(DEPDIR)/libsound_la-sci_savewave.Plo"; else rm -f "$(DEPDIR)/libsound_la-sci_savewave.Tpo"; exit 1; fi
#	source='sci_gateway/sci_savewave.c' object='libsound_la-sci_savewave.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsound_la_CFLAGS) $(CFLAGS) -c -o libsound_la-sci_savewave.lo `test -f 'sci_gateway/sci_savewave.c' || echo '$(srcdir)/'`sci_gateway/sci_savewave.c

libsound_la-sci_loadwave.lo: sci_gateway/sci_loadwave.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsound_la_CFLAGS) $(CFLAGS) -MT libsound_la-sci_loadwave.lo -MD -MP -MF "$(DEPDIR)/libsound_la-sci_loadwave.Tpo" -c -o libsound_la-sci_loadwave.lo `test -f 'sci_gateway/sci_loadwave.c' || echo '$(srcdir)/'`sci_gateway/sci_loadwave.c; \
	then mv -f "$(DEPDIR)/libsound_la-sci_loadwave.Tpo" "$(DEPDIR)/libsound_la-sci_loadwave.Plo"; else rm -f "$(DEPDIR)/libsound_la-sci_loadwave.Tpo"; exit 1; fi
#	source='sci_gateway/sci_loadwave.c' object='libsound_la-sci_loadwave.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsound_la_CFLAGS) $(CFLAGS) -c -o libsound_la-sci_loadwave.lo `test -f 'sci_gateway/sci_loadwave.c' || echo '$(srcdir)/'`sci_gateway/sci_loadwave.c

libsound_la-gw_sound.lo: sci_gateway/gw_sound.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsound_la_CFLAGS) $(CFLAGS) -MT libsound_la-gw_sound.lo -MD -MP -MF "$(DEPDIR)/libsound_la-gw_sound.Tpo" -c -o libsound_la-gw_sound.lo `test -f 'sci_gateway/gw_sound.c' || echo '$(srcdir)/'`sci_gateway/gw_sound.c; \
	then mv -f "$(DEPDIR)/libsound_la-gw_sound.Tpo" "$(DEPDIR)/libsound_la-gw_sound.Plo"; else rm -f "$(DEPDIR)/libsound_la-gw_sound.Tpo"; exit 1; fi
#	source='sci_gateway/gw_sound.c' object='libsound_la-gw_sound.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsound_la_CFLAGS) $(CFLAGS) -c -o libsound_la-gw_sound.lo `test -f 'sci_gateway/gw_sound.c' || echo '$(srcdir)/'`sci_gateway/gw_sound.c

libsound_la-sci_beep.lo: sci_gateway/sci_beep.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsound_la_CFLAGS) $(CFLAGS) -MT libsound_la-sci_beep.lo -MD -MP -MF "$(DEPDIR)/libsound_la-sci_beep.Tpo" -c -o libsound_la-sci_beep.lo `test -f 'sci_gateway/sci_beep.c' || echo '$(srcdir)/'`sci_gateway/sci_beep.c; \
	then mv -f "$(DEPDIR)/libsound_la-sci_beep.Tpo" "$(DEPDIR)/libsound_la-sci_beep.Plo"; else rm -f "$(DEPDIR)/libsound_la-sci_beep.Tpo"; exit 1; fi
#	source='sci_gateway/sci_beep.c' object='libsound_la-sci_beep.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsound_la_CFLAGS) $(CFLAGS) -c -o libsound_la-sci_beep.lo `test -f 'sci_gateway/sci_beep.c' || echo '$(srcdir)/'`sci_gateway/sci_beep.c

libsound_la-sci_PlaySound.lo: sci_gateway/sci_PlaySound.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsound_la_CFLAGS) $(CFLAGS) -MT libsound_la-sci_PlaySound.lo -MD -MP -MF "$(DEPDIR)/libsound_la-sci_PlaySound.Tpo" -c -o libsound_la-sci_PlaySound.lo `test -f 'sci_gateway/sci_PlaySound.c' || echo '$(srcdir)/'`sci_gateway/sci_PlaySound.c; \
	then mv -f "$(DEPDIR)/libsound_la-sci_PlaySound.Tpo" "$(DEPDIR)/libsound_la-sci_PlaySound.Plo"; else rm -f "$(DEPDIR)/libsound_la-sci_PlaySound.Tpo"; exit 1; fi
#	source='sci_gateway/sci_PlaySound.c' object='libsound_la-sci_PlaySound.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsound_la_CFLAGS) $(CFLAGS) -c -o libsound_la-sci_PlaySound.lo `test -f 'sci_gateway/sci_PlaySound.c' || echo '$(srcdir)/'`sci_gateway/sci_PlaySound.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:
install-libsound_la_includeHEADERS: $(libsound_la_include_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(libsound_la_includedir)" || $(mkdir_p) "$(DESTDIR)$(libsound_la_includedir)"
	@list='$(libsound_la_include_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(libsound_la_includeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(libsound_la_includedir)/$$f'"; \
	  $(libsound_la_includeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(libsound_la_includedir)/$$f"; \
	done

uninstall-libsound_la_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(libsound_la_include_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(libsound_la_includedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(libsound_la_includedir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(mkdir_p) $(distdir)/includes
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(libsound_la_includedir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-libsound_la_includeHEADERS

install-exec-am: install-libLTLIBRARIES

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am uninstall-libLTLIBRARIES \
	uninstall-libsound_la_includeHEADERS

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-exec \
	install-exec-am install-info install-info-am \
	install-libLTLIBRARIES install-libsound_la_includeHEADERS \
	install-man install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-info-am uninstall-libLTLIBRARIES \
	uninstall-libsound_la_includeHEADERS

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
