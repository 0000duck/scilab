/* Generated by GIWS (version 1.0) */
/*

Copyright 2007 INRIA

Author : Sylvestre Ledru

This software is a computer program whose purpose is to hide the complexity
of accessing Java objects/methods from C++ code.

This software is governed by the CeCILL-B license under French law and
abiding by the rules of distribution of free software.  You can  use, 
modify and/ or redistribute the software under the terms of the CeCILL-B
license as circulated by CEA, CNRS and INRIA at the following URL
"http://www.cecill.info". 

As a counterpart to the access to the source code and  rights to copy,
modify and redistribute granted by the license, users are provided only
with a limited warranty  and the software's author,  the holder of the
economic rights,  and the successive licensors  have only  limited
liability. 

In this respect, the user's attention is drawn to the risks associated
with loading,  using,  modifying and/or developing or reproducing the
software by the user in light of its specific status of free software,
that may mean  that it is complicated to manipulate,  and  that  also
therefore means  that it is reserved for developers  and  experienced
professionals having in-depth computer knowledge. Users are therefore
encouraged to load and test the software's suitability as regards their
requirements in conditions enabling the security of their systems and/or 
data to be ensured and,  more generally, to use and operate it in the 
same conditions as regards security. 

The fact that you are presently reading this means that you have had
knowledge of the CeCILL-B license and that you accept its terms.
*/


#ifndef __ORG_SCILAB_MODULES_GUI_BRIDGE_CALLSCILABBRIDGE__
#define __ORG_SCILAB_MODULES_GUI_BRIDGE_CALLSCILABBRIDGE__
#include <iostream>
#include <string>
#include <string.h>
#include <stdlib.h>
#include <jni.h>

namespace org_scilab_modules_gui_bridge {

class CallScilabBridge {
private:
JavaVM * jvm;
jobject instance;

jclass instanceClass; // cache class
jmethodID jintnewWindowID; // cache method id
jmethodID jintnewMenuBarID; // cache method id
jmethodID jintnewMenuID; // cache method id
jmethodID jintnewPushButtonID; // cache method id
jmethodID jintnewEditBoxID; // cache method id
jmethodID jintnewLabelID; // cache method id
jmethodID jintnewCheckBoxID; // cache method id
jmethodID jintnewRadioButtonID; // cache method id
jmethodID jintnewSliderID; // cache method id
jmethodID jintnewPopupMenuID; // cache method id
jmethodID jintnewListBoxID; // cache method id
jmethodID jintnewFrameID; // cache method id
jmethodID voidsetFigureAsParentjintjintID; // cache method id
jmethodID voidsetMenuAsParentjintjintID; // cache method id
jmethodID voidsetRootAsParentjintID; // cache method id
jmethodID voidsetParentjintjintID; // cache method id
jmethodID voidsetPushButtonParentjintjintID; // cache method id
jmethodID voidsetEditBoxParentjintjintID; // cache method id
jmethodID voidsetLabelParentjintjintID; // cache method id
jmethodID voidsetCheckBoxParentjintjintID; // cache method id
jmethodID voidsetRadioButtonParentjintjintID; // cache method id
jmethodID voidsetSliderParentjintjintID; // cache method id
jmethodID voidsetPopupMenuParentjintjintID; // cache method id
jmethodID voidsetListBoxParentjintjintID; // cache method id
jmethodID voidsetFrameParentjintjintID; // cache method id
jmethodID voidsetWidgetTextjintjstringID; // cache method id
jmethodID jstringgetWidgetTextjintID; // cache method id
jmethodID voidsetFrameTextjintjstringID; // cache method id
jmethodID jstringgetFrameTextjintID; // cache method id
jmethodID voidsetWidgetBackgroundColorjintjintjintjintID; // cache method id
jmethodID jintArraygetWidgetBackgroundColorjintID; // cache method id
jmethodID voidsetWidgetForegroundColorjintjintjintjintID; // cache method id
jmethodID jintArraygetWidgetForegroundColorjintID; // cache method id
jmethodID voidsetFrameBackgroundColorjintjintjintjintID; // cache method id
jmethodID jintArraygetFrameBackgroundColorjintID; // cache method id
jmethodID voidsetFrameForegroundColorjintjintjintjintID; // cache method id
jmethodID jintArraygetFrameForegroundColorjintID; // cache method id
jmethodID voidsetWidgetFontWeightjintjstringID; // cache method id
jmethodID voidsetWidgetFontSizejintjintID; // cache method id
jmethodID jintgetWidgetFontSizejintID; // cache method id
jmethodID voidsetWidgetFontAnglejintjstringID; // cache method id
jmethodID voidsetFrameFontWeightjintjstringID; // cache method id
jmethodID voidsetFrameFontSizejintjintID; // cache method id
jmethodID jintgetFrameFontSizejintID; // cache method id
jmethodID voidsetFrameFontAnglejintjstringID; // cache method id
jmethodID voidsetWidgetPositionjintjintjintjintjintID; // cache method id
jmethodID jintArraygetWidgetPositionjintID; // cache method id
jmethodID voidsetFramePositionjintjintjintjintjintID; // cache method id
jmethodID jintArraygetFramePositionjintID; // cache method id
jmethodID voidsetWidgetCallbackjintjstringjintID; // cache method id
jmethodID jstringgetWidgetCallbackjintID; // cache method id
jmethodID voidsetFrameCallbackjintjstringjintID; // cache method id
jmethodID jstringgetFrameCallbackjintID; // cache method id
jmethodID voidsetWidgetHorizontalAlignmentjintjstringID; // cache method id
jmethodID voidsetWidgetVerticalAlignmentjintjstringID; // cache method id
jmethodID voidsetSliderMinorTickSpacingjintjintID; // cache method id
jmethodID voidsetSliderMajorTickSpacingjintjintID; // cache method id
jmethodID voidsetListBoxSelectedIndicesjintjintArrayID; // cache method id
jmethodID jintArraygetListBoxSelectedIndicesjintID; // cache method id
jmethodID jintgetListBoxSelectionSizejintID; // cache method id
jmethodID voidsetPopupMenuSelectedIndexjintjintID; // cache method id
jmethodID jintgetPopupMenuSelectedIndexjintID; // cache method id
jmethodID voidsetSliderValuejintjintID; // cache method id
jmethodID jintgetSliderValuejintID; // cache method id
jmethodID voidsetRadioButtonCheckedjintjbooleanID; // cache method id
jmethodID jbooleanisRadioButtonCheckedjintID; // cache method id
jmethodID voidsetCheckBoxCheckedjintjbooleanID; // cache method id
jmethodID jbooleanisCheckBoxCheckedjintID; // cache method id
jmethodID voidsetSliderMinValuejintjintID; // cache method id
jmethodID voidsetSliderMaxValuejintjintID; // cache method id
jmethodID voidsetListBoxMultipleSelectionEnabledjintjbooleanID; // cache method id
jmethodID jobjectArraygetListBoxAllItemsTextjintID; // cache method id
jmethodID jintgetListBoxNumberOfItemsjintID; // cache method id
jmethodID voidsetListBoxTextjintjobjectArrayID; // cache method id
jclass stringArrayClass;
jmethodID jobjectArraygetPopupMenuAllItemsTextjintID; // cache method id
jmethodID jintgetPopupMenuNumberOfItemsjintID; // cache method id
jmethodID voidsetPopupMenuTextjintjobjectArrayID; // cache method id
jmethodID voidsetWidgetReliefjintjstringID; // cache method id
jmethodID voidsetFrameReliefjintjstringID; // cache method id
jmethodID voidsetRootMenuEnabledjstringjbooleanID; // cache method id
jmethodID voidsetFigureMenuEnabledjintjstringjbooleanID; // cache method id
jmethodID voidremoveRootMenujstringID; // cache method id
jmethodID voidremoveFigureMenujintjstringID; // cache method id
jmethodID jintnewFileChooserID; // cache method id
jmethodID voidsetFileChooserTitlejintjstringID; // cache method id
jmethodID voidsetFileChooserInitialDirectoryjintjstringID; // cache method id
jmethodID voidsetFileChooserMaskjintjstringID; // cache method id
jmethodID voidfileChooserDisplayAndWaitjintID; // cache method id
jmethodID jintgetFileChooserSelectionSizejintID; // cache method id
jmethodID jobjectArraygetFileChooserSelectionjintID; // cache method id
jmethodID voidsetFileChooserDirectorySelectionOnlyjintID; // cache method id
jmethodID voidsetFileChooserFileSelectionOnlyjintID; // cache method id


/**
* Get the environment matching to the current thread.
*/
JNIEnv * getCurrentEnv();

public:
// Constructor
/**
* Create a wrapping of the object from a JNIEnv.
* It will call the default constructor
* @param JEnv_ the Java Env
*/
CallScilabBridge(JavaVM * jvm_);
/**
* Create a wrapping of an already existing object from a JNIEnv.
* The object must have already been instantiated
* @param JEnv_ the Java Env
* @param JObj the object
*/
CallScilabBridge(JavaVM * jvm_, jobject JObj);

// Destructor
~CallScilabBridge();

// Generic method
// Synchronization methods
/**
* Enter monitor associated with the object.
* Equivalent of creating a "synchronized(obj)" scope in Java.
*/
void synchronize();

/**
* Exit monitor associated with the object.
* Equivalent of ending a "synchronized(obj)" scope.
*/
void endSynchronize();

// Methods
static long newWindow(JavaVM * jvm_);

static long newMenuBar(JavaVM * jvm_);

static long newMenu(JavaVM * jvm_);

static long newPushButton(JavaVM * jvm_);

static long newEditBox(JavaVM * jvm_);

static long newLabel(JavaVM * jvm_);

static long newCheckBox(JavaVM * jvm_);

static long newRadioButton(JavaVM * jvm_);

static long newSlider(JavaVM * jvm_);

static long newPopupMenu(JavaVM * jvm_);

static long newListBox(JavaVM * jvm_);

static long newFrame(JavaVM * jvm_);

static void setFigureAsParent(JavaVM * jvm_, long figureID, long objID);

static void setMenuAsParent(JavaVM * jvm_, long menuID, long objID);

static void setRootAsParent(JavaVM * jvm_, long objID);

static void setParent(JavaVM * jvm_, long parentID, long objID);

static void setPushButtonParent(JavaVM * jvm_, long parentID, long objID);

static void setEditBoxParent(JavaVM * jvm_, long parentID, long objID);

static void setLabelParent(JavaVM * jvm_, long parentID, long objID);

static void setCheckBoxParent(JavaVM * jvm_, long parentID, long objID);

static void setRadioButtonParent(JavaVM * jvm_, long parentID, long objID);

static void setSliderParent(JavaVM * jvm_, long parentID, long objID);

static void setPopupMenuParent(JavaVM * jvm_, long parentID, long objID);

static void setListBoxParent(JavaVM * jvm_, long parentID, long objID);

static void setFrameParent(JavaVM * jvm_, long parentID, long objID);

static void setWidgetText(JavaVM * jvm_, long objID, char * text);

static char * getWidgetText(JavaVM * jvm_, long objID);

static void setFrameText(JavaVM * jvm_, long objID, char * text);

static char * getFrameText(JavaVM * jvm_, long objID);

static void setWidgetBackgroundColor(JavaVM * jvm_, long objID, long red, long green, long blue);

static long * getWidgetBackgroundColor(JavaVM * jvm_, long objID);

static void setWidgetForegroundColor(JavaVM * jvm_, long objID, long red, long green, long blue);

static long * getWidgetForegroundColor(JavaVM * jvm_, long objID);

static void setFrameBackgroundColor(JavaVM * jvm_, long objID, long red, long green, long blue);

static long * getFrameBackgroundColor(JavaVM * jvm_, long objID);

static void setFrameForegroundColor(JavaVM * jvm_, long objID, long red, long green, long blue);

static long * getFrameForegroundColor(JavaVM * jvm_, long objID);

static void setWidgetFontWeight(JavaVM * jvm_, long objID, char * weight);

static void setWidgetFontSize(JavaVM * jvm_, long objID, long size);

static long getWidgetFontSize(JavaVM * jvm_, long objID);

static void setWidgetFontAngle(JavaVM * jvm_, long objID, char * angle);

static void setFrameFontWeight(JavaVM * jvm_, long objID, char * weight);

static void setFrameFontSize(JavaVM * jvm_, long objID, long size);

static long getFrameFontSize(JavaVM * jvm_, long objID);

static void setFrameFontAngle(JavaVM * jvm_, long objID, char * angle);

static void setWidgetPosition(JavaVM * jvm_, long objID, long x, long y, long width, long height);

static long * getWidgetPosition(JavaVM * jvm_, long objID);

static void setFramePosition(JavaVM * jvm_, long objID, long x, long y, long width, long height);

static long * getFramePosition(JavaVM * jvm_, long objID);

static void setWidgetCallback(JavaVM * jvm_, long objID, char * text, long type);

static char * getWidgetCallback(JavaVM * jvm_, long objID);

static void setFrameCallback(JavaVM * jvm_, long objID, char * text, long type);

static char * getFrameCallback(JavaVM * jvm_, long objID);

static void setWidgetHorizontalAlignment(JavaVM * jvm_, long objID, char * alignment);

static void setWidgetVerticalAlignment(JavaVM * jvm_, long objID, char * alignment);

static void setSliderMinorTickSpacing(JavaVM * jvm_, long objID, long space);

static void setSliderMajorTickSpacing(JavaVM * jvm_, long objID, long space);

static void setListBoxSelectedIndices(JavaVM * jvm_, long objID, long * indices, int indicesSize);

static long * getListBoxSelectedIndices(JavaVM * jvm_, long objID);

static long getListBoxSelectionSize(JavaVM * jvm_, long objID);

static void setPopupMenuSelectedIndex(JavaVM * jvm_, long objID, long index);

static long getPopupMenuSelectedIndex(JavaVM * jvm_, long objID);

static void setSliderValue(JavaVM * jvm_, long objID, long index);

static long getSliderValue(JavaVM * jvm_, long objID);

static void setRadioButtonChecked(JavaVM * jvm_, long objID, bool status);

static bool isRadioButtonChecked(JavaVM * jvm_, long objID);

static void setCheckBoxChecked(JavaVM * jvm_, long objID, bool status);

static bool isCheckBoxChecked(JavaVM * jvm_, long objID);

static void setSliderMinValue(JavaVM * jvm_, long objID, long value);

static void setSliderMaxValue(JavaVM * jvm_, long objID, long value);

static void setListBoxMultipleSelectionEnabled(JavaVM * jvm_, long objID, bool status);

static char ** getListBoxAllItemsText(JavaVM * jvm_, long objID);

static long getListBoxNumberOfItems(JavaVM * jvm_, long objID);

static void setListBoxText(JavaVM * jvm_, long objID, char ** text, int textSize);

static char ** getPopupMenuAllItemsText(JavaVM * jvm_, long objID);

static long getPopupMenuNumberOfItems(JavaVM * jvm_, long objID);

static void setPopupMenuText(JavaVM * jvm_, long objID, char ** text, int textSize);

static void setWidgetRelief(JavaVM * jvm_, long objID, char * reliefType);

static void setFrameRelief(JavaVM * jvm_, long objID, char * reliefType);

static void setRootMenuEnabled(JavaVM * jvm_, char * menuName, bool status);

static void setFigureMenuEnabled(JavaVM * jvm_, long figureID, char * menuName, bool status);

static void removeRootMenu(JavaVM * jvm_, char * menuName);

static void removeFigureMenu(JavaVM * jvm_, long figureID, char * menuName);

static long newFileChooser(JavaVM * jvm_);

static void setFileChooserTitle(JavaVM * jvm_, long id, char * title);

static void setFileChooserInitialDirectory(JavaVM * jvm_, long id, char * path);

static void setFileChooserMask(JavaVM * jvm_, long id, char * mask);

static void fileChooserDisplayAndWait(JavaVM * jvm_, long id);

static long getFileChooserSelectionSize(JavaVM * jvm_, long id);

static char ** getFileChooserSelection(JavaVM * jvm_, long id);

static void setFileChooserDirectorySelectionOnly(JavaVM * jvm_, long id);

static void setFileChooserFileSelectionOnly(JavaVM * jvm_, long id);


                        /**
                        * Get class name to use for static methods
                        * @return class name to use for static methods
                        */
                        
                static const std::string className()
                {
                return "org/scilab/modules/gui/bridge/CallScilabBridge";
                }
                
};


}
#endif
