# Makefile.in generated by automake 1.9.6 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

##########
### Sylvestre Ledru <sylvestre.ledru@inria.fr>
### INRIA - Scilab 2006 
##########

##########
### Sylvestre Ledru <sylvestre.ledru@inria.fr>
### INRIA - Scilab 2006/2007
### 
### Makefile included stuff
### Target, variable, suffixes which are supposed to be usefull in every makefile.am
##########



srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ../..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
DIST_COMMON = $(libjavasci_la_include_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(top_srcdir)/Makefile.incl.am
subdir = modules/javasci
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/fftw.m4 \
	$(top_srcdir)/m4/fortran.m4 $(top_srcdir)/m4/intel_compiler.m4 \
	$(top_srcdir)/m4/java.m4 $(top_srcdir)/m4/libs_by_debian.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/libxml2.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/mpi.m4 \
	$(top_srcdir)/m4/ocaml.m4 $(top_srcdir)/m4/pcre.m4 \
	$(top_srcdir)/m4/pvm.m4 $(top_srcdir)/m4/sciman.m4 \
	$(top_srcdir)/m4/tcltk.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/modules/core/includes/machine.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(pkglibdir)" \
	"$(DESTDIR)$(libjavasci_la_etcdir)" \
	"$(DESTDIR)$(libjavasci_la_rootdir)" \
	"$(DESTDIR)$(libjavasci_la_includedir)"
pkglibLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(pkglib_LTLIBRARIES)
libjavasci_la_DEPENDENCIES =  \
	$(top_builddir)/libs/MALLOC/libscimalloc.la \
	$(top_builddir)/modules/libscilab.la
am__objects_1 = libjavasci_la-javasci_Scilab2.lo \
	libjavasci_la-javasci_globals.lo \
	libjavasci_la-javasci_SciAbstractArray.lo \
	libjavasci_la-javasci_SciStringArray.lo \
	libjavasci_la-javasci_SciComplexArray.lo libjavasci_la-fix.lo \
	libjavasci_la-javasci_SciDoubleArray.lo \
	libjavasci_la-javasci_Scilab.lo \
	libjavasci_la-javasci_SciBooleanArray.lo
am_libjavasci_la_OBJECTS = $(am__objects_1)
libjavasci_la_OBJECTS = $(am_libjavasci_la_OBJECTS)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)/modules/core/includes
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libjavasci_la_SOURCES)
DIST_SOURCES = $(libjavasci_la_SOURCES)
libjavasci_la_etcDATA_INSTALL = $(INSTALL_DATA)
libjavasci_la_rootDATA_INSTALL = $(INSTALL_DATA)
DATA = $(libjavasci_la_etc_DATA) $(libjavasci_la_root_DATA)
libjavasci_la_includeHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(libjavasci_la_include_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
FFTW3_LIB = @FFTW3_LIB@
FFTW_FALSE = @FFTW_FALSE@
FFTW_TRUE = @FFTW_TRUE@
FGREP = @FGREP@
GREP = @GREP@
GUI_WIN32_FALSE = @GUI_WIN32_FALSE@
GUI_WIN32_TRUE = @GUI_WIN32_TRUE@
GUI_X11_FALSE = @GUI_X11_FALSE@
GUI_X11_TRUE = @GUI_X11_TRUE@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_HELP_XML_FALSE = @INSTALL_HELP_XML_FALSE@
INSTALL_HELP_XML_TRUE = @INSTALL_HELP_XML_TRUE@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
IS_HPUX_FALSE = @IS_HPUX_FALSE@
IS_HPUX_TRUE = @IS_HPUX_TRUE@
IS_MIPS_SGI_IRIX_FALSE = @IS_MIPS_SGI_IRIX_FALSE@
IS_MIPS_SGI_IRIX_TRUE = @IS_MIPS_SGI_IRIX_TRUE@
IS_SPARC_FALSE = @IS_SPARC_FALSE@
IS_SPARC_TRUE = @IS_SPARC_TRUE@
JAR = @JAR@
JAVA = @JAVA@
JAVAC = @JAVAC@
JAVAH = @JAVAH@
JAVA_FALSE = @JAVA_FALSE@
JAVA_G = @JAVA_G@
JAVA_HOME = @JAVA_HOME@
JAVA_JNI_INCLUDE = @JAVA_JNI_INCLUDE@
JAVA_JNI_LIBS = @JAVA_JNI_LIBS@
JAVA_TRUE = @JAVA_TRUE@
JDB = @JDB@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAINTAINER_MODE_FALSE = @MAINTAINER_MODE_FALSE@
MAINTAINER_MODE_TRUE = @MAINTAINER_MODE_TRUE@
MAKEINFO = @MAKEINFO@
MANGENERATOR = @MANGENERATOR@
MPICC = @MPICC@
MPILIBS = @MPILIBS@
MPI_FALSE = @MPI_FALSE@
MPI_TRUE = @MPI_TRUE@
NM = @NM@
OBJEXT = @OBJEXT@
OCAMLC = @OCAMLC@
OCAMLDEP = @OCAMLDEP@
OCAMLOPT = @OCAMLOPT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PCRE_CONFIG = @PCRE_CONFIG@
PCRE_FLAGS = @PCRE_FLAGS@
PCRE_LIBS = @PCRE_LIBS@
POW_LIB = @POW_LIB@
PVMARCH = @PVMARCH@
PVMGETARCH = @PVMGETARCH@
PVM_FALSE = @PVM_FALSE@
PVM_INCLUDE = @PVM_INCLUDE@
PVM_LIB = @PVM_LIB@
PVM_TRUE = @PVM_TRUE@
RANLIB = @RANLIB@
SCICOS_FALSE = @SCICOS_FALSE@
SCICOS_TRUE = @SCICOS_TRUE@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRINGV2_FALSE = @STRINGV2_FALSE@
STRINGV2_TRUE = @STRINGV2_TRUE@
STRIP = @STRIP@
TCLTK_LIBS = @TCLTK_LIBS@
TCL_INC_PATH = @TCL_INC_PATH@
TERMCAP_LIB = @TERMCAP_LIB@
TERM_VTE_FALSE = @TERM_VTE_FALSE@
TERM_VTE_TRUE = @TERM_VTE_TRUE@
TERM_ZTERM_FALSE = @TERM_ZTERM_FALSE@
TERM_ZTERM_TRUE = @TERM_ZTERM_TRUE@
TK_INC_PATH = @TK_INC_PATH@
VERSION = @VERSION@
WITH = @WITH@
WITH_OCAML = @WITH_OCAML@
XMKMF = @XMKMF@
XML_CONFIG = @XML_CONFIG@
XML_FLAGS = @XML_FLAGS@
XML_LIBS = @XML_LIBS@
X_CFLAGS = @X_CFLAGS@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_LIBS = @X_LIBS@
X_PRE_LIBS = @X_PRE_LIBS@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
ac_ct_F77 = @ac_ct_F77@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@

# Where all the Scilab stuff is installed (macros, help, ...)
datadir = ${datarootdir}/scilab/modules
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
lt_ECHO = @lt_ECHO@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
tcldir = @tcldir@

# Where headers (*.h) are installed (usually /usr/include/scilab/)
sciincludedir = ${includedir}/scilab

#SUFFIXES = .xml .sci .htm
SUFFIXES = .sci .java .class .jar

########################### JAVA ######################################
#### We had to create those rules because autotools does NOT provide
#### a kind of mechanism like C or Fortran sources :
#### libsciboolean_la_SOURCES = plop.c plip.f 
####
#### It is why those rules exist.
#######################################################################

# Replace all the .java by .class in JAVAFILES
CLASSFILES = $(JAVAFILES:.java=.class)
# Create path without src/java and rename .java  by .class (needed by the jar 
# creation)
CLASSFILESRELATIVE = `echo "$(JAVAFILES)"| sed -e 's|src/java/||g'|sed -e 's|\.java|\.class|g'`
BUILT_SOURCES = $(CLASSFILES) $(JARFILE)
CLEANFILES = $(CLASSFILES)

########### INSTALL DOCUMENTATION ###################
# Install HTML files into the right target
# We do not use the automake mechanism (libxxxx_la_help_fr_DATA) because
# automake needs the html files to be present which is not the case when
# we are building Scilab

# Where it should be installed
pkgdocdir = $(target)
# Which directories we have to install
DOCDIRS = help/fr_FR help/en_US
# What is the mask of the help output
DOCMASK = *.htm
# What is the mask of the help source
DOCMASKXML = *.xml

########### INSTALL DATA ###################
# Install macros
# Where it should be installed
pkgmacrosdir = $(target)
# Which directory we process
MACRODIRS = macros/
# Mask of the Scilab sources macros
MACROMASK = *.sci
# Mask of the Scilab executable sources macros
MACROBUILDMASK = *.sce
# Mask of the Scilab compiled macros
MACROBINMASK = *.bin
# List of the function of a module
FUNCTION_NAMES = macros/names
# Localisation directory name
LOCALISATIONDIRS = languages/fr_FR/ languages/en_US/
# List of the localisation (languages) files
LOCALISATIONFILES = errors.xml menus.xml messages.xml

#### Target ######
target = $(datadir)/javasci

#### Java sources ####
JAVAFILES = src/java/javasci/Scilab.java \
	src/java/javasci/BadDataArgumentException.java \
	src/java/javasci/SciAbstractArray.java \
	src/java/javasci/SciAbstractDataType.java \
	src/java/javasci/SciDoubleArray.java \
	src/java/javasci/SciBooleanArray.java \
	src/java/javasci/SciDouble.java \
	src/java/javasci/SciBoolean.java \
	src/java/javasci/SciComplexArray.java \
	src/java/javasci/SciStringArray.java \
	src/java/javasci/SciComplex.java \
	src/java/javasci/SciString.java


#### Where are the sources (mandatory) ####
CLASSPATH = src/java/

#### javasci : jar file #### 
JARFILE = javasci.jar

#### Javasci : sources ####
JAVASCI_C_SOURCES = src/c/javasci_Scilab2.c \
src/c/javasci_globals.c \
src/c/javasci_SciAbstractArray.c \
src/c/javasci_SciStringArray.c \
src/c/javasci_SciComplexArray.c \
src/c/fix.c \
src/c/javasci_SciDoubleArray.c \
src/c/javasci_Scilab.c \
src/c/javasci_SciBooleanArray.c

pkglib_LTLIBRARIES = libjavasci.la
libjavasci_la_SOURCES = $(JAVASCI_C_SOURCES)
libjavasci_la_CFLAGS = -Iincludes/ $(JAVA_JNI_INCLUDE)
libjavasci_la_LIBADD = \
	$(top_builddir)/libs/MALLOC/libscimalloc.la \
	$(top_builddir)/modules/libscilab.la


#### javasci : Conf files ####
libjavasci_la_rootdir = $(target)
libjavasci_la_root_DATA = changelog.txt licence.txt readme.txt VERSION

#### javasci : init scripts #### 
libjavasci_la_etcdir = $(target)/etc
libjavasci_la_etc_DATA = etc/javasci.quit etc/javasci.start

#### javasci : include files ####
libjavasci_la_includedir = $(sciincludedir)/javasci
libjavasci_la_include_HEADERS = includes/javasci_Scilab.h \
includes/javasci_Scilab2.h \
includes/javasci_globals.h \
includes/javasci_SciStringArray.h \
includes/javasci_SciComplexArray.h \
includes/javasci_SciDoubleArray.h \
includes/javasci_SciBooleanArray.h \
includes/javasci_SciAbstractArray.h

all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .sci .java .class .jar .bin .c .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am $(top_srcdir)/Makefile.incl.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  modules/javasci/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  modules/javasci/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-pkglibLTLIBRARIES: $(pkglib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(pkglibdir)" || $(mkdir_p) "$(DESTDIR)$(pkglibdir)"
	@list='$(pkglib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) --mode=install $(pkglibLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(pkglibdir)/$$f'"; \
	    $(LIBTOOL) --mode=install $(pkglibLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(pkglibdir)/$$f"; \
	  else :; fi; \
	done

uninstall-pkglibLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@set -x; list='$(pkglib_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) --mode=uninstall rm -f '$(DESTDIR)$(pkglibdir)/$$p'"; \
	  $(LIBTOOL) --mode=uninstall rm -f "$(DESTDIR)$(pkglibdir)/$$p"; \
	done

clean-pkglibLTLIBRARIES:
	-test -z "$(pkglib_LTLIBRARIES)" || rm -f $(pkglib_LTLIBRARIES)
	@list='$(pkglib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libjavasci.la: $(libjavasci_la_OBJECTS) $(libjavasci_la_DEPENDENCIES) 
	$(LINK) -rpath $(pkglibdir) $(libjavasci_la_LDFLAGS) $(libjavasci_la_OBJECTS) $(libjavasci_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libjavasci_la-fix.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libjavasci_la-javasci_SciAbstractArray.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libjavasci_la-javasci_SciBooleanArray.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libjavasci_la-javasci_SciComplexArray.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libjavasci_la-javasci_SciDoubleArray.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libjavasci_la-javasci_SciStringArray.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libjavasci_la-javasci_Scilab.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libjavasci_la-javasci_Scilab2.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libjavasci_la-javasci_globals.Plo@am__quote@

.c.o:
@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ $<

libjavasci_la-javasci_Scilab2.lo: src/c/javasci_Scilab2.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjavasci_la_CFLAGS) $(CFLAGS) -MT libjavasci_la-javasci_Scilab2.lo -MD -MP -MF "$(DEPDIR)/libjavasci_la-javasci_Scilab2.Tpo" -c -o libjavasci_la-javasci_Scilab2.lo `test -f 'src/c/javasci_Scilab2.c' || echo '$(srcdir)/'`src/c/javasci_Scilab2.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libjavasci_la-javasci_Scilab2.Tpo" "$(DEPDIR)/libjavasci_la-javasci_Scilab2.Plo"; else rm -f "$(DEPDIR)/libjavasci_la-javasci_Scilab2.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src/c/javasci_Scilab2.c' object='libjavasci_la-javasci_Scilab2.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjavasci_la_CFLAGS) $(CFLAGS) -c -o libjavasci_la-javasci_Scilab2.lo `test -f 'src/c/javasci_Scilab2.c' || echo '$(srcdir)/'`src/c/javasci_Scilab2.c

libjavasci_la-javasci_globals.lo: src/c/javasci_globals.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjavasci_la_CFLAGS) $(CFLAGS) -MT libjavasci_la-javasci_globals.lo -MD -MP -MF "$(DEPDIR)/libjavasci_la-javasci_globals.Tpo" -c -o libjavasci_la-javasci_globals.lo `test -f 'src/c/javasci_globals.c' || echo '$(srcdir)/'`src/c/javasci_globals.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libjavasci_la-javasci_globals.Tpo" "$(DEPDIR)/libjavasci_la-javasci_globals.Plo"; else rm -f "$(DEPDIR)/libjavasci_la-javasci_globals.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src/c/javasci_globals.c' object='libjavasci_la-javasci_globals.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjavasci_la_CFLAGS) $(CFLAGS) -c -o libjavasci_la-javasci_globals.lo `test -f 'src/c/javasci_globals.c' || echo '$(srcdir)/'`src/c/javasci_globals.c

libjavasci_la-javasci_SciAbstractArray.lo: src/c/javasci_SciAbstractArray.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjavasci_la_CFLAGS) $(CFLAGS) -MT libjavasci_la-javasci_SciAbstractArray.lo -MD -MP -MF "$(DEPDIR)/libjavasci_la-javasci_SciAbstractArray.Tpo" -c -o libjavasci_la-javasci_SciAbstractArray.lo `test -f 'src/c/javasci_SciAbstractArray.c' || echo '$(srcdir)/'`src/c/javasci_SciAbstractArray.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libjavasci_la-javasci_SciAbstractArray.Tpo" "$(DEPDIR)/libjavasci_la-javasci_SciAbstractArray.Plo"; else rm -f "$(DEPDIR)/libjavasci_la-javasci_SciAbstractArray.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src/c/javasci_SciAbstractArray.c' object='libjavasci_la-javasci_SciAbstractArray.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjavasci_la_CFLAGS) $(CFLAGS) -c -o libjavasci_la-javasci_SciAbstractArray.lo `test -f 'src/c/javasci_SciAbstractArray.c' || echo '$(srcdir)/'`src/c/javasci_SciAbstractArray.c

libjavasci_la-javasci_SciStringArray.lo: src/c/javasci_SciStringArray.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjavasci_la_CFLAGS) $(CFLAGS) -MT libjavasci_la-javasci_SciStringArray.lo -MD -MP -MF "$(DEPDIR)/libjavasci_la-javasci_SciStringArray.Tpo" -c -o libjavasci_la-javasci_SciStringArray.lo `test -f 'src/c/javasci_SciStringArray.c' || echo '$(srcdir)/'`src/c/javasci_SciStringArray.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libjavasci_la-javasci_SciStringArray.Tpo" "$(DEPDIR)/libjavasci_la-javasci_SciStringArray.Plo"; else rm -f "$(DEPDIR)/libjavasci_la-javasci_SciStringArray.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src/c/javasci_SciStringArray.c' object='libjavasci_la-javasci_SciStringArray.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjavasci_la_CFLAGS) $(CFLAGS) -c -o libjavasci_la-javasci_SciStringArray.lo `test -f 'src/c/javasci_SciStringArray.c' || echo '$(srcdir)/'`src/c/javasci_SciStringArray.c

libjavasci_la-javasci_SciComplexArray.lo: src/c/javasci_SciComplexArray.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjavasci_la_CFLAGS) $(CFLAGS) -MT libjavasci_la-javasci_SciComplexArray.lo -MD -MP -MF "$(DEPDIR)/libjavasci_la-javasci_SciComplexArray.Tpo" -c -o libjavasci_la-javasci_SciComplexArray.lo `test -f 'src/c/javasci_SciComplexArray.c' || echo '$(srcdir)/'`src/c/javasci_SciComplexArray.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libjavasci_la-javasci_SciComplexArray.Tpo" "$(DEPDIR)/libjavasci_la-javasci_SciComplexArray.Plo"; else rm -f "$(DEPDIR)/libjavasci_la-javasci_SciComplexArray.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src/c/javasci_SciComplexArray.c' object='libjavasci_la-javasci_SciComplexArray.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjavasci_la_CFLAGS) $(CFLAGS) -c -o libjavasci_la-javasci_SciComplexArray.lo `test -f 'src/c/javasci_SciComplexArray.c' || echo '$(srcdir)/'`src/c/javasci_SciComplexArray.c

libjavasci_la-fix.lo: src/c/fix.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjavasci_la_CFLAGS) $(CFLAGS) -MT libjavasci_la-fix.lo -MD -MP -MF "$(DEPDIR)/libjavasci_la-fix.Tpo" -c -o libjavasci_la-fix.lo `test -f 'src/c/fix.c' || echo '$(srcdir)/'`src/c/fix.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libjavasci_la-fix.Tpo" "$(DEPDIR)/libjavasci_la-fix.Plo"; else rm -f "$(DEPDIR)/libjavasci_la-fix.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src/c/fix.c' object='libjavasci_la-fix.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjavasci_la_CFLAGS) $(CFLAGS) -c -o libjavasci_la-fix.lo `test -f 'src/c/fix.c' || echo '$(srcdir)/'`src/c/fix.c

libjavasci_la-javasci_SciDoubleArray.lo: src/c/javasci_SciDoubleArray.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjavasci_la_CFLAGS) $(CFLAGS) -MT libjavasci_la-javasci_SciDoubleArray.lo -MD -MP -MF "$(DEPDIR)/libjavasci_la-javasci_SciDoubleArray.Tpo" -c -o libjavasci_la-javasci_SciDoubleArray.lo `test -f 'src/c/javasci_SciDoubleArray.c' || echo '$(srcdir)/'`src/c/javasci_SciDoubleArray.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libjavasci_la-javasci_SciDoubleArray.Tpo" "$(DEPDIR)/libjavasci_la-javasci_SciDoubleArray.Plo"; else rm -f "$(DEPDIR)/libjavasci_la-javasci_SciDoubleArray.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src/c/javasci_SciDoubleArray.c' object='libjavasci_la-javasci_SciDoubleArray.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjavasci_la_CFLAGS) $(CFLAGS) -c -o libjavasci_la-javasci_SciDoubleArray.lo `test -f 'src/c/javasci_SciDoubleArray.c' || echo '$(srcdir)/'`src/c/javasci_SciDoubleArray.c

libjavasci_la-javasci_Scilab.lo: src/c/javasci_Scilab.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjavasci_la_CFLAGS) $(CFLAGS) -MT libjavasci_la-javasci_Scilab.lo -MD -MP -MF "$(DEPDIR)/libjavasci_la-javasci_Scilab.Tpo" -c -o libjavasci_la-javasci_Scilab.lo `test -f 'src/c/javasci_Scilab.c' || echo '$(srcdir)/'`src/c/javasci_Scilab.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libjavasci_la-javasci_Scilab.Tpo" "$(DEPDIR)/libjavasci_la-javasci_Scilab.Plo"; else rm -f "$(DEPDIR)/libjavasci_la-javasci_Scilab.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src/c/javasci_Scilab.c' object='libjavasci_la-javasci_Scilab.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjavasci_la_CFLAGS) $(CFLAGS) -c -o libjavasci_la-javasci_Scilab.lo `test -f 'src/c/javasci_Scilab.c' || echo '$(srcdir)/'`src/c/javasci_Scilab.c

libjavasci_la-javasci_SciBooleanArray.lo: src/c/javasci_SciBooleanArray.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjavasci_la_CFLAGS) $(CFLAGS) -MT libjavasci_la-javasci_SciBooleanArray.lo -MD -MP -MF "$(DEPDIR)/libjavasci_la-javasci_SciBooleanArray.Tpo" -c -o libjavasci_la-javasci_SciBooleanArray.lo `test -f 'src/c/javasci_SciBooleanArray.c' || echo '$(srcdir)/'`src/c/javasci_SciBooleanArray.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libjavasci_la-javasci_SciBooleanArray.Tpo" "$(DEPDIR)/libjavasci_la-javasci_SciBooleanArray.Plo"; else rm -f "$(DEPDIR)/libjavasci_la-javasci_SciBooleanArray.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src/c/javasci_SciBooleanArray.c' object='libjavasci_la-javasci_SciBooleanArray.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjavasci_la_CFLAGS) $(CFLAGS) -c -o libjavasci_la-javasci_SciBooleanArray.lo `test -f 'src/c/javasci_SciBooleanArray.c' || echo '$(srcdir)/'`src/c/javasci_SciBooleanArray.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:
install-libjavasci_la_etcDATA: $(libjavasci_la_etc_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(libjavasci_la_etcdir)" || $(mkdir_p) "$(DESTDIR)$(libjavasci_la_etcdir)"
	@list='$(libjavasci_la_etc_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(libjavasci_la_etcDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(libjavasci_la_etcdir)/$$f'"; \
	  $(libjavasci_la_etcDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(libjavasci_la_etcdir)/$$f"; \
	done

uninstall-libjavasci_la_etcDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(libjavasci_la_etc_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(libjavasci_la_etcdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(libjavasci_la_etcdir)/$$f"; \
	done
install-libjavasci_la_rootDATA: $(libjavasci_la_root_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(libjavasci_la_rootdir)" || $(mkdir_p) "$(DESTDIR)$(libjavasci_la_rootdir)"
	@list='$(libjavasci_la_root_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(libjavasci_la_rootDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(libjavasci_la_rootdir)/$$f'"; \
	  $(libjavasci_la_rootDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(libjavasci_la_rootdir)/$$f"; \
	done

uninstall-libjavasci_la_rootDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(libjavasci_la_root_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(libjavasci_la_rootdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(libjavasci_la_rootdir)/$$f"; \
	done
install-libjavasci_la_includeHEADERS: $(libjavasci_la_include_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(libjavasci_la_includedir)" || $(mkdir_p) "$(DESTDIR)$(libjavasci_la_includedir)"
	@list='$(libjavasci_la_include_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(libjavasci_la_includeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(libjavasci_la_includedir)/$$f'"; \
	  $(libjavasci_la_includeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(libjavasci_la_includedir)/$$f"; \
	done

uninstall-libjavasci_la_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(libjavasci_la_include_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(libjavasci_la_includedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(libjavasci_la_includedir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(mkdir_p) $(distdir)/../.. $(distdir)/includes
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LTLIBRARIES) $(DATA) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(pkglibdir)" "$(DESTDIR)$(libjavasci_la_etcdir)" "$(DESTDIR)$(libjavasci_la_rootdir)" "$(DESTDIR)$(libjavasci_la_includedir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-generic clean-libtool clean-local \
	clean-pkglibLTLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-data-local install-libjavasci_la_etcDATA \
	install-libjavasci_la_includeHEADERS \
	install-libjavasci_la_rootDATA

install-exec-am: install-pkglibLTLIBRARIES

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am uninstall-libjavasci_la_etcDATA \
	uninstall-libjavasci_la_includeHEADERS \
	uninstall-libjavasci_la_rootDATA uninstall-pkglibLTLIBRARIES

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-local clean-pkglibLTLIBRARIES ctags \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-data-local install-exec \
	install-exec-am install-info install-info-am \
	install-libjavasci_la_etcDATA \
	install-libjavasci_la_includeHEADERS \
	install-libjavasci_la_rootDATA install-man \
	install-pkglibLTLIBRARIES install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-info-am \
	uninstall-libjavasci_la_etcDATA \
	uninstall-libjavasci_la_includeHEADERS \
	uninstall-libjavasci_la_rootDATA uninstall-pkglibLTLIBRARIES


# Compilation of Java
%.class:%.java
	@echo; \
	echo "Compiling Java source :" $<
	$(JAVAC) -classpath "$(CLASSPATH):$(JAVA_CLASSPATH)" $(JAVAC_FLAGS) $<

# creation of the jar
%.jar: $(CLASSFILES)
	@(echo; \
	echo "Creation of the jar archive :"; \
	cd $(CLASSPATH); \
	$(JAR) cvf ../../$(JARFILE) $(CLASSFILESRELATIVE)	)

################ MACROS ######################"
# Rule to build a macro
.sci.bin:
	-@( if test ! -x $(top_builddir)/scilab-bin; then \
	echo "Error : Cannot build $< : Scilab has not been build"; \
	else \
	echo "Creating $@"; \
	$(top_builddir)/bin/scilab -ns -nwni -e "exec('$(abs_srcdir)/$<');save('$(abs_srcdir)/$@');exit;"; \
	fi )

macrossly:
	@( if test ! -x $(top_builddir)/scilab-bin; then \
	echo "Error : Cannot build $< : Scilab has not been build"; \
	else \
	LD_LIBRARY_PATH="$(JAVA_HOME)/jre/lib/i386/:$(JAVA_HOME)/jre/lib/i386/server/:$(JAVA_HOME)/jre/lib/i386/native_threads/:$LD_LIBRARY_PATH"; 	export LD_LIBRARY_PATH; \
	SCI=`cd $(top_builddir); pwd;`; export SCI; \
	echo $$SCI/modules/functions/macros/genlib.bin; \
	if test ! -f $$SCI/modules/functions/macros/genlib.bin; then \
	(cd $$SCI; $$SCI/scilab-bin -ns -nwni -f $$SCI/modules/functions/scripts/buildmacros/buildmacros.sce;) \
	fi; \
	echo $(top_builddir)/scilab-bin -ns -nwni -f macros/buildmacros.sce; \
	$(top_builddir)/scilab-bin -nwni -f macros/buildmacros.sce; \
	fi )
install-html-local:
	$(mkinstalldirs) $(DESTDIR)$(pkgdocdir)
	@for dir in $(DOCDIRS) ; do \
	 if test -d $$dir; then \
	  $(mkinstalldirs) $(DESTDIR)$(pkgdocdir)/$$dir && \
		if ls -lLd $(srcdir)/$$dir/$(DOCMASK) >/dev/null 2>&1; then \
		  for file in $(srcdir)/$$dir/$(DOCMASK) ; do \
		    echo "$(INSTALL_DATA) $$file $(DESTDIR)$(pkgdocdir)/$$dir" ; \
	    	$(INSTALL_DATA) "$$file" $(DESTDIR)$(pkgdocdir)/$$dir ; \
		  done ; \
		fi; \
	 fi; \
	done
# If the user wants the help sources to be installed
@INSTALL_HELP_XML_TRUE@	@for dir in $(DOCDIRS) ; do \
@INSTALL_HELP_XML_TRUE@	 if test -d $$dir; then \
@INSTALL_HELP_XML_TRUE@	  $(mkinstalldirs) $(DESTDIR)$(pkgdocdir)/$$dir && \
@INSTALL_HELP_XML_TRUE@		if ls -lLd $(srcdir)/$$dir/$(DOCMASKXML) >/dev/null 2>&1; then \
@INSTALL_HELP_XML_TRUE@		  for file in $(srcdir)/$$dir/$(DOCMASKXML) ; do \
@INSTALL_HELP_XML_TRUE@		    echo "$(INSTALL_DATA) $$file $(DESTDIR)$(pkgdocdir)/$$dir" ; \
@INSTALL_HELP_XML_TRUE@	    	$(INSTALL_DATA) "$$file" $(DESTDIR)$(pkgdocdir)/$$dir ; \
@INSTALL_HELP_XML_TRUE@		  done ; \
@INSTALL_HELP_XML_TRUE@		fi; \
@INSTALL_HELP_XML_TRUE@	 fi; \
@INSTALL_HELP_XML_TRUE@	done
install-data-local:
	$(mkinstalldirs) $(DESTDIR)$(pkgmacrosdir)
	$(mkinstalldirs) $(DESTDIR)$(pkgmacrosdir)/$(MACRODIRS)
	@if test -f $(FUNCTION_NAMES); then \
		echo "$(INSTALL_DATA) $(FUNCTION_NAMES) $(DESTDIR)$(pkgmacrosdir)/macros/"; \
		$(INSTALL_DATA) $(FUNCTION_NAMES) $(DESTDIR)$(pkgmacrosdir)/$(MACRODIRS); \
	fi
# Install the macros
	@for dir in $(MACRODIRS) $(MACROSDIRSEXT) ; do \
	  $(mkinstalldirs) $(DESTDIR)$(pkgmacrosdir)/$$dir && \
		if test -d $(srcdir)/$$dir/; then \
		  for file in `ls -1 $(srcdir)/$$dir/$(MACROMASK) $(srcdir)/$$dir/$(MACROBINMASK) $(srcdir)/$$dir/$(MACROBUILDMASK) $(srcdir)/$$dir/lib 2>/dev/null`; do \
		    echo "$(INSTALL_DATA) $$file $(DESTDIR)$(pkgmacrosdir)/$$dir" ; \
	    	$(INSTALL_DATA) "$$file" $(DESTDIR)$(pkgmacrosdir)/$$dir ; \
		  done; \
		fi; \
	done
# Install the localisation files
	@for dir in $(LOCALISATIONDIRS) ; do \
	 if test -d $$dir; then \
	  $(mkinstalldirs) $(DESTDIR)$(pkgdocdir)/$$dir && \
		  for file in $(LOCALISATIONFILES) ; do \
		    echo "$(INSTALL_DATA) $$dir/$$file $(DESTDIR)$(pkgdocdir)/$$dir" ; \
	    	$(INSTALL_DATA) "$$dir/$$file" $(DESTDIR)$(pkgdocdir)/$$dir ; \
		  done ; \
	 fi; \
	done

########### CLEAN ###################
# Clean macros and help (generated automatically by Scilab)
clean-local:
# Removes macros (*.bin generated from .sci)
	@for dir in $(MACRODIRS) $(MACROSDIRSEXT) ; do \
		echo "rm -f $(srcdir)/$$dir/$(MACROBINMASK)"; \
		rm -f $(srcdir)/$$dir/$(MACROBINMASK); \
	done
# Removes documentation (*.htm generated from .xml) 
	@for dir in $(DOCDIRS) ; do \
		 if test -d $$dir; then \
			echo "rm -f $(srcdir)/$$dir/$(DOCMASK)"; \
			rm -f $(srcdir)/$$dir/$(DOCMASK); \
		fi; \
	done

macros:$(top_builddir)/scilab-bin $(top_builddir)/bin/scilab $(srcdir)/$(MACRODIRS)/$(MACROMASK)
	-@( \
	LD_LIBRARY_PATH="$(JAVA_HOME)/jre/lib/i386/:$(JAVA_HOME)/jre/lib/i386/server/:$(JAVA_HOME)/jre/lib/i386/native_threads/:$LD_LIBRARY_PATH"; 	export LD_LIBRARY_PATH; \
	$(top_builddir)/bin/scilab -nb -nwni -f $(abs_srcdir)/macros/buildmacros.sce 	)

tests:: $(JARFILE) $(JAVAFILES)
	@(cd tests; make tests)

install-data-local: $(JARFILE)
	$(INSTALL_DATA) $(JARFILE) $(DESTDIR)$(pkglibdir)/
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
