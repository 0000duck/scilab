<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) 2008 - INRIA
 * 
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at    
 * http://www.cecill.info/licences/Licence_CeCILL_V2-en.txt
 *
 -->
<refentry xmlns="http://docbook.org/ns/docbook" 
	  xmlns:xlink="http://www.w3.org/1999/xlink" 
	  xmlns:svg="http://www.w3.org/2000/svg" 
	  xmlns:mml="http://www.w3.org/1998/Math/MathML" 
	  xmlns:db="http://docbook.org/ns/docbook" 
	  version="5.0-subset Scilab" 
	  xml:lang="fr" 
	  xml:id="knapsack">
  <info>
    <pubdate>$LastChangedDate$</pubdate>
  </info>
  <refnamediv>
    <refname>knapsack</refname>
    <refpurpose> résout un problème du sac à dos 0-1 multiple   </refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <title>Séquence d'appel</title>
    <synopsis>[earn,ind] = knapsack(profit,weight,capa,[bck])</synopsis>
  </refsynopsisdiv>
  <refsection>
    <title>Paramètres</title>
    <variablelist>
      <varlistentry>
        <term>profit  </term>
        <listitem>
          <para>vecteur ligne d'entiers 
</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>weight  </term>
        <listitem>
          <para>vecteur ligne d'entiers 
</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>capa  </term>
        <listitem>
          <para>vecteur ligne d'entiers
</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>bck  </term>
        <listitem>
          <para>entier
</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>earn  </term>
        <listitem>
          <para>entier 
</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>ind  </term>
        <listitem>
          <para>vecteur ligne d'entiers 
</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </refsection>
  <refsection>
    <title>Description</title>
    <para> Le problème du sac à dos multiple est défini
    mathématiquement comme suit: </para>
    <para> Etants donnés  n objets (n &gt;= 2) et m sacs à dos (m &gt;= 1)</para>
    <para> Maximiser le "profit global"
    <literal>E=profit*sum(X,1)</literal> sous les contraintes: </para>
    <para>
      <literal>X*weight &lt;= capa</literal>
    </para>
    <para>
      <literal>sum(X,1) &lt;= 1 ; i=1,...,n</literal>
    </para>
    <para>
      <literal>X(j,i)= 0 or 1</literal>
    </para>
    <para> Où</para>
    <variablelist>
      <varlistentry>
        <term>profit</term>
        <listitem>
	  <para> est le vecteur des "profits"
	  associés à chaque objet. Les élements de ce vecteur
	  doivent être des entiers positifs.</para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>weight</term>
	<listitem>
	  <para>est le vecteur des "poids".  Les élements de ce vecteur
	  doivent être des entiers positifs.</para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>capa</term>
	<listitem>
	  <para>est le vecteur des "capacités de chacun des sacs à dos.  Les élements de ce vecteur
	  doivent être des entiers positifs.</para> 
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>X</term>
	<listitem>
	  <para>est  une matrice <literal>m</literal> par <literal>n</literal> à valeurs dans {0,1}.</para>
	</listitem>
      </varlistentry>
    </variablelist>
     <para><literal>[earn,ind] = knapsack(profit,weight,capa)</literal>
    résoud le problème ci-dessus.  Il retourne dans</para>
   <variablelist>
      <varlistentry>
        <term>earn</term>
	<listitem>
	  <para>La valeur du critère <literal>E</literal> pour la
	  solution "optimale" si elle a pu être calculée. Sinon,
	  <literal>earn</literal> est affecté à une valeur
	  négative:</para>
	  <variablelist>
	    <varlistentry>
	      <term>-3</term>
	      <listitem>
		<para>signifie qu'un sac à dos ne peut contenir aucun objet.</para>
	      </listitem>
	    </varlistentry>
	    <varlistentry>
	      <term>-4</term>
	      <listitem>
		<para>signifie qu'un objet ne peut entrer dans aucun sac à dos. </para>
	      </listitem>
	    </varlistentry>
	    <varlistentry>
	      <term>-5</term>
	      <listitem>
		<para>signifie qu'un sac à dos contient tous les objets.</para>
	      </listitem>
	    </varlistentry>
	  </variablelist>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>ind</term>
	<listitem>
	  <para>Le vecteur entiers des localisations optimales:
	  <literal>ind(i)</literal> donne le numéro du sac à dos
	  où a été positionné l'objet
	  <literal>i</literal>, si l'objet fait partie de la solution,
	  sinon <literal>ind(i)</literal> est égal à 0. La
	  matrice <literal>X</literal> peut être calculée à
	  partir de <literal>ind</literal> par
	  </para>
	  <programlisting><![CDATA[
          items=1:n;
          items(ind==0)==[ ];
          ind(ind==0)=[ ];
          X=sparse([ind;items]',ones(n,1),[m,n])
	  ]]></programlisting>
	</listitem>
      </varlistentry>
   </variablelist>
   <variablelist>
   <varlistentry>
     <term>bck</term>
     <listitem>
       <para>est un entier optionnel qui donne le
       nombre maximum de "backtrackings" qui peuvent être
       éffectués si l'on recherche une solution heuristique. Si la solution exacte et requise alors 
       <literal>bck</literal> doit être omis ou assigné à une valeur négative.</para>
     </listitem>
   </varlistentry>
  </variablelist>

  </refsection>
  <refsection>
    <title>Exemples</title>
    <programlisting role="example"><![CDATA[
weight=ones(1,15).*.[1:4];
profit=ones(1,60);
capa=[15 45 30 60];
[earn,ind]=knapsack(profit,weight,capa)

items=1:60;
items(ind==0)=[];
ind(ind==0)=[];
X=full(sparse([ind;items]',ones(ind),[4,60])) //one row per sacks
X*weight' //sack weights
x=sum(X,1);
and(x<=1) //contraints check
profit*x'==earn

 ]]></programlisting>
  </refsection>
  <refsection>
    <title>Voir Aussi</title>
    <simplelist type="inline">
      <member>
        <link linkend="qassign">qassign</link>
      </member>
    </simplelist>
  </refsection>
</refentry>
