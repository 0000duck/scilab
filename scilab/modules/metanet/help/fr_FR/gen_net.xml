<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) 2008 - INRIA
 * 
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at    
 * http://www.cecill.info/licences/Licence_CeCILL_V2-en.txt
 *
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" version="5.0-subset Scilab" xml:lang="fr" xml:id="gen_net">
  <info>
    <pubdate>$LastChangedDate$</pubdate>
  </info>
  <refnamediv>
    <refname>gen_net</refname>
    <refpurpose> génération aléatoire ou interactive d'un réseau  </refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <title>Séquence d'appel</title>
    <synopsis>g = gen_net(name,oriented,v)
g = gen_net()</synopsis>
  </refsynopsisdiv>
  <refsection>
    <title>Paramètres</title>
    <variablelist>
      <varlistentry>
        <term>name  </term>
        <listitem>
          <para>chaîne de caractères, le nom du graphe
</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>oriented  </term>
        <listitem>
          <para> entier, 0 (graphe non-orienté) ou 1 (graphe orienté)
</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>v  </term>
        <listitem>
          <para>vecteur ligne avec 12 valeurs pour définir le réseau
</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>g  </term>
        <listitem>
          <para>graphe (liste)
</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </refsection>
  <refsection>
    <title>Description</title>
    <para><literal>gen_net</literal> génère un réseau <literal>g</literal>.
    Les arguments sont le nom du graphe, un flag égal à 0
    (graphe non-orienté) ou 1 (graphe orienté) et un vecteur décrivant
    le réseau (voir ci-dessous).
  </para>
    <para>
    Si aucun argument n'est donné, une boîte de dialogue pour la définition
    de tous les arguments est ouverte.
  </para>
    <para><literal>v</literal> doit être un vecteur ligne avec 12 valeurs.
    La signification de ces valeurs est :
  </para>
    <para>
    Graine pour random : utilisé pour l'initialisation du générateur aléatoire
  </para>
    <para>
    Nombre de sommets
  </para>
    <para>
    Nombre de sources
  </para>
    <para>
    Nombre de puits
  </para>
    <para>
    Coût Minimum
  </para>
    <para>
    Coût Maximum
  </para>
    <para>
    Ressources d'entrée
  </para>
    <para>
    Ressources de sortie
  </para>
    <para>
    Capacité Minimum
  </para>
    <para>
    Capacité Maximum
  </para>
    <para>
    Pourcentage d'arêtes avec coûts : entre 0 et 100
    Pourcentage d'arêtes avec capacités : entre 0 et 100
  </para>
    <para>
    Le coût des arêtes sans coût est fixé au coût minimum.
    La capacité maximum des arêtes sans capacité est fixée aux ressources 
    d'entrée.
  </para>
    <para>
    Le résultat est un réseau <literal>g</literal> construit sur un graphe planaire connecté, 
    en utilisant une méthode de triangulation. De plus, les calculs sont faits 
    de manière à obtenir un réseau cohérent. Les valeurs des coûts et des 
    capacités maximum sont affectées aux arêtes. Les capacités minimum sont 
    réduites à 0.
  </para>
  </refsection>
  <refsection>
    <title>Exemples</title>
    <programlisting role="example"><![CDATA[
v=[1,10,2,1,0,10,100,100,0,100,50,50];
g=gen_net('foo',1,v);
show_graph(g)
// génération interactive
g=gen_net();
show_graph(g)
 ]]></programlisting>
  </refsection>
  <refsection>
    <title>Voir Aussi</title>
    <simplelist type="inline">
      <member>
        <link linkend="mesh2d">mesh2d</link>
      </member>
    </simplelist>
  </refsection>
</refentry>
