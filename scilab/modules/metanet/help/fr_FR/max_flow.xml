<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) 2008 - INRIA
 * 
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at    
 * http://www.cecill.info/licences/Licence_CeCILL_V2-en.txt
 *
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" version="5.0-subset Scilab" xml:lang="fr" xml:id="max_flow">
  <info>
    <pubdate>$LastChangedDate$</pubdate>
  </info>
  <refnamediv>
    <refname>max_flow</refname>
    <refpurpose> flot maximum entre deux sommets  </refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <title>Séquence d'appel</title>
    <synopsis>[v,phi,flag] = max_flow(i,j,g)</synopsis>
  </refsynopsisdiv>
  <refsection>
    <title>Paramètres</title>
    <variablelist>
      <varlistentry>
        <term>i  </term>
        <listitem>
          <para>entier, numéro du sommet de départ
</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>j  </term>
        <listitem>
          <para>entier,  numéro du sommet d'arrivée
</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>g  </term>
        <listitem>
          <para>graphe (liste)
</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>v  </term>
        <listitem>
          <para>valeur du flot maximum, si elle existe
</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>phi  </term>
        <listitem>
          <para>vecteur ligne des valeurs des flots sur les arcs
</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>flag  </term>
        <listitem>
          <para>problème soluble ou non (0 ou 1)
</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </refsection>
  <refsection>
    <title>Description</title>
    <para><literal>max_flow</literal> renvoie la valeur du flot maximum <literal>v</literal> du sommet
    <literal>i</literal> au sommet <literal>j</literal> si elle existe, et la valeur des flots 
    sur chaque arc sous forme d'un vecteur ligne <literal>phi</literal>. Les calculs sont 
    faits en nombres entiers. Le graphe doit être orienté. Si le problème n'est 
    pas soluble, <literal>flag</literal> est égal à 0, sinon il est égal à 1.
  </para>
    <para>
    Les bornes sur le flot sont données par les éléments <literal>edge_min_cap</literal> et
    <literal>edge_max_cap</literal> du graphe. 
    La valeur de la capacité maximum doit être supérieure ou égale à 
    la capacité minimum.
    Si la valeur de <literal>edge_min_cap</literal> ou <literal>edge_max_cap</literal> n'est pas donnée 
    (vecteur ligne vide <literal>[]</literal>), elle est supposée égale à 0 sur chaque arête.
  </para>
  </refsection>
  <refsection>
    <title>Exemples</title>
    <programlisting role="example">

ta=[1 1 2 2 3 3 4 4 5 5 5 5 6 6 6 7 7 15 15 15 15 15 15 15 8 9 10 11 12 13 14];
he=[10 13 9 14 8 11 9 11 8 10 12 13 8 9 12 8 11 1 2 3 4 5 6 7 16 16 16 16 16 16 16];
g=make_graph('foo',1,16,ta,he);
g.nodes.graphics.x=[53,430,202,374,116,250,325,176,373,34,330,233,114,429,208,206];
g.nodes.graphics.y=[86,114,115,129,118,122,133,222,222,221,214,219,218,246,40,301];
ma=edge_number(g);
g=add_edge_data(g,'max_cap',[2,4,3,3,3,2,3,3,5,2,3,1,2,1,4,1,2,2,2,2,4,1,5,3,2,1,5,4,3,4,2]);
g=add_edge_data(g,'min_cap',ones(1,ma))
source=15;g.nodes.graphics.type(source)=2; //source node
sink=16;g.nodes.graphics.type(sink)=1; //sink node
show_graph(g);

[v,phi,ierr]=max_flow(source,sink,g);
g.edges.graphics.foreground(phi&lt;&gt;0)=11;
g=add_edge_data(g,'flow',phi)
g.edges.graphics.display='flow';
show_graph(g);
 
  </programlisting>
  </refsection>
</refentry>
