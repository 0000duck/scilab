<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!DOCTYPE MAN SYSTEM "../../manrev.dtd">
<MAN>
  <LANGUAGE>eng</LANGUAGE>
  <TITLE>articul</TITLE>
  <TYPE>Scilab function</TYPE>
  <DATE>$LastChangedDate$</DATE>
  <SHORT_DESCRIPTION name="articul"> finds one or more articulation points</SHORT_DESCRIPTION>
  <CALLING_SEQUENCE>
    <CALLING_SEQUENCE_ITEM>nart = articul([i],g)  </CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>
  <PARAM>
    <PARAM_INDENT>
      <PARAM_ITEM>
        <PARAM_NAME>g</PARAM_NAME>
        <PARAM_DESCRIPTION>
          <SP>:a graph (see <LINK>graph_data_structure</LINK>).</SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>
      <PARAM_ITEM>
        <PARAM_NAME>i</PARAM_NAME>
        <PARAM_DESCRIPTION>
          <SP>: integer</SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>
      <PARAM_ITEM>
        <PARAM_NAME>nart</PARAM_NAME>
        <PARAM_DESCRIPTION>
          <SP>: integer row vector</SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>
    </PARAM_INDENT>
  </PARAM>
  <DESCRIPTION>
    <SP> An articulation of a connected graph is a node whose removal
    will disconnect the graph. In general, an articulation vertex is a
    node of a graph whose removal increases the number of
    components.</SP>
    <P><VERB>articul</VERB> finds one or more articulation points (if
    they exist) of the graph <VERB>g</VERB>. <VERB>nart</VERB> is the
    row vector of numbers of articulation nodes: deleting one of these
    nodes increases the number of connected components of the graph.
    <VERB>i</VERB> is the optional node number from which the
    algorithm starts.  The default is 1. Note that the result depends
    strongly on this starting node.</P>
  </DESCRIPTION>
  <EXAMPLE>
<![CDATA[
ta=[2  1 3 2 2 4 4 5 6 7 8 8 9 10 10 10 10 11 12 13 14 15 16 17 17];
he=[1 10 2 5 7 3 2 4 5 8 6 9 7  7 11 13 15 12 13 14 11 16 17 14 15];
g=make_graph('foo',1,17,ta,he);
g.nodes.graphics.x=[283 163 63 57 164 164 273 271 339 384 504 513 439 623 631 757 642]/2;
g.nodes.graphics.y=[59 133 223 318 227 319 221 324 432 141 209 319 428 443 187 151 301]/2;
show_graph(g);
nart = articul(g)
hilite_nodes(nart);
 ]]>
  </EXAMPLE>
<BIBLIO>
  <SP>Chartrand, G. "Cut-Vertices and Bridges." §2.4 in Introductory Graph Theory. New York: Dover, pp. 45-49, 1985. </SP>  
  <P>Harary, F. Graph Theory. Reading, MA: Addison-Wesley, 1994.</P>
</BIBLIO>
</MAN>
