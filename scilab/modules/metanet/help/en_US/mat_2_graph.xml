<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>

<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) 2008 - INRIA
 * 
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at    
 * http://www.cecill.info/licences/Licence_CeCILL_V2-en.txt
 *
 -->

<!DOCTYPE MAN SYSTEM "../../../../modules/helptools/help.dtd">
<MAN>
  <LANGUAGE>eng</LANGUAGE>
  <TITLE>mat_2_graph</TITLE>
  <TYPE>Scilab function</TYPE>
  <DATE>$LastChangedDate$</DATE>
  <SHORT_DESCRIPTION name="mat_2_graph"> graph from node-arc or node-node incidence matrix</SHORT_DESCRIPTION>
  <CALLING_SEQUENCE>
    <CALLING_SEQUENCE_ITEM>g = mat_2_graph(a,directed,[mat])  </CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>
  <PARAM>
    <PARAM_INDENT>
      <PARAM_ITEM>
        <PARAM_NAME>a</PARAM_NAME>
        <PARAM_DESCRIPTION>
          <SP>: sparse node-arc or node-node incidence matrix</SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>
      <PARAM_ITEM>
        <PARAM_NAME>directed</PARAM_NAME>
        <PARAM_DESCRIPTION>
          <SP>: integer, 0 (undirected graph) or 1 (directed graph)</SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>
      <PARAM_ITEM>
        <PARAM_NAME>mat</PARAM_NAME>
        <PARAM_DESCRIPTION>
          <SP>: optional string, 'node-arc' or 'node-node' matrix</SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>
      <PARAM_ITEM>
        <PARAM_NAME>g</PARAM_NAME>
        <PARAM_DESCRIPTION>
          <SP>:  a <LINK>graph_data_structure</LINK>.</SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>
    </PARAM_INDENT>
  </PARAM>
  <DESCRIPTION>
    <P><VERB>mat_2_graph</VERB> computes the graph <VERB>g</VERB> corresponding to the node-arc 
    or the node-node incidence matrix <VERB>a</VERB>.
    Note that a checking is made to insure that <VERB>a</VERB> is a sparse node-arc 
    or node-node incidence matrix of a directed (<VERB>directed = 1</VERB>) or undirected 
    (<VERB>directed = 0</VERB>) graph.
    If the optional argument <VERB>mat</VERB> is omitted or is the string 
    <VERB>'node-arc'</VERB>, a must be a node-arc matrix. If <VERB>mat</VERB> is the string
    <VERB>'node-node'</VERB>, a must be a node-node matrix.</P>
  </DESCRIPTION>
  <EXAMPLE>
<![CDATA[
// creating a directed graph with 13 nodes and 14 arcs.
ta=[1  1 2 7 8 9 10 10 10 10 11 12 13 13];
he=[2 10 7 8 9 7  7 11 13 13 12 13  9 10];
g=make_graph('foo',1,13,ta,he);
g.nodes.graphics.x=[40,33,29,63,146,233,75,42,114,156,237,260,159]
g.nodes.graphics.y=[7,61,103,142,145,143,43,120,145,18,36,107,107]
show_graph(g)

a=graph_2_mat(g);
g1=mat_2_graph(a,1);
g1.nodes.graphics.x=g.nodes.graphics.x; g1.nodes.graphics.y=g.nodes.graphics.y;
show_graph(g1,'new');

a=graph_2_mat(g,'node-node');
g1=mat_2_graph(a,1,'node-node');
g1.nodes.graphics.x=g.nodes.graphics.x; g1.nodes.graphics.y=g.nodes.graphics.y;
show_graph(g1,'new');
 ]]>
  </EXAMPLE>
  <SEE_ALSO>
    <SEE_ALSO_ITEM>
      <LINK>adj_lists</LINK>
    </SEE_ALSO_ITEM>
    <SEE_ALSO_ITEM>
      <LINK>chain_struct</LINK>
    </SEE_ALSO_ITEM>
    <SEE_ALSO_ITEM>
      <LINK>graph_2_mat</LINK>
    </SEE_ALSO_ITEM>
  </SEE_ALSO>
</MAN>
