<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!DOCTYPE MAN SYSTEM "../../../../modules/helptools/help.dtd">
<MAN>
  <LANGUAGE>eng</LANGUAGE>
  <TITLE>cycle_basis</TITLE>
  <TYPE>Scilab function</TYPE>
  <DATE>$LastChangedDate$</DATE>
  <SHORT_DESCRIPTION name="cycle_basis"> basis of cycle of a simple undirected graph</SHORT_DESCRIPTION>
  <CALLING_SEQUENCE>
    <CALLING_SEQUENCE_ITEM>spc = cycle_basis(g)  </CALLING_SEQUENCE_ITEM>
    <CALLING_SEQUENCE_ITEM>cycles_list = cycle_basis(g,'list')  </CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>
  <PARAM>
    <PARAM_INDENT>
      <PARAM_ITEM>
        <PARAM_NAME>g</PARAM_NAME>
        <PARAM_DESCRIPTION>
          <SP>:  a <LINK>graph_data_structure</LINK>.</SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>
      <PARAM_ITEM>
        <PARAM_NAME>spc</PARAM_NAME>
        <PARAM_DESCRIPTION>
          <SP>: a sparse matrix with <VERB>edge_number(g)</VERB> columns</SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>
      <PARAM_ITEM>
        <PARAM_NAME>cycles_list</PARAM_NAME>
        <PARAM_DESCRIPTION>
	  <SP>: a list.</SP>
	</PARAM_DESCRIPTION>
      </PARAM_ITEM>
    </PARAM_INDENT>
  </PARAM>
  <DESCRIPTION>
    <SP>
    First a spanning tree is found by using <LINK>min_weight_tree</LINK> and then used to 
    find all fundamental cycles with respect to this tree. They are returned as a 
    set of cycles, each cycle being represented by a set of edges.
    </SP>
    <P> The graph <VERB>g</VERB> is supposed to be a simple undirected and connected graph
    (<VERB>cycle_basis</VERB> does not check that the graph is simple, use 
    <VERB>graph_simp</VERB> before calling it if necessary).</P>
    <P> <VERB>spc = cycle_basis(g)</VERB> returns these cycles in the
    sparse matrix <VERB>spc</VERB>: each row of this matrix
    corresponds to a cycle.</P>
    <P> <VERB>cycles_list = cycle_basis(g,'list')</VERB> returns these
    cycles in the list <VERB>cycles_list</VERB>: each entry of this
    list is the row vector of the cycle edges index.</P>
  </DESCRIPTION>
  <EXAMPLE>
    <![CDATA[
//create a directed graph
ta=[1 1 2 2 2 3 4 5 5 7 8 8 9 10 10 10 10 10 11 12 13 13 13 14 15 16 16 17 17];
he=[2 10 3 5 7 4 2 4 6 8 6 9 7 7 11 13 13 15 12 13 9 10 14 11 16 1 17 14 15];
gt=make_graph('foo',1,17,ta,he);
gt.nodes.graphics.x=[283 163 63 57 164 164 273 271 339 384 504 513 439 623 631 757 642]/2;
gt.nodes.graphics.y=[59 133 223 318 227 319 221 324 432 141 209 319 428 443 187 151 301]/2;
show_graph(gt);

//Make simple and undirected
g=graph_simp(gt);
show_graph(g,'new');

//Compute the cycle basis
cycles_list=cycle_basis(g,'list');

//Display the cycles
for c=cycles_list,hilite_edges(c);xpause(1d6),unhilite_edges(c);end;
 ]]>  </EXAMPLE>

  <SEE_ALSO>
    <SEE_ALSO_ITEM>
      <LINK>min_weight_tree</LINK>
    </SEE_ALSO_ITEM>
    <SEE_ALSO_ITEM>
      <LINK>graph_simp</LINK>
    </SEE_ALSO_ITEM>
  </SEE_ALSO>


</MAN>
