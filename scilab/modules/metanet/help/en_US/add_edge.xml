<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>

<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) 2008 - INRIA
 * 
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at    
 * http://www.cecill.info/licences/Licence_CeCILL_V2-en.txt
 *
 -->

<!DOCTYPE MAN SYSTEM "../../../../modules/helptools/help.dtd">
<MAN>
  <LANGUAGE>eng</LANGUAGE>
  <TITLE>add_edge</TITLE>
  <TYPE>Scilab function</TYPE>
  <DATE>$LastChangedDate$</DATE>
  <SHORT_DESCRIPTION name="add_edge"> adds an edge or an arc between two nodes</SHORT_DESCRIPTION>
  <CALLING_SEQUENCE>
    <CALLING_SEQUENCE_ITEM>g1 = add_edge(i,j,g)  </CALLING_SEQUENCE_ITEM>
    <CALLING_SEQUENCE_ITEM>g1 = add_edge(ij,g)  </CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>
  <PARAM>
    <PARAM_INDENT>
      <PARAM_ITEM>
        <PARAM_NAME>i</PARAM_NAME>
        <PARAM_DESCRIPTION>
          <SP>: vector of integers, number of start nodes</SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>
      <PARAM_ITEM>
        <PARAM_NAME>j</PARAM_NAME>
        <PARAM_DESCRIPTION>
          <SP>:  vector of  integers, number of end nodes</SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>
      <PARAM_ITEM>
        <PARAM_NAME>ij</PARAM_NAME>
        <PARAM_DESCRIPTION>
          <SP>:  2 by n matrix of  integers, first row contains the start node numbers, second row contains the end node numbers.</SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>
      <PARAM_ITEM>
        <PARAM_NAME>g</PARAM_NAME>
        <PARAM_DESCRIPTION>
          <SP>:a  graph list (see <LINK>graph_data_structure </LINK>).</SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>
      <PARAM_ITEM>
        <PARAM_NAME>g1</PARAM_NAME>
        <PARAM_DESCRIPTION>
          <SP>: graph list of the new graph with the added edges</SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>
    </PARAM_INDENT>
  </PARAM>
  <DESCRIPTION>
    <SP><VERB>add_edge(i,j,g)</VERB> returns the graph <VERB>g1</VERB> with a new edges connecting node number 
    <VERB>i(k)</VERB> to node number <VERB>j(k)</VERB>. If the graph is directed, the edge is an arc.
    The number of edges plus 1 is taken as the name of the new edge.</SP>
    <P><VERB>add_edge(ij,g)</VERB> returns the graph <VERB>g1</VERB> with a new edges connecting node number 
    <VERB>ij(1,k)</VERB> to node number <VERB>ij(2,k)</VERB>. If the graph is directed, the edge is an arc.
    The number of edges plus 1 is taken as the name of the new edge.</P>

  </DESCRIPTION>
  <EXAMPLE>
<![CDATA[
ta=[1 1 2 2 2 3 4 5 5 7 8 8 9 10 10 10 11 12 13 13 13 14 15 16 16 17 17];
he=[2 10 3 5 7 4 2 4 6 8 6 9 7 7 11 15 12 13 9 10 14 11 16 1 17 14 15];
g=make_graph('foo',1,17,ta,he);
g.nodes.graphics.x=[283 163 63 57 164 164 273 271 339 384 504 513 439 623 631 757 642]/2;
g.nodes.graphics.y=[59 133 223 318 227 319 221 324 432 141 209 319 428 443 187 151 301]/2;
g.nodes.graphics.display='number';
show_graph(g);
ne=edge_number(g);
g=add_edge([1 1 9;7 16 9],g);
show_graph(g);
hilite_edges(ne+1:ne+3)

 ]]>
  </EXAMPLE>
  <SEE_ALSO>
    <SEE_ALSO_ITEM>
      <LINK>add_node</LINK>
    </SEE_ALSO_ITEM>
    <SEE_ALSO_ITEM>
      <LINK>delete_arcs</LINK>
    </SEE_ALSO_ITEM>
    <SEE_ALSO_ITEM>
      <LINK>delete_nodes</LINK>
    </SEE_ALSO_ITEM>
  </SEE_ALSO>
</MAN>
