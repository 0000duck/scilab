<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!DOCTYPE MAN SYSTEM "../../../../modules/helptools/help.dtd">
<MAN>
  <LANGUAGE>eng</LANGUAGE>
  <TITLE>edges_data_structure</TITLE>
  <TYPE>Scilab type</TYPE>
  <DATE>$LastChangedDate$</DATE>
  <SHORT_DESCRIPTION name="edges_data_structure"> description of the data structure representing the edges of a graph </SHORT_DESCRIPTION>
  <DESCRIPTION>
    <SP> A  edges data structure is represented by a Scilab <VERB>mlist</VERB> with type  <VERB>edges</VERB>
    and 4 fields:</SP>
    <DESCRIPTION_INDENT>
      <DESCRIPTION_ITEM>
	<SP><VERB>tail</VERB> row vector. <VERB>tail(i)</VERB> is the
	index of the node connected to the tail of the
	<VERB>i</VERB>th edge.</SP>
      </DESCRIPTION_ITEM>	  
      <DESCRIPTION_ITEM>
	<SP><VERB>head</VERB> row vector. <VERB>head(i)</VERB> is the
	index of the node connected to the head of the
	<VERB>i</VERB>th edge.</SP>
      </DESCRIPTION_ITEM>
      <DESCRIPTION_ITEM>
	<SP><VERB>graphics</VERB>> A Scilab mlist data structure of type <VERB>egraphic</VERB> 
	which stores the information relative to edges graphical display (see  <LINK>egraphic_data_structure</LINK></SP>
      </DESCRIPTION_ITEM>
      <DESCRIPTION_ITEM>
	<SP><VERB>data</VERB> A Scilab <VERB>mlist</VERB> data structure of type
	<VERB>edgedata</VERB>.  which stores the data associated with
	nodes.  By defaut this data structure is empty. User can add
	its own fields using the <VERB>add_edge_data</VERB>
	function..</SP>
	<P> For a given field the associated data should be a
	row vector or a matrix. In the matrix case a column is
	associated to an edge.</P>
      </DESCRIPTION_ITEM>
    </DESCRIPTION_INDENT>
  
  </DESCRIPTION>
  <EXAMPLE>
<![CDATA[
//create a simple graph
ta=[1  1 2 7 8 9 10 10 10 10 11 12 13 13];
he=[2 10 7 8 9 7  7 11 13 13 12 13  9 10];
g=make_graph('simple',1,13,ta,he);
g.nodes.graphics.x=[40,33,29,63,146,233,75,42,114,156,237,260,159];
g.nodes.graphics.y=[7,61,103,142,145,143,43,120,145,18,36,107,107];
show_graph(g,'new')


g=add_edge_data(g,'length',round(10*rand(1,14,'u')));
g=add_edge_data(g,'label','e'+string(1:14));
edgedatafields(g)
g.edges.data
g.edges.data.label
g.edges.data(1:3)
g.edges.graphics.display='label';
show_graph(g)
g.edges.graphics.display='length';
show_graph(g)

 ]]>
  </EXAMPLE>
  <SEE_ALSO>
    <SEE_ALSO_ITEM>
      <LINK>graph_data_structure</LINK>
    </SEE_ALSO_ITEM>
    <SEE_ALSO_ITEM>
      <LINK>add_edge</LINK>
    </SEE_ALSO_ITEM>
    <SEE_ALSO_ITEM>
      <LINK>delete_arcs</LINK>
    </SEE_ALSO_ITEM>
   <SEE_ALSO_ITEM>
      <LINK>edgedatafields</LINK>
   </SEE_ALSO_ITEM>
    <SEE_ALSO_ITEM>
      <LINK>add_edge_data</LINK>
    </SEE_ALSO_ITEM>
  </SEE_ALSO>
</MAN>
