<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!DOCTYPE MAN SYSTEM "../../manrev.dtd">
<MAN>
  <LANGUAGE>eng</LANGUAGE>
  <TITLE>adj_lists</TITLE>
  <TYPE>Scilab function</TYPE>
  <DATE>$LastChangedDate$</DATE>
  <SHORT_DESCRIPTION name="adj_lists"> computes adjacency lists</SHORT_DESCRIPTION>
  <CALLING_SEQUENCE>
    <CALLING_SEQUENCE_ITEM>[lp,la,ls] = adj_lists(g)  </CALLING_SEQUENCE_ITEM>
    <CALLING_SEQUENCE_ITEM>[lp,la,ls] = adj_lists(directed,n,tail,head)  </CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>
  <PARAM>
    <PARAM_INDENT>
      <PARAM_ITEM>
        <PARAM_NAME>g</PARAM_NAME>
        <PARAM_DESCRIPTION>
          <SP>:a graph (see <LINK>graph_data_structure</LINK>).</SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>
      <PARAM_ITEM>
        <PARAM_NAME>directed</PARAM_NAME>
        <PARAM_DESCRIPTION>
          <SP>: integer, 0 (undirected graph) or 1 (directed  graph)</SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>
      <PARAM_ITEM>
        <PARAM_NAME>n</PARAM_NAME>
        <PARAM_DESCRIPTION>
          <SP>: integer, the number of nodes of the graph</SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>
      <PARAM_ITEM>
        <PARAM_NAME>tail</PARAM_NAME>
        <PARAM_DESCRIPTION>
          <SP>: the row vector of the numbers of the tail nodes of the
          graph (its size is the number of edges of the graph)</SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>
      <PARAM_ITEM>
        <PARAM_NAME>head</PARAM_NAME>
        <PARAM_DESCRIPTION>
          <SP>: the row vector of the numbers of the head nodes of the
          graph (its size is the number of edges of the graph)</SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>
      <PARAM_ITEM>
        <PARAM_NAME>lp</PARAM_NAME>
        <PARAM_DESCRIPTION>
          <SP>: row vector, pointer array of the adjacency lists
          description of the graph (its size is the number of nodes of
          the graph + 1)</SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>
      <PARAM_ITEM>
        <PARAM_NAME>la</PARAM_NAME>
        <PARAM_DESCRIPTION>
          <SP>: row vector, arc array of the adjacency lists
          description of the graph (its size is the number of edges of
          the graph)</SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>
      <PARAM_ITEM>
        <PARAM_NAME>ls</PARAM_NAME>
        <PARAM_DESCRIPTION>
          <SP>: row vector, node array of the adjacency lists
          description of the graph (its size is the number of edges of
          the graph)</SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>
    </PARAM_INDENT>
  </PARAM>
  <DESCRIPTION>
    <SP><VERB>adj_lists</VERB> computes the row vectors of the
    adjacency lists description of the graph <VERB>g</VERB>.  It is
    also possible to give <VERB>adj_lists</VERB> the description of
    the graph given by the number of nodes <VERB>n</VERB> and the row
    vectors <VERB>tail</VERB> and <VERB>head</VERB>.</SP>
   <P>For a node numbered <VERB>k</VERB>, the connected edges are
   given by <VERB>la(lp(k):(lp(k+1)-1))</VERB>, while the other bounds
   of these edges are connected to nodes ls((lp(k):(lp(k+1)-1))).</P>
  </DESCRIPTION>
  <EXAMPLE>
<![CDATA[
ta=[2 3 3 5 3 4 4 5 8];
he=[1 2 4 2 6 6 7 7 4];
g=make_graph('foo',1,8,ta,he);
g.nodes.graphics.x=[129 200 283 281 128 366 122 333];
g.nodes.graphics.y=[61 125 129 189 173 135 236 249];
g.nodes.graphics.display='number';
g.edges.graphics.display='number';


show_graph(g);
//directed graph
[lp,la,ls]=adj_lists(g)
[lp,la,ls]=adj_lists(1,g.nodes.number,ta,he)
for k=1:node_number(g)
  sel=lp(k):(lp(k+1)-1);
  g1=g;
  g1.nodes.graphics.colors(2,k)=color('red');
  g1.edges.graphics.foreground(la(sel))=color('green');
  g1.nodes.graphics.colors(1,ls(sel))=color('red');
  show_graph(g1);
  halt() 
end

//non directed graph
g.directed=0;
[lp,la,ls]=adj_lists(g);
for k=1:node_number(g)
  sel=lp(k):(lp(k+1)-1);
  g1=g;
  g1.nodes.graphics.colors(2,k)=color('red');
  g1.edges.graphics.foreground(la(sel))=color('green');
  g1.nodes.graphics.colors(1,ls(sel))=color('red');
  show_graph(g1);
  halt()
end

 ]]>
  </EXAMPLE>
  <SEE_ALSO>
    <SEE_ALSO_ITEM>
      <LINK>chain_struct</LINK>
    </SEE_ALSO_ITEM>
    <SEE_ALSO_ITEM>
      <LINK>graph_2_mat</LINK>
    </SEE_ALSO_ITEM>
  </SEE_ALSO>
</MAN>
